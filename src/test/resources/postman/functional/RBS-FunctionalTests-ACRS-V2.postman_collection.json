{
	"info": {
		"_postman_id": "e835e157-df45-4588-8530-88e7f37e3915",
		"name": "RBS-Functional Tests-ACRS-V2",
		"description": "RBS-ACRS-Functional Test ",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "token",
			"item": [
				{
					"name": "JWT auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"JWT auth | Status code is 200 with valid response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.response.to.have.status(200);",
									"    pm.expect(jsonData).to.have.property(\"token_type\");",
									"    pm.expect(jsonData).to.have.property(\"access_token\");",
									"});",
									"",
									"postman.setEnvironmentVariable(\"JWT_Token\", \"Bearer \" + pm.response.json().access_token);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require('moment');\r",
									"\r",
									"/*Construct Random Dates [for availability] from 60 days to 360*/\r",
									"start = new Date(moment().add(60, 'days'));\r",
									"end = new Date(moment().add(360, 'days'));\r",
									"\r",
									"options = { day: '2-digit', month: '2-digit', year: 'numeric' };\r",
									"//setting options to overcome single digit for dates/month.\r",
									"\r",
									"checkInDate = randomDate(start, end).toLocaleDateString(\"en-US\", options);\r",
									"checkOutDate = moment(checkInDate).add(2, 'days').format('MM/DD/YYYY');\r",
									"\r",
									"postman.setEnvironmentVariable('checkInDate',  checkInDate);\r",
									"postman.setEnvironmentVariable('checkOutDate',  checkOutDate);\r",
									"\r",
									"postman.setEnvironmentVariable('invalidCheckInDate',   moment().add(-1, 'days').format('MM/DD/YYYY'));\r",
									"postman.setEnvironmentVariable('invalidCheckOutDate',  moment().add(-2, 'days').format('MM/DD/YYYY'));\r",
									"\r",
									"checkInDate_v2 = randomDate(start, end).toLocaleDateString(\"fr-CA\", options);\r",
									"checkInDate_v2_format = moment(checkInDate_v2).format('YYYY-MM-DD');\r",
									"checkOutDate_v2 = moment(checkInDate_v2_format).add(2, 'days').format('YYYY-MM-DD');\r",
									"\r",
									"postman.setEnvironmentVariable('checkInDate_v2',  checkInDate_v2_format);\r",
									"postman.setEnvironmentVariable('checkOutDate_v2',  checkOutDate_v2);\r",
									"\r",
									"postman.setEnvironmentVariable('invalidCheckInDate_v2',   moment().add(-1, 'days').format('YYYY-MM-DD'));\r",
									"postman.setEnvironmentVariable('invalidCheckOutDate_v2',  moment().add(-2, 'days').format('YYYY-MM-DD'));\r",
									"\r",
									"function randomDate(start, end) {\r",
									"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()))\r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "{{IDMS_grantType}}",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{IDMS_clientId}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{IDMS_clientSecret}}",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "{{IDMS_scopes}}",
									"type": "text"
								}
							]
						},
						"url": "https://{{APIM_Endpoint}}{{IDMS_authEndpoint}}"
					},
					"response": []
				}
			]
		},
		{
			"name": "offers",
			"item": [
				{
					"name": "Single Availability v2",
					"item": [
						{
							"name": "Single Availability v2 - Success",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 01 : Single Availability with Checkin Date, Checkout Date, Property Id and Number of Adults\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"  pm.response.to.have.header(\"Content-Type\");\r",
											"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"\r",
											"  var jsonData = JSON.parse(pm.response.stream);\r",
											"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
											"  pm.expect(null).not.eq(jsonData);\r",
											"  pm.expect(0).not.equal(jsonData.length);\r",
											"  pm.expect(null).not.eq(jsonData.availability[0]);\r",
											"  pm.expect(0).not.equal(jsonData.availability[0].price.itemized.length);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-mgm-source",
										"value": "{{x-mgm-source}}",
										"type": "text"
									},
									{
										"key": "x-mgm-channel",
										"value": "{{x-mgm-channel}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{JWT_Token}}",
										"type": "text"
									},
									{
										"key": "x-mgm-transaction-id",
										"value": "rbs-v2-functional-{{$timestamp}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/availability/trip?checkInDate={{checkInDate_v2}}&checkOutDate={{checkOutDate_v2}}&propertyId={{propertyId}}&numAdults=2",
									"protocol": "https",
									"host": [
										"{{APIM_Endpoint}}{{Function_Environment}}"
									],
									"path": [
										"v2",
										"availability",
										"trip"
									],
									"query": [
										{
											"key": "checkInDate",
											"value": "{{checkInDate_v2}}"
										},
										{
											"key": "checkOutDate",
											"value": "{{checkOutDate_v2}}"
										},
										{
											"key": "propertyId",
											"value": "{{propertyId}}"
										},
										{
											"key": "numAdults",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Single Availability v3 - Success",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 01 : Single Availability with Checkin Date, Checkout Date, Property Id and Number of Adults\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"  pm.response.to.have.header(\"Content-Type\");\r",
											"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"\r",
											"  var jsonData = JSON.parse(pm.response.stream);\r",
											"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
											"  pm.expect(null).not.eq(jsonData);\r",
											"  pm.expect(0).not.equal(jsonData.length);\r",
											"  pm.expect(null).not.eq(jsonData.availability[0]);\r",
											"  pm.expect(0).not.equal(jsonData.availability[0].price.itemized.length);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-mgm-source",
										"value": "{{x-mgm-source}}",
										"type": "text"
									},
									{
										"key": "x-mgm-channel",
										"value": "{{x-mgm-channel}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{JWT_Token}}",
										"type": "text"
									},
									{
										"key": "x-mgm-transaction-id",
										"value": "rbs-v2-functional-{{$timestamp}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{APIM_Endpoint}}{{Function_Environment}}/v3/availability/trip?checkInDate={{checkInDate_v2}}&checkOutDate={{checkOutDate_v2}}&propertyId={{propertyId}}&numAdults=2",
									"protocol": "https",
									"host": [
										"{{APIM_Endpoint}}{{Function_Environment}}"
									],
									"path": [
										"v3",
										"availability",
										"trip"
									],
									"query": [
										{
											"key": "checkInDate",
											"value": "{{checkInDate_v2}}"
										},
										{
											"key": "checkOutDate",
											"value": "{{checkOutDate_v2}}"
										},
										{
											"key": "propertyId",
											"value": "{{propertyId}}"
										},
										{
											"key": "numAdults",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Single Availability v3 - Success Promo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 01 : Single Availability with Checkin Date, Checkout Date, Property Id, Number of Adults and promo\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"  pm.response.to.have.header(\"Content-Type\");\r",
											"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"\r",
											"  var jsonData = JSON.parse(pm.response.stream);\r",
											"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
											"  pm.expect(null).not.eq(jsonData);\r",
											"  pm.expect(0).not.equal(jsonData.length);\r",
											"  pm.expect(null).not.eq(jsonData.availability[0]);\r",
											"  pm.expect(0).not.equal(jsonData.availability[0].price.itemized.length);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-mgm-source",
										"value": "{{x-mgm-source}}",
										"type": "text"
									},
									{
										"key": "x-mgm-channel",
										"value": "{{x-mgm-channel}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{JWT_Token}}",
										"type": "text"
									},
									{
										"key": "x-mgm-transaction-id",
										"value": "rbs-v2-functional-{{$timestamp}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{APIM_Endpoint}}{{Function_Environment}}/v3/availability/trip?checkInDate={{checkInDate_v2}}&checkOutDate={{checkOutDate_v2}}&propertyId={{propertyId}}&numAdults=2&promo=ZNVLCLS",
									"protocol": "https",
									"host": [
										"{{APIM_Endpoint}}{{Function_Environment}}"
									],
									"path": [
										"v3",
										"availability",
										"trip"
									],
									"query": [
										{
											"key": "checkInDate",
											"value": "{{checkInDate_v2}}"
										},
										{
											"key": "checkOutDate",
											"value": "{{checkOutDate_v2}}"
										},
										{
											"key": "propertyId",
											"value": "{{propertyId}}"
										},
										{
											"key": "numAdults",
											"value": "2"
										},
										{
											"key": "promo",
											"value": "ZNVLCLS"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Single Availability v2 - Invalid property code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 02 : Single Availability with Checkin Date, Checkout Date, Invalid Property Id and Number of Adults\", function () {\r",
											"  pm.response.to.have.status(500);\r",
											"  pm.response.to.have.header(\"Content-Type\");\r",
											"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"\r",
											"  var jsonData = JSON.parse(pm.response.stream);\r",
											"  pm.expect(jsonData.error.message).to.equal(\"_system_error\");\r",
											"  pm.expect(jsonData.error.code).to.equal(\"632-3-101\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-mgm-source",
										"value": "{{x-mgm-source}}",
										"type": "text"
									},
									{
										"key": "x-mgm-channel",
										"value": "{{x-mgm-channel}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{JWT_Token}}",
										"type": "text"
									},
									{
										"key": "x-mgm-transaction-id",
										"value": "rbs-v2-functional-{{$timestamp}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/availability/trip?checkInDate={{checkInDate_v2}}&checkOutDate={{checkOutDate_v2}}&propertyId=e2704b04-d515-45b0-8afd-4fa1424ff011&numAdults=2",
									"protocol": "https",
									"host": [
										"{{APIM_Endpoint}}{{Function_Environment}}"
									],
									"path": [
										"v2",
										"availability",
										"trip"
									],
									"query": [
										{
											"key": "checkInDate",
											"value": "{{checkInDate_v2}}"
										},
										{
											"key": "checkOutDate",
											"value": "{{checkOutDate_v2}}"
										},
										{
											"key": "propertyId",
											"value": "e2704b04-d515-45b0-8afd-4fa1424ff011"
										},
										{
											"key": "numAdults",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Single Availability v2 - No availability for property",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 03 : Single Availability with Checkin Date, Checkout Date, No Availability Property and Number of Adults\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"  pm.response.to.have.header(\"Content-Type\");\r",
											"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"\r",
											"  var jsonData = JSON.parse(pm.response.stream);\r",
											"  pm.expect(jsonData.error.message).to.equal(\"No property id or invalid property id to retrieve prices\");\r",
											"  pm.expect(jsonData.error.code).to.equal(\"632-1-109\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-mgm-source",
										"value": "{{x-mgm-source}}",
										"type": "text"
									},
									{
										"key": "x-mgm-channel",
										"value": "{{x-mgm-channel}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{JWT_Token}}",
										"type": "text"
									},
									{
										"key": "x-mgm-transaction-id",
										"value": "rbs-v2-functional-{{$timestamp}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/availability/trip?checkInDate={{checkInDate_v2}}&checkOutDate={{checkOutDate_v2}}&propertyId=noavailabilityproperty&numAdults=2",
									"protocol": "https",
									"host": [
										"{{APIM_Endpoint}}{{Function_Environment}}"
									],
									"path": [
										"v2",
										"availability",
										"trip"
									],
									"query": [
										{
											"key": "checkInDate",
											"value": "{{checkInDate_v2}}"
										},
										{
											"key": "checkOutDate",
											"value": "{{checkOutDate_v2}}"
										},
										{
											"key": "propertyId",
											"value": "noavailabilityproperty"
										},
										{
											"key": "numAdults",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Single Availability  v2- Min and max los of the property are not respected",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 04 : Single Availability with Checkin Date & Checkout Date (not matching with los), Property Id and Number of Adults\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"  pm.response.to.have.header(\"Content-Type\");\r",
											"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"\r",
											"  var jsonData = JSON.parse(pm.response.stream);\r",
											"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
											"  pm.expect(null).not.eq(jsonData);\r",
											"  pm.expect(0).not.equal(jsonData.length);\r",
											"  pm.expect(null).not.eq(jsonData.availability[0]);\r",
											"  pm.expect(0).not.equal(jsonData.availability[0].price.itemized.length);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-mgm-source",
										"value": "{{x-mgm-source}}",
										"type": "text"
									},
									{
										"key": "x-mgm-channel",
										"value": "{{x-mgm-channel}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{JWT_Token}}",
										"type": "text"
									},
									{
										"key": "x-mgm-transaction-id",
										"value": "rbs-v2-functional-{{$timestamp}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/availability/trip?checkInDate={{checkInDate_v2}}&checkOutDate={{checkOutDate_v2}}&propertyId={{propertyId}}&numAdults=2",
									"protocol": "https",
									"host": [
										"{{APIM_Endpoint}}{{Function_Environment}}"
									],
									"path": [
										"v2",
										"availability",
										"trip"
									],
									"query": [
										{
											"key": "checkInDate",
											"value": "{{checkInDate_v2}}"
										},
										{
											"key": "checkOutDate",
											"value": "{{checkOutDate_v2}}"
										},
										{
											"key": "propertyId",
											"value": "{{propertyId}}"
										},
										{
											"key": "numAdults",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Single Availability v2 - Invalid number of guest adult",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 05 : Single Availability with Checkin Date, Checkout Date, Property Id and Invalid Number of Adults\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"  pm.response.to.have.header(\"Content-Type\");\r",
											"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"\r",
											"  var jsonData = JSON.parse(pm.response.stream);\r",
											"  pm.expect(jsonData.error.message).to.equal(\"numAdults/numGuests should be > 0\");\r",
											"  pm.expect(jsonData.error.code).to.equal(\"632-1-216\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-mgm-source",
										"value": "{{x-mgm-source}}",
										"type": "text"
									},
									{
										"key": "x-mgm-channel",
										"value": "{{x-mgm-channel}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{JWT_Token}}",
										"type": "text"
									},
									{
										"key": "x-mgm-transaction-id",
										"value": "rbs-v2-functional-{{$timestamp}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/availability/trip?checkInDate={{checkInDate_v2}}&checkOutDate={{checkOutDate_v2}}&propertyId={{propertyId}}&numAdults=-1",
									"protocol": "https",
									"host": [
										"{{APIM_Endpoint}}{{Function_Environment}}"
									],
									"path": [
										"v2",
										"availability",
										"trip"
									],
									"query": [
										{
											"key": "checkInDate",
											"value": "{{checkInDate_v2}}"
										},
										{
											"key": "checkOutDate",
											"value": "{{checkOutDate_v2}}"
										},
										{
											"key": "propertyId",
											"value": "{{propertyId}}"
										},
										{
											"key": "numAdults",
											"value": "-1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Single Availability  v2- Invalid checkin date",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 06 : Single Availability with Invalid Checkin Date, Checkout Date, Property Id and Number of Adults\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"  pm.response.to.have.header(\"Content-Type\");\r",
											"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"\r",
											"  var jsonData = JSON.parse(pm.response.stream);\r",
											"  pm.expect(jsonData.error.message).to.equal(\"CheckIn/Start or CheckOut/end date is invalid\");\r",
											"  pm.expect(jsonData.error.code).to.equal(\"632-1-107\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-mgm-source",
										"value": "{{x-mgm-source}}",
										"type": "text"
									},
									{
										"key": "x-mgm-channel",
										"value": "{{x-mgm-channel}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{JWT_Token}}",
										"type": "text"
									},
									{
										"key": "x-mgm-transaction-id",
										"value": "rbs-v2-functional-{{$timestamp}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/availability/trip?checkInDate={{invalidCheckInDate_v2}}&checkOutDate={{invalidCheckOutDate_v2}}&propertyId={{propertyId}}&numAdults=2",
									"protocol": "https",
									"host": [
										"{{APIM_Endpoint}}{{Function_Environment}}"
									],
									"path": [
										"v2",
										"availability",
										"trip"
									],
									"query": [
										{
											"key": "checkInDate",
											"value": "{{invalidCheckInDate_v2}}"
										},
										{
											"key": "checkOutDate",
											"value": "{{invalidCheckOutDate_v2}}"
										},
										{
											"key": "propertyId",
											"value": "{{propertyId}}"
										},
										{
											"key": "numAdults",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Single Availability v2 - with programId/rateplan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 07 : Single Availability with programId/ratePlan with Checkin Date, Checkout Date, Property Id and Number of Adults\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"  pm.response.to.have.header(\"Content-Type\");\r",
											"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"\r",
											"  var jsonData = JSON.parse(pm.response.stream);\r",
											"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
											"  pm.expect(null).not.eq(jsonData);\r",
											"  pm.expect(0).not.equal(jsonData.length);\r",
											"  pm.expect(null).not.eq(jsonData.availability[0]);\r",
											"  pm.expect(0).not.equal(jsonData.availability[0].price.itemized.length);  \r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-mgm-source",
										"value": "{{x-mgm-source}}",
										"type": "text"
									},
									{
										"key": "x-mgm-channel",
										"value": "{{x-mgm-channel}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{JWT_Token}}",
										"type": "text"
									},
									{
										"key": "x-mgm-transaction-id",
										"value": "rbs-v2-functional-{{$timestamp}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/availability/trip?checkInDate={{checkInDate_v2}}&checkOutDate={{checkOutDate_v2}}&propertyId={{propertyId}}&numAdults=2",
									"protocol": "https",
									"host": [
										"{{APIM_Endpoint}}{{Function_Environment}}"
									],
									"path": [
										"v2",
										"availability",
										"trip"
									],
									"query": [
										{
											"key": "checkInDate",
											"value": "{{checkInDate_v2}}"
										},
										{
											"key": "checkOutDate",
											"value": "{{checkOutDate_v2}}"
										},
										{
											"key": "propertyId",
											"value": "{{propertyId}}"
										},
										{
											"key": "numAdults",
											"value": "2"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Calendar price V2",
					"item": [
						{
							"name": "Calendar price v2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 01 : Calendar Price with Start Date, End Date, Property Id, Number of Adults and Number of Rooms\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"\r",
											"    var jsonData = JSON.parse(pm.response.stream);\r",
											"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
											"    pm.expect(null).not.eq(jsonData);\r",
											"    pm.expect(0).not.equal(jsonData.length);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "x-mgm-source",
										"value": "{{x-mgm-source}}",
										"type": "text"
									},
									{
										"key": "x-mgm-channel",
										"value": "{{x-mgm-channel}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{JWT_Token}}",
										"type": "text"
									},
									{
										"key": "x-mgm-transaction-id",
										"value": "rbs-v2-functional-{{$timestamp}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/availability/calendar?startDate={{checkInDate_v2}}&endDate={{checkOutDate_v2}}&propertyId={{propertyId}}&numAdults=2&numRooms=2 ",
									"protocol": "https",
									"host": [
										"{{APIM_Endpoint}}{{Function_Environment}}"
									],
									"path": [
										"v2",
										"availability",
										"calendar"
									],
									"query": [
										{
											"key": "startDate",
											"value": "{{checkInDate_v2}}"
										},
										{
											"key": "endDate",
											"value": "{{checkOutDate_v2}}"
										},
										{
											"key": "propertyId",
											"value": "{{propertyId}}"
										},
										{
											"key": "numAdults",
											"value": "2"
										},
										{
											"key": "numRooms",
											"value": "2 "
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Calendar price v2 GroupCode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 02 : Calendar Price with Start Date, End Date, Property Id, Number of Adults, Number of Rooms and Group Code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"\r",
											"    var jsonData = JSON.parse(pm.response.stream);\r",
											"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
											"    pm.expect(null).not.eq(jsonData);\r",
											"    pm.expect(0).not.equal(jsonData.length);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-mgm-source",
										"value": "{{x-mgm-source}}",
										"type": "text"
									},
									{
										"key": "x-mgm-channel",
										"value": "{{x-mgm-channel}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{JWT_Token}}",
										"type": "text"
									},
									{
										"key": "x-mgm-transaction-id",
										"value": "rbs-v2-functional-{{$timestamp}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/availability/calendar?startDate={{checkInDate_v2}}&endDate={{checkOutDate_v2}}&propertyId={{propertyId}}&numAdults=2&numRooms=2&isGroupCode=true",
									"protocol": "https",
									"host": [
										"{{APIM_Endpoint}}{{Function_Environment}}"
									],
									"path": [
										"v2",
										"availability",
										"calendar"
									],
									"query": [
										{
											"key": "startDate",
											"value": "{{checkInDate_v2}}"
										},
										{
											"key": "endDate",
											"value": "{{checkOutDate_v2}}"
										},
										{
											"key": "propertyId",
											"value": "{{propertyId}}"
										},
										{
											"key": "numAdults",
											"value": "2"
										},
										{
											"key": "numRooms",
											"value": "2"
										},
										{
											"key": "isGroupCode",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Calendar price v3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 01 : Calendar Price with Start Date, End Date, Property Id, Number of Adults and Number of Rooms\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"\r",
											"    var jsonData = JSON.parse(pm.response.stream);\r",
											"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
											"    pm.expect(null).not.eq(jsonData);\r",
											"    pm.expect(0).not.equal(jsonData.length);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "x-mgm-source",
										"type": "text",
										"value": "{{x-mgm-source}}"
									},
									{
										"key": "x-mgm-channel",
										"type": "text",
										"value": "{{x-mgm-channel}}"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{JWT_Token}}"
									},
									{
										"key": "x-mgm-transaction-id",
										"type": "text",
										"value": "rbs-v2-functional-{{$timestamp}}"
									}
								],
								"url": {
									"raw": "https://{{APIM_Endpoint}}{{Function_Environment}}/v3/availability/calendar?startDate={{checkInDate_v2}}&endDate={{checkOutDate_v2}}&propertyId={{propertyId}}&numAdults=2&numRooms=2&totalNights=2",
									"protocol": "https",
									"host": [
										"{{APIM_Endpoint}}{{Function_Environment}}"
									],
									"path": [
										"v3",
										"availability",
										"calendar"
									],
									"query": [
										{
											"key": "startDate",
											"value": "{{checkInDate_v2}}"
										},
										{
											"key": "endDate",
											"value": "{{checkOutDate_v2}}"
										},
										{
											"key": "propertyId",
											"value": "{{propertyId}}"
										},
										{
											"key": "numAdults",
											"value": "2"
										},
										{
											"key": "numRooms",
											"value": "2"
										},
										{
											"key": "totalNights",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Calendar price v3 Promo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 01 : Calendar Price with Start Date, End Date, Property Id, Number of Adults, Number of Rooms and promo\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"\r",
											"    var jsonData = JSON.parse(pm.response.stream);\r",
											"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
											"    pm.expect(null).not.eq(jsonData);\r",
											"    pm.expect(0).not.equal(jsonData.length);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "x-mgm-source",
										"type": "text",
										"value": "{{x-mgm-source}}"
									},
									{
										"key": "x-mgm-channel",
										"type": "text",
										"value": "{{x-mgm-channel}}"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{JWT_Token}}"
									},
									{
										"key": "x-mgm-transaction-id",
										"type": "text",
										"value": "rbs-v2-functional-{{$timestamp}}"
									}
								],
								"url": {
									"raw": "https://{{APIM_Endpoint}}{{Function_Environment}}/v3/availability/calendar?startDate={{checkInDate_v2}}&endDate={{checkOutDate_v2}}&propertyId={{propertyId}}&numAdults=2&numRooms=2&totalNights=2&promo=ZNVLCLS",
									"protocol": "https",
									"host": [
										"{{APIM_Endpoint}}{{Function_Environment}}"
									],
									"path": [
										"v3",
										"availability",
										"calendar"
									],
									"query": [
										{
											"key": "startDate",
											"value": "{{checkInDate_v2}}"
										},
										{
											"key": "endDate",
											"value": "{{checkOutDate_v2}}"
										},
										{
											"key": "propertyId",
											"value": "{{propertyId}}"
										},
										{
											"key": "numAdults",
											"value": "2"
										},
										{
											"key": "numRooms",
											"value": "2"
										},
										{
											"key": "totalNights",
											"value": "2"
										},
										{
											"key": "promo",
											"value": "ZNVLCLS"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"description": "Functional Tests for offer related API's"
		},
		{
			"name": "Profiles",
			"item": [
				{
					"name": "Organizations",
					"item": [
						{
							"name": "Organization Search By Org Name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 01 : Organization Search with Organization Name\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"\r",
											"    var jsonData = JSON.parse(pm.response.stream);\r",
											"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
											"    pm.expect(null).not.eq(jsonData);\r",
											"    pm.expect(0).not.equal(jsonData.length);\r",
											"    pm.expect(null).not.equal(jsonData[0].fullName);\r",
											"    var value = pm.variables.get(\"validOrgName\");    \r",
											"    pm.expect(value).eq(jsonData[0].shortName);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable('validOrgName',  \"Amadeus\");\r",
											"postman.setEnvironmentVariable('validIataCode',  \"1A\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-mgm-source",
										"value": "{{x-mgm-source}}",
										"type": "text"
									},
									{
										"key": "x-mgm-channel",
										"value": "{{x-mgm-channel}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{JWT_Token}}",
										"type": "text"
									},
									{
										"key": "x-mgm-transaction-id",
										"value": "rbs-v2-functional-{{$timestamp}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/iata/organizations?orgName={{validOrgName}}",
									"protocol": "https",
									"host": [
										"{{APIM_Endpoint}}{{Function_Environment}}"
									],
									"path": [
										"v2",
										"iata",
										"organizations"
									],
									"query": [
										{
											"key": "orgName",
											"value": "{{validOrgName}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Organization Search By Iata Code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 02 : Organization Search with Iata Code\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"  pm.response.to.have.header(\"Content-Type\");\r",
											"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"\r",
											"  var jsonData = JSON.parse(pm.response.stream);\r",
											"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
											"  pm.expect(null).not.eq(jsonData);\r",
											"  pm.expect(0).not.equal(jsonData.length);\r",
											"  pm.expect(null).not.equal(jsonData[0].fullName);\r",
											"  pm.expect(null).not.equal(jsonData[0].iataCode[0]);\r",
											"  pm.expect(null).not.equal(jsonData[0].shortName);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-mgm-source",
										"value": "{{x-mgm-source}}",
										"type": "text"
									},
									{
										"key": "x-mgm-channel",
										"value": "{{x-mgm-channel}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{JWT_Token}}",
										"type": "text"
									},
									{
										"key": "x-mgm-transaction-id",
										"value": "rbs-v2-functional-{{$timestamp}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/iata/organizations?iataCode={{validIataCode}}",
									"protocol": "https",
									"host": [
										"{{APIM_Endpoint}}{{Function_Environment}}"
									],
									"path": [
										"v2",
										"iata",
										"organizations"
									],
									"query": [
										{
											"key": "iataCode",
											"value": "{{validIataCode}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Organization Search Empty Test",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 03 : Organization Search with empty Organization Name and empty Iata Code\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"  pm.response.to.have.header(\"Content-Type\");\r",
											"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"\r",
											"  var jsonData = JSON.parse(pm.response.stream);\r",
											" \r",
											"  pm.expect(\"632-1-209\").to.equal(jsonData.error.code);\r",
											"  pm.expect(\"At least one mandatory Search criterion must be used\").to.equal(jsonData.error.message);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-mgm-source",
										"value": "{{x-mgm-source}}",
										"type": "text"
									},
									{
										"key": "x-mgm-channel",
										"value": "{{x-mgm-channel}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{JWT_Token}}",
										"type": "text"
									},
									{
										"key": "x-mgm-transaction-id",
										"value": "rbs-v2-functional-{{$timestamp}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/iata/organizations?orgName=&iataCode=",
									"protocol": "https",
									"host": [
										"{{APIM_Endpoint}}{{Function_Environment}}"
									],
									"path": [
										"v2",
										"iata",
										"organizations"
									],
									"query": [
										{
											"key": "orgName",
											"value": ""
										},
										{
											"key": "iataCode",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Organization Search Negative Test",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 04 : Organization Search with Invalid Organization Name and empty Iata Code\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"  pm.response.to.have.header(\"Content-Type\");\r",
											"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"\r",
											"  var jsonData = JSON.parse(pm.response.stream);\r",
											"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
											"  pm.expect(null).not.eq(jsonData);\r",
											"  pm.expect(0).equal(jsonData.length);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-mgm-source",
										"value": "{{x-mgm-source}}",
										"type": "text"
									},
									{
										"key": "x-mgm-channel",
										"value": "{{x-mgm-channel}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{JWT_Token}}",
										"type": "text"
									},
									{
										"key": "x-mgm-transaction-id",
										"value": "rbs-v2-functional-{{$timestamp}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/iata/organizations?orgName=\"Invalid\"&iataCode=",
									"protocol": "https",
									"host": [
										"{{APIM_Endpoint}}{{Function_Environment}}"
									],
									"path": [
										"v2",
										"iata",
										"organizations"
									],
									"query": [
										{
											"key": "orgName",
											"value": "\"Invalid\""
										},
										{
											"key": "iataCode",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Rates",
			"item": [
				{
					"name": "GroupSearch",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"RBS_ACRS_V2 | Test case 01 : Group Search with Start Date, End Date, Property Id and Group Code\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"  pm.response.to.have.header(\"Content-Type\");\r",
									"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
									"\r",
									"  var jsonData = JSON.parse(pm.response.stream);\r",
									"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
									"  pm.expect(null).not.eq(jsonData);\r",
									"  pm.expect(0).not.equal(jsonData.length);\r",
									"  pm.expect(\"Group\").equal(jsonData[0].category);\r",
									"  pm.expect(0).not.equal(jsonData[0].rooms.length);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-mgm-source",
								"value": "{{x-mgm-source}}",
								"type": "text"
							},
							{
								"key": "x-mgm-channel",
								"value": "{{x-mgm-channel}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{JWT_Token}}",
								"type": "text"
							},
							{
								"key": "x-mgm-transaction-id",
								"value": "rbs-v2-functional-{{$timestamp}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/groupblocks?propertyId={{propertyId}}&startDate=2020-09-14&endDate=2020-09-29&id=GRPCD-v-GR1-d-PROP-v-MV021",
							"protocol": "https",
							"host": [
								"{{APIM_Endpoint}}{{Function_Environment}}"
							],
							"path": [
								"v2",
								"groupblocks"
							],
							"query": [
								{
									"key": "propertyId",
									"value": "{{propertyId}}"
								},
								{
									"key": "startDate",
									"value": "2020-09-14"
								},
								{
									"key": "endDate",
									"value": "2020-09-29"
								},
								{
									"key": "id",
									"value": "GRPCD-v-GR1-d-PROP-v-MV021"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GroupSearch Date Validation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"RBS_ACRS_V2 | Test case 02 : GroupSearch Date Validation with Start Date, End Date, Property Id\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"  pm.response.to.have.header(\"Content-Type\");\r",
									"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
									"\r",
									"  var jsonData = JSON.parse(pm.response.stream);\r",
									"  pm.expect(jsonData.error.message).to.equal(\"Start Date must be older or equal to End Date\");\r",
									"  pm.expect(jsonData.error.code).to.equal(\"632-1-210\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-mgm-source",
								"value": "{{x-mgm-source}}",
								"type": "text"
							},
							{
								"key": "x-mgm-channel",
								"value": "{{x-mgm-channel}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{JWT_Token}}",
								"type": "text"
							},
							{
								"key": "x-mgm-transaction-id",
								"value": "rbs-v2-functional-{{$timestamp}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/groupblocks?propertyId={{validPropertyCode}}&startDate=2020-08-10&endDate=2020-05-10&groupCode=226ddbe4-639f-4e61-91ca-aac5fb1d98e5",
							"protocol": "https",
							"host": [
								"{{APIM_Endpoint}}{{Function_Environment}}"
							],
							"path": [
								"v2",
								"groupblocks"
							],
							"query": [
								{
									"key": "propertyId",
									"value": "{{validPropertyCode}}"
								},
								{
									"key": "startDate",
									"value": "2020-08-10"
								},
								{
									"key": "endDate",
									"value": "2020-05-10"
								},
								{
									"key": "groupCode",
									"value": "226ddbe4-639f-4e61-91ca-aac5fb1d98e5"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "reservations",
			"item": [
				{
					"name": "Reservation Create",
					"item": [
						{
							"name": "Create Reservation V2 - Success",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 01 : Create Reservation with Profile, Booking, TripDetails, Billing and AgentInfo\", function () {\r",
											"    pm.globals.set(\"variable_key\", \"variable_value\");  \r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"\r",
											"    var jsonData = JSON.parse(pm.response.stream);\r",
											"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
											"    pm.expect(null).not.eq(jsonData);\r",
											"    pm.expect(0).not.equal(jsonData.length);\r",
											"    pm.expect(null).not.eq(jsonData.booked);    \r",
											"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
											"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
											"    var reservationId = jsonData.roomReservation.id;\r",
											"    pm.expect(confirmationNumber).not.eq(null);\r",
											"    pm.expect(itineraryId).not.eq(null);\r",
											"    pm.expect(reservationId).not.eq(null);\r",
											"    postman.setEnvironmentVariable('validConfirmationNumber',  confirmationNumber);\r",
											"    postman.setEnvironmentVariable('bookedItineraryId',  itineraryId);\r",
											"    postman.setEnvironmentVariable('bookedReservationId',  reservationId);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"firstName = \"functionaltest\" + Math.random().toString(36).substring(5);",
											"postman.setEnvironmentVariable('firstName',  firstName);",
											"postman.setEnvironmentVariable('lastName',  \"pman\");",
											"",
											"phone = Math.floor(Math.random() * 9000000000) + 1000000000;",
											"postman.setEnvironmentVariable('phone',  phone);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-mgm-source",
										"value": "{{x-mgm-source}}",
										"type": "text"
									},
									{
										"key": "x-mgm-channel",
										"value": "{{x-mgm-channel}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{JWT_Token}}",
										"type": "text"
									},
									{
										"key": "x-mgm-transaction-id",
										"value": "rbs-v2-functional-{{$timestamp}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"roomReservation\": {\r\n        \"customerId\": 1,\r\n        \"propertyId\": \"dc00e77f-d6bb-4dd7-a8ea-dc33ee9675ad\",\r\n        \"roomTypeId\": \"ROOMCD-v-DPRK-d-PROP-v-MV021\",\r\n        \"programId\": \"RPCD-v-PREVL-d-PROP-v-MV021\",\r\n        \"state\": \"Booked\",\r\n        \"itineraryId\": \"1234\",\r\n        \"nrgStatus\": false,\r\n        \"specialRequests\": [\r\n            \"COMPONENTCD~DINN--NRPCD~NONE--TYP~SPECIAL-REQUEST--PROP~40b61feb-750a-45df-ae68-e23e6272b16b\"\r\n        ],\r\n        \"operaConfirmationNumber\": \"798011044\",\r\n        \"bookDate\": \"2020-12-09\",\r\n        \"profile\": {\r\n            \"id\": -1,\r\n            \"mlifeNo\": 0,\r\n            \"title\": \"Mr\",\r\n            \"firstName\": \"Saugata\",\r\n            \"lastName\": \"Moitra\",\r\n            \"emailAddress1\": \"smoitra@mgmresorts.com\",\r\n            \"phoneNumbers\": [\r\n                {\r\n                    \"type\": \"Mobile\",\r\n                    \"number\": \"7029138039\"\r\n                }\r\n            ],\r\n            \"addresses\": [\r\n                {\r\n                    \"type\": \"Home\",\r\n                    \"preferred\": true,\r\n                    \"street1\": \"5353 W Desert Inn\",\r\n                    \"street2\": null,\r\n                    \"city\": \"Las Vegas\",\r\n                    \"state\": \"NV\",\r\n                    \"country\": \"US\",\r\n                    \"postalCode\": \"89146\"\r\n                }\r\n            ]\r\n        },\r\n        \"billing\": [\r\n            {\r\n                \"payment\": {\r\n                    \"cardHolder\": \"Saugata Moitra\",\r\n                    \"firstName\": \"Saugata\",\r\n                    \"lastName\": \"Moitra\",\r\n                    \"ccToken\": \"4111110A001DQXFHY79D9XCZ1111\",\r\n                    \"encryptedccToken\": \"5555550A0012ZTSHUFMXCCUW4444\",\r\n                    \"maskedNumber\": \"XXXXXXXXXXXXXXXXXXXXXXXX4444\",\r\n                    \"amount\": 10,\r\n                    \"expiry\": \"01/2022\",\r\n                    \"type\": \"Diners Club\"\r\n                },\r\n                \"address\": {\r\n                    \"street1\": \"5353 W Desert Inn\",\r\n                    \"street2\": null,\r\n                    \"city\": \"Las Vegas\",\r\n                    \"state\": \"NV\",\r\n                    \"postalCode\": \"89146\",\r\n                    \"country\": \"US\"\r\n                }\r\n            },\r\n            {\r\n                \"payment\": {\r\n                    \"cardHolder\": \"first last\",\r\n                    \"firstName\": \"firstfirst\",\r\n                    \"lastName\": \"last\",\r\n                    \"ccToken\": \"4111110A001DQXFHY79D9XCZ1111\",\r\n                    \"maskedNumber\": \"XXXXXXXXXXXX1111\",\r\n                    \"cvv\": \"123\",\r\n                    \"type\": \"Visa\",\r\n                    \"expiry\": \"10/2022\",\r\n                    \"amount\": 2108.62\r\n                },\r\n                \"address\": {\r\n                    \"street1\": \"--REDACTED--\",\r\n                    \"street2\": \"--REDACTED--\",\r\n                    \"city\": \"Henderson\",\r\n                    \"state\": \"NV\",\r\n                    \"postalCode\": \"89118\",\r\n                    \"country\": \"US\"\r\n                }\r\n            }\r\n        ],\r\n        \"tripDetails\": {\r\n            \"checkInDate\": \"{{checkInDate_v2}}\",\r\n            \"checkOutDate\": \"{{checkOutDate_v2}}\",\r\n            \"numAdults\": 2,\r\n            \"numChildren\": 0,\r\n            \"numRooms\": 1,\r\n            \"numAdultsValid\": true\r\n        },\r\n        \"bookings\": [\r\n            {\r\n                \"date\": \"2021-08-05\",\r\n                \"basePrice\": 110,\r\n                \"customerPrice\": 0,\r\n                \"price\": 110,\r\n                \"programIdIsRateTable\": false,\r\n                \"overridePrice\": -1,\r\n                \"overrideProgramIdIsRateTable\": false,\r\n                \"resortFeeIsSpecified\": false,\r\n                \"resortFee\": 0,\r\n                \"programId\": \"RPCD-v-PREVL-d-PROP-v-MV021\",\r\n                \"isComp\": false\r\n            },\r\n            {\r\n                \"date\": \"2021-08-06\",\r\n                \"basePrice\": 110,\r\n                \"customerPrice\": 0,\r\n                \"price\": 110,\r\n                \"programIdIsRateTable\": false,\r\n                \"overridePrice\": -1,\r\n                \"overrideProgramIdIsRateTable\": false,\r\n                \"resortFeeIsSpecified\": false,\r\n                \"resortFee\": 0,\r\n                \"programId\": \"RPCD-v-PREVL-d-PROP-v-MV021\",\r\n                \"isComp\": false\r\n            }\r\n        ],\r\n        \"markets\": null,\r\n        \"chargesAndTaxes\": {\r\n            \"charges\": [\r\n                {\r\n                    \"date\": \"2021-04-29\",\r\n                    \"amount\": 184,\r\n                    \"itemized\": [\r\n                        {\r\n                            \"active\": false,\r\n                            \"itemType\": \"RoomCharge\",\r\n                            \"amount\": 110\r\n                        },\r\n                        {\r\n                            \"active\": false,\r\n                            \"itemType\": \"ResortFee\",\r\n                            \"amount\": 74\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"date\": \"2021-04-30\",\r\n                    \"amount\": 184,\r\n                    \"itemized\": [\r\n                        {\r\n                            \"active\": false,\r\n                            \"itemType\": \"RoomCharge\",\r\n                            \"amount\": 110\r\n                        },\r\n                        {\r\n                            \"active\": false,\r\n                            \"itemType\": \"ResortFee\",\r\n                            \"amount\": 74\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"taxesAndFees\": [\r\n                {\r\n                    \"date\": \"2021-04-29\",\r\n                    \"amount\": 24.62,\r\n                    \"itemized\": [\r\n                        {\r\n                            \"active\": false,\r\n                            \"itemType\": \"RoomChargeTax\",\r\n                            \"amount\": 14.72\r\n                        },\r\n                        {\r\n                            \"active\": false,\r\n                            \"itemType\": \"ResortFeeTax\",\r\n                            \"amount\": 9.9\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"date\": \"2021-04-30\",\r\n                    \"amount\": 24.62,\r\n                    \"itemized\": [\r\n                        {\r\n                            \"active\": false,\r\n                            \"itemType\": \"RoomChargeTax\",\r\n                            \"amount\": 14.72\r\n                        },\r\n                        {\r\n                            \"active\": false,\r\n                            \"itemType\": \"ResortFeeTax\",\r\n                            \"amount\": 9.9\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        \"depositDetails\": {\r\n            \"dueDate\": \"2021-04-26\",\r\n            \"amount\": 208.62,\r\n            \"forfeitDate\": \"2021-04-26\",\r\n            \"forfeitAmount\": 208.62,\r\n            \"overrideAmount\": -1\r\n        },\r\n        \"depositPolicy\": null,\r\n        \"payments\": null,\r\n        \"amountDue\": 0,\r\n        \"guaranteeCode\": \"CC\",\r\n        \"customerRank\": 0,\r\n        \"customerSegment\": 0,\r\n        \"customerDominantPlay\": null,\r\n        \"rrUpSell\": \"\",\r\n        \"alerts\": null,\r\n        \"routingInstructions\": null,\r\n        \"traces\": null,\r\n        \"shareWithCustomers\": null,\r\n        \"comments\": null,\r\n        \"additionalComments\": [],\r\n        \"agentInfo\": null,\r\n        \"myVegasPromoCode\": null,\r\n        \"isGroupCode\": false\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/reservation"
							},
							"response": []
						},
						{
							"name": "Create Reservation V2 - Success With Promo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 01 : Create Reservation with Profile, Booking, TripDetails, Billing and AgentInfo\", function () {\r",
											"    pm.globals.set(\"variable_key\", \"variable_value\");  \r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"\r",
											"    var jsonData = JSON.parse(pm.response.stream);\r",
											"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
											"    pm.expect(null).not.eq(jsonData);\r",
											"    pm.expect(0).not.equal(jsonData.length);\r",
											"    pm.expect(null).not.eq(jsonData.booked);    \r",
											"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
											"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
											"    var reservationId = jsonData.roomReservation.id;\r",
											"    pm.expect(confirmationNumber).not.eq(null);\r",
											"    pm.expect(itineraryId).not.eq(null);\r",
											"    pm.expect(reservationId).not.eq(null);\r",
											"    postman.setEnvironmentVariable('validConfirmationNumberPromo',  confirmationNumber);\r",
											"    postman.setEnvironmentVariable('bookedItineraryId',  itineraryId);\r",
											"    postman.setEnvironmentVariable('bookedReservationId',  reservationId);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"firstName = \"functionaltest\" + Math.random().toString(36).substring(5);",
											"postman.setEnvironmentVariable('firstName',  firstName);",
											"postman.setEnvironmentVariable('lastName',  \"pman\");",
											"",
											"phone = Math.floor(Math.random() * 9000000000) + 1000000000;",
											"postman.setEnvironmentVariable('phone',  phone);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-mgm-source",
										"value": "{{x-mgm-source}}",
										"type": "text"
									},
									{
										"key": "x-mgm-channel",
										"value": "{{x-mgm-channel}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{JWT_Token}}",
										"type": "text"
									},
									{
										"key": "x-mgm-transaction-id",
										"value": "rbs-v2-functional-{{$timestamp}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"roomReservation\": {\r\n        \"customerId\": 1,\r\n        \"propertyId\": \"dc00e77f-d6bb-4dd7-a8ea-dc33ee9675ad\",\r\n        \"promo\": \"ZNVLCLS\",\r\n        \"roomTypeId\": \"ROOMCD-v-DMAD-d-PROP-v-MV021\",\r\n        \"programId\": \"RPCD-v-AAA10-d-PROP-v-MV021\",\r\n        \"state\": \"Booked\",\r\n        \"itineraryId\": \"1234\",\r\n        \"nrgStatus\": false,\r\n        \"specialRequests\": [\r\n            \"COMPONENTCD~DINN--NRPCD~NONE--TYP~SPECIAL-REQUEST--PROP~40b61feb-750a-45df-ae68-e23e6272b16b\"\r\n        ],\r\n        \"operaConfirmationNumber\": \"798011044\",\r\n        \"bookDate\": \"2020-12-09\",\r\n        \"profile\": {\r\n            \"id\": -1,\r\n            \"mlifeNo\": 0,\r\n            \"title\": \"Mr\",\r\n            \"firstName\": \"Saugata\",\r\n            \"lastName\": \"Moitra\",\r\n            \"emailAddress1\": \"smoitra@mgmresorts.com\",\r\n            \"phoneNumbers\": [\r\n                {\r\n                    \"type\": \"Mobile\",\r\n                    \"number\": \"7029138039\"\r\n                }\r\n            ],\r\n            \"addresses\": [\r\n                {\r\n                    \"type\": \"Home\",\r\n                    \"preferred\": true,\r\n                    \"street1\": \"5353 W Desert Inn\",\r\n                    \"street2\": null,\r\n                    \"city\": \"Las Vegas\",\r\n                    \"state\": \"NV\",\r\n                    \"country\": \"US\",\r\n                    \"postalCode\": \"89146\"\r\n                }\r\n            ]\r\n        },\r\n        \"billing\": [\r\n            {\r\n                \"payment\": {\r\n                    \"cardHolder\": \"Saugata Moitra\",\r\n                    \"firstName\": \"Saugata\",\r\n                    \"lastName\": \"Moitra\",\r\n                    \"ccToken\": \"4111110A001DQXFHY79D9XCZ1111\",\r\n                    \"encryptedccToken\": \"5555550A0012ZTSHUFMXCCUW4444\",\r\n                    \"maskedNumber\": \"XXXXXXXXXXXXXXXXXXXXXXXX4444\",\r\n                    \"amount\": 10,\r\n                    \"expiry\": \"01/2022\",\r\n                    \"type\": \"Diners Club\"\r\n                },\r\n                \"address\": {\r\n                    \"street1\": \"5353 W Desert Inn\",\r\n                    \"street2\": null,\r\n                    \"city\": \"Las Vegas\",\r\n                    \"state\": \"NV\",\r\n                    \"postalCode\": \"89146\",\r\n                    \"country\": \"US\"\r\n                }\r\n            },\r\n            {\r\n                \"payment\": {\r\n                    \"cardHolder\": \"first last\",\r\n                    \"firstName\": \"firstfirst\",\r\n                    \"lastName\": \"last\",\r\n                    \"ccToken\": \"4111110A001DQXFHY79D9XCZ1111\",\r\n                    \"maskedNumber\": \"XXXXXXXXXXXX1111\",\r\n                    \"cvv\": \"123\",\r\n                    \"type\": \"Visa\",\r\n                    \"expiry\": \"10/2022\",\r\n                    \"amount\": 2108.62\r\n                },\r\n                \"address\": {\r\n                    \"street1\": \"--REDACTED--\",\r\n                    \"street2\": \"--REDACTED--\",\r\n                    \"city\": \"Henderson\",\r\n                    \"state\": \"NV\",\r\n                    \"postalCode\": \"89118\",\r\n                    \"country\": \"US\"\r\n                }\r\n            }\r\n        ],\r\n        \"tripDetails\": {\r\n            \"checkInDate\": \"{{checkInDate_v2}}\",\r\n            \"checkOutDate\": \"{{checkOutDate_v2}}\",\r\n            \"numAdults\": 2,\r\n            \"numChildren\": 0,\r\n            \"numRooms\": 1,\r\n            \"numAdultsValid\": true\r\n        },\r\n        \"bookings\": [\r\n            {\r\n                \"date\": \"2021-08-05\",\r\n                \"basePrice\": 110,\r\n                \"customerPrice\": 0,\r\n                \"price\": 110,\r\n                \"programIdIsRateTable\": false,\r\n                \"overridePrice\": -1,\r\n                \"overrideProgramIdIsRateTable\": false,\r\n                \"resortFeeIsSpecified\": false,\r\n                \"resortFee\": 0,\r\n                \"programId\": \"RPCD-v-AAA10-d-PROP-v-MV021\",\r\n                \"isComp\": false\r\n            },\r\n            {\r\n                \"date\": \"2021-08-06\",\r\n                \"basePrice\": 110,\r\n                \"customerPrice\": 0,\r\n                \"price\": 110,\r\n                \"programIdIsRateTable\": false,\r\n                \"overridePrice\": -1,\r\n                \"overrideProgramIdIsRateTable\": false,\r\n                \"resortFeeIsSpecified\": false,\r\n                \"resortFee\": 0,\r\n                \"programId\": \"RPCD-v-AAA10-d-PROP-v-MV021\",\r\n                \"isComp\": false\r\n            }\r\n        ],\r\n        \"markets\": null,\r\n        \"chargesAndTaxes\": {\r\n            \"charges\": [\r\n                {\r\n                    \"date\": \"2021-04-29\",\r\n                    \"amount\": 184,\r\n                    \"itemized\": [\r\n                        {\r\n                            \"active\": false,\r\n                            \"itemType\": \"RoomCharge\",\r\n                            \"amount\": 110\r\n                        },\r\n                        {\r\n                            \"active\": false,\r\n                            \"itemType\": \"ResortFee\",\r\n                            \"amount\": 74\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"date\": \"2021-04-30\",\r\n                    \"amount\": 184,\r\n                    \"itemized\": [\r\n                        {\r\n                            \"active\": false,\r\n                            \"itemType\": \"RoomCharge\",\r\n                            \"amount\": 110\r\n                        },\r\n                        {\r\n                            \"active\": false,\r\n                            \"itemType\": \"ResortFee\",\r\n                            \"amount\": 74\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"taxesAndFees\": [\r\n                {\r\n                    \"date\": \"2021-04-29\",\r\n                    \"amount\": 24.62,\r\n                    \"itemized\": [\r\n                        {\r\n                            \"active\": false,\r\n                            \"itemType\": \"RoomChargeTax\",\r\n                            \"amount\": 14.72\r\n                        },\r\n                        {\r\n                            \"active\": false,\r\n                            \"itemType\": \"ResortFeeTax\",\r\n                            \"amount\": 9.9\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"date\": \"2021-04-30\",\r\n                    \"amount\": 24.62,\r\n                    \"itemized\": [\r\n                        {\r\n                            \"active\": false,\r\n                            \"itemType\": \"RoomChargeTax\",\r\n                            \"amount\": 14.72\r\n                        },\r\n                        {\r\n                            \"active\": false,\r\n                            \"itemType\": \"ResortFeeTax\",\r\n                            \"amount\": 9.9\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        \"depositDetails\": {\r\n            \"dueDate\": \"2021-04-26\",\r\n            \"amount\": 208.62,\r\n            \"forfeitDate\": \"2021-04-26\",\r\n            \"forfeitAmount\": 208.62,\r\n            \"overrideAmount\": -1\r\n        },\r\n        \"depositPolicy\": null,\r\n        \"payments\": null,\r\n        \"amountDue\": 0,\r\n        \"guaranteeCode\": \"CC\",\r\n        \"customerRank\": 0,\r\n        \"customerSegment\": 0,\r\n        \"customerDominantPlay\": null,\r\n        \"rrUpSell\": \"\",\r\n        \"alerts\": null,\r\n        \"routingInstructions\": null,\r\n        \"traces\": null,\r\n        \"shareWithCustomers\": null,\r\n        \"comments\": null,\r\n        \"additionalComments\": [],\r\n        \"agentInfo\": null,\r\n        \"myVegasPromoCode\": null,\r\n        \"isGroupCode\": false\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/reservation"
							},
							"response": []
						},
						{
							"name": "Create Reservation V2 - With MlifeId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 02 : Create Reservation with MlifeProfile, TripDetails, Billing and AgentInfo\", function () {\r",
											"pm.globals.set(\"variable_key\", \"variable_value\");  pm.response.to.have.status(200);\r",
											"pm.response.to.have.header(\"Content-Type\");\r",
											"pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"\r",
											"var jsonData = JSON.parse(pm.response.stream);\r",
											"pm.expect(\"OK\").to.equal(pm.response.status);\r",
											"pm.expect(null).not.eq(jsonData);\r",
											"pm.expect(0).not.equal(jsonData.length);\r",
											"pm.expect(null).not.eq(jsonData.booked);    \r",
											"var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
											"var itineraryId = jsonData.roomReservation.itineraryId;\r",
											"var reservationId = jsonData.roomReservation.id;\r",
											"pm.expect(confirmationNumber).not.eq(null);\r",
											"pm.expect(itineraryId).not.eq(null);\r",
											"pm.expect(reservationId).not.eq(null);\r",
											"postman.setEnvironmentVariable('bookedConfirmationNumber',  confirmationNumber);\r",
											"postman.setEnvironmentVariable('bookedItineraryId',  itineraryId);\r",
											"postman.setEnvironmentVariable('bookedReservationId',  reservationId);\r",
											"//pm.globals.set(\"bookedConfirmationNumber\", confirmationNumber);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"firstName = \"functionaltest\" + Math.random().toString(36).substring(5);",
											"postman.setEnvironmentVariable('firstName',  firstName);",
											"postman.setEnvironmentVariable('lastName',  \"pman\");",
											"",
											"phone = Math.floor(Math.random() * 9000000000) + 1000000000;",
											"postman.setEnvironmentVariable('phone',  phone);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-mgm-source",
										"value": "{{x-mgm-source}}",
										"type": "text"
									},
									{
										"key": "x-mgm-channel",
										"value": "{{x-mgm-channel}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{JWT_Token}}",
										"type": "text"
									},
									{
										"key": "x-mgm-transaction-id",
										"value": "rbs-v2-functional-{{$timestamp}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"roomReservation\": {\r\n        \"id\": \"752c359a-49ab-4b6a-b7b5-a68d77f23b9b\",\r\n        \"customerId\": \"11171332354\",\r\n        \"propertyId\": \"dc00e77f-d6bb-4dd7-a8ea-dc33ee9675ad\",\r\n        \"itineraryId\": \"6897908226\",\r\n        \"roomTypeId\": \"ROOMCD-v-DPRK-d-PROP-v-MV021\",\r\n        \"programId\": \"RPCD-v-PREVL-d-PROP-v-MV021\",\r\n        \"nrgStatus\": false,\r\n        \"profile\": {\r\n            \"id\": 156499970,\r\n            \"mlifeNo\": 79145357,\r\n            \"title\": \"Mr\",\r\n            \"dateOfBirth\": \"1960-07-27\",\r\n            \"operaId\": \"814787961\",\r\n            \"tier\": null,\r\n            \"firstName\": \"fname\",\r\n            \"lastName\": \"lname\",\r\n            \"emailAddress1\": \"dummy@mgmresorts.com\",\r\n            \"emailAddress2\": null,\r\n            \"hgpNo\": null,\r\n            \"swrrNo\": null,\r\n            \"phoneNumbers\": [\r\n                {\r\n                    \"type\": \"Mobile\",\r\n                    \"number\": \"7029138039\"\r\n                }\r\n            ],\r\n            \"addresses\": [\r\n                {\r\n                    \"type\": \"Home\",\r\n                    \"preferred\": false,\r\n                    \"street1\": \"5353 W Desert Inn\",\r\n                    \"street2\": null,\r\n                    \"city\": \"Las Vegas\",\r\n                    \"state\": \"NV\",\r\n                    \"country\": \"US\",\r\n                    \"postalCode\": \"89146\"\r\n                }\r\n            ]\r\n        },\r\n        \"billing\": [\r\n            {\r\n                \"payment\": {\r\n                    \"cardHolder\": \"first last\",\r\n                    \"firstName\": \"firstfirst\",\r\n                    \"lastName\": \"last\",\r\n                    \"ccToken\": \"4111110A001DQXFHY79D9XCZ1111\",\r\n                    \"maskedNumber\": \"XXXXXXXXXXXX1111\",\r\n                    \"cvv\": \"123\",\r\n                    \"type\": \"Visa\",\r\n                    \"expiry\": \"10/2022\",\r\n                    \"amount\": 266533.28\r\n                },\r\n                \"address\": {\r\n                    \"street1\": \"234 W Main St\",\r\n                    \"city\": \"Las Vegas\",\r\n                    \"state\": \"NV\",\r\n                    \"postalCode\": \"89129\",\r\n                    \"country\": \"US\"\r\n                }\r\n            }\r\n        ],\r\n        \"tripDetails\": {\r\n            \"checkInDate\": \"{{checkInDate_v2}}\",\r\n            \"checkOutDate\": \"{{checkOutDate_v2}}\",\r\n            \"numAdults\": 1,\r\n            \"numChildren\": 0,\r\n            \"numRooms\": 1\r\n        },\r\n        \"bookings\": [\r\n            {\r\n                \"date\": \"2021-09-11\",\r\n                \"basePrice\": 100014.99,\r\n                \"customerPrice\": 100014.99,\r\n                \"price\": 100014.99,\r\n                \"programIdIsRateTable\": false,\r\n                \"overridePrice\": -1,\r\n                \"overrideProgramIdIsRateTable\": false,\r\n                \"isComp\": false,\r\n                \"resortFeeIsSpecified\": false,\r\n                \"resortFee\": 0,\r\n                \"programId\": \"RPCD-v-PREVL-d-PROP-v-MV021\",\r\n                \"pricingRuleId\": \"fa1d4b3c-50bd-4fbf-8c9b-695c2c49f583\"\r\n            }\r\n        ],\r\n        \"chargesAndTaxes\": {\r\n            \"charges\": [\r\n                {\r\n                    \"date\": \"2021-01-11\",\r\n                    \"amount\": 100059.99,\r\n                    \"itemized\": [\r\n                        {\r\n                            \"itemType\": \"RoomCharge\",\r\n                            \"amount\": 100014.99,\r\n                            \"item\": \"Room Charge\"\r\n                        },\r\n                        {\r\n                            \"itemType\": \"ExtraGuestCharge\",\r\n                            \"amount\": 0,\r\n                            \"item\": \"Extra Guest Charge\"\r\n                        },\r\n                        {\r\n                            \"itemType\": \"ResortFee\",\r\n                            \"amount\": 45,\r\n                            \"item\": \"Resort Fee\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"taxesAndFees\": [\r\n                {\r\n                    \"date\": \"2021-01-11\",\r\n                    \"amount\": 13388.03,\r\n                    \"itemized\": [\r\n                        {\r\n                            \"itemType\": \"RoomChargeTax\",\r\n                            \"amount\": 13382.01,\r\n                            \"item\": \"Room Tax\"\r\n                        },\r\n                        {\r\n                            \"itemType\": \"ExtraGuestChargeTax\",\r\n                            \"amount\": 0,\r\n                            \"item\": \"Extra Guest Tax\"\r\n                        },\r\n                        {\r\n                            \"itemType\": \"ResortFeeTax\",\r\n                            \"amount\": 6.02,\r\n                            \"item\": \"Resort Fee Tax\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        \"depositDetails\": {\r\n            \"dueDate\": \"2021-01-11\",\r\n            \"amountPolicy\": \"Nights\",\r\n            \"amount\": 113397,\r\n            \"forfeitDate\": \"2021-01-08\",\r\n            \"forfeitAmount\": 113397,\r\n            \"overrideAmount\": -1,\r\n            \"depositRuleCode\": \"1NT\",\r\n            \"cancellationRuleCode\": \"72H\",\r\n            \"itemized\": [\r\n                {\r\n                    \"itemType\": \"RoomCharge\",\r\n                    \"amount\": 100014.99,\r\n                    \"item\": \"Room Charge\"\r\n                },\r\n                {\r\n                    \"itemType\": \"RoomChargeTax\",\r\n                    \"amount\": 13382.01,\r\n                    \"item\": \"Room Tax\"\r\n                }\r\n            ]\r\n        },\r\n        \"guaranteeCode\": \"CC\",\r\n        \"inAuthTransactionId\": \"jkjk\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/reservation"
							},
							"response": []
						},
						{
							"name": "Create Reservation V2 - OverridePrice",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 03 : Create Reservation with Profile, overridePrice Booking, TripDetails, Billing and AgentInfo\", function () {\r",
											"    pm.globals.set(\"variable_key\", \"variable_value\");  \r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"\r",
											"    var jsonData = JSON.parse(pm.response.stream);\r",
											"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
											"    pm.expect(null).not.eq(jsonData);\r",
											"    pm.expect(0).not.equal(jsonData.length);\r",
											"    pm.expect(null).not.eq(jsonData.booked);    \r",
											"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
											"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
											"    var reservationId = jsonData.roomReservation.id;\r",
											"    pm.expect(confirmationNumber).not.eq(null);\r",
											"    pm.expect(itineraryId).not.eq(null);\r",
											"    pm.expect(reservationId).not.eq(null);\r",
											"    postman.setEnvironmentVariable('bookedConfirmationNumber',  confirmationNumber);\r",
											"    postman.setEnvironmentVariable('bookedItineraryId',  itineraryId);\r",
											"    postman.setEnvironmentVariable('bookedReservationId',  reservationId);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"firstName = \"functionaltest\" + Math.random().toString(36).substring(5);",
											"postman.setEnvironmentVariable('firstName',  firstName);",
											"postman.setEnvironmentVariable('lastName',  \"pman\");",
											"",
											"phone = Math.floor(Math.random() * 9000000000) + 1000000000;",
											"postman.setEnvironmentVariable('phone',  phone);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-mgm-source",
										"value": "{{x-mgm-source}}",
										"type": "text"
									},
									{
										"key": "x-mgm-channel",
										"value": "{{x-mgm-channel}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{JWT_Token}}",
										"type": "text"
									},
									{
										"key": "x-mgm-transaction-id",
										"value": "rbs-v2-functional-{{$timestamp}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"roomReservation\": {\r\n        \"id\": \"752c359a-49ab-4b6a-b7b5-a68d77f23b9b\",\r\n        \"customerId\": \"11171332354\",\r\n        \"propertyId\": \"dc00e77f-d6bb-4dd7-a8ea-dc33ee9675ad\",\r\n        \"itineraryId\": \"6897908226\",\r\n        \"roomTypeId\": \"ROOMCD-v-DPRK-d-PROP-v-MV021\",\r\n        \"programId\": \"RPCD-v-PREVL-d-PROP-v-MV021\",\r\n        \"nrgStatus\": false,\r\n        \"profile\": {\r\n            \"id\": 156499970,\r\n            \"mlifeNo\": 79145357,\r\n            \"title\": \"Mr\",\r\n            \"dateOfBirth\": \"1960-07-27\",\r\n            \"operaId\": \"814787961\",\r\n            \"tier\": null,\r\n            \"firstName\": \"fname\",\r\n            \"lastName\": \"lname\",\r\n            \"emailAddress1\": \"dummy@mgmresorts.com\",\r\n            \"emailAddress2\": null,\r\n            \"hgpNo\": null,\r\n            \"swrrNo\": null,\r\n            \"phoneNumbers\": [\r\n                {\r\n                    \"type\": \"Mobile\",\r\n                    \"number\": \"7029138039\"\r\n                }\r\n            ],\r\n            \"addresses\": [\r\n                {\r\n                    \"type\": \"Home\",\r\n                    \"preferred\": false,\r\n                    \"street1\": \"5353 W Desert Inn\",\r\n                    \"street2\": null,\r\n                    \"city\": \"Las Vegas\",\r\n                    \"state\": \"NV\",\r\n                    \"country\": \"US\",\r\n                    \"postalCode\": \"89146\"\r\n                }\r\n            ]\r\n        },\r\n        \"billing\": [\r\n            {\r\n                \"payment\": {\r\n                    \"cardHolder\": \"first last\",\r\n                    \"firstName\": \"firstfirst\",\r\n                    \"lastName\": \"last\",\r\n                    \"ccToken\": \"4111110A001DQXFHY79D9XCZ1111\",\r\n                    \"maskedNumber\": \"XXXXXXXXXXXX1111\",\r\n                    \"cvv\": \"123\",\r\n                    \"type\": \"Visa\",\r\n                    \"expiry\": \"10/2022\",\r\n                    \"amount\": 266533.28\r\n                },\r\n                \"address\": {\r\n                    \"street1\": \"234 W Main St\",\r\n                    \"city\": \"Las Vegas\",\r\n                    \"state\": \"NV\",\r\n                    \"postalCode\": \"89129\",\r\n                    \"country\": \"US\"\r\n                }\r\n            }\r\n        ],\r\n        \"tripDetails\": {\r\n            \"checkInDate\": \"{{checkInDate_v2}}\",\r\n            \"checkOutDate\": \"{{checkOutDate_v2}}\",\r\n            \"numAdults\": 1,\r\n            \"numChildren\": 0,\r\n            \"numRooms\": 1\r\n        },\r\n        \"bookings\": [\r\n            {\r\n                \"date\": \"{{checkInDate_v2}}\",\r\n                \"basePrice\": 100014.99,\r\n                \"customerPrice\": 100014.99,\r\n                \"price\": 100014.99,\r\n                \"programIdIsRateTable\": false,\r\n                \"overridePrice\": 100020,\r\n                \"overrideProgramIdIsRateTable\": false,\r\n                \"isComp\": false,\r\n                \"resortFeeIsSpecified\": false,\r\n                \"resortFee\": 0,\r\n                \"programId\": \"RPCD-v-PREVL-d-PROP-v-MV021\",\r\n                \"pricingRuleId\": \"fa1d4b3c-50bd-4fbf-8c9b-695c2c49f583\"\r\n            }\r\n        ],\r\n        \"chargesAndTaxes\": {\r\n            \"charges\": [\r\n                {\r\n                    \"date\": \"2021-01-11\",\r\n                    \"amount\": 100059.99,\r\n                    \"itemized\": [\r\n                        {\r\n                            \"itemType\": \"RoomCharge\",\r\n                            \"amount\": 100014.99,\r\n                            \"item\": \"Room Charge\"\r\n                        },\r\n                        {\r\n                            \"itemType\": \"ExtraGuestCharge\",\r\n                            \"amount\": 0,\r\n                            \"item\": \"Extra Guest Charge\"\r\n                        },\r\n                        {\r\n                            \"itemType\": \"ResortFee\",\r\n                            \"amount\": 45,\r\n                            \"item\": \"Resort Fee\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"taxesAndFees\": [\r\n                {\r\n                    \"date\": \"2021-01-11\",\r\n                    \"amount\": 13388.03,\r\n                    \"itemized\": [\r\n                        {\r\n                            \"itemType\": \"RoomChargeTax\",\r\n                            \"amount\": 13382.01,\r\n                            \"item\": \"Room Tax\"\r\n                        },\r\n                        {\r\n                            \"itemType\": \"ExtraGuestChargeTax\",\r\n                            \"amount\": 0,\r\n                            \"item\": \"Extra Guest Tax\"\r\n                        },\r\n                        {\r\n                            \"itemType\": \"ResortFeeTax\",\r\n                            \"amount\": 6.02,\r\n                            \"item\": \"Resort Fee Tax\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        \"depositDetails\": {\r\n            \"dueDate\": \"2021-01-11\",\r\n            \"amountPolicy\": \"Nights\",\r\n            \"amount\": 113397,\r\n            \"forfeitDate\": \"2021-01-08\",\r\n            \"forfeitAmount\": 113397,\r\n            \"overrideAmount\": -1,\r\n            \"depositRuleCode\": \"1NT\",\r\n            \"cancellationRuleCode\": \"72H\",\r\n            \"itemized\": [\r\n                {\r\n                    \"itemType\": \"RoomCharge\",\r\n                    \"amount\": 100014.99,\r\n                    \"item\": \"Room Charge\"\r\n                },\r\n                {\r\n                    \"itemType\": \"RoomChargeTax\",\r\n                    \"amount\": 13382.01,\r\n                    \"item\": \"Room Tax\"\r\n                }\r\n            ]\r\n        },\r\n        \"guaranteeCode\": \"CC\",\r\n        \"inAuthTransactionId\": \"jkjk\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/reservation"
							},
							"response": []
						},
						{
							"name": "Create Reservation V2 - Invalid agent",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 04 : Create Reservation with Profile, TripDetails, Billing and invalid AgentInfo\", function () {\r",
											"\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"    pm.expect(pm.response.code).to.equal(400);\r",
											"\r",
											"    var jsonData = JSON.parse(pm.response.stream);\r",
											"    pm.expect(jsonData.error.message).to.equal(\"IATA code is not valid\");\r",
											"    pm.expect(jsonData.error.code).to.equal(\"632-1-112\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"firstName = \"functionaltest\" + Math.random().toString(36).substring(5);",
											"postman.setEnvironmentVariable('firstName',  firstName);",
											"postman.setEnvironmentVariable('lastName',  \"pman\");",
											"",
											"phone = Math.floor(Math.random() * 9000000000) + 1000000000;",
											"postman.setEnvironmentVariable('phone',  phone);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-mgm-source",
										"value": "{{x-mgm-source}}",
										"type": "text"
									},
									{
										"key": "x-mgm-channel",
										"value": "{{x-mgm-channel}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{JWT_Token}}",
										"type": "text"
									},
									{
										"key": "x-mgm-transaction-id",
										"value": "rbs-v2-functional-{{$timestamp}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"roomReservation\": {\r\n\t\t\"id\": \"752c359a-49ab-4b6a-b7b5-a68d77f23b9b\",\r\n\t\t\"customerId\": \"11171332354\",\r\n\t\t\"propertyId\": \"dc00e77f-d6bb-4dd7-a8ea-dc33ee9675ad\",\r\n\t\t\"itineraryId\": \"6897908226\",\r\n\t\t\"roomTypeId\": \"ROOMCD-v-DPRK-d-PROP-v-MV021\",\r\n        \"programId\": \"RPCD-v-PREVL-d-PROP-v-MV021\",\r\n\t\t\"nrgStatus\": false,\r\n\t\t\"profile\": {\r\n    \"id\": 156499970,\r\n    \"mlifeNo\": 79145357,\r\n    \"title\": \"Mr\",\r\n    \"dateOfBirth\": \"1960-07-27\",\r\n    \"operaId\": \"814787961\",\r\n    \"tier\": null,\r\n    \"firstName\": \"fname\",\r\n    \"lastName\": \"lname\",\r\n    \"emailAddress1\": \"dummy@mgmresorts.com\",\r\n    \"emailAddress2\": null,\r\n    \"hgpNo\": null,\r\n    \"swrrNo\": null,\r\n    \"phoneNumbers\": [\r\n      {\r\n        \"type\": \"Mobile\",\r\n        \"number\": \"7029138039\"\r\n      }\r\n    ],\r\n    \"addresses\": [\r\n      {\r\n        \"type\": \"Home\",\r\n        \"preferred\": false,\r\n        \"street1\": \"5353 W Desert Inn\",\r\n        \"street2\": null,\r\n        \"city\": \"Las Vegas\",\r\n        \"state\": \"NV\",\r\n        \"country\": \"US\",\r\n        \"postalCode\": \"89146\"\r\n      }\r\n    ]\r\n\t\t},\r\n\t\t\"billing\": [\r\n\t\t\t{\r\n\t\t\t\t\"payment\": {\r\n\t\t\t\t\t\"cardHolder\": \"first last\",\r\n\t\t\t\t\t\"firstName\": \"firstfirst\",\r\n\t\t\t\t\t\"lastName\": \"last\",\r\n\t\t\t\t\t\"ccToken\": \"4111110A001DQXFHY79D9XCZ1111\",\r\n\t\t\t\t\t\"maskedNumber\": \"XXXXXXXXXXXX1111\",\r\n\t\t\t\t\t\"cvv\": \"123\",\r\n\t\t\t\t\t\"type\": \"Visa\",\r\n\t\t\t\t\t\"expiry\": \"10/2022\",\r\n\t\t\t\t\t\"amount\": 266533.28\r\n\t\t\t\t},\r\n\t\t\t\t\"address\": {\r\n\t\t\t\t\t\"street1\": \"234 W Main St\",\r\n\t\t\t\t\t\"city\": \"Las Vegas\",\r\n\t\t\t\t\t\"state\": \"NV\",\r\n\t\t\t\t\t\"postalCode\": \"89129\",\r\n\t\t\t\t\t\"country\": \"US\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"tripDetails\": {\r\n            \"checkInDate\": \"{{checkInDate_v2}}\",\r\n            \"checkOutDate\": \"{{checkOutDate_v2}}\",\r\n\t\t\t\"numAdults\": 1,\r\n\t\t\t\"numChildren\": 0,\r\n\t\t\t\"numRooms\": 1\r\n\t\t},\r\n\t\t\"bookings\": [\r\n\t\t\t{\r\n\t\t\t\t\"date\": \"2021-01-11\",\r\n\t\t\t\t\"basePrice\": 100014.99,\r\n\t\t\t\t\"customerPrice\": 100014.99,\r\n\t\t\t\t\"price\": 100014.99,\r\n\t\t\t\t\"programIdIsRateTable\": false,\r\n\t\t\t\t\"overridePrice\": -1,\r\n\t\t\t\t\"overrideProgramIdIsRateTable\": false,\r\n\t\t\t\t\"isComp\": false,\r\n\t\t\t\t\"resortFeeIsSpecified\": false,\r\n\t\t\t\t\"resortFee\": 0,\r\n\t\t\t\t\"programId\": \"RPCD-v-PREVL-d-PROP-v-MV021\",\r\n\t\t\t\t\"pricingRuleId\": \"fa1d4b3c-50bd-4fbf-8c9b-695c2c49f583\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"chargesAndTaxes\": {\r\n\t\t\t\"charges\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"date\": \"2021-01-11\",\r\n\t\t\t\t\t\"amount\": 100059.99,\r\n\t\t\t\t\t\"itemized\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"itemType\": \"RoomCharge\",\r\n\t\t\t\t\t\t\t\"amount\": 100014.99,\r\n\t\t\t\t\t\t\t\"item\": \"Room Charge\"\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"itemType\": \"ExtraGuestCharge\",\r\n\t\t\t\t\t\t\t\"amount\": 0,\r\n\t\t\t\t\t\t\t\"item\": \"Extra Guest Charge\"\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"itemType\": \"ResortFee\",\r\n\t\t\t\t\t\t\t\"amount\": 45,\r\n\t\t\t\t\t\t\t\"item\": \"Resort Fee\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"taxesAndFees\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"date\": \"2021-01-11\",\r\n\t\t\t\t\t\"amount\": 13388.03,\r\n\t\t\t\t\t\"itemized\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"itemType\": \"RoomChargeTax\",\r\n\t\t\t\t\t\t\t\"amount\": 13382.01,\r\n\t\t\t\t\t\t\t\"item\": \"Room Tax\"\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"itemType\": \"ExtraGuestChargeTax\",\r\n\t\t\t\t\t\t\t\"amount\": 0,\r\n\t\t\t\t\t\t\t\"item\": \"Extra Guest Tax\"\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"itemType\": \"ResortFeeTax\",\r\n\t\t\t\t\t\t\t\"amount\": 6.02,\r\n\t\t\t\t\t\t\t\"item\": \"Resort Fee Tax\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t\"depositDetails\": {\r\n\t\t\t\"dueDate\": \"2021-01-11\",\r\n\t\t\t\"amountPolicy\": \"Nights\",\r\n\t\t\t\"amount\": 113397,\r\n\t\t\t\"forfeitDate\": \"2021-01-08\",\r\n\t\t\t\"forfeitAmount\": 113397,\r\n\t\t\t\"overrideAmount\": -1,\r\n\t\t\t\"depositRuleCode\": \"1NT\",\r\n\t\t\t\"cancellationRuleCode\": \"72H\",\r\n\t\t\t\"itemized\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"itemType\": \"RoomCharge\",\r\n\t\t\t\t\t\"amount\": 100014.99,\r\n\t\t\t\t\t\"item\": \"Room Charge\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"itemType\": \"RoomChargeTax\",\r\n\t\t\t\t\t\"amount\": 13382.01,\r\n\t\t\t\t\t\"item\": \"Room Tax\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t\"guaranteeCode\": \"CC\",\r\n        \"agentInfo\": {\r\n            \"agentId\": \"11A\",\r\n            \"agentType\": \"IATA\"\r\n        },\r\n\t\t\"inAuthTransactionId\": \"jkjk\"\r\n\t}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/reservation"
							},
							"response": []
						},
						{
							"name": "Party Reservation V2 - Success",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 01 : Create Party Reservation with Profile, Booking, TripDetails, Billing and AgentInfo\", function () {\r",
											"    pm.globals.set(\"variable_key\", \"variable_value\");  \r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"\r",
											"    var jsonData = JSON.parse(pm.response.stream);\r",
											"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
											"    pm.expect(null).not.eq(jsonData);\r",
											"    pm.expect(0).not.equal(jsonData.length);\r",
											"    pm.expect(2).equal(jsonData.roomReservations.length);\r",
											"    pm.expect(0).equal(jsonData.failedReservations.length);\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"firstName = \"functionaltest\" + Math.random().toString(36).substring(5);",
											"postman.setEnvironmentVariable('firstName',  firstName);",
											"postman.setEnvironmentVariable('lastName',  \"pman\");",
											"",
											"phone = Math.floor(Math.random() * 9000000000) + 1000000000;",
											"postman.setEnvironmentVariable('phone',  phone);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-mgm-source",
										"type": "text",
										"value": "{{x-mgm-source}}"
									},
									{
										"key": "x-mgm-channel",
										"type": "text",
										"value": "{{x-mgm-channel}}"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{JWT_Token}}"
									},
									{
										"key": "x-mgm-transaction-id",
										"type": "text",
										"value": "rbs-v2-functional-{{$timestamp}}"
									},
									{
										"key": "source",
										"value": "ice",
										"type": "text"
									},
									{
										"key": "channel",
										"value": "ice",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"splitCreditCardDetails\": false,\r\n    \"roomReservation\": {\r\n        \"nrgStatus\": false,\r\n        \"perpetualPricing\": false,\r\n        \"id\": \"27cbe758-0041-4dc7-8dad-c71bfaa18b34\",\r\n        \"propertyId\": \"dc00e77f-d6bb-4dd7-a8ea-dc33ee9675ad\",\r\n        \"itineraryId\": \"10163672065\",\r\n        \"roomTypeId\": \"ROOMCD-v-DPRK-d-PROP-v-MV021\",\r\n        \"operaState\": \"\",\r\n        \"customerId\": \"1024384761857\",\r\n        \"rrUpSell\": \"\",\r\n        \"confirmationNumber\": \"\",\r\n        \"operaConfirmationNumber\": \"\",\r\n        \"guaranteeCode\": \"CC\",\r\n        \"customerRank\": 0,\r\n        \"customerSegment\": 0,\r\n        \"amountDue\": 0.0,\r\n        \"additionalComments\": [],\r\n        \"specialRequests\": [],\r\n        \"bookings\": [\r\n            {\r\n                \"overrideProgramIdIsRateTable\": false,\r\n                \"resortFeeIsSpecified\": false,\r\n                \"programIdIsRateTable\": false,\r\n                \"customerPrice\": 0.0,\r\n                \"resortFee\": 0.0,\r\n                \"basePrice\": 437.97,\r\n                \"price\": 394.17,\r\n                \"overridePrice\": -1.0,\r\n                \"programId\": \"RPCD-v-PREVL-d-PROP-v-MV021\",\r\n                \"pricingRuleId\": null,\r\n                \"overrideProgramId\": null,\r\n                \"overridePricingRuleId\": null,\r\n                \"date\": \"2021-07-17\",\r\n                \"isComp\": false\r\n            }\r\n        ],\r\n        \"tripDetails\": {\r\n            \"numAdults\": 2,\r\n            \"numChildren\": 0,\r\n            \"checkInDate\": \"2021-09-17\",\r\n            \"checkOutDate\": \"2021-09-18\",\r\n            \"numRooms\": 2\r\n        },\r\n        \"profile\": {\r\n            \"id\": 1024384761857,\r\n            \"operaId\": null,\r\n            \"firstName\": \"Rajesh999\",\r\n            \"lastName\": \"Deshmukh\",\r\n            \"phoneNumbers\": [\r\n                {\r\n                    \"number\": \"7023593248\",\r\n                    \"type\": \"Home\"\r\n                }\r\n            ],\r\n            \"emailAddress1\": \"raj1010@mgmresorts.com\",\r\n            \"emailAddress2\": null,\r\n            \"dateOfBirth\": \"1973-01-01\",\r\n            \"hgpNo\": null,\r\n            \"swrrNo\": null,\r\n            \"addresses\": [\r\n                {\r\n                    \"preferred\": false,\r\n                    \"street1\": \"5353 W Desert Inn Road\",\r\n                    \"street2\": null,\r\n                    \"city\": \"Las Vegas\",\r\n                    \"state\": \"NV\",\r\n                    \"country\": \"US\",\r\n                    \"postalCode\": \"89146\",\r\n                    \"type\": \"Home\"\r\n                }\r\n            ],\r\n            \"title\": null,\r\n            \"mlifeNo\": 80570074\r\n        },\r\n        \"billing\": [\r\n            {\r\n                \"payment\": {\r\n                    \"cardHolder\": \"Saugata Moitra\",\r\n                    \"firstName\": \"Saugata\",\r\n                    \"lastName\": \"Moitra\",\r\n                    \"ccToken\": \"4111110A001DQXFHY79D9XCZ1111\",\r\n                    \"encryptedccToken\": \"5555550A0012ZTSHUFMXCCUW4444\",\r\n                    \"maskedNumber\": \"XXXXXXXXXXXXXXXXXXXXXXXX4444\",\r\n                    \"amount\": 7000,\r\n                    \"expiry\": \"01/2022\",\r\n                    \"type\": \"Diners Club\"\r\n                },\r\n                \"address\": {\r\n                    \"street1\": \"5353 W Desert Inn Road\",\r\n                    \"street2\": \"\",\r\n                    \"city\": \"Las Vegas\",\r\n                    \"state\": \"NV\",\r\n                    \"postalCode\": \"89146\",\r\n                    \"country\": \"US\"\r\n                }\r\n            }\r\n        ],\r\n        \"chargesAndTaxes\": {\r\n            \"charges\": [\r\n                {\r\n                    \"amount\": 505.17,\r\n                    \"date\": \"2021-03-17\",\r\n                    \"itemized\": [\r\n                        {\r\n                            \"active\": false,\r\n                            \"amount\": 394.17,\r\n                            \"item\": null,\r\n                            \"id\": null,\r\n                            \"shortDescription\": null,\r\n                            \"pricingApplied\": null,\r\n                            \"itemType\": \"RoomCharge\"\r\n                        },\r\n                        {\r\n                            \"active\": false,\r\n                            \"amount\": 111.0,\r\n                            \"item\": null,\r\n                            \"id\": null,\r\n                            \"shortDescription\": null,\r\n                            \"pricingApplied\": null,\r\n                            \"itemType\": \"ResortFee\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"taxesAndFees\": [\r\n                {\r\n                    \"amount\": 67.59,\r\n                    \"date\": \"2021-03-17\",\r\n                    \"itemized\": [\r\n                        {\r\n                            \"active\": false,\r\n                            \"amount\": 52.74,\r\n                            \"item\": null,\r\n                            \"id\": null,\r\n                            \"shortDescription\": null,\r\n                            \"pricingApplied\": null,\r\n                            \"itemType\": \"RoomChargeTax\"\r\n                        },\r\n                        {\r\n                            \"active\": false,\r\n                            \"amount\": 14.85,\r\n                            \"item\": null,\r\n                            \"id\": null,\r\n                            \"shortDescription\": null,\r\n                            \"pricingApplied\": null,\r\n                            \"itemType\": \"ResortFeeTax\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        \"depositDetails\": {\r\n            \"amount\": 1572.76,\r\n            \"forfeitAmount\": 572.76,\r\n            \"overrideAmount\": -1.0,\r\n            \"depositRuleCode\": null,\r\n            \"cancellationRuleCode\": null,\r\n            \"dueDate\": \"2021-03-15\",\r\n            \"forfeitDate\": \"2021-03-15\",\r\n            \"amountPolicy\": null,\r\n            \"itemized\": null\r\n        },\r\n        \"isGroupCode\": false\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/reservation/party"
							},
							"response": []
						},
						{
							"name": "Party Reservation V2 - Success Promo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 01 : Create Party Reservation with Profile, Booking, TripDetails, Billing and AgentInfo\", function () {\r",
											"    pm.globals.set(\"variable_key\", \"variable_value\");  \r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"\r",
											"    var jsonData = JSON.parse(pm.response.stream);\r",
											"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
											"    pm.expect(null).not.eq(jsonData);\r",
											"    pm.expect(0).not.equal(jsonData.length);\r",
											"    pm.expect(2).equal(jsonData.roomReservations.length);\r",
											"    pm.expect(0).equal(jsonData.failedReservations.length);\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"firstName = \"functionaltest\" + Math.random().toString(36).substring(5);",
											"postman.setEnvironmentVariable('firstName',  firstName);",
											"postman.setEnvironmentVariable('lastName',  \"pman\");",
											"",
											"phone = Math.floor(Math.random() * 9000000000) + 1000000000;",
											"postman.setEnvironmentVariable('phone',  phone);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-mgm-source",
										"type": "text",
										"value": "{{x-mgm-source}}"
									},
									{
										"key": "x-mgm-channel",
										"type": "text",
										"value": "{{x-mgm-channel}}"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{JWT_Token}}"
									},
									{
										"key": "x-mgm-transaction-id",
										"type": "text",
										"value": "rbs-v2-functional-{{$timestamp}}"
									},
									{
										"key": "source",
										"value": "ice",
										"type": "text"
									},
									{
										"key": "channel",
										"value": "ice",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"splitCreditCardDetails\": false,\r\n    \"roomReservation\": {\r\n        \"nrgStatus\": false,\r\n        \"perpetualPricing\": false,\r\n        \"id\": \"27cbe758-0041-4dc7-8dad-c71bfaa18b34\",\r\n        \"propertyId\": \"dc00e77f-d6bb-4dd7-a8ea-dc33ee9675ad\",\r\n        \"promo\": \"ZNVLCLS\",\r\n        \"itineraryId\": \"10163672065\",\r\n        \"roomTypeId\": \"ROOMCD-v-DMAD-d-PROP-v-MV021\",\r\n        \"operaState\": \"\",\r\n        \"customerId\": \"1024384761857\",\r\n        \"rrUpSell\": \"\",\r\n        \"confirmationNumber\": \"\",\r\n        \"operaConfirmationNumber\": \"\",\r\n        \"guaranteeCode\": \"CC\",\r\n        \"customerRank\": 0,\r\n        \"customerSegment\": 0,\r\n        \"amountDue\": 0.0,\r\n        \"additionalComments\": [],\r\n        \"specialRequests\": [],\r\n        \"bookings\": [\r\n            {\r\n                \"overrideProgramIdIsRateTable\": false,\r\n                \"resortFeeIsSpecified\": false,\r\n                \"programIdIsRateTable\": false,\r\n                \"customerPrice\": 0.0,\r\n                \"resortFee\": 0.0,\r\n                \"basePrice\": 437.97,\r\n                \"price\": 394.17,\r\n                \"overridePrice\": -1.0,\r\n                \"programId\": \"RPCD-v-AAA10-d-PROP-v-MV021\",\r\n                \"pricingRuleId\": null,\r\n                \"overrideProgramId\": null,\r\n                \"overridePricingRuleId\": null,\r\n                \"date\": \"2021-07-17\",\r\n                \"isComp\": false\r\n            }\r\n        ],\r\n        \"tripDetails\": {\r\n            \"numAdults\": 2,\r\n            \"numChildren\": 0,\r\n            \"checkInDate\": \"2021-09-17\",\r\n            \"checkOutDate\": \"2021-09-18\",\r\n            \"numRooms\": 2\r\n        },\r\n        \"profile\": {\r\n            \"id\": 1024384761857,\r\n            \"operaId\": null,\r\n            \"firstName\": \"Rajesh999\",\r\n            \"lastName\": \"Deshmukh\",\r\n            \"phoneNumbers\": [\r\n                {\r\n                    \"number\": \"7023593248\",\r\n                    \"type\": \"Home\"\r\n                }\r\n            ],\r\n            \"emailAddress1\": \"raj1010@mgmresorts.com\",\r\n            \"emailAddress2\": null,\r\n            \"dateOfBirth\": \"1973-01-01\",\r\n            \"hgpNo\": null,\r\n            \"swrrNo\": null,\r\n            \"addresses\": [\r\n                {\r\n                    \"preferred\": false,\r\n                    \"street1\": \"5353 W Desert Inn Road\",\r\n                    \"street2\": null,\r\n                    \"city\": \"Las Vegas\",\r\n                    \"state\": \"NV\",\r\n                    \"country\": \"US\",\r\n                    \"postalCode\": \"89146\",\r\n                    \"type\": \"Home\"\r\n                }\r\n            ],\r\n            \"title\": null,\r\n            \"mlifeNo\": 80570074\r\n        },\r\n        \"billing\": [\r\n            {\r\n                \"payment\": {\r\n                    \"cardHolder\": \"Saugata Moitra\",\r\n                    \"firstName\": \"Saugata\",\r\n                    \"lastName\": \"Moitra\",\r\n                    \"ccToken\": \"4111110A001DQXFHY79D9XCZ1111\",\r\n                    \"encryptedccToken\": \"5555550A0012ZTSHUFMXCCUW4444\",\r\n                    \"maskedNumber\": \"XXXXXXXXXXXXXXXXXXXXXXXX4444\",\r\n                    \"amount\": 7000,\r\n                    \"expiry\": \"01/2022\",\r\n                    \"type\": \"Diners Club\"\r\n                },\r\n                \"address\": {\r\n                    \"street1\": \"5353 W Desert Inn Road\",\r\n                    \"street2\": \"\",\r\n                    \"city\": \"Las Vegas\",\r\n                    \"state\": \"NV\",\r\n                    \"postalCode\": \"89146\",\r\n                    \"country\": \"US\"\r\n                }\r\n            }\r\n        ],\r\n        \"chargesAndTaxes\": {\r\n            \"charges\": [\r\n                {\r\n                    \"amount\": 505.17,\r\n                    \"date\": \"2021-03-17\",\r\n                    \"itemized\": [\r\n                        {\r\n                            \"active\": false,\r\n                            \"amount\": 394.17,\r\n                            \"item\": null,\r\n                            \"id\": null,\r\n                            \"shortDescription\": null,\r\n                            \"pricingApplied\": null,\r\n                            \"itemType\": \"RoomCharge\"\r\n                        },\r\n                        {\r\n                            \"active\": false,\r\n                            \"amount\": 111.0,\r\n                            \"item\": null,\r\n                            \"id\": null,\r\n                            \"shortDescription\": null,\r\n                            \"pricingApplied\": null,\r\n                            \"itemType\": \"ResortFee\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"taxesAndFees\": [\r\n                {\r\n                    \"amount\": 67.59,\r\n                    \"date\": \"2021-03-17\",\r\n                    \"itemized\": [\r\n                        {\r\n                            \"active\": false,\r\n                            \"amount\": 52.74,\r\n                            \"item\": null,\r\n                            \"id\": null,\r\n                            \"shortDescription\": null,\r\n                            \"pricingApplied\": null,\r\n                            \"itemType\": \"RoomChargeTax\"\r\n                        },\r\n                        {\r\n                            \"active\": false,\r\n                            \"amount\": 14.85,\r\n                            \"item\": null,\r\n                            \"id\": null,\r\n                            \"shortDescription\": null,\r\n                            \"pricingApplied\": null,\r\n                            \"itemType\": \"ResortFeeTax\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        \"depositDetails\": {\r\n            \"amount\": 1572.76,\r\n            \"forfeitAmount\": 572.76,\r\n            \"overrideAmount\": -1.0,\r\n            \"depositRuleCode\": null,\r\n            \"cancellationRuleCode\": null,\r\n            \"dueDate\": \"2021-03-15\",\r\n            \"forfeitDate\": \"2021-03-15\",\r\n            \"amountPolicy\": null,\r\n            \"itemized\": null\r\n        },\r\n        \"isGroupCode\": false\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/reservation/party"
							},
							"response": []
						},
						{
							"name": "Create SPL REQ Reservation V2 - Success",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 06 : Create Reservation with Profile, Booking, TripDetails, Billing and spl request\", function () {\r",
											"    pm.globals.set(\"variable_key\", \"variable_value\");  \r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"\r",
											"    var jsonData = JSON.parse(pm.response.stream);\r",
											"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
											"    pm.expect(null).not.eq(jsonData);\r",
											"    pm.expect(0).not.equal(jsonData.length);\r",
											"    pm.expect(null).not.eq(jsonData.booked);    \r",
											"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
											"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
											"    var reservationId = jsonData.roomReservation.id;\r",
											"    pm.expect(confirmationNumber).not.eq(null);\r",
											"    pm.expect(itineraryId).not.eq(null);\r",
											"    pm.expect(reservationId).not.eq(null);\r",
											"    postman.setEnvironmentVariable('bookedConfirmationNumber',  confirmationNumber);\r",
											"    postman.setEnvironmentVariable('bookedItineraryId',  itineraryId);\r",
											"    postman.setEnvironmentVariable('bookedReservationId',  reservationId);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"firstName = \"functionaltest\" + Math.random().toString(36).substring(5);",
											"postman.setEnvironmentVariable('firstName',  firstName);",
											"postman.setEnvironmentVariable('lastName',  \"pman\");",
											"",
											"phone = Math.floor(Math.random() * 9000000000) + 1000000000;",
											"postman.setEnvironmentVariable('phone',  phone);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "source",
										"type": "text",
										"value": "{{x-mgm-source}}"
									},
									{
										"key": "x-api-key",
										"type": "text",
										"value": "{{api_key}}"
									},
									{
										"key": "x-state-token",
										"type": "text",
										"value": "{{x-state-token}}"
									},
									{
										"key": "channel",
										"type": "text",
										"value": "{{x-mgm-channel}}"
									},
									{
										"key": "Authorization",
										"value": "{{JWT_Token}}",
										"type": "text"
									},
									{
										"key": "x-mgm-transaction-id",
										"value": "rbs-v2-functional-{{$timestamp}}",
										"type": "text"
									},
									{
										"key": "x-mgm-channel",
										"value": "DMPWB",
										"type": "text"
									},
									{
										"key": "x-mgm-source",
										"value": "{{x-mgm-source}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"roomReservation\": {\r\n        \"id\": \"752c359a-49ab-4b6a-b7b5-a68d77f23b9b\",\r\n        \"customerId\": \"11171332354\",\r\n        \"propertyId\": \"dc00e77f-d6bb-4dd7-a8ea-dc33ee9675ad\",\r\n        \"itineraryId\": \"6897908226\",\r\n        \"roomTypeId\": \"ROOMCD-v-DPRK-d-PROP-v-MV021\",\r\n        \"programId\": \"RPCD-v-PREVL-d-PROP-v-MV021\",\r\n        \"state\": \"Booked\",\r\n        \"nrgStatus\": false,\r\n        \"specialRequests\": [\r\n            \"COMPONENTCD~DINN--NRPCD~NONE--TYP~SPECIAL-REQUEST--PROP~40b61feb-750a-45df-ae68-e23e6272b16b\",\r\n            \"COMPONENTCD~BUFDAY--NRPCD~RP002--TYP~COMPONENT--PROP~dc00e77f-d6bb-4dd7-a8ea-dc33ee9675ad\"\r\n        ],\r\n        \"profile\": {\r\n            \"id\": 156499970,\r\n            \"mlifeNo\": 79145357,\r\n            \"title\": \"Mr\",\r\n            \"dateOfBirth\": \"1960-07-27\",\r\n            \"operaId\": \"814787961\",\r\n            \"tier\": null,\r\n            \"firstName\": \"fname\",\r\n            \"lastName\": \"lname\",\r\n            \"emailAddress1\": \"dummy@mgmresorts.com\",\r\n            \"emailAddress2\": null,\r\n            \"hgpNo\": null,\r\n            \"swrrNo\": null,\r\n            \"phoneNumbers\": [\r\n                {\r\n                    \"type\": \"Mobile\",\r\n                    \"number\": \"7029138039\"\r\n                }\r\n            ],\r\n            \"addresses\": [\r\n                {\r\n                    \"type\": \"Home\",\r\n                    \"preferred\": false,\r\n                    \"street1\": \"5353 W Desert Inn\",\r\n                    \"street2\": null,\r\n                    \"city\": \"Las Vegas\",\r\n                    \"state\": \"NV\",\r\n                    \"country\": \"US\",\r\n                    \"postalCode\": \"89146\"\r\n                }\r\n            ]\r\n        },\r\n        \"billing\": [\r\n            {\r\n                \"payment\": {\r\n                    \"cardHolder\": \"first last\",\r\n                    \"firstName\": \"firstfirst\",\r\n                    \"lastName\": \"last\",\r\n                    \"ccToken\": \"4111110A001DQXFHY79D9XCZ1111\",\r\n                    \"maskedNumber\": \"XXXXXXXXXXXX1111\",\r\n                    \"cvv\": \"123\",\r\n                    \"type\": \"Visa\",\r\n                    \"expiry\": \"10/2022\",\r\n                    \"amount\": 266533.28\r\n                },\r\n                \"address\": {\r\n                    \"street1\": \"234 W Main St\",\r\n                    \"city\": \"Las Vegas\",\r\n                    \"state\": \"NV\",\r\n                    \"postalCode\": \"89129\",\r\n                    \"country\": \"US\"\r\n                }\r\n            }\r\n        ],\r\n        \"tripDetails\": {\r\n            \"checkInDate\": \"{{checkInDate_v2}}\",\r\n            \"checkOutDate\": \"{{checkOutDate_v2}}\",\r\n            \"numAdults\": 1,\r\n            \"numChildren\": 0,\r\n            \"numRooms\": 1\r\n        },\r\n        \"bookings\": [\r\n            {\r\n                \"date\": \"2021-09-11\",\r\n                \"basePrice\": 100014.99,\r\n                \"customerPrice\": 100014.99,\r\n                \"price\": 100014.99,\r\n                \"programIdIsRateTable\": false,\r\n                \"overridePrice\": -1,\r\n                \"overrideProgramIdIsRateTable\": false,\r\n                \"isComp\": false,\r\n                \"resortFeeIsSpecified\": false,\r\n                \"resortFee\": 0,\r\n                \"programId\": \"RPCD-v-PREVL-d-PROP-v-MV021\",\r\n                \"pricingRuleId\": \"fa1d4b3c-50bd-4fbf-8c9b-695c2c49f583\"\r\n            }\r\n        ],\r\n        \"chargesAndTaxes\": {\r\n            \"charges\": [\r\n                {\r\n                    \"date\": \"2021-01-11\",\r\n                    \"amount\": 100059.99,\r\n                    \"itemized\": [\r\n                        {\r\n                            \"itemType\": \"RoomCharge\",\r\n                            \"amount\": 100014.99,\r\n                            \"item\": \"Room Charge\"\r\n                        },\r\n                        {\r\n                            \"itemType\": \"ExtraGuestCharge\",\r\n                            \"amount\": 0,\r\n                            \"item\": \"Extra Guest Charge\"\r\n                        },\r\n                        {\r\n                            \"itemType\": \"ResortFee\",\r\n                            \"amount\": 45,\r\n                            \"item\": \"Resort Fee\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"taxesAndFees\": [\r\n                {\r\n                    \"date\": \"2021-01-11\",\r\n                    \"amount\": 13388.03,\r\n                    \"itemized\": [\r\n                        {\r\n                            \"itemType\": \"RoomChargeTax\",\r\n                            \"amount\": 13382.01,\r\n                            \"item\": \"Room Tax\"\r\n                        },\r\n                        {\r\n                            \"itemType\": \"ExtraGuestChargeTax\",\r\n                            \"amount\": 0,\r\n                            \"item\": \"Extra Guest Tax\"\r\n                        },\r\n                        {\r\n                            \"itemType\": \"ResortFeeTax\",\r\n                            \"amount\": 6.02,\r\n                            \"item\": \"Resort Fee Tax\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        \"depositDetails\": {\r\n            \"dueDate\": \"2021-01-11\",\r\n            \"amountPolicy\": \"Nights\",\r\n            \"amount\": 113397,\r\n            \"forfeitDate\": \"2021-01-08\",\r\n            \"forfeitAmount\": 113397,\r\n            \"overrideAmount\": -1,\r\n            \"depositRuleCode\": \"1NT\",\r\n            \"cancellationRuleCode\": \"72H\",\r\n            \"itemized\": [\r\n                {\r\n                    \"itemType\": \"RoomCharge\",\r\n                    \"amount\": 100014.99,\r\n                    \"item\": \"Room Charge\"\r\n                },\r\n                {\r\n                    \"itemType\": \"RoomChargeTax\",\r\n                    \"amount\": 13382.01,\r\n                    \"item\": \"Room Tax\"\r\n                }\r\n            ]\r\n        },\r\n        \"guaranteeCode\": \"CC\",\r\n        \"agentInfo\": {\r\n            \"agentId\": \"{{validIataCode}}\",\r\n            \"agentType\": \"IATA\"\r\n        },\r\n        \"inAuthTransactionId\": \"jkjk\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/reservation"
							},
							"response": []
						},
						{
							"name": "Create Reservation V2- PO- Success",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 07 : Create Reservation -PO\", function () {\r",
											"    pm.globals.set(\"variable_key\", \"variable_value\");  \r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"\r",
											"    var jsonData = JSON.parse(pm.response.stream);\r",
											"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
											"    pm.expect(null).not.eq(jsonData);\r",
											"    pm.expect(0).not.equal(jsonData.length);\r",
											"    pm.expect(null).not.eq(jsonData.booked);    \r",
											"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
											"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
											"    var reservationId = jsonData.roomReservation.id;\r",
											"    pm.expect(confirmationNumber).not.eq(null);\r",
											"    pm.expect(itineraryId).not.eq(null);\r",
											"    pm.expect(reservationId).not.eq(null);\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"firstName = \"functionaltest\" + Math.random().toString(36).substring(5);",
											"postman.setEnvironmentVariable('firstName',  firstName);",
											"postman.setEnvironmentVariable('lastName',  \"pman\");",
											"",
											"phone = Math.floor(Math.random() * 9000000000) + 1000000000;",
											"postman.setEnvironmentVariable('phone',  phone);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "source",
										"type": "text",
										"value": "{{x-mgm-source}}"
									},
									{
										"key": "x-api-key",
										"type": "text",
										"value": "{{api_key}}"
									},
									{
										"key": "x-state-token",
										"type": "text",
										"value": "{{x-state-token}}"
									},
									{
										"key": "channel",
										"type": "text",
										"value": "{{x-mgm-channel}}"
									},
									{
										"key": "Authorization",
										"value": "{{JWT_Token}}",
										"type": "text"
									},
									{
										"key": "x-mgm-transaction-id",
										"value": "rbs-v2-functional-{{$timestamp}}",
										"type": "text"
									},
									{
										"key": "x-mgm-channel",
										"value": "DMPWB",
										"type": "text"
									},
									{
										"key": "x-mgm-source",
										"value": "{{x-mgm-source}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"roomReservation\": {\r\n        \"nrgStatus\": false,\r\n        \"id\": \"35131669-7344-4d8b-aadf-f447e77d24b2\",\r\n        \"propertyId\": \"dc00e77f-d6bb-4dd7-a8ea-dc33ee9675ad\",\r\n        \"itineraryId\": \"7621739521\",\r\n        \"roomTypeId\": \"ROOMCD-v-DPRK-d-PROP-v-MV021\",\r\n        \"programId\": \"RPCD-v-PREVL-d-PROP-v-MV021\",\r\n        \"operaState\": \"\",\r\n        \"customerId\": \"905143714049\",\r\n        \"perpetualPricing\": true,\r\n        \"rrUpsell\": \"\",\r\n        \"confirmationNumber\": \"\",\r\n        \"operaConfirmationNumber\": \"\",\r\n        \"guaranteeCode\": \"CC\",\r\n        \"customerRank\": 0,\r\n        \"customerSegment\": 0,\r\n        \"amountDue\": 0.0,\r\n        \"additionalComments\": [],\r\n        \"specialRequests\": [],\r\n        \"bookings\": [\r\n            {\r\n                \"overrideProgramIdIsRateTable\": false,\r\n                \"resortFeeIsSpecified\": false,\r\n                \"programIdIsRateTable\": false,\r\n                \"customerPrice\": 0.0,\r\n                \"resortFee\": 0.0,\r\n                \"basePrice\": 0.0,\r\n                \"price\": 99.0,\r\n                \"overridePrice\": -1.0,\r\n                \"programId\": \"RPCD-v-PREVL-d-PROP-v-MV021\",\r\n                \"pricingRuleId\": null,\r\n                \"overrideProgramId\": null,\r\n                \"overridePricingRuleId\": null,\r\n                \"date\": \"2021-09-29\",\r\n                \"isComp\": false\r\n            },\r\n            {\r\n                \"overrideProgramIdIsRateTable\": false,\r\n                \"resortFeeIsSpecified\": false,\r\n                \"programIdIsRateTable\": false,\r\n                \"customerPrice\": 0.0,\r\n                \"resortFee\": 0.0,\r\n                \"basePrice\": 0.0,\r\n                \"price\": 99.0,\r\n                \"overridePrice\": -1.0,\r\n                \"programId\": \"RPCD-v-PREVL-d-PROP-v-MV021\",\r\n                \"pricingRuleId\": null,\r\n                \"overrideProgramId\": null,\r\n                \"overridePricingRuleId\": null,\r\n                \"date\": \"2021-09-30\",\r\n                \"isComp\": false\r\n            }\r\n        ],\r\n        \"tripDetails\": {\r\n            \"numAdults\": 2,\r\n            \"numChildren\": 0,\r\n            \"checkInDate\": \"2021-09-29\",\r\n            \"checkOutDate\": \"2021-09-31\",\r\n            \"numRooms\": 1\r\n        },\r\n        \"profile\": {\r\n            \"id\": 905143714049,\r\n            \"operaId\": null,\r\n            \"firstName\": \"8b79cffd8b5a6\",\r\n            \"lastName\": \"Dd543ac4a36fe\",\r\n            \"phoneNumbers\": [\r\n                {\r\n                    \"number\": \"7069585940\",\r\n                    \"type\": \"Home\"\r\n                }\r\n            ],\r\n            \"emailAddress1\": \"a281fcbfe629ff3@mgmqa.com\",\r\n            \"emailAddress2\": null,\r\n            \"dateOfBirth\": \"1980-06-11\",\r\n            \"hgpNo\": null,\r\n            \"swrrNo\": null,\r\n            \"addresses\": [\r\n                {\r\n                    \"preferred\": false,\r\n                    \"street1\": \"1837 Butter St\",\r\n                    \"street2\": null,\r\n                    \"city\": \"Las Vegas\",\r\n                    \"state\": \"NV\",\r\n                    \"country\": \"US\",\r\n                    \"postalCode\": \"89115\",\r\n                    \"type\": \"Home\"\r\n                }\r\n            ],\r\n            \"title\": null,\r\n            \"mlifeNo\": 80662215\r\n        },\r\n        \"billing\": [\r\n            {\r\n                \"payment\": {\r\n                    \"cardHolder\": \"Saugata Moitra\",\r\n                    \"firstName\": \"Saugata\",\r\n                    \"lastName\": \"Moitra\",\r\n                    \"ccToken\": \"4111110A001DQXFHY79D9XCZ1111\",\r\n                    \"encryptedccToken\": \"5555550A0012ZTSHUFMXCCUW4444\",\r\n                    \"maskedNumber\": \"XXXXXXXXXXXXXXXXXXXXXXXX4444\",\r\n                    \"amount\": 10,\r\n                    \"expiry\": \"01/2022\",\r\n                    \"type\": \"Diners Club\"\r\n                },\r\n                \"address\": {\r\n                    \"street1\": \"5353 W Desert Inn\",\r\n                    \"street2\": null,\r\n                    \"city\": \"Las Vegas\",\r\n                    \"state\": \"NV\",\r\n                    \"postalCode\": \"89146\",\r\n                    \"country\": \"US\"\r\n                }\r\n            },\r\n            {\r\n                \"payment\": {\r\n                    \"cardHolder\": \"first last\",\r\n                    \"firstName\": \"firstfirst\",\r\n                    \"lastName\": \"last\",\r\n                    \"ccToken\": \"4111110A001DQXFHY79D9XCZ1111\",\r\n                    \"maskedNumber\": \"XXXXXXXXXXXX1111\",\r\n                    \"cvv\": \"123\",\r\n                    \"type\": \"Visa\",\r\n                    \"expiry\": \"10/2022\",\r\n                    \"amount\": 2108.62\r\n                },\r\n                \"address\": {\r\n                    \"street1\": \"--REDACTED--\",\r\n                    \"street2\": \"--REDACTED--\",\r\n                    \"city\": \"Henderson\",\r\n                    \"state\": \"NV\",\r\n                    \"postalCode\": \"89118\",\r\n                    \"country\": \"US\"\r\n                }\r\n            }\r\n        ],\r\n        \"chargesAndTaxes\": {\r\n            \"charges\": [\r\n                {\r\n                    \"amount\": 136.0,\r\n                    \"date\": \"2021-01-29\",\r\n                    \"itemized\": [\r\n                        {\r\n                            \"amount\": 99.0,\r\n                            \"item\": null,\r\n                            \"itemType\": \"RoomCharge\"\r\n                        },\r\n                        {\r\n                            \"amount\": 37.0,\r\n                            \"item\": null,\r\n                            \"itemType\": \"ResortFee\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"amount\": 136.0,\r\n                    \"date\": \"2021-01-30\",\r\n                    \"itemized\": [\r\n                        {\r\n                            \"amount\": 99.0,\r\n                            \"item\": null,\r\n                            \"itemType\": \"RoomCharge\"\r\n                        },\r\n                        {\r\n                            \"amount\": 37.0,\r\n                            \"item\": null,\r\n                            \"itemType\": \"ResortFee\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"taxesAndFees\": [\r\n                {\r\n                    \"amount\": 18.2,\r\n                    \"date\": \"2021-01-29\",\r\n                    \"itemized\": [\r\n                        {\r\n                            \"amount\": 13.24,\r\n                            \"item\": null,\r\n                            \"itemType\": \"RoomChargeTax\"\r\n                        },\r\n                        {\r\n                            \"amount\": 4.95,\r\n                            \"item\": null,\r\n                            \"itemType\": \"ResortFeeTax\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"amount\": 18.2,\r\n                    \"date\": \"2021-01-30\",\r\n                    \"itemized\": [\r\n                        {\r\n                            \"amount\": 13.24,\r\n                            \"item\": null,\r\n                            \"itemType\": \"RoomChargeTax\"\r\n                        },\r\n                        {\r\n                            \"amount\": 4.95,\r\n                            \"item\": null,\r\n                            \"itemType\": \"ResortFeeTax\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        \"depositDetails\": {\r\n            \"amount\": 172.39,\r\n            \"forfeitAmount\": 172.39,\r\n            \"overrideAmount\": -1.0,\r\n            \"depositRuleCode\": null,\r\n            \"cancellationRuleCode\": null,\r\n            \"dueDate\": \"2020-12-27\",\r\n            \"forfeitDate\": \"2021-01-25\",\r\n            \"amountPolicy\": null,\r\n            \"itemized\": null\r\n        },\r\n        \"isGroupCode\": false\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/reservation"
							},
							"response": []
						}
					]
				},
				{
					"name": "Reservation Modify",
					"item": [
						{
							"name": "preModifyRoomCharges",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 01 : PreModify Reservation with Profile, Booking, TripDetails, Billing and AgentInfo\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"\r",
											"    var jsonData = JSON.parse(pm.response.stream);\r",
											"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
											"    pm.expect(null).not.eq(jsonData);\r",
											"    pm.expect(0).not.equal(jsonData.length);\r",
											"    var value = pm.variables.get(\"validConfirmationNumber\");\r",
											"    pm.expect(value).eq(jsonData.confirmationNumber);\r",
											"    pm.globals.set(\"validItemId\", jsonData.itemId);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"\r",
											"preModifyCheckInDate = moment(pm.variables.get(\"checkInDate\")).format('YYYY-MM-DD');\r",
											"preModifyCheckOutDate = moment(pm.variables.get(\"checkOutDate\")).format('YYYY-MM-DD');\r",
											"\r",
											"postman.setEnvironmentVariable('preModifyCheckInDate',  preModifyCheckInDate);\r",
											"postman.setEnvironmentVariable('preModifyCheckOutDate',  preModifyCheckOutDate);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "x-mgm-source",
										"value": "{{x-mgm-source}}",
										"type": "text"
									},
									{
										"key": "x-mgm-channel",
										"value": "{{x-mgm-channel}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{JWT_Token}}",
										"type": "text"
									},
									{
										"key": "x-mgm-transaction-id",
										"value": "rbs-v2-functional-{{$timestamp}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"propertyId\": \"dc00e77f-d6bb-4dd7-a8ea-dc33ee9675ad\",\r\n    \"roomTypeId\": \"ROOMCD-v-DPRK-d-PROP-v-MV021\",\r\n    \"programId\": \"RPCD-v-PREVL-d-PROP-v-MV021\",\r\n    \"confirmationNumber\": {{validConfirmationNumber}},\r\n    \"customerId\": \"11171332354\",\r\n    \"upgradeRoomTypeId\": \"TEST\",\r\n    \"specialRequests\": [],\r\n    \"partyConfirmationNumber\": \"\",\r\n    \"comments\": \"custom comments\",\r\n    \"additionalComments\": [\r\n        \"add 1\",\r\n        \"add 2\"\r\n    ],\r\n    \"profile\": {\r\n        \"id\": 11171332354,\r\n        \"operaId\": null,\r\n        \"firstName\": \"Mike\",\r\n        \"lastName\": \"Hedden\",\r\n        \"phoneNumbers\": [\r\n            {\r\n                \"number\": \"7099087654\",\r\n                \"type\": \"Home\"\r\n            }\r\n        ],\r\n        \"emailAddress1\": \"abasu@gmail.com\",\r\n        \"emailAddress2\": null,\r\n        \"dateOfBirth\": \"0002-11-28\",\r\n        \"hgpNo\": null,\r\n        \"swrrNo\": null,\r\n        \"addresses\": [\r\n            {\r\n                \"preferred\": false,\r\n                \"street1\": \"123 Main St\",\r\n                \"street2\": null,\r\n                \"city\": \"Las Vegas\",\r\n                \"state\": \"NV\",\r\n                \"country\": \"US\",\r\n                \"postalCode\": \"89118\",\r\n                \"type\": \"Home\"\r\n            }\r\n        ],\r\n        \"mlifeNo\": 123456\r\n    },\r\n    \"bookings\": [\r\n        {\r\n            \"overrideProgramIdIsRateTable\": false,\r\n            \"resortFeeIsSpecified\": false,\r\n            \"programIdIsRateTable\": false,\r\n            \"customerPrice\": 0.0,\r\n            \"resortFee\": 0.0,\r\n            \"basePrice\": 0.0,\r\n            \"price\": 159.0,\r\n            \"overridePrice\": 100.0,\r\n            \"programId\": \"RPCD-v-PREVL-d-PROP-v-MV021\",\r\n            \"pricingRuleId\": null,\r\n            \"overrideProgramId\": null,\r\n            \"overridePricingRuleId\": null,\r\n            \"date\": \"2021-10-05\",\r\n            \"isComp\": false\r\n        },\r\n        {\r\n            \"overrideProgramIdIsRateTable\": false,\r\n            \"resortFeeIsSpecified\": false,\r\n            \"programIdIsRateTable\": false,\r\n            \"customerPrice\": 0.0,\r\n            \"resortFee\": 0.0,\r\n            \"basePrice\": 0.0,\r\n            \"price\": 159.0,\r\n            \"overridePrice\": 100.0,\r\n            \"programId\": \"RPCD-v-PREVL-d-PROP-v-MV021\",\r\n            \"pricingRuleId\": null,\r\n            \"overrideProgramId\": null,\r\n            \"overridePricingRuleId\": null,\r\n            \"date\": \"2021-10-06\",\r\n            \"isComp\": false\r\n        }\r\n    ],\r\n    \"tripDetails\": {\r\n        \"numAdults\": 2,\r\n        \"numChildren\": 0,\r\n        \"checkInDate\": \"{{checkInDate_v2}}\",\r\n        \"checkOutDate\": \"{{checkOutDate_v2}}\",\r\n        \"numRooms\": 1\r\n    },\r\n    \"billing\": [\r\n        {\r\n            \"payment\": {\r\n                \"amount\": 248.45,\r\n                \"fxAmount\": 0.0,\r\n                \"fxExchangeRate\": 0.0,\r\n                \"cardHolder\": \"Mike Hedden\",\r\n                \"maskedNumber\": null,\r\n                \"fxCurrencyISOCode\": null,\r\n                \"fxCurrencyCode\": null,\r\n                \"fxFlag\": null,\r\n                \"cvv\": \"111\",\r\n                \"type\": \"Diners Club\",\r\n                \"ccToken\": \"5555550A00119KELHS2JOTWZ4444\",\r\n                \"firstName\": \"Mike\",\r\n                \"lastName\": \"Hedden\",\r\n                \"expiry\": \"11/2021\"\r\n            },\r\n            \"address\": {\r\n                \"street1\": \"123 Main St\",\r\n                \"street2\": \"\",\r\n                \"city\": \"Las Vegas\",\r\n                \"state\": \"NV\",\r\n                \"postalCode\": \"89118\",\r\n                \"country\": \"US\"\r\n            }\r\n        }\r\n    ],\r\n    \"chargesAndTaxes\": {\r\n        \"charges\": [\r\n            {\r\n                \"amount\": 129.0,\r\n                \"date\": \"2020-10-05\",\r\n                \"itemized\": [\r\n                    {\r\n                        \"amount\": 129.0,\r\n                        \"item\": null,\r\n                        \"itemType\": \"RoomCharge\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"amount\": 129.0,\r\n                \"date\": \"2020-10-06\",\r\n                \"itemized\": [\r\n                    {\r\n                        \"amount\": 129.0,\r\n                        \"item\": null,\r\n                        \"itemType\": \"RoomCharge\"\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"taxesAndFees\": [\r\n            {\r\n                \"amount\": 89.45,\r\n                \"date\": \"2020-10-05\",\r\n                \"itemized\": [\r\n                    {\r\n                        \"amount\": 6.95,\r\n                        \"item\": null,\r\n                        \"itemType\": \"ResortFeeTax\"\r\n                    },\r\n                    {\r\n                        \"amount\": 35.0,\r\n                        \"item\": null,\r\n                        \"itemType\": \"RoomChargeTax\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"amount\": 37.0,\r\n                \"date\": \"2020-10-06\",\r\n                \"itemized\": [\r\n                    {\r\n                        \"amount\": 6.95,\r\n                        \"item\": null,\r\n                        \"itemType\": \"ResortFeeTax\"\r\n                    },\r\n                    {\r\n                        \"amount\": 35.0,\r\n                        \"item\": null,\r\n                        \"itemType\": \"RoomChargeTax\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    \"depositDetails\": {\r\n        \"amount\": 248.45,\r\n        \"forfeitAmount\": 0.0,\r\n        \"overrideAmount\": 0.0,\r\n        \"depositRuleCode\": null,\r\n        \"cancellationRuleCode\": null,\r\n        \"dueDate\": \"2020-09-20\",\r\n        \"forfeitDate\": null,\r\n        \"amountPolicy\": null,\r\n        \"itemized\": null\r\n    },\r\n    \"agentInfo\": {\r\n        \"agentId\": \"05801806\",\r\n        \"agentType\": \"IATA\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/reservation/charges"
							},
							"response": []
						},
						{
							"name": "Modify Reservation V2 - Success",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 02 : Modify Reservation with Profile, Booking, TripDetails, Billing and AgentInfo\", function () {\r",
											"    pm.globals.set(\"variable_key\", \"variable_value\");  pm.response.to.have.status(200);\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"\r",
											"    var jsonData = JSON.parse(pm.response.stream);\r",
											"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
											"    pm.expect(null).not.eq(jsonData);\r",
											"    pm.expect(0).not.equal(jsonData.length);\r",
											"    pm.expect(null).not.eq(jsonData.booked);\r",
											"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
											"    pm.expect(confirmationNumber).not.eq(null);\r",
											"    pm.expect(confirmationNumber).eq(pm.variables.get(\"bookedConfirmationNumber\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"firstName = \"functionaltest\" + Math.random().toString(36).substring(5);",
											"postman.setEnvironmentVariable('firstName',  firstName);",
											"postman.setEnvironmentVariable('lastName',  \"pman\");",
											"",
											"phone = Math.floor(Math.random() * 9000000000) + 1000000000;",
											"postman.setEnvironmentVariable('phone',  phone);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "x-mgm-source",
										"value": "{{x-mgm-source}}",
										"type": "text"
									},
									{
										"key": "x-mgm-channel",
										"value": "{{x-mgm-channel}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{JWT_Token}}",
										"type": "text"
									},
									{
										"key": "x-mgm-transaction-id",
										"value": "rbs-v2-functional-{{$timestamp}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"roomReservation\": {\r\n        \"id\": \"752c359a-49ab-4b6a-b7b5-a68d77f23b9b\",\r\n        \"customerId\": \"11171332354\",\r\n        \"propertyId\": \"dc00e77f-d6bb-4dd7-a8ea-dc33ee9675ad\",\r\n        \"confirmationNumber\": {{bookedConfirmationNumber}},\r\n        \"itineraryId\": {{bookedItineraryId}},\r\n        \"roomTypeId\": \"ROOMCD-v-DPRK-d-PROP-v-MV021\",\r\n        \"programId\": \"RPCD-v-PREVL-d-PROP-v-MV021\",\r\n        \"nrgStatus\": false,\r\n        \"state\": \"Booked\",\r\n        \"profile\": {\r\n            \"id\": 156499970,\r\n            \"mlifeNo\": 79145357,\r\n            \"title\": \"Mr\",\r\n            \"dateOfBirth\": \"1960-07-27\",\r\n            \"operaId\": \"814787961\",\r\n            \"tier\": null,\r\n            \"firstName\": \"fname\",\r\n            \"lastName\": \"lname\",\r\n            \"emailAddress1\": \"dummy@mgmresorts.com\",\r\n            \"emailAddress2\": null,\r\n            \"hgpNo\": null,\r\n            \"swrrNo\": null,\r\n            \"phoneNumbers\": [\r\n                {\r\n                    \"type\": \"Mobile\",\r\n                    \"number\": \"7029138039\"\r\n                }\r\n            ],\r\n            \"addresses\": [\r\n                {\r\n                    \"type\": \"Home\",\r\n                    \"preferred\": false,\r\n                    \"street1\": \"5353 W Desert Inn\",\r\n                    \"street2\": null,\r\n                    \"city\": \"Las Vegas\",\r\n                    \"state\": \"NV\",\r\n                    \"country\": \"US\",\r\n                    \"postalCode\": \"89146\"\r\n                }\r\n            ]\r\n        },\r\n        \"billing\": [\r\n            {\r\n                \"payment\": {\r\n                    \"cardHolder\": \"first last\",\r\n                    \"firstName\": \"firstfirst\",\r\n                    \"lastName\": \"last\",\r\n                    \"ccToken\": \"4111110A001DQXFHY79D9XCZ1111\",\r\n                    \"maskedNumber\": \"XXXXXXXXXXXX1111\",\r\n                    \"cvv\": \"123\",\r\n                    \"type\": \"Visa\",\r\n                    \"expiry\": \"10/2022\",\r\n                    \"amount\": 266533.28\r\n                },\r\n                \"address\": {\r\n                    \"street1\": \"234 W Main St\",\r\n                    \"city\": \"Las Vegas\",\r\n                    \"state\": \"NV\",\r\n                    \"postalCode\": \"89129\",\r\n                    \"country\": \"US\"\r\n                }\r\n            }\r\n        ],\r\n        \"tripDetails\": {\r\n            \"checkInDate\": \"{{checkInDate_v2}}\",\r\n            \"checkOutDate\": \"{{checkOutDate_v2}}\",\r\n            \"numAdults\": 1,\r\n            \"numChildren\": 0,\r\n            \"numRooms\": 1\r\n        },\r\n        \"bookings\": [\r\n            {\r\n                \"date\": \"2021-09-11\",\r\n                \"basePrice\": 100014.99,\r\n                \"customerPrice\": 100014.99,\r\n                \"price\": 100014.99,\r\n                \"programIdIsRateTable\": false,\r\n                \"overridePrice\": -1,\r\n                \"overrideProgramIdIsRateTable\": false,\r\n                \"isComp\": false,\r\n                \"resortFeeIsSpecified\": false,\r\n                \"resortFee\": 0,\r\n                \"programId\": \"RPCD-v-PREVL-d-PROP-v-MV021\",\r\n                \"pricingRuleId\": \"fa1d4b3c-50bd-4fbf-8c9b-695c2c49f583\"\r\n            }\r\n        ],\r\n        \"chargesAndTaxes\": {\r\n            \"charges\": [\r\n                {\r\n                    \"date\": \"2021-01-11\",\r\n                    \"amount\": 100059.99,\r\n                    \"itemized\": [\r\n                        {\r\n                            \"itemType\": \"RoomCharge\",\r\n                            \"amount\": 100014.99,\r\n                            \"item\": \"Room Charge\"\r\n                        },\r\n                        {\r\n                            \"itemType\": \"ExtraGuestCharge\",\r\n                            \"amount\": 0,\r\n                            \"item\": \"Extra Guest Charge\"\r\n                        },\r\n                        {\r\n                            \"itemType\": \"ResortFee\",\r\n                            \"amount\": 45,\r\n                            \"item\": \"Resort Fee\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"taxesAndFees\": [\r\n                {\r\n                    \"date\": \"2021-01-11\",\r\n                    \"amount\": 13388.03,\r\n                    \"itemized\": [\r\n                        {\r\n                            \"itemType\": \"RoomChargeTax\",\r\n                            \"amount\": 13382.01,\r\n                            \"item\": \"Room Tax\"\r\n                        },\r\n                        {\r\n                            \"itemType\": \"ExtraGuestChargeTax\",\r\n                            \"amount\": 0,\r\n                            \"item\": \"Extra Guest Tax\"\r\n                        },\r\n                        {\r\n                            \"itemType\": \"ResortFeeTax\",\r\n                            \"amount\": 6.02,\r\n                            \"item\": \"Resort Fee Tax\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        \"depositDetails\": {\r\n            \"dueDate\": \"2021-01-11\",\r\n            \"amountPolicy\": \"Nights\",\r\n            \"amount\": 113397,\r\n            \"forfeitDate\": \"2021-01-08\",\r\n            \"forfeitAmount\": 113397,\r\n            \"overrideAmount\": -1,\r\n            \"depositRuleCode\": \"1NT\",\r\n            \"cancellationRuleCode\": \"72H\",\r\n            \"itemized\": [\r\n                {\r\n                    \"itemType\": \"RoomCharge\",\r\n                    \"amount\": 100014.99,\r\n                    \"item\": \"Room Charge\"\r\n                },\r\n                {\r\n                    \"itemType\": \"RoomChargeTax\",\r\n                    \"amount\": 13382.01,\r\n                    \"item\": \"Room Tax\"\r\n                }\r\n            ]\r\n        },\r\n        \"guaranteeCode\": \"CC\",\r\n        \"inAuthTransactionId\": \"jkjk\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/reservation"
							},
							"response": []
						},
						{
							"name": "Modify Profile - Success",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 03 : Modify Profile adddress and mlifeNo\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"    var jsonData = JSON.parse(pm.response.stream);\r",
											"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
											"    pm.expect(null).not.eq(jsonData);\r",
											"    pm.expect(0).not.equal(jsonData.length);\r",
											"    var value = pm.variables.get(\"bookedConfirmationNumber\");\r",
											"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
											"    pm.globals.set(\"validItemId\", jsonData.itemId);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"\r",
											"preModifyCheckInDate = moment(pm.variables.get(\"checkInDate\")).format('YYYY-MM-DD');\r",
											"preModifyCheckOutDate = moment(pm.variables.get(\"checkOutDate\")).format('YYYY-MM-DD');\r",
											"\r",
											"postman.setEnvironmentVariable('preModifyCheckInDate',  preModifyCheckInDate);\r",
											"postman.setEnvironmentVariable('preModifyCheckOutDate',  preModifyCheckOutDate);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "x-mgm-source",
										"value": "{{x-mgm-source}}",
										"type": "text"
									},
									{
										"key": "x-mgm-channel",
										"value": "{{x-mgm-channel}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{JWT_Token}}",
										"type": "text"
									},
									{
										"key": "x-mgm-transaction-id",
										"value": "rbs-v2-functional-{{$timestamp}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"reservationId\": \"{{bookedReservationId}}\",\r\n  \"itineraryId\": \"{{bookedItineraryId}}\",\r\n  \"propertyId\": \"dc00e77f-d6bb-4dd7-a8ea-dc33ee9675ad\",\r\n  \"confirmationNumber\": \"{{bookedConfirmationNumber}}\",\r\n  \"userProfile\": {\r\n            \"id\": 11171332354,\r\n            \"operaId\": null,\r\n            \"firstName\": \"Mike\",\r\n            \"lastName\": \"Hedden\",\r\n            \"phoneNumbers\": [\r\n                {\r\n                    \"number\": \"7099087655\",\r\n                    \"type\": \"Home\"\r\n                }\r\n            ],\r\n            \"emailAddress1\": \"abasu@gmail.com\",\r\n            \"emailAddress2\": null,\r\n            \"dateOfBirth\": \"0002-11-28\",\r\n            \"hgpNo\": null,\r\n            \"swrrNo\": null,\r\n            \"addresses\": [\r\n                {\r\n                    \"preferred\": false,\r\n                    \"street1\": \"123 Main St\",\r\n                    \"street2\": null,\r\n                    \"city\": \"Las Vegas\",\r\n                    \"state\": \"NV\",\r\n                    \"country\": \"US\",\r\n                    \"postalCode\": \"89118\",\r\n                    \"type\": \"Home\"\r\n                }\r\n            ],\r\n            \"mlifeNo\": 79145357\r\n        }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/reservation/profile"
							},
							"response": []
						},
						{
							"name": "Modify Reservation V2 - Success Promo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 02 : Modify Reservation with Profile, Booking, TripDetails, Billing and AgentInfo\", function () {\r",
											"    pm.globals.set(\"variable_key\", \"variable_value\");  pm.response.to.have.status(200);\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"\r",
											"    var jsonData = JSON.parse(pm.response.stream);\r",
											"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
											"    pm.expect(null).not.eq(jsonData);\r",
											"    pm.expect(0).not.equal(jsonData.length);\r",
											"    pm.expect(null).not.eq(jsonData.booked);\r",
											"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
											"    pm.expect(confirmationNumber).not.eq(null);\r",
											"    pm.expect(confirmationNumber).eq(pm.variables.get(\"bookedConfirmationNumber\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"firstName = \"functionaltest\" + Math.random().toString(36).substring(5);",
											"postman.setEnvironmentVariable('firstName',  firstName);",
											"postman.setEnvironmentVariable('lastName',  \"pman\");",
											"",
											"phone = Math.floor(Math.random() * 9000000000) + 1000000000;",
											"postman.setEnvironmentVariable('phone',  phone);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "x-mgm-source",
										"value": "{{x-mgm-source}}",
										"type": "text"
									},
									{
										"key": "x-mgm-channel",
										"value": "{{x-mgm-channel}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{JWT_Token}}",
										"type": "text"
									},
									{
										"key": "x-mgm-transaction-id",
										"value": "rbs-v2-functional-{{$timestamp}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"roomReservation\": {\r\n        \"id\": \"752c359a-49ab-4b6a-b7b5-a68d77f23b9b\",\r\n        \"customerId\": \"11171332354\",\r\n        \"propertyId\": \"dc00e77f-d6bb-4dd7-a8ea-dc33ee9675ad\",\r\n        \"confirmationNumber\": {{validConfirmationNumberPromo}},\r\n        \"itineraryId\": {{bookedItineraryId}},\r\n        \"promo\": \"ZNVLCLS\",\r\n        \"roomTypeId\": \"ROOMCD-v-DMAD-d-PROP-v-MV021\",\r\n        \"programId\": \"RPCD-v-AAA10-d-PROP-v-MV021\",\r\n        \"nrgStatus\": false,\r\n        \"state\": \"Booked\",\r\n        \"profile\": {\r\n            \"id\": 156499970,\r\n            \"mlifeNo\": 79145357,\r\n            \"title\": \"Mr\",\r\n            \"dateOfBirth\": \"1960-07-27\",\r\n            \"operaId\": \"814787961\",\r\n            \"tier\": null,\r\n            \"firstName\": \"fname\",\r\n            \"lastName\": \"lname\",\r\n            \"emailAddress1\": \"dummy@mgmresorts.com\",\r\n            \"emailAddress2\": null,\r\n            \"hgpNo\": null,\r\n            \"swrrNo\": null,\r\n            \"phoneNumbers\": [\r\n                {\r\n                    \"type\": \"Mobile\",\r\n                    \"number\": \"7029138039\"\r\n                }\r\n            ],\r\n            \"addresses\": [\r\n                {\r\n                    \"type\": \"Home\",\r\n                    \"preferred\": false,\r\n                    \"street1\": \"5353 W Desert Inn\",\r\n                    \"street2\": null,\r\n                    \"city\": \"Las Vegas\",\r\n                    \"state\": \"NV\",\r\n                    \"country\": \"US\",\r\n                    \"postalCode\": \"89146\"\r\n                }\r\n            ]\r\n        },\r\n        \"billing\": [\r\n            {\r\n                \"payment\": {\r\n                    \"cardHolder\": \"first last\",\r\n                    \"firstName\": \"firstfirst\",\r\n                    \"lastName\": \"last\",\r\n                    \"ccToken\": \"4111110A001DQXFHY79D9XCZ1111\",\r\n                    \"maskedNumber\": \"XXXXXXXXXXXX1111\",\r\n                    \"cvv\": \"123\",\r\n                    \"type\": \"Visa\",\r\n                    \"expiry\": \"10/2022\",\r\n                    \"amount\": 266533.28\r\n                },\r\n                \"address\": {\r\n                    \"street1\": \"234 W Main St\",\r\n                    \"city\": \"Las Vegas\",\r\n                    \"state\": \"NV\",\r\n                    \"postalCode\": \"89129\",\r\n                    \"country\": \"US\"\r\n                }\r\n            }\r\n        ],\r\n        \"tripDetails\": {\r\n            \"checkInDate\": \"{{checkInDate_v2}}\",\r\n            \"checkOutDate\": \"{{checkOutDate_v2}}\",\r\n            \"numAdults\": 1,\r\n            \"numChildren\": 0,\r\n            \"numRooms\": 1\r\n        },\r\n        \"bookings\": [\r\n            {\r\n                \"date\": \"2021-09-11\",\r\n                \"basePrice\": 100014.99,\r\n                \"customerPrice\": 100014.99,\r\n                \"price\": 100014.99,\r\n                \"programIdIsRateTable\": false,\r\n                \"overridePrice\": -1,\r\n                \"overrideProgramIdIsRateTable\": false,\r\n                \"isComp\": false,\r\n                \"resortFeeIsSpecified\": false,\r\n                \"resortFee\": 0,\r\n                \"programId\": \"RPCD-v-AAA10-d-PROP-v-MV021\",\r\n                \"pricingRuleId\": \"fa1d4b3c-50bd-4fbf-8c9b-695c2c49f583\"\r\n            }\r\n        ],\r\n        \"chargesAndTaxes\": {\r\n            \"charges\": [\r\n                {\r\n                    \"date\": \"2021-01-11\",\r\n                    \"amount\": 100059.99,\r\n                    \"itemized\": [\r\n                        {\r\n                            \"itemType\": \"RoomCharge\",\r\n                            \"amount\": 100014.99,\r\n                            \"item\": \"Room Charge\"\r\n                        },\r\n                        {\r\n                            \"itemType\": \"ExtraGuestCharge\",\r\n                            \"amount\": 0,\r\n                            \"item\": \"Extra Guest Charge\"\r\n                        },\r\n                        {\r\n                            \"itemType\": \"ResortFee\",\r\n                            \"amount\": 45,\r\n                            \"item\": \"Resort Fee\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"taxesAndFees\": [\r\n                {\r\n                    \"date\": \"2021-01-11\",\r\n                    \"amount\": 13388.03,\r\n                    \"itemized\": [\r\n                        {\r\n                            \"itemType\": \"RoomChargeTax\",\r\n                            \"amount\": 13382.01,\r\n                            \"item\": \"Room Tax\"\r\n                        },\r\n                        {\r\n                            \"itemType\": \"ExtraGuestChargeTax\",\r\n                            \"amount\": 0,\r\n                            \"item\": \"Extra Guest Tax\"\r\n                        },\r\n                        {\r\n                            \"itemType\": \"ResortFeeTax\",\r\n                            \"amount\": 6.02,\r\n                            \"item\": \"Resort Fee Tax\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        \"depositDetails\": {\r\n            \"dueDate\": \"2021-01-11\",\r\n            \"amountPolicy\": \"Nights\",\r\n            \"amount\": 113397,\r\n            \"forfeitDate\": \"2021-01-08\",\r\n            \"forfeitAmount\": 113397,\r\n            \"overrideAmount\": -1,\r\n            \"depositRuleCode\": \"1NT\",\r\n            \"cancellationRuleCode\": \"72H\",\r\n            \"itemized\": [\r\n                {\r\n                    \"itemType\": \"RoomCharge\",\r\n                    \"amount\": 100014.99,\r\n                    \"item\": \"Room Charge\"\r\n                },\r\n                {\r\n                    \"itemType\": \"RoomChargeTax\",\r\n                    \"amount\": 13382.01,\r\n                    \"item\": \"Room Tax\"\r\n                }\r\n            ]\r\n        },\r\n        \"guaranteeCode\": \"CC\",\r\n        \"inAuthTransactionId\": \"jkjk\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/reservation"
							},
							"response": []
						}
					]
				},
				{
					"name": "Reservation Cancel",
					"item": [
						{
							"name": "Cancel Reservation - Success",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 01 : Cancel Reservation by confirmationNumber\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"\r",
											"    var jsonData = JSON.parse(pm.response.stream);\r",
											"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
											"    pm.expect(null).not.eq(jsonData);\r",
											"    pm.expect(0).not.equal(jsonData.length);\r",
											"    var value = pm.variables.get(\"bookedConfirmationNumber\");\r",
											"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-mgm-source",
										"value": "{{x-mgm-source}}",
										"type": "text"
									},
									{
										"key": "x-mgm-channel",
										"value": "{{x-mgm-channel}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{JWT_Token}}",
										"type": "text"
									},
									{
										"key": "x-mgm-transaction-id",
										"value": "rbs-v2-functional-{{$timestamp}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"customerId\": \"11171332354\",\n\t\"itineraryId\": \"6897908226\",\n\t\"confirmationNumber\": {{bookedConfirmationNumber}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/reservation/cancel"
							},
							"response": []
						},
						{
							"name": "Cancel Reservation - Already Cancelled",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 02 : Cancel Reservation which was alreay cancelled\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"  pm.response.to.have.header(\"Content-Type\");\r",
											"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"  pm.expect(pm.response.code).to.equal(400);\r",
											"\r",
											"  var jsonData = JSON.parse(pm.response.stream);\r",
											"  pm.expect(jsonData.error.message).to.equal(\"<_reservation_already_cancelled>[ The given reservation is already in cancelled state. ]\");\r",
											"  pm.expect(jsonData.error.code).to.equal(\"632-2-224\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-mgm-source",
										"value": "{{x-mgm-source}}",
										"type": "text"
									},
									{
										"key": "x-mgm-channel",
										"value": "{{x-mgm-channel}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{JWT_Token}}",
										"type": "text"
									},
									{
										"key": "x-mgm-transaction-id",
										"value": "rbs-v2-functional-{{$timestamp}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"customerId\": \"11171332354\",\n\t\"itineraryId\": \"6897908226\",\n\t\"confirmationNumber\": {{bookedConfirmationNumber}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/reservation/cancel"
							},
							"response": []
						},
						{
							"name": "Cancel Reservation - Invalid Confirmation No",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 02 : Cancel Reservation with invalid confirmationNumber\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"  pm.response.to.have.header(\"Content-Type\");\r",
											"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"  pm.expect(pm.response.code).to.equal(400);\r",
											"\r",
											"  var jsonData = JSON.parse(pm.response.stream);\r",
											"  pm.expect(jsonData.error.message).to.equal(\"Either reservation id or confirmation number is mandatory.\");\r",
											"  pm.expect(jsonData.error.code).to.equal(\"632-1-225\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-mgm-source",
										"value": "{{x-mgm-source}}",
										"type": "text"
									},
									{
										"key": "x-mgm-channel",
										"value": "{{x-mgm-channel}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{JWT_Token}}",
										"type": "text"
									},
									{
										"key": "x-mgm-transaction-id",
										"value": "rbs-v2-functional-{{$timestamp}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"customerId\": \"2222222\",\n\t\"itineraryId\": \"1111111\",\n\t\"confirmationNumber\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/reservation/cancel"
							},
							"response": []
						},
						{
							"name": "Cancel Reservation - Success Promo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 01 : Cancel Reservation by confirmationNumber\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"\r",
											"    var jsonData = JSON.parse(pm.response.stream);\r",
											"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
											"    pm.expect(null).not.eq(jsonData);\r",
											"    pm.expect(0).not.equal(jsonData.length);\r",
											"    var value = pm.variables.get(\"bookedConfirmationNumber\");\r",
											"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-mgm-source",
										"value": "{{x-mgm-source}}",
										"type": "text"
									},
									{
										"key": "x-mgm-channel",
										"value": "{{x-mgm-channel}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{JWT_Token}}",
										"type": "text"
									},
									{
										"key": "x-mgm-transaction-id",
										"value": "rbs-v2-functional-{{$timestamp}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"customerId\": \"11171332354\",\n\t\"itineraryId\": \"6897908226\",\n\t\"confirmationNumber\": {{validConfirmationNumberPromo}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/reservation/cancel"
							},
							"response": []
						}
					]
				},
				{
					"name": "charges",
					"item": [
						{
							"name": "ReservationHold-transient",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 01 : Hold Reservation  TripDetails\", function () {\r",
											"    pm.globals.set(\"variable_key\", \"variable_value\");  \r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"    var jsonData = JSON.parse(pm.response.stream);\r",
											"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
											"    pm.expect(null).not.eq(jsonData);\r",
											"    pm.expect(0).not.equal(jsonData.length);\r",
											"    pm.expect(null).not.eq(jsonData.booked);    \r",
											" \r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"\r",
											"preModifyCheckInDate = moment(pm.variables.get(\"checkInDate\")).format('YYYY-MM-DD');\r",
											"preModifyCheckOutDate = moment(pm.variables.get(\"checkOutDate\")).format('YYYY-MM-DD');\r",
											"\r",
											"postman.setEnvironmentVariable('preModifyCheckInDate',  preModifyCheckInDate);\r",
											"postman.setEnvironmentVariable('preModifyCheckOutDate',  preModifyCheckOutDate);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "x-mgm-source",
										"type": "text",
										"value": "{{x-mgm-source}}"
									},
									{
										"key": "x-mgm-channel",
										"type": "text",
										"value": "{{x-mgm-channel}}"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{JWT_Token}}"
									},
									{
										"key": "x-mgm-transaction-id",
										"type": "text",
										"value": "rbs-v2-functional-{{$timestamp}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nrgStatus\": false,\r\n    \"id\": \"35131669-7344-4d8b-aadf-f447e77d24b2\",\r\n    \"propertyId\": \"dc00e77f-d6bb-4dd7-a8ea-dc33ee9675ad\",\r\n    \"itineraryId\": \"7621739521\",\r\n    \"roomTypeId\": \"ROOMCD-v-DPRK-d-PROP-v-MV021\",\r\n    \"programId\": \"RPCD-v-PREVL-d-PROP-v-MV021\",\r\n    \"operaState\": \"\",\r\n    \"perpetualPricing\": true,\r\n    \"rrUpsell\": \"\",\r\n    \"operaConfirmationNumber\": \"\",\r\n    \"guaranteeCode\": \"CC\",\r\n    \"customerRank\": 0,\r\n    \"customerSegment\": 0,\r\n    \"amountDue\": 0.0,\r\n    \"additionalComments\": [],\r\n    \"specialRequests\": [],\r\n    \"state\": \"Booked\",\r\n    \"tripDetails\": {\r\n        \"numAdults\": 2,\r\n        \"numChildren\": 0,\r\n        \"checkInDate\": \"{{checkInDate_v2}}\",\r\n        \"checkOutDate\": \"{{checkOutDate_v2}}\",\r\n        \"numRooms\": 1\r\n    },\r\n    \"profile\": {\r\n        \"id\": 905143714049,\r\n        \"operaId\": null,\r\n        \"firstName\": \"8b79cffd8b5a6\",\r\n        \"lastName\": \"Dd543ac4a36fe\",\r\n        \"phoneNumbers\": [\r\n            {\r\n                \"number\": \"7069585940\",\r\n                \"type\": \"Home\"\r\n            }\r\n        ],\r\n        \"emailAddress1\": \"a281fcbfe629ff3@mgmqa.com\",\r\n        \"emailAddress2\": null,\r\n        \"dateOfBirth\": \"1980-06-11\",\r\n        \"hgpNo\": null,\r\n        \"swrrNo\": null,\r\n        \"addresses\": [\r\n            {\r\n                \"preferred\": false,\r\n                \"street1\": \"1837 Butter St\",\r\n                \"street2\": null,\r\n                \"city\": \"Las Vegas\",\r\n                \"state\": \"NV\",\r\n                \"country\": \"US\",\r\n                \"postalCode\": \"89115\",\r\n                \"type\": \"Home\"\r\n            }\r\n        ],\r\n        \"title\": null\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/reservation/hold"
							},
							"response": []
						},
						{
							"name": "ReservationHold-Mlife",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 02 : Hold Reservation with Profile, TripDetails\", function () {\r",
											"    pm.globals.set(\"variable_key\", \"variable_value\");  \r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"\r",
											"    var jsonData = JSON.parse(pm.response.stream);\r",
											"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
											"    pm.expect(null).not.eq(jsonData);\r",
											"    pm.expect(0).not.equal(jsonData.length);\r",
											"    pm.expect(null).not.eq(jsonData.booked);    \r",
											"    var confirmationNumber = jsonData.confirmationNumber;\r",
											"    var itineraryId = jsonData.itineraryId;\r",
											"    var reservationId = jsonData.id;\r",
											"    pm.expect(confirmationNumber).not.eq(null);\r",
											"    postman.setEnvironmentVariable('holdConfirmationNumber',  confirmationNumber);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"\r",
											"preModifyCheckInDate = moment(pm.variables.get(\"checkInDate\")).format('YYYY-MM-DD');\r",
											"preModifyCheckOutDate = moment(pm.variables.get(\"checkOutDate\")).format('YYYY-MM-DD');\r",
											"\r",
											"postman.setEnvironmentVariable('preModifyCheckInDate',  preModifyCheckInDate);\r",
											"postman.setEnvironmentVariable('preModifyCheckOutDate',  preModifyCheckOutDate);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "x-mgm-source",
										"type": "text",
										"value": "{{x-mgm-source}}"
									},
									{
										"key": "x-mgm-channel",
										"type": "text",
										"value": "{{x-mgm-channel}}"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{JWT_Token}}"
									},
									{
										"key": "x-mgm-transaction-id",
										"type": "text",
										"value": "rbs-v2-functional-{{$timestamp}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nrgStatus\": false,\r\n    \"id\": \"35131669-7344-4d8b-aadf-f447e77d24b2\",\r\n    \"propertyId\": \"dc00e77f-d6bb-4dd7-a8ea-dc33ee9675ad\",\r\n    \"itineraryId\": \"7621739521\",\r\n    \"roomTypeId\": \"ROOMCD-v-DPRK-d-PROP-v-MV021\",\r\n    \"programId\": \"RPCD-v-PREVL-d-PROP-v-MV021\",\r\n    \"operaState\": \"\",\r\n    \"confirmationNumber\": \"7299327531\",\r\n    \"perpetualPricing\": true,\r\n    \"rrUpsell\": \"\",\r\n    \"operaConfirmationNumber\": \"\",\r\n    \"guaranteeCode\": \"CC\",\r\n    \"customerRank\": 0,\r\n    \"customerSegment\": 0,\r\n    \"amountDue\": 0.0,\r\n    \"additionalComments\": [],\r\n    \"specialRequests\": [],\r\n    \"state\": \"Booked\",\r\n    \"tripDetails\": {\r\n        \"numAdults\": 2,\r\n        \"numChildren\": 0,\r\n        \"checkInDate\": \"{{checkInDate_v2}}\",\r\n        \"checkOutDate\": \"{{checkOutDate_v2}}\",\r\n        \"numRooms\": 1\r\n    },\r\n    \"profile\": {\r\n        \"id\": 905143714049,\r\n        \"operaId\": null,\r\n        \"firstName\": \"8b79cffd8b5a6\",\r\n        \"lastName\": \"Dd543ac4a36fe\",\r\n        \"mlifeNo\": 79145357,\r\n        \"phoneNumbers\": [\r\n            {\r\n                \"number\": \"7069585940\",\r\n                \"type\": \"Home\"\r\n            }\r\n        ],\r\n        \"emailAddress1\": \"a281fcbfe629ff3@mgmqa.com\",\r\n        \"emailAddress2\": null,\r\n        \"dateOfBirth\": \"1980-06-11\",\r\n        \"hgpNo\": null,\r\n        \"swrrNo\": null,\r\n        \"addresses\": [\r\n            {\r\n                \"preferred\": false,\r\n                \"street1\": \"1837 Butter St\",\r\n                \"street2\": null,\r\n                \"city\": \"Las Vegas\",\r\n                \"state\": \"NV\",\r\n                \"country\": \"US\",\r\n                \"postalCode\": \"89115\",\r\n                \"type\": \"Home\"\r\n            }\r\n        ],\r\n        \"title\": null\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/reservation/hold"
							},
							"response": []
						},
						{
							"name": "preModifyRoomCharges",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 01 : PreModify Reservation with Profile, Booking, TripDetails, Billing and AgentInfo\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"\r",
											"    var jsonData = JSON.parse(pm.response.stream);\r",
											"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
											"    pm.expect(null).not.eq(jsonData);\r",
											"    pm.expect(0).not.equal(jsonData.length);\r",
											"    var value = pm.variables.get(\"validConfirmationNumber\");\r",
											"    pm.expect(value).eq(jsonData.confirmationNumber);\r",
											"    pm.globals.set(\"validItemId\", jsonData.itemId);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"\r",
											"preModifyCheckInDate = moment(pm.variables.get(\"checkInDate\")).format('YYYY-MM-DD');\r",
											"preModifyCheckOutDate = moment(pm.variables.get(\"checkOutDate\")).format('YYYY-MM-DD');\r",
											"\r",
											"postman.setEnvironmentVariable('preModifyCheckInDate',  preModifyCheckInDate);\r",
											"postman.setEnvironmentVariable('preModifyCheckOutDate',  preModifyCheckOutDate);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "x-mgm-source",
										"value": "{{x-mgm-source}}",
										"type": "text"
									},
									{
										"key": "x-mgm-channel",
										"value": "{{x-mgm-channel}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{JWT_Token}}",
										"type": "text"
									},
									{
										"key": "x-mgm-transaction-id",
										"value": "rbs-v2-functional-{{$timestamp}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"propertyId\": \"dc00e77f-d6bb-4dd7-a8ea-dc33ee9675ad\",\r\n    \"roomTypeId\": \"ROOMCD-v-DPRK-d-PROP-v-MV021\",\r\n    \"programId\": \"RPCD-v-PREVL-d-PROP-v-MV021\",\r\n    \"confirmationNumber\": {{validConfirmationNumber}},\r\n    \"customerId\": \"11171332354\",\r\n    \"upgradeRoomTypeId\": \"TEST\",\r\n    \"specialRequests\": [],\r\n    \"partyConfirmationNumber\": \"\",\r\n    \"comments\": \"custom comments\",\r\n    \"additionalComments\": [\r\n        \"add 1\",\r\n        \"add 2\"\r\n    ],\r\n    \"profile\": {\r\n        \"id\": 11171332354,\r\n        \"operaId\": null,\r\n        \"firstName\": \"Mike\",\r\n        \"lastName\": \"Hedden\",\r\n        \"phoneNumbers\": [\r\n            {\r\n                \"number\": \"7099087654\",\r\n                \"type\": \"Home\"\r\n            }\r\n        ],\r\n        \"emailAddress1\": \"abasu@gmail.com\",\r\n        \"emailAddress2\": null,\r\n        \"dateOfBirth\": \"0002-11-28\",\r\n        \"hgpNo\": null,\r\n        \"swrrNo\": null,\r\n        \"addresses\": [\r\n            {\r\n                \"preferred\": false,\r\n                \"street1\": \"123 Main St\",\r\n                \"street2\": null,\r\n                \"city\": \"Las Vegas\",\r\n                \"state\": \"NV\",\r\n                \"country\": \"US\",\r\n                \"postalCode\": \"89118\",\r\n                \"type\": \"Home\"\r\n            }\r\n        ],\r\n        \"mlifeNo\": 123456\r\n    },\r\n    \"bookings\": [\r\n        {\r\n            \"overrideProgramIdIsRateTable\": false,\r\n            \"resortFeeIsSpecified\": false,\r\n            \"programIdIsRateTable\": false,\r\n            \"customerPrice\": 0.0,\r\n            \"resortFee\": 0.0,\r\n            \"basePrice\": 0.0,\r\n            \"price\": 159.0,\r\n            \"overridePrice\": 100.0,\r\n            \"programId\": \"RPCD-v-PREVL-d-PROP-v-MV021\",\r\n            \"pricingRuleId\": null,\r\n            \"overrideProgramId\": null,\r\n            \"overridePricingRuleId\": null,\r\n            \"date\": \"2021-10-05\",\r\n            \"isComp\": false\r\n        },\r\n        {\r\n            \"overrideProgramIdIsRateTable\": false,\r\n            \"resortFeeIsSpecified\": false,\r\n            \"programIdIsRateTable\": false,\r\n            \"customerPrice\": 0.0,\r\n            \"resortFee\": 0.0,\r\n            \"basePrice\": 0.0,\r\n            \"price\": 159.0,\r\n            \"overridePrice\": 100.0,\r\n            \"programId\": \"RPCD-v-PREVL-d-PROP-v-MV021\",\r\n            \"pricingRuleId\": null,\r\n            \"overrideProgramId\": null,\r\n            \"overridePricingRuleId\": null,\r\n            \"date\": \"2021-10-06\",\r\n            \"isComp\": false\r\n        }\r\n    ],\r\n    \"tripDetails\": {\r\n        \"numAdults\": 2,\r\n        \"numChildren\": 0,\r\n        \"checkInDate\": \"{{checkInDate_v2}}\",\r\n        \"checkOutDate\": \"{{checkOutDate_v2}}\",\r\n        \"numRooms\": 1\r\n    },\r\n    \"billing\": [\r\n        {\r\n            \"payment\": {\r\n                \"amount\": 248.45,\r\n                \"fxAmount\": 0.0,\r\n                \"fxExchangeRate\": 0.0,\r\n                \"cardHolder\": \"Mike Hedden\",\r\n                \"maskedNumber\": null,\r\n                \"fxCurrencyISOCode\": null,\r\n                \"fxCurrencyCode\": null,\r\n                \"fxFlag\": null,\r\n                \"cvv\": \"111\",\r\n                \"type\": \"Diners Club\",\r\n                \"ccToken\": \"5555550A00119KELHS2JOTWZ4444\",\r\n                \"firstName\": \"Mike\",\r\n                \"lastName\": \"Hedden\",\r\n                \"expiry\": \"11/2021\"\r\n            },\r\n            \"address\": {\r\n                \"street1\": \"123 Main St\",\r\n                \"street2\": \"\",\r\n                \"city\": \"Las Vegas\",\r\n                \"state\": \"NV\",\r\n                \"postalCode\": \"89118\",\r\n                \"country\": \"US\"\r\n            }\r\n        }\r\n    ],\r\n    \"chargesAndTaxes\": {\r\n        \"charges\": [\r\n            {\r\n                \"amount\": 129.0,\r\n                \"date\": \"2020-10-05\",\r\n                \"itemized\": [\r\n                    {\r\n                        \"amount\": 129.0,\r\n                        \"item\": null,\r\n                        \"itemType\": \"RoomCharge\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"amount\": 129.0,\r\n                \"date\": \"2020-10-06\",\r\n                \"itemized\": [\r\n                    {\r\n                        \"amount\": 129.0,\r\n                        \"item\": null,\r\n                        \"itemType\": \"RoomCharge\"\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"taxesAndFees\": [\r\n            {\r\n                \"amount\": 89.45,\r\n                \"date\": \"2020-10-05\",\r\n                \"itemized\": [\r\n                    {\r\n                        \"amount\": 6.95,\r\n                        \"item\": null,\r\n                        \"itemType\": \"ResortFeeTax\"\r\n                    },\r\n                    {\r\n                        \"amount\": 35.0,\r\n                        \"item\": null,\r\n                        \"itemType\": \"RoomChargeTax\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"amount\": 37.0,\r\n                \"date\": \"2020-10-06\",\r\n                \"itemized\": [\r\n                    {\r\n                        \"amount\": 6.95,\r\n                        \"item\": null,\r\n                        \"itemType\": \"ResortFeeTax\"\r\n                    },\r\n                    {\r\n                        \"amount\": 35.0,\r\n                        \"item\": null,\r\n                        \"itemType\": \"RoomChargeTax\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    \"depositDetails\": {\r\n        \"amount\": 248.45,\r\n        \"forfeitAmount\": 0.0,\r\n        \"overrideAmount\": 0.0,\r\n        \"depositRuleCode\": null,\r\n        \"cancellationRuleCode\": null,\r\n        \"dueDate\": \"2020-09-20\",\r\n        \"forfeitDate\": null,\r\n        \"amountPolicy\": null,\r\n        \"itemized\": null\r\n    },\r\n    \"agentInfo\": {\r\n        \"agentId\": \"05801806\",\r\n        \"agentType\": \"IATA\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/reservation/charges"
							},
							"response": []
						},
						{
							"name": "Ignore Reservation V2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 04 : Release Reservation\", function () {\r",
											"    pm.globals.set(\"variable_key\", \"variable_value\");  \r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-mgm-source",
										"type": "text",
										"value": "{{x-mgm-source}}"
									},
									{
										"key": "x-mgm-channel",
										"type": "text",
										"value": "{{x-mgm-channel}}"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{JWT_Token}}"
									},
									{
										"key": "x-mgm-transaction-id",
										"type": "text",
										"value": "rbs-v2-functional-{{$timestamp}}"
									},
									{
										"key": "source",
										"type": "text",
										"value": "ice"
									},
									{
										"key": "channel",
										"type": "text",
										"value": "ice"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"customerId\": \"1024295239937\",\r\n\t\"itineraryId\": \"6901796354\",\r\n\t\"confirmationNumber\": {{holdConfirmationNumber}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{env}}/v2/reservation/release?confirmationNumber={{holdConfirmationNumber}}&propertyId={{propertyId}}",
									"host": [
										"{{env}}"
									],
									"path": [
										"v2",
										"reservation",
										"release"
									],
									"query": [
										{
											"key": "confirmationNumber",
											"value": "{{holdConfirmationNumber}}"
										},
										{
											"key": "propertyId",
											"value": "{{propertyId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "preModifyRoomCharges Promo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 01 : PreModify Reservation with Profile, Booking, TripDetails, Billing and AgentInfo\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"\r",
											"    var jsonData = JSON.parse(pm.response.stream);\r",
											"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
											"    pm.expect(null).not.eq(jsonData);\r",
											"    pm.expect(0).not.equal(jsonData.length);\r",
											"    var value = pm.variables.get(\"validConfirmationNumber\");\r",
											"    pm.expect(value).eq(jsonData.confirmationNumber);\r",
											"    pm.globals.set(\"validItemId\", jsonData.itemId);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"\r",
											"preModifyCheckInDate = moment(pm.variables.get(\"checkInDate\")).format('YYYY-MM-DD');\r",
											"preModifyCheckOutDate = moment(pm.variables.get(\"checkOutDate\")).format('YYYY-MM-DD');\r",
											"\r",
											"postman.setEnvironmentVariable('preModifyCheckInDate',  preModifyCheckInDate);\r",
											"postman.setEnvironmentVariable('preModifyCheckOutDate',  preModifyCheckOutDate);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "x-mgm-source",
										"value": "{{x-mgm-source}}",
										"type": "text"
									},
									{
										"key": "x-mgm-channel",
										"value": "{{x-mgm-channel}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{JWT_Token}}",
										"type": "text"
									},
									{
										"key": "x-mgm-transaction-id",
										"value": "rbs-v2-functional-{{$timestamp}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"customerId\": 1,\r\n    \"propertyId\": \"dc00e77f-d6bb-4dd7-a8ea-dc33ee9675ad\",\r\n    \"promo\": \"ZNVLCLS\",\r\n    \"roomTypeId\": \"ROOMCD-v-DMAD-d-PROP-v-MV021\",\r\n    \"programId\": \"RPCD-v-AAA10-d-PROP-v-MV021\",\r\n    \"state\": \"Booked\",\r\n    \"itineraryId\": \"1234\",\r\n    \"nrgStatus\": false,\r\n    \"specialRequests\": [\r\n        \"COMPONENTCD~DINN--NRPCD~NONE--TYP~SPECIAL-REQUEST--PROP~40b61feb-750a-45df-ae68-e23e6272b16b\"\r\n    ],\r\n    \"operaConfirmationNumber\": \"798011044\",\r\n    \"bookDate\": \"2020-12-09\",\r\n    \"profile\": {\r\n        \"id\": -1,\r\n        \"mlifeNo\": 0,\r\n        \"title\": \"Mr\",\r\n        \"firstName\": \"Saugata\",\r\n        \"lastName\": \"Moitra\",\r\n        \"emailAddress1\": \"smoitra@mgmresorts.com\",\r\n        \"phoneNumbers\": [\r\n            {\r\n                \"type\": \"Mobile\",\r\n                \"number\": \"7029138039\"\r\n            }\r\n        ],\r\n        \"addresses\": [\r\n            {\r\n                \"type\": \"Home\",\r\n                \"preferred\": true,\r\n                \"street1\": \"5353 W Desert Inn\",\r\n                \"street2\": null,\r\n                \"city\": \"Las Vegas\",\r\n                \"state\": \"NV\",\r\n                \"country\": \"US\",\r\n                \"postalCode\": \"89146\"\r\n            }\r\n        ]\r\n    },\r\n    \"billing\": [\r\n        {\r\n            \"payment\": {\r\n                \"cardHolder\": \"Saugata Moitra\",\r\n                \"firstName\": \"Saugata\",\r\n                \"lastName\": \"Moitra\",\r\n                \"ccToken\": \"4111110A001DQXFHY79D9XCZ1111\",\r\n                \"encryptedccToken\": \"5555550A0012ZTSHUFMXCCUW4444\",\r\n                \"maskedNumber\": \"XXXXXXXXXXXXXXXXXXXXXXXX4444\",\r\n                \"amount\": 10,\r\n                \"expiry\": \"01/2022\",\r\n                \"type\": \"Diners Club\"\r\n            },\r\n            \"address\": {\r\n                \"street1\": \"5353 W Desert Inn\",\r\n                \"street2\": null,\r\n                \"city\": \"Las Vegas\",\r\n                \"state\": \"NV\",\r\n                \"postalCode\": \"89146\",\r\n                \"country\": \"US\"\r\n            }\r\n        },\r\n        {\r\n            \"payment\": {\r\n                \"cardHolder\": \"first last\",\r\n                \"firstName\": \"firstfirst\",\r\n                \"lastName\": \"last\",\r\n                \"ccToken\": \"4111110A001DQXFHY79D9XCZ1111\",\r\n                \"maskedNumber\": \"XXXXXXXXXXXX1111\",\r\n                \"cvv\": \"123\",\r\n                \"type\": \"Visa\",\r\n                \"expiry\": \"10/2022\",\r\n                \"amount\": 2108.62\r\n            },\r\n            \"address\": {\r\n                \"street1\": \"--REDACTED--\",\r\n                \"street2\": \"--REDACTED--\",\r\n                \"city\": \"Henderson\",\r\n                \"state\": \"NV\",\r\n                \"postalCode\": \"89118\",\r\n                \"country\": \"US\"\r\n            }\r\n        }\r\n    ],\r\n    \"tripDetails\": {\r\n        \"checkInDate\": \"{{checkInDate_v2}}\",\r\n        \"checkOutDate\": \"{{checkOutDate_v2}}\",\r\n        \"numAdults\": 2,\r\n        \"numChildren\": 0,\r\n        \"numRooms\": 1,\r\n        \"numAdultsValid\": true\r\n    },\r\n    \"bookings\": [\r\n        {\r\n            \"date\": \"2021-08-05\",\r\n            \"basePrice\": 110,\r\n            \"customerPrice\": 0,\r\n            \"price\": 110,\r\n            \"programIdIsRateTable\": false,\r\n            \"overridePrice\": -1,\r\n            \"overrideProgramIdIsRateTable\": false,\r\n            \"resortFeeIsSpecified\": false,\r\n            \"resortFee\": 0,\r\n            \"programId\": \"RPCD-v-AAA10-d-PROP-v-MV021\",\r\n            \"isComp\": false\r\n        },\r\n        {\r\n            \"date\": \"2021-08-06\",\r\n            \"basePrice\": 110,\r\n            \"customerPrice\": 0,\r\n            \"price\": 110,\r\n            \"programIdIsRateTable\": false,\r\n            \"overridePrice\": -1,\r\n            \"overrideProgramIdIsRateTable\": false,\r\n            \"resortFeeIsSpecified\": false,\r\n            \"resortFee\": 0,\r\n            \"programId\": \"RPCD-v-AAA10-d-PROP-v-MV021\",\r\n            \"isComp\": false\r\n        }\r\n    ],\r\n    \"markets\": null,\r\n    \"chargesAndTaxes\": {\r\n        \"charges\": [\r\n            {\r\n                \"date\": \"2021-04-29\",\r\n                \"amount\": 184,\r\n                \"itemized\": [\r\n                    {\r\n                        \"active\": false,\r\n                        \"itemType\": \"RoomCharge\",\r\n                        \"amount\": 110\r\n                    },\r\n                    {\r\n                        \"active\": false,\r\n                        \"itemType\": \"ResortFee\",\r\n                        \"amount\": 74\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"date\": \"2021-04-30\",\r\n                \"amount\": 184,\r\n                \"itemized\": [\r\n                    {\r\n                        \"active\": false,\r\n                        \"itemType\": \"RoomCharge\",\r\n                        \"amount\": 110\r\n                    },\r\n                    {\r\n                        \"active\": false,\r\n                        \"itemType\": \"ResortFee\",\r\n                        \"amount\": 74\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"taxesAndFees\": [\r\n            {\r\n                \"date\": \"2021-04-29\",\r\n                \"amount\": 24.62,\r\n                \"itemized\": [\r\n                    {\r\n                        \"active\": false,\r\n                        \"itemType\": \"RoomChargeTax\",\r\n                        \"amount\": 14.72\r\n                    },\r\n                    {\r\n                        \"active\": false,\r\n                        \"itemType\": \"ResortFeeTax\",\r\n                        \"amount\": 9.9\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"date\": \"2021-04-30\",\r\n                \"amount\": 24.62,\r\n                \"itemized\": [\r\n                    {\r\n                        \"active\": false,\r\n                        \"itemType\": \"RoomChargeTax\",\r\n                        \"amount\": 14.72\r\n                    },\r\n                    {\r\n                        \"active\": false,\r\n                        \"itemType\": \"ResortFeeTax\",\r\n                        \"amount\": 9.9\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    \"depositDetails\": {\r\n        \"dueDate\": \"2021-04-26\",\r\n        \"amount\": 208.62,\r\n        \"forfeitDate\": \"2021-04-26\",\r\n        \"forfeitAmount\": 208.62,\r\n        \"overrideAmount\": -1\r\n    },\r\n    \"depositPolicy\": null,\r\n    \"payments\": null,\r\n    \"amountDue\": 0,\r\n    \"guaranteeCode\": \"CC\",\r\n    \"customerRank\": 0,\r\n    \"customerSegment\": 0,\r\n    \"customerDominantPlay\": null,\r\n    \"rrUpSell\": \"\",\r\n    \"alerts\": null,\r\n    \"routingInstructions\": null,\r\n    \"traces\": null,\r\n    \"shareWithCustomers\": null,\r\n    \"comments\": null,\r\n    \"additionalComments\": [],\r\n    \"agentInfo\": null,\r\n    \"myVegasPromoCode\": null,\r\n    \"isGroupCode\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/reservation/charges"
							},
							"response": []
						}
					]
				},
				{
					"name": "Find Reservation",
					"item": [
						{
							"name": "Find Reservation V2 - Success",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 01 : Single Availability with Checkin Date, Checkout Date, Property Id and Number of Adults\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"  pm.response.to.have.header(\"Content-Type\");\r",
											"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"\r",
											"  var jsonData = JSON.parse(pm.response.stream);\r",
											"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
											"  pm.expect(null).not.eq(jsonData);\r",
											"  pm.expect(0).not.equal(jsonData.length);\r",
											"  pm.expect(null).not.eq(jsonData.availability[0]);\r",
											"  pm.expect(0).not.equal(jsonData.availability[0].price.itemized.length);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-mgm-source",
										"value": "{{x-mgm-source}}",
										"type": "text"
									},
									{
										"key": "x-mgm-channel",
										"value": "{{x-mgm-channel}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{JWT_Token}}",
										"type": "text"
									},
									{
										"key": "x-mgm-transaction-id",
										"value": "rbs-v2-functional-{{$timestamp}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/reservation?confirmationNumber={{bookedConfirmationNumber}}",
									"protocol": "https",
									"host": [
										"{{APIM_Endpoint}}{{Function_Environment}}"
									],
									"path": [
										"v2",
										"reservation"
									],
									"query": [
										{
											"key": "confirmationNumber",
											"value": "{{bookedConfirmationNumber}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find Reservation V2 - Success Promo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"RBS_ACRS_V2 | Test case 01 : Single Availability with Checkin Date, Checkout Date, Property Id and Number of Adults\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"  pm.response.to.have.header(\"Content-Type\");\r",
											"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
											"\r",
											"  var jsonData = JSON.parse(pm.response.stream);\r",
											"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
											"  pm.expect(null).not.eq(jsonData);\r",
											"  pm.expect(0).not.equal(jsonData.length);\r",
											"  pm.expect(null).not.eq(jsonData.availability[0]);\r",
											"  pm.expect(0).not.equal(jsonData.availability[0].price.itemized.length);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-mgm-source",
										"value": "{{x-mgm-source}}",
										"type": "text"
									},
									{
										"key": "x-mgm-channel",
										"value": "{{x-mgm-channel}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{JWT_Token}}",
										"type": "text"
									},
									{
										"key": "x-mgm-transaction-id",
										"value": "rbs-v2-functional-{{$timestamp}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/reservation?confirmationNumber={{validConfirmationNumberPromo}}",
									"protocol": "https",
									"host": [
										"{{APIM_Endpoint}}{{Function_Environment}}"
									],
									"path": [
										"v2",
										"reservation"
									],
									"query": [
										{
											"key": "confirmationNumber",
											"value": "{{validConfirmationNumberPromo}}"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "programs",
			"item": [
				{
					"name": "Offers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"RBS_ACRS_V1 | Test case 01 : Offer Search with Start Date, End Date, Program Id\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"  pm.response.to.have.header(\"Content-Type\");\r",
									"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
									"\r",
									"  var jsonData = JSON.parse(pm.response.stream);\r",
									"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
									"  pm.expect(null).not.eq(jsonData);\r",
									"  pm.expect(0).not.equal(jsonData.length);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-mgm-source",
								"type": "text",
								"value": "{{x-mgm-source}}"
							},
							{
								"key": "x-mgm-channel",
								"type": "text",
								"value": "{{x-mgm-channel}}"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{JWT_Token}}"
							},
							{
								"key": "x-mgm-transaction-id",
								"type": "text",
								"value": "rbs-v2-functional-{{$timestamp}}"
							}
						],
						"url": {
							"raw": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/offers?programIds=53ac51f6-4d0a-4921-b9b2-82acdf093963,4dcc7646-5510-4971-bbfc-25169773f24e&startDate=2020-05-10&endDate=2021-05-10",
							"protocol": "https",
							"host": [
								"{{APIM_Endpoint}}{{Function_Environment}}"
							],
							"path": [
								"v2",
								"offers"
							],
							"query": [
								{
									"key": "programIds",
									"value": "53ac51f6-4d0a-4921-b9b2-82acdf093963,4dcc7646-5510-4971-bbfc-25169773f24e"
								},
								{
									"key": "startDate",
									"value": "2020-05-10"
								},
								{
									"key": "endDate",
									"value": "2021-05-10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Offers Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"RBS_ACRS_V1 | Test case 01 : Offer Search with Start Date, End Date, Group Id\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"  pm.response.to.have.header(\"Content-Type\");\r",
									"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
									"\r",
									"  var jsonData = JSON.parse(pm.response.stream);\r",
									"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
									"  pm.expect(null).not.eq(jsonData);\r",
									"  pm.expect(0).not.equal(jsonData.length);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-mgm-source",
								"type": "text",
								"value": "{{x-mgm-source}}"
							},
							{
								"key": "x-mgm-channel",
								"type": "text",
								"value": "{{x-mgm-channel}}"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{JWT_Token}}"
							},
							{
								"key": "x-mgm-transaction-id",
								"type": "text",
								"value": "rbs-v2-functional-{{$timestamp}}"
							}
						],
						"url": {
							"raw": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/offers?programIds=GRPCD-v-GR1-d-PROP-v-MV021&startDate=2020-05-10&endDate=2021-05-10",
							"protocol": "https",
							"host": [
								"{{APIM_Endpoint}}{{Function_Environment}}"
							],
							"path": [
								"v2",
								"offers"
							],
							"query": [
								{
									"key": "programIds",
									"value": "GRPCD-v-GR1-d-PROP-v-MV021"
								},
								{
									"key": "startDate",
									"value": "2020-05-10"
								},
								{
									"key": "endDate",
									"value": "2021-05-10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Program isApplicable",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"RBS_ACRS_V2 | Test case 01 : is Applicable Program with Checkin Date, Checkout Date, Property Id\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"  pm.response.to.have.header(\"Content-Type\");\r",
									"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
									"\r",
									"  var jsonData = JSON.parse(pm.response.stream);\r",
									"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
									"  pm.expect(null).not.eq(jsonData);\r",
									"  pm.expect(0).not.equal(jsonData.length);\r",
									"  pm.expect(jsonData.programIds.length).not.equal(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-mgm-source",
								"type": "text",
								"value": "ICE"
							},
							{
								"key": "x-mgm-channel",
								"type": "text",
								"value": "ICE"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{JWT_Token}}"
							},
							{
								"key": "x-mgm-transaction-id",
								"type": "text",
								"value": "rbs-v2-functional-{{$timestamp}}"
							}
						],
						"url": {
							"raw": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/programs/applicable?bookDate=2023-02-20&travelDate=2023-03-20&propertyId=dc00e77f-d6bb-4dd7-a8ea-dc33ee9675ad&checkInDate=2023-04-20&checkOutDate=2023-04-24&numAdults=2&numChildren=0",
							"protocol": "https",
							"host": [
								"{{APIM_Endpoint}}{{Function_Environment}}"
							],
							"path": [
								"v2",
								"programs",
								"applicable"
							],
							"query": [
								{
									"key": "bookDate",
									"value": "2023-02-20"
								},
								{
									"key": "travelDate",
									"value": "2023-03-20"
								},
								{
									"key": "propertyId",
									"value": "dc00e77f-d6bb-4dd7-a8ea-dc33ee9675ad"
								},
								{
									"key": "checkInDate",
									"value": "2023-04-20"
								},
								{
									"key": "checkOutDate",
									"value": "2023-04-24"
								},
								{
									"key": "numAdults",
									"value": "2"
								},
								{
									"key": "numChildren",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Program validate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"RBS_ACRS_V2 | Test case 01 : is Applicable Program with Checkin Date, Checkout Date, Property Id\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"  pm.response.to.have.header(\"Content-Type\");\r",
									"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
									"\r",
									"  var jsonData = JSON.parse(pm.response.stream);\r",
									"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
									"  pm.expect(null).not.eq(jsonData);\r",
									"  pm.expect(0).not.equal(jsonData.length);\r",
									"  pm.expect(jsonData.programId).eq('RPCD-v-PREVL-d-PROP-v-MV021');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-mgm-source",
								"type": "text",
								"value": "ICE"
							},
							{
								"key": "x-mgm-channel",
								"type": "text",
								"value": "ICE"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{JWT_Token}}"
							},
							{
								"key": "x-mgm-transaction-id",
								"type": "text",
								"value": "rbs-v2-functional-{{$timestamp}}"
							}
						],
						"url": {
							"raw": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/offer/validate?propertyId=dc00e77f-d6bb-4dd7-a8ea-dc33ee9675ad&programId=RPCD-v-PREVL-d-PROP-v-MV021",
							"protocol": "https",
							"host": [
								"{{APIM_Endpoint}}{{Function_Environment}}"
							],
							"path": [
								"v2",
								"offer",
								"validate"
							],
							"query": [
								{
									"key": "propertyId",
									"value": "dc00e77f-d6bb-4dd7-a8ea-dc33ee9675ad"
								},
								{
									"key": "programId",
									"value": "RPCD-v-PREVL-d-PROP-v-MV021"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Customer Offers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"RBS_ACRS_V2 | Test case 01 : Group Search with Start Date, End Date, Property Id and Group Code\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"  pm.response.to.have.header(\"Content-Type\");\r",
									"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
									"\r",
									"  var jsonData = JSON.parse(pm.response.stream);\r",
									"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
									"  pm.expect(null).not.eq(jsonData);\r",
									"  pm.expect(0).not.equal(jsonData.length);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-mgm-source",
								"type": "text",
								"value": "{{x-mgm-source}}"
							},
							{
								"key": "x-mgm-channel",
								"type": "text",
								"value": "{{x-mgm-channel}}"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{JWT_Token}}"
							},
							{
								"key": "x-mgm-transaction-id",
								"type": "text",
								"value": "rbs-v2-functional-{{$timestamp}}"
							}
						],
						"url": {
							"raw": "https://{{APIM_Endpoint}}{{Function_Environment}}/v2/customer/offers?customerId=-1&propertyId=8bf670c2-3e89-412b-9372-6c87a215e442",
							"protocol": "https",
							"host": [
								"{{APIM_Endpoint}}{{Function_Environment}}"
							],
							"path": [
								"v2",
								"customer",
								"offers"
							],
							"query": [
								{
									"key": "customerId",
									"value": "-1"
								},
								{
									"key": "propertyId",
									"value": "8bf670c2-3e89-412b-9372-6c87a215e442"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}