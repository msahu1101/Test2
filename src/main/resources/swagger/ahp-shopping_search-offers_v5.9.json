{
  "swagger": "2.0",
  "info": {
    "version": "5.9.0",
    "title": "1A_REST_JSON_Search_Offer",
    "x-release-note": {
      "5.9.0": [
        "########## New in Request ################",
        "options.cfNumber - Single",
        "########## Other Changes ################",
        "properties feeCurrency description- removed",
        "chaincode pattern {2,3} added min and max length",
        "pattern for creditCards and message added"
      ],
      "5.8.1": [
        "########## New in Response ################",
        "data.alternateProperties - Single (Error response 404) - Added example value",
        "########## Other Changes ################",
        "Updated multiple objects description to match Linting Rules",
        "RULE016 - Parameters description should start with lower case and should not end with a dot",
        "RULE015 - Models description should start with lower-case letter or number and should not end with a dot",
        "RULE024 - The pattern is recommended for the strings that are not enum or parameter"
      ],
      "5.8.0": [
        "########## New in Request ################",
        "query.parameter.views -Multi- Updated description to add new view \"minOfferPerHotel\"(aka Multi-LowestRate-availability)",
        "requestedRatesMulti[].properties.customDisplay - Multi",
        "########## New in Response ################",
        "ratePlans[].customDisplay -Multi",
        "ratePlans[].areAmtsConfidential - Multi"
      ],
      "5.7.0": [
        "########## New in Response ################",
        "data.products[ ].maxAdultOccupancy - Single, Pricing",
        "data.products[ ].maxChildOccupancy - Single, Pricing"
      ],
      "5.6.0": [
        "########## New in Response ################",
        "guarantee.code - Single, Pricing",
        "guarantee.acceptedGuarantees.guaranteeTypes[] - Single, Pricing",
        "deposit.code - Single, Pricing",
        "cancellation.code - Single, Pricing",
        "cancellationNoShow.code - Single, Pricing",
        "########## Update in Response ################",
        "guarantee.time description updated - Single, Pricing"
      ],
      "5.5.1": [
        "########## New in Response ################",
        "ratePlans[].rateAccessCodes[] -Pricing. Correction on missing field from 5.4.0"
      ],
      "5.5.0": [
        "########## New in Request ################",
        "options.oneOffOffer - Single",
        "########## New in Response ################",
        "ratePlans[].travelAgency.code - Multi, Single, Pricing",
        "ratePlans[].travelAgency.affiliation - Multi, Single, Pricing",
        "########## New error ################",
        "added HTTP error 429"
      ],
      "5.4.0": [
        "########## Update in Request ################",
        "rates.rateAccessCodes[] description updated. No more than 8 codes are expected. Any extra code is ignored - Multi, Single",
        "########## New in Response ################",
        "offers[].commission.valueType - Single, Pricing",
        "offers[].commission.value - Single, Pricing",
        "offers[].commission.currency - Single, Pricing",
        "requestedOffer.productUses[].rates.dailyRates[].isPrimaryRate - Pricing",
        "offers[].rateAccessCode - Multi, Single",
        "ratePlans[].rateAccessCodes[] - Single, Pricing",
        "productUses[].pricingFrequency added to provide this information for mandatory products of predefined packages - Multi, Single, Pricing",
        "productUses[].pricingMethod added to provide this information for mandatory products of predefined packages - Multi, Single, Pricing",
        "productUses[].bookingPattern added to provide this information for mandatory products of predefined packages - Multi, Single, Pricing",
        "########## Update in Response ################",
        "data.alternateProperties marked as deprecated - Single",
        "offers[].bookingCodes[].rateAccessCode marked as deprecated - Multi, Single",
        "ratePlans[].rateAccessCodes[] - No more than 8 codes would be returned, to reflect input limitation - Multi",
        "requestedOffer[].bookingCodes[].rateAccessCode marked as deprecated - Pricing",
        "ratePlans[].cdNumbers[] description added - Multi, Single, Pricing",
        "data.groupContract.cdNumbers[] description added - Single, Pricing",
        "########## New error ################",
        "added error 401",
        "alternate property information will now come with error 404"
      ],
      "5.3.3": [
        "########## Other Changes ###################",
        "data.hotels[].ratePlans[].rateAccessCodes[] content correction from array[string] to array[object], object now contains a code, name and description - Multi"
      ],
      "5.3.2": [
        "########## Other Changes ###################",
        "offers[].policies|guarantee|acceptedGuarantees|.creditCards[] - correction of creditCards object to remove additionalProperties"
      ],
      "5.3.1": [
        "########## Other Changes ###################",
        "rates.promoCode - replaced incorrect pattern of 20 with correct Maximum Length of 50 - Multi, Single requests",
        "data.promoCode - replaced incorrect pattern of 20 with correct Maximum Length of 50 - Pricing request",
        "URL path parameter ratePlanCode max length corrected from 8 to 50 - Pricing",
        "data.denials[].ratePlanCode - corrected max length from 8 to 50 - Single, Pricing",
        "ratePlans[].promoCode - replaced incorrect pattern of 20 with correct Maximum Length of 50 - Multi, Single, Pricing response",
        "updated description of Multi Avail views."
      ],
      "5.3.0": [
        "########## New in Response ################",
        "offers[].productUses[].rates.dailyRates[].isPrimaryRate - Single",
        "requestedOffer.productUses[].rates.dailyRates[].isPrimaryRate - Pricing"
      ],
      "5.2.0": [
        "########## New in Request #################",
        "options.includePublicRates - Single",
        "new enum value, description for options.includePublicRates - Multi",
        "rates.promoCode - Multi,Single",
        "data.promoCode - Pricing",
        "new option minMaxOfferPerHotel for the \"view\" parameter - Multi",
        "options.includeTaxAverageDetails - Multi",
        "########## New in Response ################",
        "hotels[].products[].desc - Multi",
        "ratePlans[].promoCode",
        "policies.policyTypeCode - Single, Pricing",
        "taxDefinitions[].isPaidAtHotel - Single, Pricing",
        "offers[].avg|highest|checkin.payHotelSubTtlSvcChgExc - Multi",
        "offers[].avg|highest|checkin.payableSubTtlSvcChgExc - Multi",
        "offers[].avg|highest|checkin.payHotelSubTtlTxExc - Multi",
        "offers[].avg|highest|checkin.payableSubTtlTxExc - Multi",
        "offers[].avg|highest|checkin.payableAmtAfTx - Multi",
        "totalRate|totalBaseOccRate|totalExtraOccRate.avg|highest|checkin.payHotelSubTtlSvcChgExc - Single, Pricing",
        "totalRate|totalBaseOccRate|totalExtraOccRate.avg|highest|checkin.payableSubTtlSvcChgExc - Single, Pricing",
        "totalRate|totalBaseOccRate|totalExtraOccRate.avg|highest|checkin.payHotelSubTtlTxExc - Single, Pricing",
        "totalRate|totalBaseOccRate|totalExtraOccRate.avg|highest|checkin.payableSubTtlTxExc - Single, Pricing",
        "totalRate|totalBaseOccRate|totalExtraOccRate.avg|highest|checkin.payableAmtAfTx - Single, Pricing",
        "offers[].productUses[].rates.dailyRates[].dailyTotalRate.payableTotalTaxes - Single",
        "offers[].productUses[].rates.dailyRates[].dailyTotalRate.payHotelTotalTaxes - Single",
        "offers[].productUses[].rates.dailyRates[].dailyTotalRate.payableAmtAfTx - Single",
        "productUses[].rates.dailyRates[].dailyBaseOccRate|dailyExtraOccRate|dailyTotalRate.payHotelSubTtlSvcChgExc - Pricing",
        "productUses[].rates.dailyRates[].dailyBaseOccRate|dailyExtraOccRate|dailyTotalRate.payableSubTtlSvcChgExc - Pricing",
        "productUses[].rates.dailyRates[].dailyBaseOccRate|dailyExtraOccRate|dailyTotalRate.payHotelSubTtlTxExc - Pricing",
        "productUses[].rates.dailyRates[].dailyBaseOccRate|dailyExtraOccRate|dailyTotalRate.payableSubTtlTxExc - Pricing",
        "productUses[].rates.dailyRates[].dailyBaseOccRate|dailyExtraOccRate|dailyTotalRate.payableTotalTaxes - Pricing",
        "productUses[].rates.dailyRates[].dailyBaseOccRate|dailyExtraOccRate|dailyTotalRate.payHotelTotalTaxes - Pricing",
        "productUses[].rates.dailyRates[].dailyBaseOccRate|dailyExtraOccRate|dailyTotalRate.payableAmtAfTx - Pricing",
        "totalRate|totalBaseOccRate|totalExtraOccRate.payHotelSubTtlSvcChgExc - Single, Pricing",
        "totalRate|totalBaseOccRate|totalExtraOccRate.payableSubTtlSvcChgExc - Single, Pricing",
        "totalRate|totalBaseOccRate|totalExtraOccRate.payHotelSubTtlTxExc - Single, Pricing",
        "totalRate|totalBaseOccRate|totalExtraOccRate.payableSubTtlTxExc - Single, Pricing",
        "totalRate|totalBaseOccRate|totalExtraOccRate.payableTotalTaxes - Single, Pricing",
        "totalRate|totalBaseOccRate|totalExtraOccRate.payHotelTotalTaxes - Single, Pricing",
        "hotel.taxDefinitions[] - Multi",
        "offers[].avg.taxGroups[] - Multi",
        "########## Other Changes ###################",
        "fix of 5.1 release note",
        "options.includeSellStrategy description in Single",
        "new enum value- hotels[].rateDetails.offers[].productUses[].rates.bookingPattern - Multi",
        "new enum value- offers[].productUses[].rates.bookingPattern - Single",
        "new enum value- requestedOffer.productUses[0].rates.bookingPattern - Pricing",
        "new enum value- additionalOffers[0].productUses[0].rates.bookingPattern - Pricing",
        "inventoryTypeCode, pricePlanCodes min length",
        "min length - data.hotels[].hotel.freeGuestsDefinitions[].pricePlanCodes[] - Multi RS",
        "min length - data.hotels[].hotel.freeGuestsDefinitions[].inventoryTypeCodes - Multi RS",
        "min length - data.hotels[].rateDetails.offers[].productUses[].inventoryTypeCode - Multi RS",
        "min length - data.products[].inventoryTypeCode - Multi RQ",
        "min length - data.hotel.freeGuestsDefinitions[].inventoryTypeCodes - Single RS",
        "min length - data.hotel.freeGuestsDefinitions[].pricePlanCodes - Single RS",
        "min length - data.offers[].productUses[].inventoryTypeCode - Single RS",
        "min length - data.denials[].pricePlanCode - Single RS",
        "min length - data.products[].inventoryTypeCode - Single RQ",
        "min length - data.products[].inventoryTypeCode - Pricing RS",
        "min length - data.hotel.freeGuestsDefinitions[].inventoryTypeCodes - Pricing RS",
        "min length - data.hotel.freeGuestsDefinitions[].pricePlanCodes - Pricing RS",
        "min length - data.requestedOffer.productUses[].inventoryTypeCode - Pricing RS",
        "min length - data.additionalOffers[].productUses[].inventoryTypeCode - Pricing RS",
        "min length - data.denials[].pricePlanCode - Pricing RS",
        "min length - data.products[].inventoryTypeCode - Pricing RQ"
      ],
      "5.1.0": [
        "########## New in Response ################",
        "addition of longDesc attribute",
        "addition of gamingBucket attribute in the Single response",
        "########## Other Changes ###################",
        "extension of rate plan code length, inventory type code, pricegridcode length",
        "extension of group code length in Single request",
        "update of ratePlanLongDescFlag's description"
      ],
      "5.0.0": [
        "########## New Features ###################",
        "Inclusive Tax & Service Charge Totals and Subtotals by Channel Preferred Rate",
        "Consumption rules",
        "Shopping by Guest Type",
        "Taxes, Service Charges and Fees by Guest Type/ Age",
        "Pricing by Occupancy and Guest Type",
        "Free Guest Types",
        "Policy Type in Reservation",
        "Perpetual Offers",
        "Rate Access Code",
        "########## New in Request #################",
        "products[].guestCounts[] - Multi, Single, Pricing - new structure with otaCode, count, age",
        "options.perpetualOffer - Single",
        "options.loyalty.valueTierOverride - Single",
        "options.loyalty.playDominanceOverride - Single",
        "rates.rateAccessCodes[] - Multi, Single",
        "data.rateAccessCode - Pricing",
        "functional payload of POST requests must now be sent in a data node",
        "########## New in Response ################",
        "offers[].avg - Multi",
        "offers[].highest - Multi",
        "offers[].checkin - Multi",
        "totalRate|totalBaseOccRate|TotalExtraOccRate.avg - Single, Pricing",
        "totalRate|totalBaseOccRate|TotalExtraOccRate.highest - Single, Pricing",
        "totalRate|totalBaseOccRate|TotalExtraOccRate.checkin - Single, Pricing",
        "totalRate|totalBaseOccRate|TotalExtraOccRate.subTtlSvcChgExc - Single, Pricing",
        "totalRate|totalBaseOccRate|TotalExtraOccRate.subTtlSvcChgInc - Single, Pricing",
        "totalRate|totalBaseOccRate|TotalExtraOccRate.subTtlTxExc - Single, Pricing",
        "totalRate|totalBaseOccRate|TotalExtraOccRate.subTtlTxInc - Single, Pricing",
        "rates.bookingPattern - Single, Pricing",
        "rates.pricingFrequency - new enum value \"PerUse\" - Single, Pricing",
        "hotel.GuestTypeDefinitions - return the age range for request guests - Multi, Single, Pricing",
        "productUses[].guestCounts[] - new structure with guestType, otaCode, count, age - Multi, Single, Pricing",
        "taxDefinitions[].value renamed values and changed from string to array[object] - Single, Pricing",
        "rates.pricingMethod - new enum values \"PerProductPerOcc\" and \"PerProductPerGuestType\" - Single, Pricing",
        "hotel.freeGuestsDefinitions[] - Multi, Single, Pricing",
        "offers[].freeGuestsDefIds - Multi, Single",
        "requestedOffer.freeGuestsDefIds - Pricing",
        "additionalOffers[].freeGuestsDefIds - Pricing",
        "ratePlans[].policyTypeCode - Single, Pricing",
        "ProductUses[].ratePlanCode - Single",
        "dailyTotalRate.taxList - Single",
        "dailyTotalRate.totalTaxes - Single",
        "ratePlans[].rateAccessCodes[] - Multi",
        "offers[].bookingCodes[] - Multi, Single",
        "requestedOffer.rateAccessCode - Pricing",
        "productUses[].isConsumedNextDay - Pricing",
        "########## Renamed in Request #############",
        "productCode renamed inventoryTypeCode - Multi, Single, Pricing",
        "productTypeCode renamed productCode - Multi, Single, Pricing",
        "URI?property_codes renamed URI?propertyCodes - Multi",
        "URI?property_code renamed URI?propertyCode - Single, Pricing",
        "URI?start_date renamed URI?startDate - Multi, Single, Pricing",
        "########## Renamed in Response ############",
        "taxAmount.OTAcode renamed taxAmount.otaCode (to be aligned with Reservation API) - Single, Pricing",
        "taxDefinitions[].OTAcode renamed taxTypeCode - Single, Pricing",
        "taxDefinitions[].productTypeCode renamed productCodes - Single, Pricing",
        "taxDefinitions[].taxOn renamed computationMode - Single, Pricing",
        "taxDefinitions[].isInclusive renamed isIncluded - Single, Pricing",
        "taxDefinitions[].startDate & endDate renamed start & end - Single, Pricing",
        "productCode renamed inventoryTypeCode - Multi, Single, Pricing",
        "productTypeCode renamed productCode - Multi, Single, Pricing",
        "productName renamed inventoryTypeName - Multi, Single, Pricing",
        "productTypeName renamed productName - Multi, Single, Pricing",
        "priceGrid renamed pricePlan - Single, Pricing",
        "amount renamed amt - Multi, Single, Pricing",
        "average renamed avg - Multi, Single, Pricing",
        "averageRate renamed avgRate - Multi",
        "ratesDefinition renamed ratesDef - Multi, Single",
        "description renamed desc - Multi, Single",
        "productLinesDescriptions renamed productLinesDescs - Multi, Single, Pricing",
        "attributesCodes renamed attCodes - Multi, Single, Pricing",
        "maximumNumberParticipant renamed maxNbParticipant - Multi, Single, Pricing",
        "########## Removed in Request ##############",
        "data.guestCounts[] - Multi, Single, Pricing",
        "ama-api-version from header - Multi, Single, Pricing",
        "products[].categoryCode - Multi, Single",
        "########## Removed in Response #############",
        "totalRate|totalBaseOccRate|TotalExtraOccRate.daily[] - Single, Pricing",
        "totalRate|totalBaseOccRate|TotalExtraOccRate.subTotalServiceCharge[] - Single, Pricing",
        "totalRate|totalBaseOccRate|TotalExtraOccRate.subTotalTaxes[] - Single, Pricing",
        "offers[].bookingCode - Multi, Single",
        "########## Description Update ##############",
        "products[].guestCounts[] - Multi, Single, Pricing",
        "HTTP error description - Multi, Single, Pricing",
        "channel preferred rate (daily average, checkin, highest) to precise the amount is for quantity 1 - Multi, Single, Pricing",
        "Description updated for field availStatus under products and ratePlans - Multi, Single",
        "########## Other Changes ###################",
        "totalBaseOccRate becomes optional - Single, Pricing",
        "Replacement of returnRateDetails (boolean from API body) by a view (query parameter) to distinguish 2 views: hotelPriceRange (aka Multi-availability). minMaxOfferPerRatePlan (aka Multi-Single-availability) - Multi"
      ]
    },
    "description": "The Search Offer API of the Amadeus Hospitality CRS application allows to search offers, multi hotel, single hotel and retrieve an offer details.",
    "termsOfService": "https://developers.amadeus.com",
    "contact": {
      "name": "Amadeus Hospitality Systems Integration"
    },
    "license": {
      "name": "Amadeus IT Group SA",
      "url": "http://www.amadeus.com/"
    }
  },
  "schemes": [
    "https"
  ],
  "tags": [
    {
      "name": "Search offer",
      "description": "The Search Offers API of the Amadeus Hospitality CRS application allows to search offers and retrieve offer details for single or multiple hotels."
    }
  ],
  "basePath": "/v5/hotel",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/offers/searches/{chainCode}": {
      "post": {
        "tags": [
          "Search offer"
        ],
        "description": "The operation multi-availability allows to search offers for multiple properties",
        "operationId": "postMultiRequest",
        "summary": "multi-availability",
        "parameters": [
          {
            "$ref": "#/parameters/ama-pos"
          },
          {
            "$ref": "#/parameters/ama-channel-identifiers"
          },
          {
            "$ref": "#/parameters/chainCode"
          },
          {
            "$ref": "#/parameters/propertyCodes"
          },
          {
            "$ref": "#/parameters/start"
          },
          {
            "$ref": "#/parameters/duration"
          },
          {
            "$ref": "#/parameters/view"
          },
          {
            "$ref": "#/parameters/bodyParameterMulti"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/successfulMultiAvailability"
          },
          "400": {
            "$ref": "#/responses/responseError400"
          },
          "401": {
            "$ref": "#/responses/responseError401"
          },
          "403": {
            "$ref": "#/responses/responseError403"
          },
          "404": {
            "$ref": "#/responses/responseError404"
          },
          "429": {
            "$ref": "#/responses/responseError429"
          },
          "500": {
            "$ref": "#/responses/responseError500"
          }
        }
      }
    },
    "/offers/searches/{chainCode}/{propertyCode}": {
      "post": {
        "tags": [
          "Search offer"
        ],
        "description": "The operation single-availability allows to search offers for a given property",
        "operationId": "postSingleRequest",
        "summary": "single-availability",
        "parameters": [
          {
            "$ref": "#/parameters/ama-pos"
          },
          {
            "$ref": "#/parameters/ama-channel-identifiers"
          },
          {
            "$ref": "#/parameters/chainCode"
          },
          {
            "$ref": "#/parameters/propertyCode"
          },
          {
            "$ref": "#/parameters/start"
          },
          {
            "$ref": "#/parameters/duration"
          },
          {
            "$ref": "#/parameters/bodyParameterSingle"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/successfulSingleAvailability"
          },
          "400": {
            "$ref": "#/responses/responseError400"
          },
          "401": {
            "$ref": "#/responses/responseError401"
          },
          "403": {
            "$ref": "#/responses/responseError403"
          },
          "404": {
            "$ref": "#/responses/responseErrorSingle404"
          },
          "429": {
            "$ref": "#/responses/responseError429"
          },
          "500": {
            "$ref": "#/responses/responseError500"
          }
        }
      }
    },
    "/offers/searches/{chainCode}/{propertyCode}/{ratePlanCode}": {
      "post": {
        "tags": [
          "Search offer"
        ],
        "description": "The operation retrieve-pricing allows to retrieve details for a specific offers along with a list of add-ons proposals",
        "operationId": "postPricingRequest",
        "summary": "retrieve-pricing",
        "parameters": [
          {
            "$ref": "#/parameters/ama-pos"
          },
          {
            "$ref": "#/parameters/ama-channel-identifiers"
          },
          {
            "$ref": "#/parameters/chainCode"
          },
          {
            "$ref": "#/parameters/propertyCode"
          },
          {
            "$ref": "#/parameters/start"
          },
          {
            "$ref": "#/parameters/duration"
          },
          {
            "$ref": "#/parameters/rateCode"
          },
          {
            "$ref": "#/parameters/bodyParameterPricing"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/successfulPricing"
          },
          "400": {
            "$ref": "#/responses/responseError400"
          },
          "401": {
            "$ref": "#/responses/responseError401"
          },
          "403": {
            "$ref": "#/responses/responseError403"
          },
          "404": {
            "$ref": "#/responses/responseErrorPricing404"
          },
          "429": {
            "$ref": "#/responses/responseError429"
          },
          "500": {
            "$ref": "#/responses/responseError500"
          }
        }
      }
    }
  },
  "parameters": {
    "ama-pos": {
      "name": "Ama-Pos",
      "in": "header",
      "required": false,
      "type": "string",
      "description": "schema must match with Ama-Pos definition"
    },
    "ama-channel-identifiers": {
      "name": "Ama-Channel-Identifiers",
      "in": "header",
      "required": false,
      "type": "string",
      "description": "schema must match with Ama-Channel-Identifiers definition"
    },
    "chainCode": {
      "name": "chainCode",
      "in": "path",
      "required": true,
      "description": "3 characters chain code",
      "type": "string",
      "minLength": 1,
      "maxLength": 3
    },
    "start": {
      "name": "startDate",
      "in": "query",
      "required": true,
      "description": "check-in date of the availability.  The lowest accepted value is the present date. No dates in the past",
      "type": "string",
      "format": "date"
    },
    "duration": {
      "name": "duration",
      "in": "query",
      "required": true,
      "description": "length of the stay. Number of days required followed by letter D. For instance, 2D for 2 days",
      "type": "string"
    },
    "view": {
      "name": "view",
      "in": "query",
      "required": true,
      "description": "level of detail requested. Available views: hotelPriceRange (price ranges at hotel level, also referred to as \"Multi with price range\"), minMaxOfferPerRatePlan (lowest and highest offers per RatePlan per hotel, also referred to as \"Multi with min max offers by rate plan\"),minMaxOfferPerHotel (lowest and highest offers per Hotel, also referred to as \"Multi with min max offers\") and minOfferPerHotel (lowest offer per Hotel, also referred to as \"Multi with Lowest Offer\")",
      "type": "string"
    },
    "propertyCodes": {
      "name": "propertyCodes",
      "in": "query",
      "required": true,
      "description": "a list of hotel internal codes. The list of codes has the following syntax: property_codes = PROP1,PROP2,PROP3",
      "type": "array",
      "maxItems": 10,
      "items": {
        "type": "string",
        "minLength": 1,
        "maxLength": 8,
        "pattern": "^.*$"
      }
    },
    "propertyCode": {
      "name": "propertyCode",
      "in": "path",
      "required": true,
      "description": "requested hotel code",
      "type": "string",
      "minLength": 1,
      "maxLength": 8,
      "pattern": "^.*$"
    },
    "rateCode": {
      "name": "ratePlanCode",
      "in": "path",
      "required": true,
      "description": "requested rate plan code",
      "type": "string",
      "minLength": 1,
      "maxLength": 50,
      "pattern": "^.*$"
    },
    "bodyParameterMulti": {
      "name": "bodyParameter",
      "in": "body",
      "schema": {
        "$ref": "#/definitions/bodyParameterMulti"
      }
    },
    "bodyParameterSingle": {
      "name": "bodyParameter",
      "in": "body",
      "schema": {
        "$ref": "#/definitions/bodyParameterSingle"
      }
    },
    "bodyParameterPricing": {
      "name": "bodyParameter",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/bodyParameterPricing"
      }
    }
  },
  "definitions": {
    "bodyParameterMulti": {
      "description": "the body section, containing the data and sub-resources",
      "type": "object",
      "properties": {
        "data": {
          "title": "dataRqMulti",
          "type": "object",
          "properties": {
            "currency": {
              "$ref": "#/definitions/currency"
            },
            "rates": {
              "$ref": "#/definitions/requestedRatesMulti"
            },
            "products": {
              "type": "array",
              "description": "list of requested products",
              "items": {
                "$ref": "#/definitions/requestedProductMulti"
              }
            },
            "options": {
              "$ref": "#/definitions/optionsMulti"
            },
            "corporateAccounts": {
              "$ref": "#/definitions/corporateAccounts"
            }
          }
        }
      }
    },
    "bodyParameterSingle": {
      "description": "the body section, containing the data and sub-resources",
      "type": "object",
      "properties": {
        "data": {
          "title": "dataRqSingle",
          "type": "object",
          "properties": {
            "currency": {
              "$ref": "#/definitions/currency"
            },
            "rates": {
              "$ref": "#/definitions/requestedRatesSingle"
            },
            "products": {
              "description": "list of requested products",
              "type": "array",
              "items": {
                "$ref": "#/definitions/requestedProductSingle"
              }
            },
            "options": {
              "$ref": "#/definitions/optionsSingle"
            },
            "corporateAccounts": {
              "$ref": "#/definitions/corporateAccounts"
            }
          }
        }
      }
    },
    "bodyParameterPricing": {
      "description": "the body section, containing the data and sub-resources",
      "type": "object",
      "properties": {
        "data": {
          "title": "dataRqPricing",
          "type": "object",
          "required": [
            "products"
          ],
          "properties": {
            "currency": {
              "$ref": "#/definitions/currency"
            },
            "products": {
              "description": "list of requested products",
              "type": "array",
              "items": {
                "$ref": "#/definitions/requestedProductPricing"
              }
            },
            "options": {
              "$ref": "#/definitions/optionsPricing"
            },
            "corporateAccount": {
              "$ref": "#/definitions/corporateAccount"
            },
            "rateAccessCode": {
              "description": "requested rate access code attached to the rate plan code",
              "type": "string",
              "pattern": "^.*$"
            },
            "promoCode": {
              "description": "promotion code",
              "type": "string",
              "maxLength": 50,
              "pattern": "^.*$"
            }
          }
        }
      }
    },
    "successfulMultiAvailability": {
      "type": "object",
      "properties": {
        "data": {
          "title": "dataRsMulti",
          "type": "object",
          "required": [
            "start",
            "duration"
          ],
          "properties": {
            "start": {
              "description": "requested start date",
              "type": "string",
              "format": "date",
              "example": "2021-09-20",
              "pattern": "[0-9][0-9][0-9][0-9]-[0-1][0-9]-[0-3][0-9]"
            },
            "duration": {
              "description": "requested duration",
              "type": "string",
              "example": "2D",
              "pattern": "[0-9]+D"
            },
            "hotels": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hotelsMulti"
              }
            }
          }
        },
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/warning"
          }
        }
      }
    },
    "successfulSingleAvailability": {
      "type": "object",
      "properties": {
        "data": {
          "title": "dataRsSingle",
          "type": "object",
          "required": [
            "start",
            "duration",
            "offers"
          ],
          "properties": {
            "start": {
              "description": "requested start date",
              "type": "string",
              "format": "date",
              "example": "2021-09-20",
              "pattern": "[0-9][0-9][0-9][0-9]-[0-1][0-9]-[0-3][0-9]"
            },
            "duration": {
              "description": "requested duration",
              "type": "string",
              "example": "2D",
              "pattern": "[0-9]+D"
            },
            "hotel": {
              "$ref": "#/definitions/hotelSingle"
            },
            "products": {
              "type": "array",
              "description": "the list of products (base product + attribute(s)) returned",
              "items": {
                "$ref": "#/definitions/productSingle"
              }
            },
            "attributes": {
              "type": "array",
              "description": "list of attributes returned",
              "items": {
                "$ref": "#/definitions/attributeSingle"
              }
            },
            "ratePlans": {
              "type": "array",
              "description": "list of returned ratePlans",
              "items": {
                "$ref": "#/definitions/ratePlanSingle"
              }
            },
            "denials": {
              "description": "list of denials",
              "type": "array",
              "items": {
                "$ref": "#/definitions/denial"
              }
            },
            "groupContract": {
              "$ref": "#/definitions/groupContractSingle"
            },
            "offers": {
              "type": "array",
              "description": "the list of offers returned",
              "items": {
                "$ref": "#/definitions/offerSingle"
              }
            },
            "alternateProperties": {
              "type": "array",
              "description": "this is now deprecated. List of alternate properties. Only returned if there is no availability in the requested property",
              "items": {
                "$ref": "#/definitions/alternateProperties"
              }
            },
            "specialEvent": {
              "$ref": "#/definitions/specialEvent"
            },
            "excludeTaxIndicator": {
              "description": "returned in case tax exclusion is forced in request (forceExcludeTax)",
              "type": "boolean"
            },
            "isSellStrategyIncludedIfNoAvail": {
              "description": "indicates if sell strategy rates are returned because none of the rate plans of the candidate list are available and includeSellStrategy=\"ifNoAvail\" in the request",
              "type": "boolean",
              "default": false
            }
          }
        },
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/warning"
          }
        },
        "keepPricingInformation": {
          "description": "tells the calling system whether pricing information should be kept in the single availability response for that vendor",
          "type": "boolean"
        }
      }
    },
    "successfulPricing": {
      "type": "object",
      "properties": {
        "data": {
          "title": "dataRsPricing",
          "type": "object",
          "required": [
            "start",
            "duration"
          ],
          "properties": {
            "start": {
              "description": "requested start date",
              "type": "string",
              "format": "date",
              "example": "2021-09-20",
              "pattern": "[0-9][0-9][0-9][0-9]-[0-1][0-9]-[0-3][0-9]"
            },
            "duration": {
              "description": "requested duration",
              "type": "string",
              "example": "2D",
              "pattern": "[0-9]+D"
            },
            "hotel": {
              "$ref": "#/definitions/hotelPricing"
            },
            "products": {
              "type": "array",
              "description": "the list of products (base product + attribute(s)) returned",
              "items": {
                "$ref": "#/definitions/productPricing"
              }
            },
            "attributes": {
              "type": "array",
              "description": "list of attributes returned",
              "items": {
                "$ref": "#/definitions/attributePricing"
              }
            },
            "ratePlans": {
              "type": "array",
              "description": "list of returned ratePlans",
              "items": {
                "$ref": "#/definitions/ratePlanPricing"
              }
            },
            "denials": {
              "description": "list of denials",
              "type": "array",
              "items": {
                "$ref": "#/definitions/denial"
              }
            },
            "groupContract": {
              "$ref": "#/definitions/groupContractPricing"
            },
            "requestedOffer": {
              "description": "the requested offer. Not returned when reservationContext is provided in the request",
              "$ref": "#/definitions/offerPricing"
            },
            "additionalOffers": {
              "type": "array",
              "description": "the list of additional offers returned",
              "items": {
                "$ref": "#/definitions/additionalOfferPricing"
              }
            },
            "specialEvent": {
              "$ref": "#/definitions/specialEvent"
            }
          }
        },
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/warning"
          }
        }
      }
    },
    "chainCode": {
      "description": "unique identifier of a Chain in the CRS",
      "type": "string",
      "pattern": "[A-Z0-9]{2,3}",
      "minLength": 2,
      "maxLength": 3,
      "example": "INT"
    },
    "brandCode": {
      "description": "unique identifier of a Brand in a Chain",
      "type": "string",
      "pattern": "[A-Z0-9]{2,3}",
      "example": "BRD"
    },
    "propertyCode": {
      "description": "the property code",
      "type": "string",
      "pattern": "[A-Z0-9]{1,8}",
      "minLength": 1,
      "maxLength": 8
    },
    "cityCode": {
      "description": "The code of the city of the property",
      "type": "string",
      "pattern": "[A-Z]{3,3}",
      "minLength": 3,
      "maxLength": 3
    },
    "value": {
      "description": "value that can be an amount or a percentage",
      "type": "string",
      "pattern": "^.*$"
    },
    "valueType": {
      "description": "type of \"value\"",
      "type": "string",
      "enum": [
        "Flat",
        "Percent"
      ]
    },
    "requestedRatesMulti": {
      "type": "object",
      "description": "requested rates (Rate plan codes, group code, OTA categories, themes/elements)",
      "properties": {
        "ratePlanCodes": {
          "description": "list of requested rate plan codes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ratePlanCode"
          },
          "example": [
            "RACRP",
            "BARRP"
          ]
        },
        "types": {
          "description": "list of OTA rateplan types requested. Concatenation of the code of the list and the code of the item (RPT8, RPT13...)",
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 8
          },
          "example": [
            "RPT8",
            "RPT13"
          ]
        },
        "themesAndElements": {
          "description": "list of codes of themes/elements requested",
          "type": "array",
          "items": {
            "description": "code of the theme or element",
            "type": "integer"
          },
          "example": [
            1001,
            1002
          ]
        },
        "customDisplay": {
          "$ref": "#/definitions/customDisplay"
        },
        "rateAccessCodes": {
          "description": "list of requested rate access codes. Up to 8 codes can be requested. Any additionnal code is ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/rateAccessCode"
          }
        },
        "promoCode": {
          "description": "promotion code",
          "type": "string",
          "maxLength": 50,
          "pattern": "^.*$"
        }
      }
    },
    "requestedRatesSingle": {
      "type": "object",
      "description": "requested rates (Rate plan codes, group code, OTA categories, themes/elements). The first 17 rate categories and corporate discount numbers are taken into account in the availability computation process, any extra rate categories and CD Numbers are discarded. Rate categories cannot be requested if themes or and elements are present in the request",
      "properties": {
        "ratePlanCodes": {
          "description": "list of requested rate plan codes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ratePlanCode"
          },
          "example": [
            "RACRP",
            "BARRP"
          ]
        },
        "groupCode": {
          "$ref": "#/definitions/groupCode"
        },
        "types": {
          "description": "list of OTA rateplan types requested. Concatenation of the code of the list and the code of the item (RPT8, RPT13...)",
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 8
          },
          "example": [
            "RPT8",
            "RPT13"
          ]
        },
        "themesAndElements": {
          "description": "list of codes of themes/elements requested",
          "type": "array",
          "items": {
            "description": "code of the theme or element",
            "type": "integer"
          },
          "example": [
            1001,
            1002
          ]
        },
        "customDisplay": {
          "$ref": "#/definitions/customDisplay"
        },
        "rateAccessCodes": {
          "description": "list of requested rate access codes. Up to 8 codes can be requested. Any additionnal code is ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/rateAccessCode"
          }
        },
        "promoCode": {
          "description": "promotion code",
          "type": "string",
          "maxLength": 50
        }
      }
    },
    "optionsMulti": {
      "description": "requested options for the request (budget, loyalty, sell strategy, description, indicators)",
      "type": "object",
      "properties": {
        "budget": {
          "$ref": "#/definitions/budget"
        },
        "appendBonusRates": {
          "description": "boolean to append the available bonus point rate plans in Multi availability response",
          "type": "boolean",
          "example": false,
          "default": false
        },
        "includeSellStrategy": {
          "$ref": "#/definitions/includeSellStrategyMulti"
        },
        "disabilityMode": {
          "$ref": "#/definitions/disabilityRequest"
        },
        "includePublicRates": {
          "type": "string",
          "default": "always",
          "enum": [
            "always",
            "never",
            "ifNoAvail",
            "followChannel"
          ],
          "description": "drives the inclusion of the public rates and can take four values:\n * 'always' - the public rates should be returned in the response. This is the default value\n * 'never' - the public rates should not be returned in the response\n * 'ifNoAvail' - the public rates should be returned in the response only if none of the requested rate plans is available\n * 'followChannel' - the channel settings should be checked in order to determine if the public rates should be included in the response. Only applicable when Distribution Rules functionality is active\n"
        },
        "securityIndicators": {
          "$ref": "#/definitions/securityIndicators"
        },
        "description": {
          "$ref": "#/definitions/requestedDescriptionMulti"
        },
        "loyalty": {
          "$ref": "#/definitions/loyalty"
        },
        "includeTaxAverageDetails": {
          "description": "boolean to return average amount per tax in minMaxOfferPerHotel view",
          "type": "boolean",
          "example": true,
          "default": false
        }
      }
    },
    "optionsSingle": {
      "description": "requested options for the request (budget, loyalty, sell strategy, description, indicators)",
      "type": "object",
      "properties": {
        "disabilityMode": {
          "$ref": "#/definitions/disabilityRequest"
        },
        "budget": {
          "$ref": "#/definitions/budget"
        },
        "forceExcludeTax": {
          "description": "to force the display of Average Night Rate After Tax, Checkin Night Rate After Tax and RatesDefinition amount as CRS room rate minus all included taxes amounts. When this indicator is present in the request, 2 fields are returned in the response only if the applicable tax (and not the service charge) on the stay is per night or per guest/ per night. Moreover, any tax/service charge set as included in the system will be treated as excluded in order to return a daily base amount excluding all taxes/service charges. The flag in the request is always forwarded in the response (excludeTaxIndicator)",
          "type": "boolean",
          "example": false,
          "default": false
        },
        "includeSellStrategy": {
          "$ref": "#/definitions/includeSellStrategySingle"
        },
        "includePublicRates": {
          "type": "string",
          "default": "followChannel",
          "enum": [
            "never",
            "ifNoAvail",
            "followChannel"
          ],
          "description": "indicates if the public rates have to be added to the candidate list. Only applicable when Distribution Rules functionality is active\n  'never' the public rates should not be included in the response\n  'ifNoAvail' the public rates should be included in the response only if none of the requested rate plans is available\n  'followChannel' the channel settings should be checked in order to determine if the public rates should be included in the response\n"
        },
        "securityIndicators": {
          "$ref": "#/definitions/securityIndicators"
        },
        "description": {
          "$ref": "#/definitions/requestedDescriptionSingle"
        },
        "loyalty": {
          "$ref": "#/definitions/loyaltySingle"
        },
        "perpetualOffer": {
          "description": "boolean to request perpetual offers. If true, the loyaltyId must be provided. It is mutually exclusive with oneOffOffer flag",
          "type": "boolean",
          "example": true,
          "default": false
        },
        "oneOffOffer": {
          "description": "boolean to request one-off offers. If true, the loyaltyId and promoCode must be provided. It is mutually exclusive with perpetualOffer flag",
          "type": "boolean",
          "example": true,
          "default": false
        },
        "cfNumber": {
          "description": "Reservation confirmation number, it is an ACRS confirmation number.",
          "type": "string"
        }
      }
    },
    "optionsPricing": {
      "type": "object",
      "description": "requested options for the request (loyalty, description, security indicators)",
      "properties": {
        "reservationContext": {
          "description": "this element should be provided in order to get the list of optional products that can be added to an already booked offer. It's a string composed of ref_id and segment_id, separated by a '/'",
          "type": "string",
          "example": "12345690/1",
          "pattern": "^.*$"
        },
        "securityIndicators": {
          "$ref": "#/definitions/securityIndicators"
        },
        "description": {
          "$ref": "#/definitions/requestedDescriptionPricing"
        },
        "loyalty": {
          "$ref": "#/definitions/loyalty"
        },
        "returnAdditionalOffers": {
          "description": "boolean to indicate if additional offers should be returned or not",
          "type": "boolean",
          "default": true
        }
      }
    },
    "budget": {
      "type": "object",
      "description": "requested budget range",
      "properties": {
        "type": {
          "$ref": "#/definitions/budgetType"
        },
        "min": {
          "description": "the minimum budget in which the values returned by the availability response should fit. It specifies that the system should take into account only the products with a price greater or equal to the specified value. The minimum accepted value is 0",
          "type": "integer",
          "example": 50
        },
        "max": {
          "description": "the maximum budget in which the values returned by the availability response should fit. It specifies that the system should take into account only the products with a price lower or equal to the specified value",
          "type": "integer",
          "example": 150
        }
      }
    },
    "budgetType": {
      "description": "indicates if the requested budget corresponds to daily prices or total prices",
      "type": "string",
      "default": "daily",
      "enum": [
        "daily",
        "total"
      ],
      "example": "daily"
    },
    "includeSellStrategyMulti": {
      "type": "string",
      "default": "followChannel",
      "enum": [
        "never",
        "followChannel"
      ],
      "example": "followChannel",
      "description": "indicates if the sell strategy has to be added to the candidate list\n  'never' the rate plan sell strategy should not be included in the response\n  'followChannel' the channel settings should be checked in order to determine if the rate plan sell strategy should be included in the response\n"
    },
    "includeSellStrategySingle": {
      "type": "string",
      "default": "followChannel",
      "example": "followChannel",
      "enum": [
        "never",
        "ifNoAvail",
        "followChannel"
      ],
      "description": "indicates if the sell strategy has to be added to the candidate list. Not applicable when Distribution Rules functionality is active.\n 'never' the rate plan sell strategy should not be included in the response\n 'ifNoAvail' the rate plan sell strategy should be included in the response only if none of the requested rate plans is available\n 'followChannel' the channel settings should be checked in order to determine if the rate plan sell strategy should be included in the response\n"
    },
    "securityIndicators": {
      "type": "object",
      "description": "provide security flags",
      "properties": {
        "bypassPropertyCdnumberCheck": {
          "type": "boolean"
        },
        "viewPropertyNonDisplayableRoom": {
          "type": "boolean"
        },
        "bypassPropertyMaxRoomOccupancy": {
          "type": "boolean"
        },
        "bypassPropertyMaxNumberOfRooms": {
          "type": "boolean"
        },
        "allowPropertyGroupLocalControl": {
          "type": "boolean"
        },
        "retrievePropertyGroupContractBypassSecurity": {
          "type": "boolean"
        },
        "allowPropertyForceSell": {
          "type": "boolean"
        }
      }
    },
    "disabilityRequest": {
      "type": "string",
      "default": "accessibleIfNoAvail",
      "enum": [
        "accessible",
        "nonAccessible",
        "accessibleAndNonAccessible",
        "accessibleIfNoAvail"
      ],
      "description": "indicates how products have to be returned depending on their accessibility configuration\n * 'accessible' - only accessible products are returned\n * 'nonAccessible' - only non-accessible products are returned\n * 'accessibleAndNonAccessible' - both accessible and non-accessible products are returned\n * 'accessibleIfNoAvail' - the accessible products are only returned if there is no more availability for the non-accessible products\n"
    },
    "requestedDescriptionSingle": {
      "type": "object",
      "description": "indicates if the description of rate plans and room types have to be returned",
      "properties": {
        "ratePlanLongDescFlag": {
          "description": "to return rate plan short and long descriptions",
          "type": "boolean",
          "default": false
        },
        "productLongDescFlag": {
          "description": "to return product long description",
          "type": "boolean",
          "default": false
        },
        "taxLongDescFlag": {
          "description": "to return tax long description",
          "type": "boolean",
          "default": false
        }
      }
    },
    "requestedDescriptionPricing": {
      "type": "object",
      "description": "indicates if the description of rate plans and room types have to be returned",
      "properties": {
        "ratePlanLongDescFlag": {
          "description": "to return rate plan short and long descriptions",
          "type": "boolean",
          "default": false
        },
        "productLongDescFlag": {
          "description": "to return product long description",
          "type": "boolean",
          "default": false
        },
        "packageDescFlag": {
          "description": "to return expanded rate plan description (linked to package)",
          "type": "boolean",
          "default": false
        },
        "taxLongDescFlag": {
          "description": "to return tax long description",
          "type": "boolean",
          "default": false
        }
      }
    },
    "requestedDescriptionMulti": {
      "type": "object",
      "description": "indicates if the description of rate plans and room types have to be returned",
      "properties": {
        "ratePlanLongDescFlag": {
          "description": "to return rate plan short and long descriptions",
          "type": "boolean",
          "default": false
        },
        "productLongDescFlag": {
          "description": "to return product long description",
          "type": "boolean",
          "default": false
        }
      }
    },
    "loyalty": {
      "type": "object",
      "description": "loyalty information of the customer",
      "properties": {
        "loyaltyId": {
          "description": "loyalty program identifier",
          "type": "string",
          "pattern": "^.*$"
        },
        "programName": {
          "description": "loyalty program name. For example, Ambassador - 'AMB'",
          "type": "string",
          "enum": [
            "AMB"
          ]
        },
        "programLevel": {
          "description": "loyalty level of a program",
          "type": "string",
          "enum": [
            "AMB",
            "RAM"
          ]
        }
      }
    },
    "loyaltySingle": {
      "type": "object",
      "description": "loyalty information of the customer",
      "properties": {
        "loyaltyId": {
          "description": "loyalty program identifier",
          "type": "string",
          "pattern": "^.*$"
        },
        "programName": {
          "description": "loyalty program name. For example, Ambassador - 'AMB'",
          "type": "string",
          "enum": [
            "AMB"
          ]
        },
        "programLevel": {
          "description": "loyalty level of a program",
          "type": "string",
          "enum": [
            "AMB",
            "RAM"
          ]
        },
        "valueTierOverride": {
          "description": "value tier for the guest",
          "type": "string",
          "example": "10"
        },
        "playDominanceOverride": {
          "description": "play dominance for the guest",
          "type": "string",
          "enum": [
            "Poker",
            "Slots",
            "Table",
            "Tickets",
            "Rail",
            "General"
          ],
          "example": "Table"
        }
      }
    },
    "direction": {
      "description": "one of the 8 cardinal directions. \"NN\" (North), \"EE\" (East), \"SS\" (South),\"WW\" (West),\"NE\" (North-East),\"SE\" (South-East),\"SW\" (south-West),\"NW\" (North-West)",
      "type": "string",
      "enum": [
        "NN",
        "EE",
        "SS",
        "WW",
        "NE",
        "SE",
        "SW",
        "NW"
      ],
      "example": "NN"
    },
    "distanceUnit": {
      "description": "the unit of measurement in which distance is expressed. Concatenation of the code of the OTA list for distance unit and the code of the item \"UOM1\" (miles), \"UOM2\" (kilometers)",
      "type": "string",
      "enum": [
        "UOM1",
        "UOM2"
      ],
      "example": "UOM1"
    },
    "requestedProductMulti": {
      "type": "object",
      "description": "it can contain the elements which are the same as common-all",
      "properties": {
        "productCode": {
          "$ref": "#/definitions/productCode"
        },
        "attributes": {
          "description": "list of attribute codes composing the requested product",
          "type": "array",
          "items": {
            "$ref": "#/definitions/attributeCode"
          }
        },
        "inventoryTypeCode": {
          "$ref": "#/definitions/inventoryTypeCode"
        },
        "quantity": {
          "description": "quantity of the requested product",
          "type": "integer",
          "default": 1,
          "example": 1
        },
        "guestCounts": {
          "description": "guestCount details. A single array item is expected for NR Product (any additional array item is ignored)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/requestedGuestCounts"
          }
        },
        "startDate": {
          "description": "requested start date. Only applicable for optional NRP",
          "type": "string",
          "format": "date",
          "pattern": "[0-9][0-9][0-9][0-9]-[0-1][0-9]-[0-3][0-9]",
          "example": "2021-09-20"
        },
        "duration": {
          "description": "duration of the period. Number of days required followed by letter D. For instance, 2D for 2 days. Only applicable for optional NRP",
          "type": "string",
          "pattern": "[0-9]+D",
          "example": "2D"
        }
      }
    },
    "requestedProductSingle": {
      "type": "object",
      "description": "it can contain the elements which are the same as common-all",
      "properties": {
        "productCode": {
          "$ref": "#/definitions/productCode"
        },
        "attributes": {
          "description": "list of attribute codes composing the requested product",
          "type": "array",
          "items": {
            "$ref": "#/definitions/attributeCode"
          }
        },
        "inventoryTypeCode": {
          "$ref": "#/definitions/inventoryTypeCode"
        },
        "quantity": {
          "description": "quantity of the requested product",
          "type": "integer",
          "default": 1,
          "example": 1
        },
        "guestCounts": {
          "description": "guestCount details. A single array item is expected for NR Product (any additional array item is ignored)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/requestedGuestCounts"
          }
        },
        "startDate": {
          "description": "requested start date. Only applicable for optional NRP",
          "type": "string",
          "format": "date",
          "pattern": "[0-9][0-9][0-9][0-9]-[0-1][0-9]-[0-3][0-9]",
          "example": "2021-09-20"
        },
        "duration": {
          "description": "duration of the period. Number of days required followed by letter D. For instance, 2D for 2 days. Only applicable for optional NRP",
          "type": "string",
          "pattern": "[0-9]+D",
          "example": "2D"
        }
      }
    },
    "requestedProductPricing": {
      "type": "object",
      "description": "it can contain the elements which are the same as common-all",
      "required": [
        "inventoryTypeCode",
        "guestCounts"
      ],
      "properties": {
        "productCode": {
          "$ref": "#/definitions/productCode"
        },
        "inventoryTypeCode": {
          "$ref": "#/definitions/inventoryTypeCode"
        },
        "quantity": {
          "type": "integer",
          "description": "quantity of the requested product",
          "default": 1,
          "example": 2
        },
        "guestCounts": {
          "description": "guestCount details. A single array item is expected for NR Product (any additional array item is ignored)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/requestedGuestCounts"
          }
        },
        "startDate": {
          "description": "requested start date. Only applicable for optional NRP",
          "type": "string",
          "format": "date",
          "pattern": "[0-9][0-9][0-9][0-9]-[0-1][0-9]-[0-3][0-9]",
          "example": "2021-09-20"
        },
        "duration": {
          "description": "duration of the period. Number of days required followed by letter D. For instance, 2D for 2 days. Only applicable for optional NRP",
          "type": "string",
          "pattern": "[0-9]+D",
          "example": "2D"
        }
      }
    },
    "corporateAccounts": {
      "description": "list of corporate accounts",
      "type": "array",
      "items": {
        "$ref": "#/definitions/corporateAccount"
      }
    },
    "corporateAccount": {
      "type": "object",
      "properties": {
        "cdNumber": {
          "description": "corporate Discount Number",
          "type": "string",
          "pattern": "^.*$",
          "example": "15BFD4A"
        },
        "accountName": {
          "description": "corporate Discount Account Name",
          "type": "string",
          "pattern": "^.*$",
          "example": "Amadeus account"
        },
        "isCdAutoAppended": {
          "description": "auto-Append indicator",
          "type": "boolean",
          "example": true
        }
      }
    },
    "currency": {
      "description": "indicates the currency [ISO4217]",
      "type": "string",
      "pattern": "[A-Z]{3,3}",
      "minLength": 3,
      "maxLength": 3,
      "example": "USD"
    },
    "requestedGuestCounts": {
      "type": "object",
      "minProperties": 1,
      "properties": {
        "otaCode": {
          "description": "online travel agency (OTA) Age Qualifier Code, either age or otaCode or both must be provided",
          "type": "string",
          "pattern": "^.*$",
          "example": "AQC8"
        },
        "count": {
          "description": "number of guest. Applicable for SR product. Not applicable for NR product (ignored if sent)",
          "type": "integer",
          "default": 1
        },
        "age": {
          "description": "age of the guest(s), either age or otaCode or both must be provided",
          "type": "integer"
        }
      }
    },
    "guestCounts": {
      "type": "object",
      "minProperties": 1,
      "description": "GuestCount details",
      "properties": {
        "guestType": {
          "type": "string",
          "description": "guest Type Code",
          "pattern": "[A-Z0-9_]{2,8}",
          "example": "CHILD"
        },
        "otaCode": {
          "description": "online travel agency (OTA) Age Qualifier Code",
          "type": "string",
          "example": "AQC8",
          "pattern": "^.*$"
        },
        "count": {
          "description": "number of guest",
          "type": "integer",
          "default": 1
        },
        "age": {
          "description": "age of the guest(s)",
          "type": "integer"
        }
      }
    },
    "customDisplay": {
      "type": "string",
      "description": "parameter to filter the rate plans based on the value of their marketing display indicator.[A-Z]",
      "pattern": "[A-Z]",
      "example": "B"
    },
    "productMulti": {
      "type": "object",
      "required": [
        "productCode",
        "inventoryTypeCode"
      ],
      "description": "product details",
      "properties": {
        "productClass": {
          "$ref": "#/definitions/productClass"
        },
        "productCode": {
          "$ref": "#/definitions/productCode"
        },
        "inventoryTypeCode": {
          "$ref": "#/definitions/inventoryTypeCode"
        },
        "pacCode": {
          "$ref": "#/definitions/pacCode"
        },
        "otaCode": {
          "$ref": "#/definitions/otaCode"
        },
        "attCodes": {
          "description": "list of attribute codes composing the requested product",
          "type": "array",
          "items": {
            "$ref": "#/definitions/attributeCode"
          }
        },
        "productName": {
          "$ref": "#/definitions/productName"
        },
        "inventoryTypeName": {
          "description": "name of the inventory type (short description)",
          "$ref": "#/definitions/description"
        },
        "desc": {
          "description": "long description of the product if available",
          "$ref": "#/definitions/description"
        },
        "maxNbParticipant": {
          "description": "maximum allowed number of participants for this product (extra participants included)",
          "type": "integer",
          "format": "int32"
        },
        "extraPersonStart": {
          "description": "threshold for charging extra person",
          "type": "integer",
          "format": "int32"
        },
        "isFlowThrough": {
          "description": "true if the room type is set to flow-through in the configuration of the property",
          "type": "boolean",
          "default": false
        },
        "isDisplayable": {
          "description": "true if the product is displayable",
          "type": "boolean",
          "default": false
        },
        "isPremium": {
          "description": "true if the product is a premium product",
          "type": "boolean",
          "default": false
        },
        "availStatus": {
          "$ref": "#/definitions/productAvailStatus"
        },
        "match": {
          "description": "indicates if the inventory type is matching the requested attributes either ALL (meaning exact or at least) or SOME",
          "type": "string",
          "enum": [
            "SOME",
            "ALL"
          ]
        }
      }
    },
    "productSingle": {
      "type": "object",
      "required": [
        "productCode",
        "inventoryTypeCode"
      ],
      "description": "product details",
      "properties": {
        "productClass": {
          "$ref": "#/definitions/productClass"
        },
        "productCode": {
          "$ref": "#/definitions/productCode"
        },
        "inventoryTypeCode": {
          "$ref": "#/definitions/inventoryTypeCode"
        },
        "pacCode": {
          "$ref": "#/definitions/pacCode"
        },
        "otaCode": {
          "$ref": "#/definitions/otaCode"
        },
        "attCodes": {
          "description": "list of attribute codes composing the requested product",
          "type": "array",
          "items": {
            "$ref": "#/definitions/attributeCode"
          }
        },
        "productName": {
          "$ref": "#/definitions/productName"
        },
        "inventoryTypeName": {
          "description": "name of the inventory type (short description)",
          "$ref": "#/definitions/description"
        },
        "desc": {
          "description": "long description of the product if available",
          "$ref": "#/definitions/description"
        },
        "maxNbParticipant": {
          "description": "maximum allowed number of participants for this product (extra participants included)",
          "type": "integer",
          "format": "int32"
        },
        "extraPersonStart": {
          "description": "threshold for charging extra person",
          "type": "integer",
          "format": "int32"
        },
        "isFlowThrough": {
          "description": "true if the room type is set to flow-through in the configuration of the property",
          "type": "boolean",
          "default": false
        },
        "isDisplayable": {
          "description": "true if the product is displayable",
          "type": "boolean",
          "default": false
        },
        "isPremium": {
          "description": "true if the product is a premium product",
          "type": "boolean",
          "default": false
        },
        "availStatus": {
          "$ref": "#/definitions/productAvailStatus"
        },
        "match": {
          "description": "indicates if the inventory type is matching the requested attributes either ALL (meaning exact or at least) or SOME",
          "type": "string",
          "enum": [
            "SOME",
            "ALL"
          ]
        },
        "maxAdultOccupancy": {
          "description": "maximum adult occupancy allowed for this product",
          "type": "integer",
          "format": "int32"
        },
        "maxChildOccupancy": {
          "description": "maximum child occupancy allowed for this product",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "productPricing": {
      "type": "object",
      "required": [
        "productCode",
        "inventoryTypeCode"
      ],
      "description": "product details",
      "properties": {
        "productClass": {
          "$ref": "#/definitions/productClass"
        },
        "productCode": {
          "$ref": "#/definitions/productCode"
        },
        "inventoryTypeCode": {
          "$ref": "#/definitions/inventoryTypeCode"
        },
        "pacCode": {
          "$ref": "#/definitions/pacCode"
        },
        "otaCode": {
          "$ref": "#/definitions/otaCode"
        },
        "attCodes": {
          "description": "list of attribute codes composing the requested product",
          "type": "array",
          "items": {
            "$ref": "#/definitions/attributeCode"
          }
        },
        "productName": {
          "$ref": "#/definitions/productName"
        },
        "inventoryTypeName": {
          "description": "name of the inventory type (short description)",
          "$ref": "#/definitions/description"
        },
        "desc": {
          "description": "long description of the product if available",
          "$ref": "#/definitions/description"
        },
        "maxNbParticipant": {
          "description": "maximum allowed number of participants for this product (extra participants included)",
          "type": "integer",
          "format": "int32"
        },
        "extraPersonStart": {
          "description": "threshold for charging extra person",
          "type": "integer",
          "format": "int32"
        },
        "isFlowThrough": {
          "description": "true if the room type is set to flow-through in the configuration of the property",
          "type": "boolean",
          "default": false
        },
        "isDisplayable": {
          "description": "true if the product is displayable",
          "type": "boolean",
          "default": false
        },
        "isPremium": {
          "description": "true if the product is a premium product",
          "type": "boolean",
          "default": false
        },
        "maxAdultOccupancy": {
          "description": "maximum adult occupancy allowed for this product",
          "type": "integer",
          "format": "int32"
        },
        "maxChildOccupancy": {
          "description": "maximum child occupancy allowed for this product",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "attributeMulti": {
      "type": "object",
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/attributeCode"
        },
        "name": {
          "description": "name of the attribute",
          "$ref": "#/definitions/description"
        }
      }
    },
    "attributeSingle": {
      "type": "object",
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/attributeCode"
        },
        "name": {
          "description": "name of the attribute",
          "$ref": "#/definitions/description"
        },
        "desc": {
          "description": "description of the attribute",
          "$ref": "#/definitions/description"
        }
      }
    },
    "attributePricing": {
      "type": "object",
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/attributeCode"
        },
        "name": {
          "description": "name of the attribute",
          "$ref": "#/definitions/description"
        },
        "desc": {
          "description": "description of the attribute",
          "$ref": "#/definitions/description"
        }
      }
    },
    "productCode": {
      "type": "string",
      "description": "code defining the product (Sleeping room, meeting room or any service)",
      "pattern": "^.*$",
      "example": "BKF"
    },
    "productName": {
      "description": "name of the product part of the inventory type",
      "type": "string",
      "minLength": 1,
      "maxLength": 64,
      "pattern": "^.*$"
    },
    "productClass": {
      "description": "product Class of the Product",
      "type": "string",
      "pattern": "^.*$"
    },
    "pacCode": {
      "description": "unique combination code of product, attributes and occupancy",
      "type": "string",
      "pattern": "[A-Z0-9]{2,8}",
      "minLength": 2,
      "maxLength": 8
    },
    "otaCode": {
      "description": "community code of the product type [OTA]",
      "type": "string",
      "pattern": "[A-Z0-9]{3,8}",
      "minLength": 3,
      "maxLength": 8
    },
    "attributeCode": {
      "description": "code of the attribute",
      "type": "string",
      "pattern": "[A-Z0-9]{1,8}",
      "minLength": 1,
      "maxLength": 8,
      "example": "RVT25"
    },
    "inventoryTypeCode": {
      "type": "string",
      "description": "business code representing an inventory type, a combination of one product and optionally some attributes",
      "pattern": "[A-Z0-9]{1,50}",
      "minLength": 2,
      "maxLength": 50,
      "example": "KNGSV"
    },
    "alternateProperties": {
      "type": "object",
      "required": [
        "chainCode",
        "propertyCode",
        "cityCode",
        "distance",
        "distanceUnit"
      ],
      "properties": {
        "chainCode": {
          "$ref": "#/definitions/chainCode"
        },
        "propertyCode": {
          "$ref": "#/definitions/propertyCode"
        },
        "cityCode": {
          "$ref": "#/definitions/cityCode"
        },
        "direction": {
          "$ref": "#/definitions/direction"
        },
        "distance": {
          "description": "distance to the requested property",
          "type": "integer",
          "example": 10
        },
        "distanceUnit": {
          "$ref": "#/definitions/distanceUnit"
        }
      }
    },
    "responseError500": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/error"
        }
      },
      "example": {
        "errors": [
          {
            "httpStatus": 500,
            "message": "timeout reached",
            "code": 50028,
            "origin": "Backend",
            "path": "string",
            "details": [
              {
                "code": 0
              }
            ]
          }
        ]
      }
    },
    "responseError403": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/error"
        }
      },
      "example": {
        "errors": [
          {
            "httpStatus": 403,
            "message": "unable to process",
            "code": 50028,
            "origin": "Backend",
            "path": "string",
            "details": [
              {
                "code": 0
              }
            ]
          }
        ]
      }
    },
    "responseError400": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/error"
        }
      },
      "example": {
        "errors": [
          {
            "httpStatus": 400,
            "message": "unable to process",
            "code": 50028,
            "origin": "Backend",
            "path": "string",
            "details": [
              {
                "code": 0
              }
            ]
          }
        ]
      }
    },
    "responseError404": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/error"
        }
      },
      "example": {
        "errors": [
          {
            "httpStatus": 404,
            "message": "no product available for requested parameters",
            "code": 50021,
            "origin": "Backend",
            "path": "string",
            "details": [
              {
                "code": 0
              }
            ]
          }
        ]
      }
    },
    "responseError401": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/error"
        }
      },
      "example": {
        "errors": [
          {
            "httpStatus": 401,
            "message": "wrong authentication credentials",
            "code": 701,
            "origin": "Backend",
            "path": "string",
            "details": [
              {
                "code": 0
              }
            ]
          }
        ]
      }
    },
    "responseError429": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/error"
        }
      },
      "example": {
        "errors": [
          {
            "httpStatus": 429,
            "message": "Maximum number of requests reached",
            "code": 16,
            "origin": "SRV",
            "path": "string"
          }
        ]
      }
    },
    "responseErrorSingle404": {
      "type": "object",
      "properties": {
        "error": {
          "description": "error information",
          "$ref": "#/definitions/error"
        },
        "data": {
          "description": "denial description",
          "$ref": "#/definitions/responseErrorSingleData404"
        },
        "keepPricingInformation": {
          "description": "tells the calling system whether pricing information should be kept in the single availability response for that vendor",
          "type": "boolean",
          "example": false
        }
      },
      "example": {
        "error": {
          "httpStatus": 404,
          "message": "No product available for requested parameters",
          "code": 50021,
          "origin": "Backend",
          "path": "string"
        },
        "data": {
          "denials": [
            {
              "identifier": 0,
              "type": "HSO",
              "reason": "No Rates/Rooms Available",
              "date": "2021-02-11",
              "isHouseLevel": true,
              "ratePlanCode": "RATE1",
              "priceGridCode": "C1",
              "sellStrategyCode": "SS01"
            }
          ],
          "duration": "2D",
          "hotel": {
            "brandCode": "BRD",
            "chainCode": "INT",
            "propertyCode": "PROP1",
            "propertyCurrency": "USD"
          },
          "products": [
            {
              "availStatus": "available",
              "productCode": "string",
              "productTypeCode": "SR"
            }
          ],
          "ratePlans": [
            {
              "availStatus": "available",
              "code": "RATEA"
            }
          ],
          "responseCurrency": "EUR",
          "start": "string",
          "groupContract": {
            "availStatus": "available",
            "code": "GC001"
          },
          "alternateProperties": [
            "PROP2",
            "PROP3",
            "PROP4"
          ]
        },
        "keepPricingInformation": false
      }
    },
    "responseErrorPricing404": {
      "type": "object",
      "properties": {
        "error": {
          "description": "error information",
          "$ref": "#/definitions/error"
        },
        "data": {
          "description": "denial description",
          "$ref": "#/definitions/responseErrorPricingData404"
        }
      },
      "example": {
        "error": {
          "httpStatus": 404,
          "message": "No product available for requested parameters",
          "code": 50021,
          "origin": "Backend",
          "path": "string",
          "details": [
            {
              "code": 0
            }
          ]
        },
        "data": {
          "denials": [
            {
              "identifier": 0,
              "type": "HSO",
              "reason": "No Rates/Rooms Available",
              "date": "2021-02-11",
              "isHouseLevel": true,
              "ratePlanCode": "RATE1",
              "priceGridCode": "C1",
              "sellStrategyCode": "SS01"
            }
          ]
        }
      }
    },
    "responseErrorSingleData404": {
      "type": "object",
      "properties": {
        "denials": {
          "description": "denial information",
          "type": "array",
          "items": {
            "$ref": "#/definitions/denial"
          }
        },
        "duration": {
          "description": "length of the stay. Number of days required followed by letter D. For instance, 2D for 2 days",
          "type": "string",
          "example": "2D"
        },
        "hotel": {
          "description": "hotel description",
          "$ref": "#/definitions/error404hotelDetails"
        },
        "products": {
          "description": "products description",
          "type": "array",
          "items": {
            "$ref": "#/definitions/error404productsDetails"
          }
        },
        "ratePlans": {
          "description": "rate plans description",
          "type": "array",
          "items": {
            "$ref": "#/definitions/error404ratePlansDetails"
          }
        },
        "responseCurrency": {
          "description": "the currency of the response amounts expressed in (ISO 4217 format)",
          "type": "string",
          "example": "EUR"
        },
        "start": {
          "description": "requested start date",
          "type": "string"
        },
        "groupContract": {
          "description": "group contract details",
          "$ref": "#/definitions/error404ratePlansDetails"
        },
        "alternateProperties": {
          "type": "array",
          "description": "list of alternate properties. Only returned if there is no availability in the requested property",
          "items": {
            "$ref": "#/definitions/propertyCode"
          }
        }
      }
    },
    "responseErrorPricingData404": {
      "type": "object",
      "properties": {
        "denials": {
          "description": "denial information",
          "type": "array",
          "items": {
            "$ref": "#/definitions/denial"
          }
        }
      }
    },
    "error404hotelDetails": {
      "type": "object",
      "properties": {
        "brandCode": {
          "$ref": "#/definitions/brandCode"
        },
        "chainCode": {
          "$ref": "#/definitions/chainCode"
        },
        "propertyCode": {
          "$ref": "#/definitions/propertyCode"
        },
        "propertyCurrency": {
          "description": "hotel currency using the ISO 4217 currency codes",
          "type": "string",
          "example": "USD"
        }
      }
    },
    "error404productsDetails": {
      "type": "object",
      "properties": {
        "availStatus": {
          "$ref": "#/definitions/availStatus"
        },
        "inventoryTypeCode": {
          "$ref": "#/definitions/inventoryTypeCode"
        },
        "productCode": {
          "$ref": "#/definitions/productCode"
        }
      }
    },
    "error404ratePlansDetails": {
      "type": "object",
      "properties": {
        "availStatus": {
          "$ref": "#/definitions/availStatus"
        },
        "code": {
          "$ref": "#/definitions/ratePlanCode"
        }
      }
    },
    "hotelCommon": {
      "description": "the common part of object hotel in response",
      "type": "object",
      "required": [
        "chainCode",
        "propertyCode",
        "propertyCurrency"
      ],
      "properties": {
        "chainCode": {
          "$ref": "#/definitions/chainCode"
        },
        "brandCode": {
          "$ref": "#/definitions/brandCode"
        },
        "propertyCode": {
          "$ref": "#/definitions/propertyCode"
        },
        "propertyCurrency": {
          "description": "hotel currency using the ISO 4217 currency codes",
          "type": "string",
          "example": "USD"
        },
        "responseCurrency": {
          "description": "the currency of the response amounts expressed in (ISO 4217 format)",
          "type": "string",
          "example": "EUR"
        },
        "factLines": {
          "description": "list of free text containing some info about the hotel",
          "$ref": "#/definitions/description"
        },
        "taxDefinitions": {
          "type": "array",
          "description": "the applicable rules of taxes for each tax change of the stay",
          "items": {
            "$ref": "#/definitions/taxDefinition"
          }
        }
      }
    },
    "hotelsMulti": {
      "description": "Hotel list",
      "type": "object",
      "required": [
        "hotel"
      ],
      "properties": {
        "hotel": {
          "$ref": "#/definitions/hotelMulti"
        },
        "ratePlans": {
          "type": "array",
          "description": "list of returned ratePlans",
          "items": {
            "$ref": "#/definitions/ratePlanMulti"
          }
        },
        "products": {
          "type": "array",
          "description": "the list of products (base product + attribute(s)) returned",
          "items": {
            "$ref": "#/definitions/productMulti"
          }
        },
        "attributes": {
          "type": "array",
          "description": "list of attributes returned",
          "items": {
            "$ref": "#/definitions/attributeMulti"
          }
        },
        "warningRefs": {
          "description": "reference to link warning(s) returned",
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "channelPreferredRate": {
          "description": "indicates the preferred rate to be returned to the requestor channel",
          "type": "string",
          "enum": [
            "Check-in",
            "Highest",
            "Average"
          ],
          "example": "Check-in"
        },
        "isCommissionable": {
          "description": "if any rate plans are available, flag showing if they are commissionable or not. \"Yes\"= All rate plans are commissionable \"No\"= No rate plan is commissionable \"Both\"= At least one rate plan is commissionable, and at least one is not commissionable",
          "type": "string",
          "enum": [
            "Yes",
            "No",
            "Both"
          ],
          "example": "Both"
        },
        "availStatus": {
          "description": "indicates the availability status of the hotel. available when there's at least one offer available in the hotel. Not available when there's no offer available in the hotel",
          "$ref": "#/definitions/availStatus"
        },
        "arePackageRatesReturned": {
          "description": "indicates if some package rate plans are included in the rate range returned",
          "type": "boolean",
          "default": false
        },
        "arePublicRatesIncludedIfNoAvail": {
          "description": "true if requested rates are not available, includePublicRates=ifNoAvail in request and availability is returned",
          "type": "boolean"
        },
        "bonusRatePlans": {
          "description": "contains the list of available bonus rate plans, if appendBonusRates flag in the request is set to True. If no available bonus rate plans or the appendBonusRates is not present, this element will not be returned. The rate plan codes returned in this structure are not added to the rate plan candidate list and therefore might not be included in the rate range returned",
          "type": "array",
          "items": {
            "$ref": "#/definitions/bonusRatePlan"
          }
        },
        "maxGuests": {
          "description": "when no availability is returned and some availability is possible with less guests, return the max number of adults needed to have availability. This field is returned only when there is no availability because of the requested occupancy",
          "type": "integer",
          "format": "int32"
        },
        "rateRange": {
          "$ref": "#/definitions/rateRange"
        },
        "rateDetails": {
          "$ref": "#/definitions/rateDetails"
        },
        "themesAndElements": {
          "description": "list of themes and elements codes associated to the rate plans included in the rate range returned. This section will be present only if arePackageRatesReturned is set to true",
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "match": {
          "description": "indicates if hotel has inventory types matching requested attributes either ALL (meaning exact or at least) or SOME",
          "type": "string",
          "enum": [
            "ALL",
            "SOME"
          ]
        }
      }
    },
    "hotelMulti": {
      "description": "the object hotel in response",
      "type": "object",
      "required": [
        "chainCode",
        "propertyCode",
        "propertyCurrency"
      ],
      "properties": {
        "chainCode": {
          "$ref": "#/definitions/chainCode"
        },
        "brandCode": {
          "$ref": "#/definitions/brandCode"
        },
        "propertyCode": {
          "$ref": "#/definitions/propertyCode"
        },
        "propertyCurrency": {
          "description": "hotel currency using the ISO 4217 currency codes",
          "type": "string",
          "example": "USD"
        },
        "responseCurrency": {
          "description": "the currency of the response amounts expressed in (ISO 4217 format)",
          "type": "string",
          "example": "EUR"
        },
        "factLines": {
          "description": "list of free text containing some info about the hotel",
          "$ref": "#/definitions/description"
        },
        "taxDefinitions": {
          "type": "array",
          "description": "all types of taxes/fees defined in the GRS at hotel level. Applicable only for view minMaxOfferPerHotel",
          "items": {
            "$ref": "#/definitions/taxDefinition"
          }
        },
        "guestTypeDefinitions": {
          "type": "array",
          "description": "all applicable Property Guest Type set-up",
          "items": {
            "$ref": "#/definitions/guestTypeDefinition"
          }
        },
        "freeGuestsDefinitions": {
          "type": "array",
          "description": "all applicable free Guests rules set-up",
          "items": {
            "$ref": "#/definitions/freeGuestsDefinition"
          }
        }
      }
    },
    "hotelSingle": {
      "description": "the common single pricing part of object hotel in response",
      "type": "object",
      "required": [
        "taxDefinitions"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/hotelCommon"
        },
        {
          "type": "object",
          "properties": {
            "factLines": {
              "description": "list of free text containing some info about the hotel",
              "$ref": "#/definitions/description"
            },
            "marketingLines": {
              "description": "list of marketing lines",
              "$ref": "#/definitions/description"
            },
            "taxDefinitions": {
              "type": "array",
              "description": "all types of taxes/fees defined in the GRS at hotel level",
              "items": {
                "$ref": "#/definitions/taxDefinition"
              }
            },
            "guestTypeDefinitions": {
              "type": "array",
              "description": "all applicable Property Guest Type set-up",
              "items": {
                "$ref": "#/definitions/guestTypeDefinition"
              }
            },
            "freeGuestsDefinitions": {
              "type": "array",
              "description": "all applicable free Guests rules set-up",
              "items": {
                "$ref": "#/definitions/freeGuestsDefinition"
              }
            }
          }
        }
      ]
    },
    "hotelPricing": {
      "description": "the common single pricing part of object hotel in response",
      "type": "object",
      "required": [
        "taxDefinitions"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/hotelCommon"
        },
        {
          "type": "object",
          "properties": {
            "factLines": {
              "description": "list of free text containing some info about the hotel",
              "$ref": "#/definitions/description"
            },
            "marketingLines": {
              "description": "list of marketing lines",
              "$ref": "#/definitions/description"
            },
            "taxDefinitions": {
              "type": "array",
              "description": "all types of taxes/fees defined in the GRS at hotel level",
              "items": {
                "$ref": "#/definitions/taxDefinition"
              }
            },
            "guestTypeDefinitions": {
              "type": "array",
              "description": "all applicable Property Guest Type set-up",
              "items": {
                "$ref": "#/definitions/guestTypeDefinition"
              }
            },
            "freeGuestsDefinitions": {
              "type": "array",
              "description": "all applicable free Guests rules set-up",
              "items": {
                "$ref": "#/definitions/freeGuestsDefinition"
              }
            }
          }
        }
      ]
    },
    "packageDetailsSingle": {
      "description": "gives the details of the package and lists the themes and elements codes associated to the rate plan in '''themesAndElements''' field. This structure is present only if the rate plan is a package",
      "type": "object",
      "properties": {
        "themesAndElements": {
          "description": "list of themes and elements",
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    },
    "packageDetailsPricing": {
      "description": "gives the details of the package",
      "type": "object",
      "properties": {
        "overview": {
          "description": "overview description of the package",
          "$ref": "#/definitions/description"
        },
        "additionalDetails": {
          "description": "the additional details of the rate plan's package",
          "$ref": "#/definitions/description"
        },
        "termsAndConditions": {
          "description": "terms and conditions",
          "$ref": "#/definitions/description"
        },
        "themesAndElements": {
          "description": "list of themes and elements",
          "type": "array",
          "items": {
            "$ref": "#/definitions/themeAndElement"
          }
        }
      }
    },
    "ratePlanMulti": {
      "description": "list of requested rate plan codes or rate plan types. Also contains all the rate plans returned in case of Multi request with view minMaxOfferPerRatePlan, minMaxOfferPerHotel or minOfferPerHotel",
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/ratePlanCode"
        },
        "types": {
          "type": "array",
          "description": "list of rate plan types (OTA codes as per RPT OTA list) associated to the requested rate plan code or requested rate plan type",
          "example": [
            "RPT4",
            "RPT9"
          ],
          "items": {
            "type": "string"
          }
        },
        "availStatus": {
          "$ref": "#/definitions/ratePlanAvailStatus"
        },
        "isFreeNight": {
          "description": "indicates if the rate plan is a free night rate plan",
          "type": "boolean"
        },
        "cdNumbers": {
          "description": "the list of requested Corporate Discount numbers associated to the negotiated rate plan. If the rate plan is associated to other non-requested CD numbers, those are not returned with the rate plan",
          "type": "array",
          "items": {
            "$ref": "#/definitions/cdNumber"
          }
        },
        "customDisplay": {
          "$ref": "#/definitions/customDisplay"
        },
        "isAwardAccepted": {
          "description": "indicates if payment for this rate can be done totally or partially using reward points",
          "type": "boolean"
        },
        "desc": {
          "description": "short description of the rate plan",
          "$ref": "#/definitions/description"
        },
        "longDesc": {
          "description": "long description of the rate plan",
          "$ref": "#/definitions/description"
        },
        "rateAccessCodes": {
          "description": "list of the requested rate access codes attached to the rate plan",
          "type": "array",
          "maxItems": 8,
          "items": {
            "$ref": "#/definitions/rateAccessCodeObject"
          }
        },
        "promoCode": {
          "description": "promotion code",
          "type": "string",
          "maxLength": 50
        },
        "travelAgency": {
          "$ref": "#/definitions/travelAgency"
        },
        "areAmtsConfidential": {
          "description": "indicates if amounts defined in the rate plan are confidential",
          "type": "boolean"
        }
      }
    },
    "ratePlanSingle": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ratePlanCommon"
        },
        {
          "$ref": "#/definitions/ratePlanCommonSinglePricing"
        },
        {
          "type": "object",
          "properties": {
            "availStatus": {
              "$ref": "#/definitions/ratePlanAvailStatus"
            },
            "isAvailabilityGuaranteed": {
              "description": "indicates if availability is returned regardless of any restriction. Indicates also if the request follows the Royal Ambassador rules.",
              "type": "boolean"
            },
            "packageDetails": {
              "$ref": "#/definitions/packageDetailsSingle"
            },
            "gamingBucket": {
              "description": "indicates whether the rate plan is used for Comp or Cash flows. = ['Comp', 'Cash']",
              "type": "string"
            },
            "promoCode": {
              "description": "promotion code",
              "type": "string",
              "maxLength": 50
            }
          }
        }
      ]
    },
    "ratePlanPricing": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ratePlanCommon"
        },
        {
          "$ref": "#/definitions/ratePlanCommonSinglePricing"
        },
        {
          "type": "object",
          "properties": {
            "bookingMessage": {
              "description": "booking message linked to the rate plan",
              "$ref": "#/definitions/description"
            },
            "packageDetails": {
              "$ref": "#/definitions/packageDetailsPricing"
            },
            "promoCode": {
              "description": "promotion code",
              "type": "string",
              "maxLength": 50
            }
          }
        }
      ]
    },
    "availStatus": {
      "description": "indicates if the product returned is available or not. \"available\" status is not returned if the products are available. \"notAvailable\" status is returned only for unavailable requested products",
      "type": "string",
      "enum": [
        "available",
        "notAvailable"
      ],
      "default": "available"
    },
    "ratePlanAvailStatus": {
      "description": "indicates if the rate plan is present in at least one available offer or not",
      "type": "string",
      "enum": [
        "available",
        "notAvailable"
      ],
      "default": "available"
    },
    "productAvailStatus": {
      "description": "indicates if the product is present in at least one available offer or not",
      "type": "string",
      "enum": [
        "available",
        "notAvailable"
      ],
      "default": "available"
    },
    "availStatusOffer": {
      "description": "availability status",
      "type": "string",
      "enum": [
        "available",
        "notAvailable",
        "onRequest"
      ],
      "default": "available"
    },
    "rateRange": {
      "type": "object",
      "description": "rate range in term of stay’s highest night rate, stay’s checkin rate and stay’s average daily rate. Returned only for view \"hotelPriceRange\"",
      "required": [
        "highestRate",
        "checkinRate",
        "avgRate"
      ],
      "properties": {
        "highestRate": {
          "description": "range computed on the whole stay based on the highest rate of each offer, per unit (quantity 1)",
          "$ref": "#/definitions/rangeDetails"
        },
        "checkinRate": {
          "description": "range computed on the check-in date of each offer, per unit (quantity 1)",
          "$ref": "#/definitions/rangeDetails"
        },
        "avgRate": {
          "description": "range computed on the whole stay based on the average rate of each product, per unit (quantity 1)",
          "$ref": "#/definitions/rangeDetails"
        }
      }
    },
    "rangeDetails": {
      "type": "object",
      "required": [
        "dailyTotalOccRate"
      ],
      "properties": {
        "dailyTotalOccRate": {
          "description": "rate range (lower bound, upper bound) for one day with extra guests",
          "type": "array",
          "minItems": 2,
          "maxItems": 2,
          "items": {
            "type": "string"
          },
          "example": [
            "200.00",
            "500.00"
          ]
        },
        "dailyBaseOccRate": {
          "description": "rate range (lower bound, upper bound) for one day without extra guest",
          "type": "array",
          "minItems": 2,
          "maxItems": 2,
          "items": {
            "type": "string"
          },
          "example": [
            "190.00",
            "490.00"
          ]
        },
        "rateType": {
          "description": "rate type of minimum, maximum rates. OTA codes as per RPT OTA list (Rate Plan Type)",
          "type": "array",
          "minItems": 2,
          "maxItems": 2,
          "items": {
            "type": "string"
          },
          "example": [
            "RPT9",
            "RPT13"
          ]
        }
      }
    },
    "rateDetails": {
      "type": "object",
      "description": "rate details. Returned only for views \"minMaxOfferPerRatePlan\" , \"minMaxOfferPerHotel\" or \"minOfferPerHotel\"",
      "required": [
        "offers"
      ],
      "properties": {
        "offers": {
          "type": "array",
          "description": "The list of offers returned",
          "items": {
            "$ref": "#/definitions/offerMulti"
          }
        }
      }
    },
    "bonusRatePlan": {
      "required": [
        "code"
      ],
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/ratePlanCode"
        }
      }
    },
    "productUse": {
      "type": "object",
      "required": [
        "period",
        "inventoryTypeCode"
      ],
      "properties": {
        "period": {
          "description": "period where the product is available",
          "$ref": "#/definitions/period"
        },
        "inventoryTypeCode": {
          "$ref": "#/definitions/inventoryTypeCode"
        },
        "productLinesDescs": {
          "description": "description lines computed by the process based on channel flags and on the short/long descriptions of the room types and the rate plans",
          "$ref": "#/definitions/description"
        },
        "quantity": {
          "type": "integer",
          "description": "quantity of the requested product",
          "default": 1
        },
        "guestCounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/guestCounts"
          }
        },
        "isMainProduct": {
          "description": "indicates if the product rate is the main one. By default, it's false",
          "type": "boolean",
          "default": false
        },
        "isOptional": {
          "description": "indicates if the product rate is not included in the offer. By default, it's false",
          "type": "boolean",
          "default": false
        },
        "promotions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/promotion"
          }
        },
        "numberOfAvailableProducts": {
          "description": "the number of available products during the stay",
          "type": "integer"
        },
        "pricingFrequency": {
          "description": "the frequency under which the product is priced. Returned only for mandatory products in a predefined package",
          "type": "string",
          "enum": [
            "PerNight",
            "PerStay",
            "PerUse"
          ],
          "default": "PerNight"
        },
        "pricingMethod": {
          "description": "the method under which the product is priced. Returned only for mandatory products in a predefined package",
          "type": "string",
          "enum": [
            "PerProduct",
            "PerPerson",
            "PerProductPerOcc",
            "PerProductPerGuestType"
          ],
          "default": "PerProduct"
        },
        "bookingPattern": {
          "description": "the booking pattern defines when and how many times the product is used. Returned only for mandatory products in a predefined package",
          "type": "string",
          "enum": [
            "DayOfCheckIn",
            "DayOfCheckOut",
            "Anytime"
          ]
        }
      }
    },
    "productRate": {
      "description": "rate details of the product, optional for isMainProduct=False in case of package, will be displayed for isMainProduct=True and in case of requested optional service",
      "type": "object",
      "required": [
        "ratesDef",
        "taxInclusionMode"
      ],
      "properties": {
        "ratesDef": {
          "description": "the applicable rate changes of the stay. Amounts can include extra person charges depending on requested number of guests or channel setting",
          "$ref": "#/definitions/ratesDefinition"
        },
        "hasRateChange": {
          "description": "if there are more than one rates in ratesDefinition, this flag will be set to true. It reflects rate change but not tax change",
          "type": "boolean"
        },
        "pricingFrequency": {
          "description": "the frequency under which the product is priced",
          "type": "string",
          "enum": [
            "PerNight",
            "PerStay",
            "PerUse"
          ],
          "default": "PerNight"
        },
        "pricingMethod": {
          "description": "the method under which the product is priced",
          "type": "string",
          "enum": [
            "PerProduct",
            "PerPerson",
            "PerProductPerOcc",
            "PerProductPerGuestType"
          ],
          "default": "PerProduct"
        },
        "bookingPattern": {
          "description": "the booking pattern defines when and how many times the product is used",
          "type": "string",
          "enum": [
            "DayOfCheckIn",
            "DayOfCheckOut",
            "Anytime"
          ]
        },
        "isDefaultPricingBased": {
          "description": "indicates if current product is priced using default rate. By default, it's true",
          "type": "boolean",
          "default": true
        },
        "taxInclusionMode": {
          "$ref": "#/definitions/taxInclusionMode"
        }
      }
    },
    "policies": {
      "description": "element containing all the policies regarding guarantee, deposit, cancellation, no-show and early check-out",
      "type": "object",
      "required": [
        "checkinTime",
        "checkoutTime"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/policiesCommon"
        },
        {
          "type": "object",
          "properties": {
            "isPrepaid": {
              "description": "true when deposit is 100% of the stay",
              "type": "boolean"
            },
            "isRefundable": {
              "description": "true when the Refund feature is activated at property level and a refund percentage is set on the rate plan",
              "type": "boolean"
            },
            "checkinTime": {
              "description": "the check-in time. The one applicable for the rate category or the house policy. The rate category level wins over house policy",
              "type": "string"
            },
            "checkoutTime": {
              "description": "the check-out time. The one applicable for the rate category or the house policy. The rate category level wins over house policy",
              "type": "string"
            },
            "policyTypeCode": {
              "description": "code for the policy type",
              "type": "string"
            }
          }
        }
      ]
    },
    "commission": {
      "description": "element containing the commission value type, value and currency when value type is flat",
      "type": "object",
      "required": [
        "valueType",
        "value"
      ],
      "properties": {
        "valueType": {
          "$ref": "#/definitions/valueType"
        },
        "value": {
          "$ref": "#/definitions/value"
        },
        "currency": {
          "$ref": "#/definitions/currency"
        }
      }
    },
    "bookingCode": {
      "type": "object",
      "required": [
        "bookingCode"
      ],
      "properties": {
        "bookingCode": {
          "description": "unique identifier for the offer, identifying the sleeping room, the rate plan, and the rate access code associated to it. Only returned when the offer is for a sleeping room (with/without other services)",
          "type": "string",
          "pattern": "[A-Z0-9]{1,8}",
          "minLength": 1,
          "maxLength": 20
        },
        "rateAccessCode": {
          "description": "this is now deprecated. Requested rate access codes attached to the rate plan code",
          "type": "string"
        }
      }
    },
    "offerMulti": {
      "description": "gives the details of a returned offer (rate plan + list of products) over the requested period",
      "type": "object",
      "required": [
        "productUses"
      ],
      "properties": {
        "warningRefs": {
          "description": "list of warning references",
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "productUses": {
          "description": "list of products (w/o attributes) with associated dates that are part of the offer",
          "type": "array",
          "items": {
            "$ref": "#/definitions/productUseMulti"
          }
        },
        "ratePlanCode": {
          "$ref": "#/definitions/ratePlanCode"
        },
        "availStatus": {
          "description": "offer's availability status. in case an requested offer is not available, NotAvailable will be returned",
          "$ref": "#/definitions/availStatus"
        },
        "avg": {
          "description": "average daily rate for the stay per unit for quantity 1",
          "$ref": "#/definitions/dailyTypeAmountMultiWithAverage"
        },
        "highest": {
          "description": "highest daily rate for the stay per unit for quantity 1",
          "$ref": "#/definitions/dailyTypeAmountMulti"
        },
        "checkin": {
          "description": "checkin daily rate for the stay per unit for quantity 1",
          "$ref": "#/definitions/dailyTypeAmountMulti"
        },
        "bookingCodes": {
          "description": "list of the Booking Codes associated to the offer, along with their rate access code",
          "type": "array",
          "items": {
            "$ref": "#/definitions/bookingCode"
          }
        },
        "freeGuestsDefIds": {
          "description": "references the free Guests Definition items applied to compute this offer",
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "rateAccessCode": {
          "description": "requested rate access code attached to the rate plan",
          "type": "string",
          "pattern": "[A-Z0-9]{1,8}",
          "minLength": 1,
          "maxLength": 8
        }
      }
    },
    "productUseMulti": {
      "type": "object",
      "required": [
        "period",
        "inventoryTypeCode"
      ],
      "properties": {
        "period": {
          "description": "period where the product is available",
          "$ref": "#/definitions/period"
        },
        "inventoryTypeCode": {
          "$ref": "#/definitions/inventoryTypeCode"
        },
        "productLinesDescs": {
          "description": "description lines computed by the process based on channel flags and on the short/long descriptions of the room types and the rate plans",
          "$ref": "#/definitions/description"
        },
        "quantity": {
          "type": "integer",
          "description": "quantity of the requested product",
          "default": 1
        },
        "guestCounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/guestCounts"
          }
        },
        "isMainProduct": {
          "description": "indicates if the product rate is the main one. By default, it's false",
          "type": "boolean",
          "default": false
        },
        "isOptional": {
          "description": "indicates if the product rate is not included in the offer. By default, it's false",
          "type": "boolean",
          "default": false
        },
        "numberOfAvailableProducts": {
          "description": "the number of available products during the stay.",
          "type": "integer"
        },
        "pricingFrequency": {
          "description": "the frequency under which the product is priced. Returned only for mandatory products in a predefined package",
          "type": "string",
          "enum": [
            "PerNight",
            "PerStay",
            "PerUse"
          ],
          "default": "PerNight"
        },
        "pricingMethod": {
          "description": "the method under which the product is priced. Returned only for mandatory products in a predefined package",
          "type": "string",
          "enum": [
            "PerProduct",
            "PerPerson",
            "PerProductPerOcc",
            "PerProductPerGuestType"
          ],
          "default": "PerProduct"
        },
        "bookingPattern": {
          "description": "the booking pattern defines when and how many times the product is used. Returned only for mandatory products in a predefined package",
          "type": "string",
          "enum": [
            "DayOfCheckIn",
            "DayOfCheckOut",
            "Anytime"
          ]
        },
        "rates": {
          "$ref": "#/definitions/productRateMulti"
        }
      }
    },
    "productRateMulti": {
      "description": "rate details of the product, optional for isMainProduct=False in case of package, will be displayed for isMainProduct=True and in case of requested optional service",
      "type": "object",
      "required": [
        "ratesDef",
        "taxInclusionMode"
      ],
      "properties": {
        "ratesDef": {
          "description": "the applicable rate changes of the stay. Amounts can include extra person charges depending on requested number of guests or channel setting",
          "$ref": "#/definitions/ratesDefinition"
        },
        "pricingFrequency": {
          "description": "the frequency under which the product is priced",
          "type": "string",
          "enum": [
            "PerNight",
            "PerStay",
            "PerUse"
          ],
          "default": "PerNight"
        },
        "pricingMethod": {
          "description": "the method under which the product is priced",
          "type": "string",
          "enum": [
            "PerProduct",
            "PerPerson",
            "PerProductPerOcc",
            "PerProductPerGuestType"
          ],
          "default": "PerProduct"
        },
        "bookingPattern": {
          "description": "the booking pattern defines when and how many times the product is used",
          "type": "string",
          "enum": [
            "DayOfCheckIn",
            "DayOfCheckOut",
            "Anytime"
          ]
        },
        "isDefaultPricingBased": {
          "description": "indicates if current product is priced using default rate. By default, it's true",
          "type": "boolean",
          "default": true
        },
        "taxInclusionMode": {
          "$ref": "#/definitions/taxInclusionMode"
        }
      }
    },
    "groupContractSingle": {
      "type": "object",
      "required": [
        "code",
        "name"
      ],
      "properties": {
        "code": {
          "description": "the group contract code",
          "type": "string"
        },
        "name": {
          "description": "the group contract name",
          "$ref": "#/definitions/description"
        },
        "desc": {
          "description": "the group contract description",
          "$ref": "#/definitions/description"
        },
        "availStatus": {
          "description": "availability status of the group contract. By default, \"Available\" if not returned in the response",
          "$ref": "#/definitions/availStatus"
        },
        "bookingProcedures": {
          "description": "group Contract Booking Procedures, free text explaining how the group can be booked",
          "$ref": "#/definitions/description"
        },
        "isCommissionable": {
          "description": "indicates if this Group Contract is commissionable or not",
          "type": "boolean",
          "default": false
        },
        "areAmtsConfidential": {
          "description": "indicates if amounts defined in the Group Contract are confidential ones",
          "type": "boolean",
          "default": false
        },
        "cdNumbers": {
          "description": "the list of requested Corporate Discount numbers associated to the group contract. If the group contract is associated to other non-requested Corporate Discount numbers, those are not returned",
          "type": "array",
          "items": {
            "$ref": "#/definitions/cdNumber"
          }
        }
      }
    },
    "offerSingle": {
      "description": "gives the details of a returned offer(rate plan + list of products) over the requested period",
      "type": "object",
      "required": [
        "productUses",
        "policies",
        "totalRate"
      ],
      "properties": {
        "warningRefs": {
          "description": "list of warning references",
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "productUses": {
          "description": "list of products (w/o attributes) with associated dates that are part of the offer",
          "type": "array",
          "items": {
            "$ref": "#/definitions/productUseSingle"
          }
        },
        "ratePlanCode": {
          "$ref": "#/definitions/ratePlanCode"
        },
        "groupCode": {
          "description": "group contract code",
          "type": "string"
        },
        "policies": {
          "description": "policies information",
          "$ref": "#/definitions/policies"
        },
        "commission": {
          "description": "commission applicable to this offer",
          "$ref": "#/definitions/commission"
        },
        "totalRate": {
          "description": "total amount of an offer with extra person",
          "$ref": "#/definitions/totalRateDetails"
        },
        "totalBaseOccRate": {
          "description": "total amount of an offer without extra person",
          "$ref": "#/definitions/totalRateDetails"
        },
        "totalExtraOccRate": {
          "description": "total amount of extra person in an offer",
          "$ref": "#/definitions/totalRateDetails"
        },
        "availStatus": {
          "description": "offer s availability status. In case an requested offer is not available, NotAvailable will be returned. The status OnRequest is only available on the chains/brand supporting the functionality",
          "$ref": "#/definitions/availStatusOffer"
        },
        "bookingCodes": {
          "description": "list of the Booking Codes associated to the offer, along with their rate access code",
          "type": "array",
          "items": {
            "$ref": "#/definitions/bookingCode"
          }
        },
        "freeGuestsDefIds": {
          "description": "references the free Guests Definition items applied to compute this offer",
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "rateAccessCode": {
          "description": "requested rate access code attached to the rate plan",
          "type": "string",
          "pattern": "[A-Z0-9]{1,8}",
          "minLength": 1,
          "maxLength": 8
        }
      }
    },
    "productUseSingle": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/productUse"
        },
        {
          "type": "object",
          "properties": {
            "rates": {
              "$ref": "#/definitions/productRateSingle"
            },
            "ratePlanCode": {
              "$ref": "#/definitions/ratePlanCode"
            }
          }
        }
      ]
    },
    "productRateSingle": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/productRate"
        },
        {
          "type": "object",
          "required": [
            "dailyRates",
            "totalRate"
          ],
          "properties": {
            "totalRate": {
              "description": "total amount of an offer with extra person",
              "$ref": "#/definitions/totalRateDetails"
            },
            "totalBaseOccRate": {
              "description": "total amount of an offer without extra person",
              "$ref": "#/definitions/totalRateDetails"
            },
            "totalExtraOccRate": {
              "description": "total amount of extra person in an offer",
              "$ref": "#/definitions/totalRateDetails"
            },
            "dailyRates": {
              "description": "a collection of rate changes by period. It can be a rate change or a tax change",
              "type": "array",
              "items": {
                "$ref": "#/definitions/dailyRatesSingle"
              }
            }
          }
        }
      ]
    },
    "groupContractPricing": {
      "type": "object",
      "required": [
        "code",
        "name"
      ],
      "properties": {
        "code": {
          "description": "the group contract code",
          "type": "string"
        },
        "name": {
          "description": "the group contract name",
          "$ref": "#/definitions/description"
        },
        "desc": {
          "description": "the group contract description",
          "$ref": "#/definitions/description"
        },
        "bookingProcedures": {
          "description": "group Contract Booking Procedures, free text explaining how the group can be booked",
          "$ref": "#/definitions/description"
        },
        "isCommissionable": {
          "description": "indicates if this Group Contract is commissionable or not",
          "type": "boolean",
          "default": false
        },
        "areAmtsConfidential": {
          "description": "indicates if amounts defined in the Group Contract are confidential ones",
          "type": "boolean",
          "default": false
        },
        "cdNumbers": {
          "description": "the list of requested Corporate Discount numbers associated to the group contract. If the group contract is associated to other non-requested Corporate Discount numbers, those are not returned",
          "type": "array",
          "items": {
            "$ref": "#/definitions/cdNumber"
          }
        }
      }
    },
    "offerPricing": {
      "description": "gives the details of a returned offer (rate plan + list of products) over the requested period",
      "type": "object",
      "required": [
        "productUses",
        "policies",
        "totalRate"
      ],
      "properties": {
        "warningRefs": {
          "description": "list of warning references",
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "productUses": {
          "description": "list of products (w/o attributes) with associated dates that are part of the offer",
          "type": "array",
          "items": {
            "$ref": "#/definitions/productUsePricing"
          }
        },
        "ratePlanCode": {
          "$ref": "#/definitions/ratePlanCode"
        },
        "groupCode": {
          "description": "group contract code",
          "type": "string"
        },
        "policies": {
          "description": "policies information",
          "$ref": "#/definitions/policies"
        },
        "commission": {
          "description": "commission applicable to this offer",
          "$ref": "#/definitions/commission"
        },
        "totalRate": {
          "description": "total amount of an offer with extra person",
          "$ref": "#/definitions/totalRateDetails"
        },
        "totalBaseOccRate": {
          "description": "total amount of an offer without extra person",
          "$ref": "#/definitions/totalRateDetails"
        },
        "totalExtraOccRate": {
          "description": "total amount of extra person in an offer",
          "$ref": "#/definitions/totalRateDetails"
        },
        "availStatus": {
          "description": "offer s availability status. In case an requested offer is not available, NotAvailable will be returned. The status OnRequest is only available on the chains/brand supporting the functionality",
          "$ref": "#/definitions/availStatusOffer"
        },
        "rateAccessCode": {
          "description": "requested rate access code attached to the rate plan",
          "type": "string"
        },
        "freeGuestsDefIds": {
          "description": "references the free Guests Definition items applied to compute this offer",
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    },
    "additionalOfferPricing": {
      "description": "gives the details of a returned offer(rate plan + list of products) over the requested period",
      "type": "object",
      "required": [
        "productUses",
        "totalRate"
      ],
      "properties": {
        "productUses": {
          "description": "list of products (w/o attributes) with associated dates that are part of the offer",
          "type": "array",
          "items": {
            "$ref": "#/definitions/additionalProductUse"
          }
        },
        "ratePlanCode": {
          "$ref": "#/definitions/ratePlanCode"
        },
        "groupCode": {
          "description": "group contract code",
          "type": "string"
        },
        "policies": {
          "description": "policies information",
          "$ref": "#/definitions/policies"
        },
        "commission": {
          "description": "commission applicable to this offer",
          "$ref": "#/definitions/commission"
        },
        "totalRate": {
          "description": "total amount of an offer with extra person",
          "$ref": "#/definitions/totalRateDetails"
        },
        "freeGuestsDefIds": {
          "description": "references the free Guests Definition items applied to compute this offer",
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    },
    "productUsePricing": {
      "type": "object",
      "required": [
        "period",
        "inventoryTypeCode"
      ],
      "properties": {
        "period": {
          "description": "period where the product is available",
          "$ref": "#/definitions/period"
        },
        "inventoryTypeCode": {
          "$ref": "#/definitions/inventoryTypeCode"
        },
        "productLinesDescs": {
          "description": "description lines computed by the process based on channel flags and on the short/long descriptions of the room types and the rate plans",
          "$ref": "#/definitions/description"
        },
        "quantity": {
          "type": "integer",
          "description": "quantity of the requested product",
          "default": 1
        },
        "guestCounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/guestCounts"
          }
        },
        "isMainProduct": {
          "description": "indicates if the product rate is the main one. By default, it's false",
          "type": "boolean",
          "default": false
        },
        "isOptional": {
          "description": "indicates if the product rate is not included in the offer. By default, it's false",
          "type": "boolean",
          "default": false
        },
        "isConsumedNextDay": {
          "type": "boolean",
          "description": "indicate if the product is consumed next day",
          "default": false
        },
        "promotions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/promotion"
          }
        },
        "numberOfAvailableProducts": {
          "description": "the number of available products during the stay",
          "type": "integer"
        },
        "pricingFrequency": {
          "description": "the frequency under which the product is priced. Returned only for mandatory products in a predefined package",
          "type": "string",
          "enum": [
            "PerNight",
            "PerStay",
            "PerUse"
          ],
          "default": "PerNight"
        },
        "pricingMethod": {
          "description": "the method under which the product is priced. Returned only for mandatory products in a predefined package",
          "type": "string",
          "enum": [
            "PerProduct",
            "PerPerson",
            "PerProductPerOcc",
            "PerProductPerGuestType"
          ],
          "default": "PerProduct"
        },
        "bookingPattern": {
          "description": "the booking pattern defines when and how many times the product is used. Returned only for mandatory products in a predefined package",
          "type": "string",
          "enum": [
            "DayOfCheckIn",
            "DayOfCheckOut",
            "Anytime"
          ]
        },
        "rates": {
          "$ref": "#/definitions/productRatePricing"
        }
      }
    },
    "productRatePricing": {
      "description": "rate details of the product, optional for isMainProduct=False in case of package, will be displayed for isMainProduct=True and in case of requested optional service",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/productRate"
        },
        {
          "type": "object",
          "required": [
            "dailyRates",
            "totalRate"
          ],
          "properties": {
            "totalRate": {
              "description": "total amount of an offer with extra person",
              "$ref": "#/definitions/totalRateDetails"
            },
            "totalBaseOccRate": {
              "description": "total amount of an offer without extra person",
              "$ref": "#/definitions/totalRateDetails"
            },
            "totalExtraOccRate": {
              "description": "total amount of extra person in an offer",
              "$ref": "#/definitions/totalRateDetails"
            },
            "dailyRates": {
              "description": "a collection of rate changes by period. It can be a rate change or a tax change",
              "type": "array",
              "items": {
                "$ref": "#/definitions/dailyRatesPricing"
              }
            }
          }
        }
      ]
    },
    "additionalProductUse": {
      "type": "object",
      "required": [
        "period",
        "inventoryTypeCode"
      ],
      "properties": {
        "period": {
          "description": "period where the product is available",
          "$ref": "#/definitions/period"
        },
        "inventoryTypeCode": {
          "$ref": "#/definitions/inventoryTypeCode"
        },
        "quantity": {
          "type": "integer",
          "description": "quantity of the requested product",
          "default": 1
        },
        "guestCounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/guestCounts"
          }
        },
        "isMainProduct": {
          "description": "indicates if the product rate is the main one. By default, it's false",
          "type": "boolean",
          "default": false
        },
        "isConsumedNextDay": {
          "type": "boolean",
          "description": "indicate if the product is consumed next day",
          "default": false
        },
        "promotions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/promotion"
          }
        },
        "pricingFrequency": {
          "description": "the frequency under which the product is priced. Returned only for mandatory products in a predefined package",
          "type": "string",
          "enum": [
            "PerNight",
            "PerStay",
            "PerUse"
          ],
          "default": "PerNight"
        },
        "pricingMethod": {
          "description": "the method under which the product is priced. Returned only for mandatory products in a predefined package",
          "type": "string",
          "enum": [
            "PerProduct",
            "PerPerson",
            "PerProductPerOcc",
            "PerProductPerGuestType"
          ],
          "default": "PerProduct"
        },
        "bookingPattern": {
          "description": "the booking pattern defines when and how many times the product is used. Returned only for mandatory products in a predefined package",
          "type": "string",
          "enum": [
            "DayOfCheckIn",
            "DayOfCheckOut",
            "Anytime"
          ]
        },
        "rates": {
          "$ref": "#/definitions/additionalProductRate"
        },
        "availablePeriods": {
          "description": "the list of periods with available products, no period returned when close restriction applies",
          "type": "array",
          "items": {
            "$ref": "#/definitions/availabilityChange"
          }
        }
      }
    },
    "additionalProductRate": {
      "description": "rate details of the product, optional for isMainProduct=False in case of package, will be displayed for isMainProduct=True and in case of requested optional service",
      "type": "object",
      "required": [
        "ratesDef",
        "taxInclusionMode",
        "dailyRates"
      ],
      "properties": {
        "ratesDef": {
          "description": "the applicable rate changes of the stay. Amounts can include extra person charges depending on requested number of guests or channel setting",
          "$ref": "#/definitions/additionalRatesDefinition"
        },
        "hasRateChange": {
          "description": "if there are more than one rates in ratesDefinition, this flag will be set to true. It reflects rate change but not tax change",
          "type": "boolean"
        },
        "pricingFrequency": {
          "description": "the frequency under which the product is priced",
          "type": "string",
          "enum": [
            "PerNight",
            "PerStay",
            "PerUse"
          ],
          "default": "PerNight"
        },
        "pricingMethod": {
          "description": "the method under which the product is priced",
          "type": "string",
          "enum": [
            "PerProduct",
            "PerPerson",
            "PerProductPerOcc",
            "PerProductPerGuestType"
          ],
          "default": "PerProduct"
        },
        "bookingPattern": {
          "description": "the booking pattern defines when and how many times the product is used",
          "type": "string",
          "enum": [
            "DayOfCheckIn",
            "DayOfCheckOut",
            "Anytime"
          ]
        },
        "isDefaultPricingBased": {
          "description": "indicates if current product is priced using default rate. By default, it's true",
          "type": "boolean",
          "default": true
        },
        "taxInclusionMode": {
          "$ref": "#/definitions/taxInclusionMode"
        },
        "dailyRates": {
          "description": "a collection of rate changes by period. It can be a rate change or a tax change",
          "type": "array",
          "items": {
            "$ref": "#/definitions/additionalDailyRates"
          }
        }
      }
    },
    "availabilityChange": {
      "type": "object",
      "required": [
        "start",
        "end"
      ],
      "properties": {
        "start": {
          "description": "period start date",
          "type": "string",
          "format": "date"
        },
        "end": {
          "description": "period end date",
          "type": "string",
          "format": "date"
        },
        "availCounters": {
          "type": "array",
          "description": "array gathering the availability counters for every day of the given period. Not set in case of unlimited inventory",
          "items": {
            "type": "integer",
            "description": "daily availability counter"
          }
        }
      }
    },
    "policiesCommon": {
      "description": "element containing all the policies regarding guarantee, deposit, cancellation, no-show and early check-out",
      "type": "object",
      "properties": {
        "guarantee": {
          "$ref": "#/definitions/guarantee"
        },
        "deposit": {
          "$ref": "#/definitions/deposit"
        },
        "cancellation": {
          "$ref": "#/definitions/cancellation"
        },
        "cancellationNoShow": {
          "$ref": "#/definitions/cancellationNoShow"
        },
        "earlyDeparture": {
          "$ref": "#/definitions/earlyDeparture"
        }
      }
    },
    "guarantee": {
      "description": "payment policies for the guarantee",
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "code identifying the policy catalog item",
          "pattern": "[A-Z0-9]{1,50}",
          "minLength": 1,
          "maxLength": 50
        },
        "isRequired": {
          "$ref": "#/definitions/isRequired"
        },
        "time": {
          "description": "guarantee hold time",
          "type": "string",
          "pattern": "[0-9]{2}:[0-9]{2}:[0-9]{2}",
          "maxLength": 8,
          "example": "12:00:00"
        },
        "desc": {
          "$ref": "#/definitions/description"
        },
        "acceptedGuarantees": {
          "description": "accepted type of guarantees",
          "type": "object",
          "properties": {
            "guaranteeTypes": {
              "type": "array",
              "description": "list of accepted guarantee types",
              "maxItems": 5,
              "items": {
                "type": "string",
                "description": "guarantee type",
                "maxLength": 100,
                "enum": [
                  "NoGuarantee",
                  "CreditCard",
                  "IATA",
                  "Hotel",
                  "Company"
                ]
              }
            },
            "creditCards": {
              "$ref": "#/definitions/creditCards"
            }
          }
        }
      },
      "required": [
        "isRequired",
        "time"
      ]
    },
    "deposit": {
      "description": "payment policies for the deposit",
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "code identifying the policy catalog item",
          "pattern": "[A-Z0-9]{1,50}",
          "minLength": 1,
          "maxLength": 50
        },
        "isRequired": {
          "$ref": "#/definitions/isRequired"
        },
        "feeType": {
          "$ref": "#/definitions/policyFeeType"
        },
        "feeValue": {
          "description": "flat amount, flat amount per night, number of nights or percentage fee defined in deposit policy",
          "type": "string"
        },
        "feeCurrency": {
          "$ref": "#/definitions/currency"
        },
        "amt": {
          "description": "computed amount for deposit due",
          "type": "string"
        },
        "amtCurrency": {
          "$ref": "#/definitions/currency"
        },
        "desc": {
          "$ref": "#/definitions/description"
        },
        "deadline": {
          "$ref": "#/definitions/deadline"
        }
      },
      "required": [
        "isRequired",
        "amt",
        "amtCurrency"
      ]
    },
    "cancellation": {
      "description": "the cancellation policy information applicable to the rate plan for the requested period",
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "code identifying the policy catalog item",
          "pattern": "[A-Z0-9]{1,50}",
          "minLength": 1,
          "maxLength": 50
        },
        "feeType": {
          "$ref": "#/definitions/policyFeeType"
        },
        "feeValue": {
          "description": "flat amount, flat amount per night, number of nights or percentage fee defined in cancellation policy",
          "type": "string"
        },
        "feeCurrency": {
          "$ref": "#/definitions/currency"
        },
        "amt": {
          "description": "computed amount for cancellation due",
          "type": "string"
        },
        "amtCurrency": {
          "$ref": "#/definitions/currency"
        },
        "deadline": {
          "$ref": "#/definitions/deadline"
        },
        "isGracePeriod": {
          "description": "is set to true if policy is not applied. This flag is set to false only if the transaction date in hotel local time requires fees applicable for the cancellation policy or cancellation/No show rule. Otherwise if the transaction date falls outside the cancellation or cancellation/no show rule the flag is set to yes. This flag is returned separately for each rule, one for cancellation and one for cancellation/no show rule if they are present in the response",
          "type": "boolean"
        }
      },
      "required": [
        "feeType",
        "amt",
        "isGracePeriod",
        "amtCurrency"
      ]
    },
    "cancellationNoShow": {
      "description": "the no-show policy information applicable to the rate plan for the requested period, if present",
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "code identifying the policy catalog item",
          "pattern": "[A-Z0-9]{1,50}",
          "minLength": 1,
          "maxLength": 50
        },
        "feeType": {
          "$ref": "#/definitions/policyFeeType"
        },
        "feeValue": {
          "description": "flat amount, flat amount per night, number of nights or percentage fee defined in cancellation no show policy",
          "type": "string"
        },
        "feeCurrency": {
          "$ref": "#/definitions/currency"
        },
        "amt": {
          "description": "computed amount due for cancellation-noshow policy",
          "type": "string"
        },
        "amtCurrency": {
          "$ref": "#/definitions/currency"
        },
        "deadline": {
          "$ref": "#/definitions/deadline"
        },
        "refundPercentage": {
          "description": "the refund percentage corresponds to the percentage out of the penalty that the guest will receive in case of cancellation",
          "type": "string"
        },
        "isGracePeriod": {
          "description": "is set to true if policy is not applied",
          "type": "boolean"
        }
      },
      "required": [
        "feeType",
        "amt",
        "deadline",
        "isGracePeriod",
        "amtCurrency"
      ]
    },
    "earlyDeparture": {
      "description": "the early departure policy information applicable to the rate plan for the requested period, if present. Returned only for rate plans having Sleeping room product",
      "type": "object",
      "properties": {
        "feeType": {
          "$ref": "#/definitions/policyFeeType"
        },
        "feeValue": {
          "description": "flat amount, flat amount per night, number of nights or percentage fee defined in early departure policy",
          "type": "string"
        },
        "feeCurrency": {
          "$ref": "#/definitions/currency"
        },
        "amt": {
          "description": "computed amount for early check-out due",
          "type": "string"
        },
        "amtCurrency": {
          "$ref": "#/definitions/currency"
        }
      },
      "required": [
        "feeType",
        "amt",
        "amtCurrency"
      ]
    },
    "isRequired": {
      "description": "indicates whether the guarantee/deposit is mandatory",
      "type": "boolean"
    },
    "policyFeeType": {
      "description": "the due amount type of the policy",
      "type": "string",
      "enum": [
        "Flat",
        "FlatPerNight",
        "Nights",
        "StayPercent",
        "FirstNight",
        "LastNight",
        "FirstLast",
        "FullStay"
      ]
    },
    "deadline": {
      "type": "object",
      "required": [
        "dateTime",
        "deadlineType"
      ],
      "properties": {
        "dateTime": {
          "description": "the deadline date/time",
          "type": "string",
          "example": "2014-05-26T22:00:00"
        },
        "deadlineType": {
          "description": "the deadline type",
          "type": "string",
          "enum": [
            "atBooking",
            "numberOfDaysAfterBooking",
            "numberOfDaysBeforeCheckin"
          ]
        },
        "deadlineValue": {
          "description": "value of the deadline type. Not returned if deadlineType is atBooking",
          "type": "integer"
        }
      }
    },
    "specialEvent": {
      "description": "if an event or a special requirement occurs during the stay, the GRS applies automatically the restrictions configured for this event and send back the related information",
      "type": "object",
      "required": [
        "start",
        "minLOS"
      ],
      "properties": {
        "desc": {
          "$ref": "#/definitions/description"
        },
        "start": {
          "description": "the special event start date",
          "type": "string",
          "format": "date"
        },
        "minLOS": {
          "description": "minimum length of stay required",
          "type": "integer"
        }
      }
    },
    "creditCards": {
      "description": "list of accepted credit cards for guarantees type",
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "[A-Z]{2}"
      },
      "example": [
        "VI",
        "AX"
      ]
    },
    "taxTypeCode": {
      "description": "tax code (Refer to [FTT] OTA code list)",
      "type": "string",
      "enum": [
        "FTT1",
        "FTT2",
        "FTT3",
        "FTT4",
        "FTT5",
        "FTT6",
        "FTT7",
        "FTT8",
        "FTT9",
        "FTT10",
        "FTT11",
        "FTT12",
        "FTT13",
        "FTT14",
        "FTT15",
        "FTT16",
        "FTT17",
        "FTT18",
        "FTT19",
        "FTT20",
        "FTT21",
        "FTT22",
        "FTT23",
        "FTT24",
        "FTT25",
        "FTT26",
        "FTT27",
        "FTT28",
        "FTT29",
        "FTT30",
        "FTT31",
        "FTT32",
        "FTT33",
        "FTT34",
        "FTT35",
        "FTT36",
        "FTT37",
        "FTT38",
        "FTT39",
        "FTT40",
        "FTT41",
        "FTT42",
        "FTT43",
        "FTT44",
        "FTT45",
        "FTT46",
        "FTT47",
        "FTT48",
        "FTT49",
        "FTT50",
        "FTT51",
        "FTT52",
        "FTT53",
        "FTT54",
        "FTT55",
        "FTT56"
      ]
    },
    "chargeUnit": {
      "description": "unit for which the charge applies. Note that the PerUse charge unit is deprecated",
      "type": "string",
      "enum": [
        "PerPerson",
        "PerProduct",
        "PerUse"
      ]
    },
    "TaxValue": {
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "-?[0-9]+(\\.[0-9]+)?",
          "description": "percentage or flat amount of the tax",
          "example": "9.12"
        },
        "guestTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "startAge": {
          "type": "integer",
          "description": "start age of the range",
          "example": 0
        },
        "endAge": {
          "type": "integer",
          "description": "end age of the range. If no end age is specified the age range is considered up to infinite",
          "example": 18
        }
      }
    },
    "ratePlanCommon": {
      "type": "object",
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/ratePlanCode"
        },
        "types": {
          "$ref": "#/definitions/ratePlanTypes"
        },
        "name": {
          "description": "name (computed short description) of the rate plan",
          "$ref": "#/definitions/description"
        },
        "desc": {
          "description": "short description of the rate plan",
          "$ref": "#/definitions/description"
        },
        "longDesc": {
          "description": "long description of the rate plan",
          "$ref": "#/definitions/description"
        },
        "isFreeNight": {
          "description": "indicates if the rate plan is a free night rate plan",
          "type": "boolean"
        },
        "activeDays": {
          "description": "days on which rate plan is active. If not present, the rate plan is active on all days of the week",
          "$ref": "#/definitions/dow"
        },
        "checkinDays": {
          "description": "days on which check-in may be done. If not present, the check-in is possible on all days of the week",
          "$ref": "#/definitions/dow"
        },
        "stayOverDays": {
          "description": "the stay must contain at least one of these days. If not present, there is no restriction on the days that must be contained in the stay",
          "$ref": "#/definitions/dow"
        },
        "advanceBooking": {
          "$ref": "#/definitions/advanceBooking"
        },
        "minLOS": {
          "description": "minimum length of stay applied when checking restrictions",
          "type": "integer"
        },
        "maxLOS": {
          "description": "maximum length of stay applied when checking restrictions",
          "type": "integer"
        },
        "isGroupRatePlan": {
          "description": "indicates if the rate plan requested is a group rate plan or not",
          "type": "boolean",
          "default": false
        },
        "areAmtsConfidential": {
          "description": "indicates if amounts defined in the rate plan are confidential",
          "type": "boolean"
        },
        "isTentativeAllowed": {
          "description": "indicates if a there is a courtesy hold time before booking of the rate. True if the hotel is courtesy hold enabled and the booking period is entirely in the courtesy hold period",
          "type": "boolean"
        },
        "isLoyaltyIdRequired": {
          "description": "indicates if a loyalty number is required",
          "type": "boolean"
        },
        "isPackage": {
          "description": "indicates if the rate plan is a package",
          "type": "boolean"
        },
        "isVoucherRequired": {
          "description": "indicates if a coupon voucher is required",
          "type": "boolean"
        },
        "isRewardEarned": {
          "description": "indicates if booking this rate gives reward points to the customer",
          "type": "boolean"
        },
        "isIdRequired": {
          "description": "indicates if an ID is required at check-in for this rate",
          "type": "boolean"
        },
        "isAwardAccepted": {
          "description": "indicates if payment for this rate can be done totally or partially using reward points",
          "type": "boolean"
        },
        "isPreDefinedPackage": {
          "description": "indicates if the rate plan is composed of several price plans and products",
          "type": "boolean"
        }
      }
    },
    "ratePlanCommonSinglePricing": {
      "type": "object",
      "properties": {
        "cdNumbers": {
          "description": "the list of requested Corporate Discount numbers associated to the negotiated rate plan. If the rate plan is associated to other non-requested CD numbers, those are not returned with the rate plan",
          "type": "array",
          "items": {
            "$ref": "#/definitions/cdNumber"
          }
        },
        "customDisplay": {
          "$ref": "#/definitions/customDisplay"
        },
        "isCommissionable": {
          "description": "indicates if this rate is commissionable or not",
          "type": "boolean"
        },
        "policyTypeCode": {
          "$ref": "#/definitions/policyTypeCode"
        },
        "travelAgency": {
          "$ref": "#/definitions/travelAgency"
        },
        "rateAccessCodes": {
          "description": "list of the requested rate access codes attached to the rate plan",
          "type": "array",
          "maxItems": 8,
          "items": {
            "$ref": "#/definitions/rateAccessCodeObject"
          }
        }
      }
    },
    "ratePlanCode": {
      "description": "rate plan code",
      "type": "string",
      "pattern": "[A-Z0-9]{1,50}",
      "minLength": 1,
      "maxLength": 50
    },
    "ratePlanCodeDenial": {
      "description": "in case of Rate Plan denials, represents the Rate Plan causing the denial",
      "type": "string",
      "pattern": "[A-Z0-9]{1,50}",
      "minLength": 1,
      "maxLength": 50
    },
    "pricePlanCode": {
      "description": "price Plan code",
      "type": "string",
      "pattern": "[A-Z0-9]{2,50}",
      "minLength": 2,
      "maxLength": 50
    },
    "groupCode": {
      "description": "code of the group contract",
      "type": "string",
      "pattern": "[A-Z0-9]{1,50}",
      "minLength": 1,
      "maxLength": 50
    },
    "cdNumber": {
      "description": "corporate discount Number associated to the rate category",
      "type": "string",
      "pattern": "[A-Z0-9]{1,20}",
      "minLength": 1,
      "maxLength": 20
    },
    "taxInclusionMode": {
      "description": "indicates the tax inclusion's mode for the product",
      "type": "string",
      "enum": [
        "included",
        "excluded",
        "followHouse"
      ]
    },
    "advanceBooking": {
      "type": "object",
      "properties": {
        "isAdvancePurchase": {
          "description": "advance Purchase rate indicator",
          "type": "boolean",
          "default": false
        },
        "minDays": {
          "description": "minimum number of days required for advance booking",
          "type": "integer"
        },
        "maxDays": {
          "description": "maximum number of days required for advance booking",
          "type": "integer"
        }
      }
    },
    "ratePlanTypes": {
      "description": "list of rate plan type (OTA codes as per RPT OTA list)",
      "type": "array",
      "example": [
        "RPT4",
        "RPT9"
      ],
      "items": {
        "type": "string",
        "description": "rate plan type"
      }
    },
    "themeAndElement": {
      "type": "object",
      "required": [
        "code",
        "type"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "description": "code of the theme or element"
        },
        "type": {
          "type": "string",
          "enum": [
            "Theme",
            "Element"
          ],
          "description": "specifies the type as Theme or Element"
        },
        "name": {
          "description": "name of the theme or element",
          "$ref": "#/definitions/description"
        },
        "desc": {
          "description": "description of the theme/element",
          "$ref": "#/definitions/description"
        }
      }
    },
    "promotion": {
      "type": "object",
      "required": [
        "buyNumber",
        "getNumber"
      ],
      "properties": {
        "buyNumber": {
          "description": "buy X",
          "type": "integer"
        },
        "getNumber": {
          "description": "and get Y for free",
          "type": "integer"
        },
        "maxNumber": {
          "description": "with a maximum of Z",
          "type": "integer"
        },
        "amtOff": {
          "description": "flat amount discount (exclusive with percentOff)",
          "type": "string"
        },
        "percentOff": {
          "description": "percent discount (exclusive with amountOff)",
          "type": "string"
        }
      }
    },
    "policyTypeCode": {
      "description": "payment policy of the rate plan",
      "type": "string"
    },
    "rateAccessCode": {
      "type": "string",
      "pattern": "[A-Z0-9]{1,8}",
      "minLength": 1,
      "maxLength": 8
    },
    "rateAccessCodeObject": {
      "type": "object",
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "description": "code of the RateAccessCode",
          "type": "string",
          "pattern": "[A-Z0-9]{1,8}",
          "minLength": 1,
          "maxLength": 8
        },
        "name": {
          "description": "name of the RateAccessCode",
          "$ref": "#/definitions/description"
        },
        "desc": {
          "description": "description of the RateAccessCode",
          "$ref": "#/definitions/description"
        }
      }
    },
    "isPrimaryRate": {
      "description": "flag to indicate if the price is coming from the group primary rate plan, only returned if true, default value if not present is false. Applicable only when a Group Code is requested",
      "type": "boolean",
      "default": false
    },
    "travelAgency": {
      "description": "the requested travel agency number giving access to the negotiated rate plan. If the rate plan is associated to other non-requested travel agencies, those are not returned with the rate plan",
      "type": "object",
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "description": "travel agency number",
          "type": "string",
          "minLength": 1,
          "maxLength": 50
        },
        "affiliation": {
          "description": "travel agency affiliation",
          "type": "string",
          "minLength": 1,
          "maxLength": 50,
          "example": "IATA"
        }
      }
    },
    "dailyRatesSingle": {
      "type": "object",
      "required": [
        "start",
        "end",
        "dailyTotalRate"
      ],
      "properties": {
        "start": {
          "description": "period start date",
          "type": "string",
          "format": "date",
          "example": "2021-09-20"
        },
        "end": {
          "description": "period end date",
          "type": "string",
          "format": "date"
        },
        "isPrimaryRate": {
          "$ref": "#/definitions/isPrimaryRate"
        },
        "dailyTotalRate": {
          "$ref": "#/definitions/dailyRateDetailsSingle"
        }
      }
    },
    "dailyRatesPricing": {
      "type": "object",
      "required": [
        "start",
        "end",
        "dailyTotalRate"
      ],
      "properties": {
        "start": {
          "description": "period start date",
          "type": "string",
          "format": "date"
        },
        "end": {
          "description": "period end date",
          "type": "string",
          "format": "date"
        },
        "isPrimaryRate": {
          "$ref": "#/definitions/isPrimaryRate"
        },
        "dailyBaseOccRate": {
          "$ref": "#/definitions/dailyRateDetailsPricing"
        },
        "dailyExtraOccRate": {
          "$ref": "#/definitions/dailyRateDetailsPricing"
        },
        "dailyTotalRate": {
          "$ref": "#/definitions/dailyRateDetailsPricing"
        }
      }
    },
    "additionalDailyRates": {
      "type": "object",
      "required": [
        "start",
        "end",
        "dailyTotalRate"
      ],
      "properties": {
        "start": {
          "description": "period start date",
          "type": "string",
          "format": "date"
        },
        "end": {
          "description": "period end date",
          "type": "string",
          "format": "date"
        },
        "dailyTotalRate": {
          "$ref": "#/definitions/dailyRateDetailsPricing"
        }
      }
    },
    "dailyRateDetailsPricing": {
      "description": "all details on a given daily rate",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/dailyRateDetailsSingle"
        },
        {
          "type": "object",
          "properties": {
            "subTtlSvcChgExc": {
              "description": "sub total of all the excluded service charges",
              "type": "string"
            },
            "payableSubTtlSvcChgExc": {
              "$ref": "#/definitions/payableSubTotalServiceChargeExcluded"
            },
            "payHotelSubTtlSvcChgExc": {
              "$ref": "#/definitions/payHotelSubTotalServiceChargeExcluded"
            },
            "subTtlSvcChgInc": {
              "description": "sub total of all the included service charges",
              "type": "string"
            },
            "subTtlTxExc": {
              "description": "sub total of all the excluded taxes",
              "type": "string"
            },
            "payableSubTtlTxExc": {
              "$ref": "#/definitions/payableSubTotalTaxExcluded"
            },
            "payHotelSubTtlTxExc": {
              "$ref": "#/definitions/payHotelSubTotalTaxExcluded"
            },
            "subTtlTxInc": {
              "description": "sub total of all the included taxes",
              "type": "string"
            }
          }
        }
      ]
    },
    "dailyRateDetailsSingle": {
      "description": "all details on a given daily rate",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/rateAmounts"
        },
        {
          "type": "object",
          "properties": {
            "rateDefId": {
              "description": "when Amount is a dailyTotal, id of the reference RatesDefinitions item",
              "type": "integer"
            },
            "taxList": {
              "description": "the list of applicable taxes for this rate",
              "type": "array",
              "items": {
                "$ref": "#/definitions/taxAmount"
              }
            },
            "totalTaxes": {
              "description": "total of all taxes and fees in a day",
              "type": "string"
            },
            "payableTotalTaxes": {
              "$ref": "#/definitions/payableTotalTaxes"
            },
            "payHotelTotalTaxes": {
              "$ref": "#/definitions/payHotelTotalTaxes"
            }
          }
        }
      ]
    },
    "totalRateDetails": {
      "description": "all details on a given total rate",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/rateAmounts"
        },
        {
          "type": "object",
          "properties": {
            "taxGroups": {
              "description": "the applicable taxes grouped by tax code. If tax code is not present, taxes grouped by OTA FTT code and inclusion in rate",
              "type": "array",
              "items": {
                "$ref": "#/definitions/taxAmount"
              }
            },
            "totalTaxes": {
              "description": "total amount of all applicable taxes",
              "type": "string"
            },
            "payableTotalTaxes": {
              "$ref": "#/definitions/payableTotalTaxes"
            },
            "payHotelTotalTaxes": {
              "$ref": "#/definitions/payHotelTotalTaxes"
            },
            "avg": {
              "description": "average daily rate for the stay per unit for quantity 1",
              "$ref": "#/definitions/dailyTypeAmount"
            },
            "highest": {
              "description": "highest daily rate for the stay per unit for quantity 1",
              "$ref": "#/definitions/dailyTypeAmount"
            },
            "checkin": {
              "description": "checkin daily rate for the stay per unit for quantity 1",
              "$ref": "#/definitions/dailyTypeAmount"
            },
            "subTtlSvcChgExc": {
              "description": "sub total of all the excluded service charges",
              "type": "string"
            },
            "payableSubTtlSvcChgExc": {
              "$ref": "#/definitions/payableSubTotalServiceChargeExcluded"
            },
            "payHotelSubTtlSvcChgExc": {
              "$ref": "#/definitions/payHotelSubTotalServiceChargeExcluded"
            },
            "subTtlSvcChgInc": {
              "description": "sub total of all the included service charges",
              "type": "string"
            },
            "subTtlTxExc": {
              "description": "sub total of all the excluded taxes",
              "type": "string"
            },
            "payableSubTtlTxExc": {
              "$ref": "#/definitions/payableSubTotalTaxExcluded"
            },
            "payHotelSubTtlTxExc": {
              "$ref": "#/definitions/payHotelSubTotalTaxExcluded"
            },
            "subTtlTxInc": {
              "description": "sub total of all the included taxes",
              "type": "string"
            }
          }
        }
      ]
    },
    "amountBeforeTax": {
      "description": "amount excluding all taxes/service charges",
      "type": "string",
      "pattern": "^.*$"
    },
    "amountAfterTax": {
      "description": "amount including all taxes/service charges",
      "type": "string",
      "pattern": "^.*$"
    },
    "baseAmount": {
      "description": "amount defined in the CRS which includes included taxes/service charges and excludes excluded taxes/service charges",
      "type": "string",
      "pattern": "^.*$"
    },
    "rateAmounts": {
      "type": "object",
      "required": [
        "bsAmt"
      ],
      "properties": {
        "amtBfTx": {
          "$ref": "#/definitions/amountBeforeTax"
        },
        "bsAmt": {
          "$ref": "#/definitions/baseAmount"
        },
        "amtAfTx": {
          "$ref": "#/definitions/amountAfterTax"
        },
        "payableAmtAfTx": {
          "$ref": "#/definitions/payableAmountAfterTax"
        }
      }
    },
    "dailyTypeAmount": {
      "type": "object",
      "required": [
        "bsAmt"
      ],
      "properties": {
        "amtBfTx": {
          "$ref": "#/definitions/amountBeforeTax"
        },
        "bsAmt": {
          "$ref": "#/definitions/baseAmount"
        },
        "amtAfTx": {
          "$ref": "#/definitions/amountAfterTax"
        },
        "payableAmtAfTx": {
          "$ref": "#/definitions/payableAmountAfterTax"
        },
        "subTtlSvcChgExc": {
          "$ref": "#/definitions/subTotalServiceChargeExcluded"
        },
        "payableSubTtlSvcChgExc": {
          "$ref": "#/definitions/payableSubTotalServiceChargeExcluded"
        },
        "payHotelSubTtlSvcChgExc": {
          "$ref": "#/definitions/payHotelSubTotalServiceChargeExcluded"
        },
        "subTtlTxExc": {
          "$ref": "#/definitions/subTotalTaxExcluded"
        },
        "payableSubTtlTxExc": {
          "$ref": "#/definitions/payableSubTotalTaxExcluded"
        },
        "payHotelSubTtlTxExc": {
          "$ref": "#/definitions/payHotelSubTotalTaxExcluded"
        }
      }
    },
    "dailyTypeAmountMulti": {
      "type": "object",
      "required": [
        "bsAmt"
      ],
      "properties": {
        "bsAmt": {
          "$ref": "#/definitions/baseAmount"
        },
        "amtAfTx": {
          "$ref": "#/definitions/amountAfterTax"
        },
        "payableAmtAfTx": {
          "$ref": "#/definitions/payableAmountAfterTax"
        },
        "subTtlSvcChgExc": {
          "$ref": "#/definitions/subTotalServiceChargeExcluded"
        },
        "payableSubTtlSvcChgExc": {
          "$ref": "#/definitions/payableSubTotalServiceChargeExcluded"
        },
        "payHotelSubTtlSvcChgExc": {
          "$ref": "#/definitions/payHotelSubTotalServiceChargeExcluded"
        },
        "subTtlTxExc": {
          "$ref": "#/definitions/subTotalTaxExcluded"
        },
        "payableSubTtlTxExc": {
          "$ref": "#/definitions/payableSubTotalTaxExcluded"
        },
        "payHotelSubTtlTxExc": {
          "$ref": "#/definitions/payHotelSubTotalTaxExcluded"
        }
      }
    },
    "dailyTypeAmountMultiWithAverage": {
      "type": "object",
      "required": [
        "bsAmt"
      ],
      "properties": {
        "bsAmt": {
          "$ref": "#/definitions/baseAmount"
        },
        "amtAfTx": {
          "$ref": "#/definitions/amountAfterTax"
        },
        "payableAmtAfTx": {
          "$ref": "#/definitions/payableAmountAfterTax"
        },
        "subTtlSvcChgExc": {
          "$ref": "#/definitions/subTotalServiceChargeExcluded"
        },
        "payableSubTtlSvcChgExc": {
          "$ref": "#/definitions/payableSubTotalServiceChargeExcluded"
        },
        "payHotelSubTtlSvcChgExc": {
          "$ref": "#/definitions/payHotelSubTotalServiceChargeExcluded"
        },
        "subTtlTxExc": {
          "$ref": "#/definitions/subTotalTaxExcluded"
        },
        "payableSubTtlTxExc": {
          "$ref": "#/definitions/payableSubTotalTaxExcluded"
        },
        "payHotelSubTtlTxExc": {
          "$ref": "#/definitions/payHotelSubTotalTaxExcluded"
        },
        "taxGroups": {
          "description": "The applicable taxes grouped by tax code. If tax code is not present, taxes grouped by OTA FTT code and inclusion in rate. Returned if requested with option includeTaxAverageDetails.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/taxAmount"
          }
        }
      }
    },
    "subTotalServiceChargeExcluded": {
      "description": "sub total of all the excluded service charges",
      "type": "string"
    },
    "subTotalTaxExcluded": {
      "description": "Sub total of all the excluded taxes",
      "type": "string"
    },
    "payHotelSubTotalServiceChargeExcluded": {
      "description": "sub total of all the excluded service charges that must be paid at the hotel. Returned only when at least one service charge that must be paid at the hotel is applicable",
      "type": "string"
    },
    "payableSubTotalServiceChargeExcluded": {
      "description": "sub total of all the excluded service charges except service charges that must be paid at the hotel. Returned only when at least one service charge that must be paid at the hotel is applicable",
      "type": "string"
    },
    "payHotelSubTotalTaxExcluded": {
      "description": "sub total of all the excluded taxes that must be paid at the hotel. Returned only when at least one tax that must be paid at the hotel is applicable",
      "type": "string"
    },
    "payableSubTotalTaxExcluded": {
      "description": "sub total of all the excluded taxes except taxes that must be paid at the hotel. Returned only when at least one tax that must be paid at the hotel is applicable",
      "type": "string"
    },
    "payableAmountAfterTax": {
      "description": "amount including all taxes/service charges except taxes/service charges that must be paid at the hotel. Returned only when at least one tax or service charge that must be paid at the hotel is applicable",
      "type": "string",
      "pattern": "^.*$"
    },
    "payableTotalTaxes": {
      "description": "total of all taxes and service charges except taxes and service charges that must be paid at the hotel. Returned only when at least one tax or service charge that must be paid at the hotel is applicable",
      "type": "string"
    },
    "payHotelTotalTaxes": {
      "description": "total amount of all applicable taxes and service charges that must be paid at the hotel. Returned only when at least one tax or service charge that must be paid at the hotel is applicable",
      "type": "string"
    },
    "taxDefinition": {
      "description": "the applicable rules of taxes over the stay",
      "type": "object",
      "required": [
        "id",
        "chargeFrequency",
        "chargeUnit",
        "values",
        "computationType",
        "isIncluded",
        "start",
        "end"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "a unique ID for this tax definition item. Referenced in rates tax breakdown"
        },
        "code": {
          "type": "string",
          "maxLength": 5,
          "description": "user defined code"
        },
        "taxTypeCode": {
          "type": "string",
          "description": "online travel agency (OTA) fee tax type code"
        },
        "name": {
          "type": "string",
          "description": "name of the tax of fee",
          "maxLength": 64
        },
        "isIncluded": {
          "type": "boolean",
          "description": "indicates if the tax is included or excluded"
        },
        "currency": {
          "$ref": "#/definitions/currency"
        },
        "computationType": {
          "type": "string",
          "description": "type of computation, either Flat or Percentage",
          "enum": [
            "Flat",
            "Percentage"
          ]
        },
        "computationMode": {
          "type": "string",
          "description": "which base amount to consider. Possible values are TaxOnTax (tax on another tax), TaxOnNet (tax on amount before taxes) or TaxOnRate(tax on amount including included taxes and excluding excluded taxes)",
          "enum": [
            "TaxOnRate",
            "TaxOnNet",
            "TaxOnTax"
          ]
        },
        "chargeUnit": {
          "$ref": "#/definitions/chargeUnit"
        },
        "chargeFrequency": {
          "type": "string",
          "description": "how the tax is computed, once or repeated each day",
          "enum": [
            "PerDay",
            "PerStay"
          ]
        },
        "desc": {
          "$ref": "#/definitions/description"
        },
        "longDesc": {
          "$ref": "#/definitions/description"
        },
        "productCodes": {
          "type": "array",
          "description": "product Code(s) to which the tax apply",
          "items": {
            "$ref": "#/definitions/productCode"
          }
        },
        "start": {
          "description": "first date on which the tax definition item applies (for the requested stay)",
          "type": "string",
          "format": "date"
        },
        "end": {
          "description": "last date on which the tax applies (for the requested stay)",
          "type": "string",
          "format": "date"
        },
        "dow": {
          "description": "list of applicable days of weeks. 'MTWTFSS' for all days of weeks. A dash is present for any missing day. For instance, 'MT-----' for Monday and Tuesday only, '-T-T---' for Tuesday and Thursday only",
          "type": "string",
          "pattern": "^[M-][T-][W-][T-][F-][S-][S-]$"
        },
        "values": {
          "type": "array",
          "description": "values per criteria",
          "items": {
            "$ref": "#/definitions/TaxValue"
          }
        },
        "isPaidAtHotel": {
          "description": "set to true if the tax must be paid at the hotel",
          "type": "boolean"
        }
      }
    },
    "guestTypeDefinition": {
      "description": "the applicable Property Guest Type set-up",
      "type": "object",
      "required": [
        "code",
        "startAge"
      ],
      "properties": {
        "code": {
          "type": "string",
          "description": "guest Type Code",
          "pattern": "[A-Z0-9_]{2,8}",
          "example": "CHILD"
        },
        "otaCodes": {
          "type": "array",
          "title": "otaCodes",
          "description": "the list of OTA AQC codes associated to the Guest Type. The same OTA AQC code cannot be used in more than one Guest Type",
          "example": [
            "AQC1",
            "AQC3",
            "AQC19"
          ],
          "items": {
            "type": "string",
            "enum": [
              "AQC1",
              "AQC2",
              "AQC3",
              "AQC4",
              "AQC5",
              "AQC6",
              "AQC7",
              "AQC8",
              "AQC9",
              "AQC10",
              "AQC11",
              "AQC12",
              "AQC13",
              "AQC14",
              "AQC15",
              "AQC16",
              "AQC17",
              "AQC18",
              "AQC19"
            ]
          }
        },
        "startAge": {
          "type": "integer",
          "description": "start age of the range",
          "example": 0
        },
        "endAge": {
          "type": "integer",
          "description": "end age of the range. If no end age is specified the age range is considered up to infinite",
          "example": 18
        },
        "desc": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "description": "textual description of the Property Guest Type",
          "example": "Child guest type, covering age from 0 to 18"
        }
      }
    },
    "taxAmount": {
      "description": "tax amount",
      "type": "object",
      "required": [
        "amt",
        "isIncludedInRate"
      ],
      "properties": {
        "amt": {
          "description": "amount computed for this tax (or group of taxes)",
          "type": "string",
          "pattern": "^.*$"
        },
        "code": {
          "description": "tax code",
          "type": "string",
          "pattern": "^.*$"
        },
        "otaCode": {
          "$ref": "#/definitions/taxTypeCode"
        },
        "isIncludedInRate": {
          "description": "indicates if the tax has been included in the rate conveyed in associated \"baseAmount\". This field takes into account the inclusion set at house and rate plan level",
          "type": "boolean"
        },
        "taxDefIds": {
          "description": "references the tax Definition item applied to compute this tax amount",
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    },
    "ratesDefinition": {
      "type": "object",
      "required": [
        "rateChanges",
        "avg"
      ],
      "properties": {
        "rateChanges": {
          "description": "the applicable rate changes of the stay. Gives the definition of rate set in the GRS which can include extra person charges depending on requested number of guests or channel setting",
          "type": "array",
          "items": {
            "$ref": "#/definitions/rateChanges"
          }
        },
        "dailyExtraPersonCharge": {
          "description": "daily amount for 1 extra participant for non-service. Returned depending on channel profile and setting",
          "type": "string"
        },
        "avg": {
          "description": "the average rate, per unit (quantity 1)",
          "type": "string"
        },
        "checkin": {
          "description": "the checkin rate depending on channel setting, per unit (quantity 1)",
          "type": "string"
        },
        "highest": {
          "description": "the highest rate depending on channel setting, per unit (quantity 1)",
          "type": "string"
        }
      }
    },
    "additionalRatesDefinition": {
      "type": "object",
      "required": [
        "rateChanges",
        "avg"
      ],
      "properties": {
        "rateChanges": {
          "description": "the applicable rate changes of the stay. Gives the definition of rate set in the GRS which can include extra person charges depending on requested number of guests or channel setting",
          "type": "array",
          "items": {
            "$ref": "#/definitions/rateChanges"
          }
        },
        "avg": {
          "description": "the average rate, per unit (quantity 1)",
          "type": "string"
        },
        "checkin": {
          "description": "the checkin rate depending on channel setting, per unit (quantity 1)",
          "type": "string"
        },
        "highest": {
          "description": "the highest rate depending on channel setting, per unit (quantity 1)",
          "type": "string"
        }
      }
    },
    "rateChanges": {
      "description": "the applicable rate changes of the stay. Gives the definition of rate set in the GRS which can include extra person charges depending on requested number of guests or channel setting",
      "type": "object",
      "required": [
        "id",
        "start",
        "end",
        "amt"
      ],
      "properties": {
        "id": {
          "description": "id of the RateDefinition element",
          "type": "integer"
        },
        "start": {
          "description": "first date on which the rate amount applies (for the requested stay)",
          "type": "string",
          "format": "date"
        },
        "end": {
          "description": "last date on which the rate amount applies (for the requested stay)",
          "type": "string",
          "format": "date"
        },
        "amt": {
          "description": "the daily amount configured in the GRS which can include extra person charges depending on requested number of guests or channel setting. In case of Package, it includes the price of all the products",
          "type": "string"
        }
      }
    },
    "freeGuestsDefinition": {
      "type": "object",
      "required": [
        "id",
        "freeGuestsByType"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "a unique ID for this free Guest Definition item"
        },
        "start": {
          "type": "string",
          "description": "first date on which the free Guest Definition item applies (for the requested stay)",
          "format": "date"
        },
        "end": {
          "type": "string",
          "description": "last date on which the free Guest Definition item applies (for the requested stay)",
          "format": "date"
        },
        "dow": {
          "type": "string",
          "description": "list of applicable days of weeks. 'MTWTFSS' for all days of weeks. A dash is present for any missing day. For instance, 'MT-----' for Monday and Tuesday only, '-T-T---' for Tuesday and Thursday only",
          "pattern": "^[M-][T-][W-][T-][F-][S-][S-]$"
        },
        "inventoryTypeCodes": {
          "type": "array",
          "description": "inventory Type Code(s) to which the free Guest Definition item apply",
          "items": {
            "$ref": "#/definitions/inventoryTypeCode"
          }
        },
        "pricePlanCodes": {
          "type": "array",
          "description": "price Plan Code(s) to which the free Guest Definition item apply",
          "items": {
            "$ref": "#/definitions/pricePlanCode"
          }
        },
        "maxFreeGuests": {
          "type": "integer",
          "description": "indicates the overall maximum number of free guests"
        },
        "freeGuestsByType": {
          "description": "indicates the maximum number of free guests by type",
          "type": "array",
          "items": {
            "$ref": "#/definitions/guestsByType"
          }
        }
      }
    },
    "guestsByType": {
      "type": "object",
      "required": [
        "guestType",
        "count"
      ],
      "description": "count per guestType",
      "properties": {
        "guestType": {
          "type": "string",
          "description": "guest Type Code",
          "pattern": "[A-Z0-9_]{2,8}",
          "example": "CHILD"
        },
        "count": {
          "description": "number of guest",
          "type": "integer"
        }
      }
    },
    "period": {
      "type": "object",
      "required": [
        "start",
        "end"
      ],
      "properties": {
        "start": {
          "description": "period start date",
          "type": "string",
          "pattern": "^.*$",
          "format": "date"
        },
        "end": {
          "description": "period end date",
          "type": "string",
          "pattern": "^.*$",
          "format": "date"
        }
      }
    },
    "dow": {
      "description": "list of applicable days of weeks. 'MTWTFSS' for all days of weeks. A dash is present for any missing day. For instance, 'MT-----' for Monday and Tuesday only, '-T-T---' for Tuesday and Thursday only",
      "type": "string",
      "pattern": "^.*$"
    },
    "error": {
      "type": "object",
      "description": "error information",
      "required": [
        "httpStatus",
        "message",
        "code",
        "origin",
        "path"
      ],
      "properties": {
        "httpStatus": {
          "description": "http status code",
          "type": "integer"
        },
        "message": {
          "description": "error description message",
          "type": "string"
        },
        "code": {
          "description": "error code",
          "type": "integer"
        },
        "origin": {
          "description": "identifies the originator of the error",
          "type": "string",
          "example": "Backend"
        },
        "path": {
          "description": "identifies the faulty path",
          "type": "string"
        },
        "details": {
          "type": "array",
          "description": "list of sub error codes (internal)",
          "items": {
            "$ref": "#/definitions/detailType"
          }
        }
      }
    },
    "warning": {
      "type": "object",
      "required": [
        "message",
        "code"
      ],
      "properties": {
        "id": {
          "description": "id of the warning, used to link the warning to a specific element in the response",
          "type": "integer"
        },
        "httpStatus": {
          "description": "http status code",
          "type": "integer"
        },
        "message": {
          "description": "warning description message",
          "type": "string",
          "pattern": "^.*$"
        },
        "code": {
          "description": "warning code",
          "type": "integer"
        },
        "details": {
          "type": "array",
          "description": "list of sub warning codes (internal)",
          "items": {
            "$ref": "#/definitions/detailType"
          }
        }
      }
    },
    "denial": {
      "type": "object",
      "required": [
        "identifier",
        "type",
        "reason",
        "date",
        "isHouseLevel"
      ],
      "properties": {
        "identifier": {
          "description": "unique identifier of the denial returned",
          "type": "integer"
        },
        "type": {
          "description": "the denial type",
          "type": "string",
          "example": "HSO",
          "pattern": "[A-Z]{1,3}",
          "minLength": 1,
          "maxLength": 3
        },
        "reason": {
          "description": "description of the denial reason",
          "type": "string",
          "example": "No Rates/Rooms Available",
          "pattern": "[A-Za-z0-9]{1,255}"
        },
        "date": {
          "description": "represents the first date that caused the denial. For date-driven denials, it is either a date within the stay, or the check-in date. For non-date-driven denials, it is the transaction date",
          "type": "string",
          "format": "date"
        },
        "isHouseLevel": {
          "description": "set to true if the denial is of House Level type, false otherwise",
          "type": "boolean"
        },
        "ratePlanCode": {
          "$ref": "#/definitions/ratePlanCodeDenial"
        },
        "pricePlanCode": {
          "description": "in case of Rate/Price Plan denials. Represents the Price Plan causing the denial or the Price Plan linked to the Rate Plan causing the denial",
          "$ref": "#/definitions/pricePlanCode"
        },
        "sellStrategyCode": {
          "description": "represents the code of the Hotel Sell Strategy taken into account in the process",
          "type": "string",
          "pattern": "[A-Za-z0-9]{1,7}",
          "minLength": 1,
          "maxLength": 7
        }
      }
    },
    "detailType": {
      "type": "object",
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "description": "sub error or warning code"
        }
      }
    },
    "description": {
      "type": "object",
      "additionalProperties": {
        "description": "multi-line description text",
        "type": "array",
        "items": {
          "type": "string",
          "pattern": "^.*$"
        }
      },
      "example": {
        "en": [
          "line 1",
          "line 2",
          "line 3"
        ],
        "fr": [
          "ligne 1",
          "ligne 2",
          "ligne 3"
        ]
      }
    }
  },
  "responses": {
    "successfulMultiAvailability": {
      "description": "successful operation",
      "schema": {
        "$ref": "#/definitions/successfulMultiAvailability"
      }
    },
    "successfulSingleAvailability": {
      "description": "successful operation",
      "schema": {
        "$ref": "#/definitions/successfulSingleAvailability"
      }
    },
    "successfulPricing": {
      "description": "successful operation",
      "schema": {
        "$ref": "#/definitions/successfulPricing"
      }
    },
    "responseError400": {
      "description": "bad Request - Client sent a request that is not conforming to API. Client has to modify the request so that it passes\n\nExamples of error codes: \n\ncode    | title                                 \n------- | ------------------- \n50028   | Unable to process\n",
      "schema": {
        "$ref": "#/definitions/responseError400"
      }
    },
    "responseError401": {
      "description": "unauthorized - The request requires user authentication\n",
      "schema": {
        "$ref": "#/definitions/responseError401"
      }
    },
    "responseError403": {
      "description": "forbidden - Server refuses to fulfil request for functional or security reasons. If it is for security reasons, the authentication will not solve the issue\n\nExamples of error codes: \n\ncode    | title                                 \n------- | ------------------- \n500xx  | Unable to xx\n",
      "schema": {
        "$ref": "#/definitions/responseError403"
      }
    },
    "responseError404": {
      "description": "not Found - Client requested resource that does not exist\n\nExamples of error codes: \n\ncode    | title                                 \n------- | ------------------- \n50006   | Invalid rate plan \n50002   | Room type doesn't exist\n50027   | Invalid system range\n",
      "schema": {
        "$ref": "#/definitions/responseError404"
      }
    },
    "responseError500": {
      "description": "internal Server Error - Server was unable to process request due to unexpected problem that can't be corrected by client. This error is not used to describe functional problems\n\nExamples of error codes: \n\ncode    | title                                 \n------- | ------------------- \n50028   | Timeout reached \n",
      "schema": {
        "$ref": "#/definitions/responseError500"
      }
    },
    "responseErrorSingle404": {
      "description": "not Found - Client requested resource that does not exist\n\nExamples of error codes: \n\ncode    | title                                 \n------- | ------------------- \n50006   | Invalid rate plan \n50002   | Room type doesn't exist\n50027   | Invalid system range\n",
      "schema": {
        "$ref": "#/definitions/responseErrorSingle404"
      }
    },
    "responseErrorPricing404": {
      "description": "not Found - Client requested resource that does not exist\n\nExamples of error codes: \n\ncode    | title                                 \n------- | ------------------- \n50006   | Invalid rate plan \n50002   | Room type doesn't exist\n50027   | Invalid system range\n",
      "schema": {
        "$ref": "#/definitions/responseErrorPricing404"
      }
    },
    "responseError429": {
      "description": "too many requests\n",
      "schema": {
        "$ref": "#/definitions/responseError429"
      }
    }
  }
}