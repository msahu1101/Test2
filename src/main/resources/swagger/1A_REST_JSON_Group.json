{
  "swagger": "2.0",
  "info": {
    "contact": {
      "name": "Amadeus Hospitality Systems Integration Support"
    },
    "description": "this API to manage Group Blocks objects within the ACRS",
    "license": {
      "name": "Amadeus IT Group SA",
      "url": "https://www.amadeus.com"
    },
    "termsOfService": "https://developers.amadeus.com",
    "title": "ACRS_JSON_Group",
    "version": "2.6.0",
    "x-release-note": {
      "2.6.0": [
        "########## New Features ##########",
        "Ability to support policy associations for the group",
        "########## New in Request ##########",
        "data.groupContract.policyAssociations - Create, Modify, Cancel, Synchronize",
        "########## New in Response ##########",
        "data.groupContract.policyAssociations - Create, Modify, Cancel, Retrieve"
      ],
      "2.5.0": [
        "########## New Features ##########",
        "Ability to store call center agency identifiers in the group creator and requestor",
        "Ability to view the otaClassification for taxes",
        "########## New in Request ##########",
        "data.groupContract.taxes[0].otaClassification - Synchronize",
        "########## New in Response ##########",
        "data.group.creator.callCenterInformation.agentInfo",
        "data.group.requestor.callCenterInformation.agentInfo",
        "data.groupContract.taxes[0].otaClassification - create, partial-modify, cancel",
        "data.group.groupContract.taxes[0].otaClassification - retrieve-last-committed-image, retrieve-by-committed-sequence-number",
        "data.group.taxDefinitions[0].otaClassification - retrieve-last-committed-image, retrieve-by-committed-sequence-number",
        "########## Other changes ##########",
        "max number of product use increased from 1000 to 10000 - Create",
        "max number if modify items increased from 1000 to 5000 - Modify"
      ],
      "2.4.1": [
        "########## Other changes ##########",
        "data.group.groupContract.commission.value - changed maxLength from 5 to 13 - Create, Modify, Cancel, Retrieve"
      ],
      "2.4.0": [
        "########## New Features ##########",
        "Ability to add additional membership programs to an user profile",
        "Ability to add DOW in stay restrictions",
        "Ability to allow extra days on the group bookings partially outside of the group period",
        "########## New in Request ##########",
        "data.userProfiles[0].additionalMembershipPrograms - Create, Synchronize",
        "data.groupContract.allowExtraDays - Create, Modify, Synchronize",
        "data.groupContract.stayRestrictions[0].period.dow - Create, Modify, Synchronize",
        "########## New in Response ##########",
        "data.group.userProfiles[0].additionalMembershipPrograms - Create, Partial-modify, Cancel, Retrieve-last-committed-image, Retrieve-by-committed-sequence-number",
        "data.history[0].userProfiles[0].additionalMembershipPrograms - Retrieve-last-committed-image, Retrieve-by-committed-sequence-number",
        "data.group.groupContract.allowExtraDays - Create, Modify, Retrieve-last-committed-image, Retrieve-by-committed-sequence-number, Cancel, Search",
        "data.group.groupContract.stayRestrictions[0].period.dow - Create, Modify, Retrieve-last-committed-image, Retrieve-by-committed-sequence-number, Cancel",
        "########## Other changes ##########",
        "meta.pickupPropagation.fieldsToPropagate description changed"
      ],
      "2.3.2": [
        "########## Other changes ##########",
        "meta.pickupPropagation.fieldsToPropagate description changed"
      ],
      "2.3.1": [
        "########## Other changes ##########",
        "added data.group.groupContract.inventory.release which was missing in request after v2.1.1 - Synchronize"
      ],
      "2.3.0": [
        "########## New Features ############",
        "ability to set distribution channel",
        "ability to have a parentProductUseId which shows the sleepingRoom ProductUse linked to the NRP ProductUse",
        "ability to add nativeInformation to travel agency details",
        "ability to specify the fields to cascade to pickup reservations (from a limited list of candidates)",
        "########## New in Request ##########",
        "data.distributionChannel - Create, Synchronize and Search",
        "data.creator.travelAgencyInfo.nativeInformation - Synchronize",
        "data.requestor.travelAgencyInfo.nativeInformation - Synchronize",
        "data.owner.agencyDetails.nativeInformation - Synchronize",
        "meta.pickupPropagation.fieldsToPropagate - Partial-modify",
        "########## New in Response ##########",
        "data.group.distributionChannel - Create, Partial-modify, Cancel, Retrieve-last-committed-image, Retrieve-by-committed-sequence-number",
        "data.groupReservations.distributionChannel - Search",
        "data.group.taxDefinitions[0].relatedTaxIds - Retrieve-by-committed-sequence-number, Retrieve-last-committed-image",
        "data.offer.productUses[].parentProductUseId - Retrieve-last-committed-image, Retrieve-by-committed-sequence-number",
        "data.group.creator.travelAgencyInfo.nativeInformation - Create, Retrieve-by-committed-sequence-number, Retrieve-last-committed-image",
        "data.group.requestor.travelAgencyInfo.nativeInformation - Create, Retrieve-by-committed-sequence-number, Retrieve-last-committed-image",
        "data.group.owner.agencyDetails.nativeInformation - Create, Retrieve-by-committed-sequence-number, Retrieve-last-committed-image",
        "data.groupReservations[0].creator.travelAgencyInfo.nativeInformation - Search",
        "data.groupReservations[0].requestor.travelAgencyInfo.nativeInformation - Search",
        "data.groupReservations[0].owner.travelAgencyInfo.nativeInformation - Search",
        "data.history[0].requestor.travelAgencyInfo.nativeInformation - Retrieve-by-committed-sequence-number, Retrieve-last-committed-image",
        "data.history[0].owner.agencyDetails.nativeInformation - Retrieve-by-committed-sequence-number, Retrieve-last-committed-image",
        "########## Other changes ##########",
        "nativeInformation.language - changed from mandatory to optional - to be in sync with code"
      ],
      "2.2.1": [
        "########## New in Request ##########",
        "data.groupContract.inventory.release - Synchronize",
        "########## Other Changes ##########",
        "data.groupContract.inventory.countersPerDay - removed from Synchronize api",
        "data.offer.productUses[0].countersPerInventoryType.liveCounters - removed from Synchronize api",
        "data.offer.productUses[0].productRates - removed from Synchronize api",
        "data.offer.productUses[0].packageRates - removed from Synchronize api"
      ],
      "2.2.0": [
        "########## New Features ###################",
        "Ability to set an invoice reference",
        "########## New in Request ##########",
        "data.group.customerOwnReference - Create, Synchronize",
        "data.group.purchaseOrderReference - Create, Synchronize",
        "########## New in Response ##########",
        "data.group.customerOwnReference - Create, Partial-modify, Cancel, Retrieve-last-committed-image, Retrieve-by-committed-sequence-number",
        "data.group.purchaseOrderReference - Create, Partial-modify, Cancel, Retrieve-last-committed-image, Retrieve-by-committed-sequence-number",
        "data.history[].customerOwnReference - Retrieve-last-committed-image, Retrieve-by-committed-sequence-number",
        "data.history[].purchaseOrderReference - Retrieve-last-committed-image, Retrieve-by-committed-sequence-number",
        "########## Other Changes ##########",
        "update to data.businessSources[] - search - changed maxLength from 50 to 100",
        "data[].path - new value \"data/group/customerOwnReference\" in partial-modify operation",
        "data[].path - new value \"data/group/purchaseOrderReference\" in partial-modify operation"
      ],
      "2.1.2": [
        "########## Other Changes ##########",
        "data[].group.taxDefinition - Model changed from groupContract taxDefinition set back to shopping taxDefinition"
      ],
      "2.1.1": [
        "########## New in Response ###################",
        "data.group.groupContract.taxes[0].name - Create, Modify, Cancel, Retrieve",
        "data.group.groupContract.taxes[0].description - Create, Modify, Cancel, Retrieve",
        "data.group.groupContract.taxes[0].longDescription - Create, Modify, Cancel, Retrieve",
        "data.group.groupContract.taxes[0].paymentAtHotelStatus - Create, Modify, Cancel, Retrieve",
        "data.group.groupContract.taxes[0].currency - Create, Modify, Cancel, Retrieve",
        "data.group.groupContract.taxes[0].computationMode - Create, Modify, Cancel, Retrieve",
        "data.group.groupContract.taxes[0].chargePerPerson - Create, Modify, Cancel, Retrieve"
      ],
      "2.1.0": [
        "########## New Features ###################",
        "Group Block Synchronize service added.",
        "Ability to Define a Commission Rule on Group Block with new object.",
        "Ability to set a guarantee policy per period.",
        "Ability to set local language.",
        "Ability to set a guarantee policy per period.",
        "Ability to set a room category.",
        "Sending back in addition hotel local time.",
        "########## Other Changes ##########",
        "new service, synchronize group, to push the content of the group to an external system.",
        "groupCode set back to minLength=2 (previously set minLength=3) - Search",
        "########## New in Response ###################",
        "data.group.products[0].roomCategory - Create, Modify, Cancel, Retrieve",
        "data.group.groupContract.guaranteeRequiredPeriods[0].isGuaranteeRequired - Create, Modify, Cancel, Retrieve, RetrieveHistory",
        "data.groupReservations.cancellationDateTime - Search",
        "data.groupReservations.cancellationDateTimeHotelLocalTime - Search",
        "data.group.groupContract.commission - Modify, Cancel, Retrieve",
        "data.group.groupContract.commission.commissionType - Modify, Cancel, Retrieve",
        "data.group.groupContract.commission.value - Modify, Cancel, Retrieve",
        "data.group.comments.languageLocality - Create, Modify, Cancel, Retrieve",
        "data.group.languageLocality - Create, Cancel, Modify, Retrieve",
        "data.group.comments.languageLocality - Create, Modify, Cancel, Retrieve",
        "data.history.comments.languageLocality - Retrieve",
        "data.groupReservations.comments.languageLocality - Search",
        "data.group.userProfiles[0].nativeInformation.languageLocality - Create,",
        "data.group.userProfiles[0].email[0].languageLocality - Create, Modify, Cancel, Retrieve",
        "data.group.corporateAccountInfo.nativeInformation.languageLocality - Modify, Cancel, Retrieve",
        "data.history.corporateAccountInfo.nativeInformation.languageLocality - Retrieve",
        "data.groupReservations.corporateAccountInfo.nativeInformation.languageLocality - Search",
        "data.group.userProfiles.nativeInformation.languageLocality - Modify",
        "data.groupReservations.userProfiles.nativeInformation.languageLocality - Search",
        "data.history.languageLocality - Retrieve",
        "data.group.creator.travelAgencyInfo.email.languageLocality - Create, Modify, Cancel, Retrieve",
        "data.group.requestor.TravelAgencyInfo.email.languageLocality - Create, Modify, Cancel, Retrieve",
        "date.group.owner.AgencyDetails.email.LanguageLocality - Create, Modify, Cancel, Retrieve",
        "date.group.corporateAccountInfo[0].email.languageLocality - Create, Modify, Cancel, Retrieve",
        "########## New in Request ##########",
        "data.creationDateHotelLocalTime - Search",
        "data.cancellationDateHotelLocalTime - Search",
        "data.languageLocality - Create",
        "data.comments.languageLocality - Create",
        "data.userProfiles[0].nativeInformation.languageLocality - Create",
        "data.corporateAccountInfo.email.languageLocality - Create",
        "data.corporateAccountInfo.nativeInformation.languageLocality - Create,",
        "########## New in Request and Response ##########",
        "data.group.groupContract.commission.commissionType - Create",
        "data.group.groupContract.commission.value - Create",
        "data.group.groupContract.commission - Create",
        "data.group.groupIds.groupContractInternalId - Create, Modify, Cancel, Retrieve, RetrieveHistory",
        "########## Removed ##########",
        "data.group.groupContract.guaranteeRequiredPeriods[0].status - Create, Modify, Cancel, Retrieve, RetrieveHistory"
      ],
      "2.0.2": [
        "########## New in request ##########",
        "data.groupContract.guaranteeRequiredPeriods added in request - Create",
        "########## Removed ###################",
        "data.groupContract.guaranteeRequiredPeriods[0].status in request/response - Create, Modify, Cancel, Retrieve",
        "########## Other Changes ##########",
        "data[].path: Increase maxLength of from 50 to 300 - partial-modify",
        "data.group.taxDefinitions: Model changed from groupContract taxDefinition to shopping taxDefinition"
      ],
      "2.0.1": [
        "########## Other Changes ##########",
        "data.group.groupContract.taxes: Model changed from shopping taxDefinition to groupContract taxDefinition"
      ],
      "2.0.0": [
        "New Major Version"
      ]
    }
  },
  "basePath": "/v2",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "name": "Manage Groups",
      "description": "used to create, cancel and update group blocks"
    },
    {
      "name": "Read Groups",
      "description": "used to retrieve and search group blocks"
    },
    {
      "name": "Synchronize Groups",
      "description": "used to push the group content to an external partner"
    }
  ],
  "paths": {
    "/group-and-allotments/chains/{chainCode}/groups": {
      "post": {
        "tags": [
          "Manage Groups"
        ],
        "operationId": "postCreateGroup",
        "summary": "create",
        "description": "this service gives the possibility to the API users to create a group and commit the request at the same time",
        "parameters": [
          {
            "$ref": "#/parameters/Ama-Pos"
          },
          {
            "$ref": "#/parameters/Ama-Reservation-Owner"
          },
          {
            "$ref": "#/parameters/Ama-Channel-Identifiers"
          },
          {
            "$ref": "#/parameters/createGroup-groupBookingReservationRequest"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/groupResponse-groupBookingReservation"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "504": {
            "$ref": "#/responses/504"
          },
          "default": {
            "$ref": "#/responses/500"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/ChainCode"
        }
      ]
    },
    "/group-and-allotments/chains/{chainCode}/groups/{groupId}": {
      "get": {
        "tags": [
          "Read Groups"
        ],
        "operationId": "getRetrieveGroup",
        "summary": "retrieve-last-committed-image",
        "description": "This service gives the possibility to the API users to retrieve the last committed image of the group by using the confirmation number in the query. \n\n The retrieve response, if requested, can also contain the history section: a list of all the committed images of the group.",
        "parameters": [
          {
            "$ref": "#/parameters/Ama-Pos"
          },
          {
            "$ref": "#/parameters/Ama-Reservation-Owner"
          },
          {
            "$ref": "#/parameters/Ama-Channel-Identifiers"
          },
          {
            "$ref": "#/parameters/inventoryCounters"
          },
          {
            "$ref": "#/parameters/history"
          },
          {
            "$ref": "#/parameters/computeTaxes"
          },
          {
            "$ref": "#/parameters/creationDate"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/groupRetrieveResponse-groupBookingRetrieve"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "504": {
            "$ref": "#/responses/504"
          },
          "default": {
            "$ref": "#/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "Manage Groups"
        ],
        "operationId": "patchPartialModifyGroup",
        "summary": "partial-modify",
        "description": "this service gives the possibility to the API users to partially modify the group and commit the request at the same time",
        "parameters": [
          {
            "$ref": "#/parameters/Ama-Pos"
          },
          {
            "$ref": "#/parameters/Ama-Reservation-Owner"
          },
          {
            "$ref": "#/parameters/Ama-Channel-Identifiers"
          },
          {
            "$ref": "#/parameters/partialModifyGroup"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/groupModifyResponse-groupBookingReservation"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "504": {
            "$ref": "#/responses/504"
          },
          "default": {
            "$ref": "#/responses/500"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/ChainCode"
        },
        {
          "$ref": "#/parameters/GroupId"
        }
      ]
    },
    "/group-and-allotments/chains/{chainCode}/groups/{groupId}/cancellation": {
      "post": {
        "tags": [
          "Manage Groups"
        ],
        "operationId": "postCancelGroup",
        "summary": "cancel",
        "description": "this service gives the possibility to the API users to cancel the whole group and commit the request at the same time",
        "parameters": [
          {
            "$ref": "#/parameters/Ama-Pos"
          },
          {
            "$ref": "#/parameters/Ama-Reservation-Owner"
          },
          {
            "$ref": "#/parameters/Ama-Channel-Identifiers"
          },
          {
            "$ref": "#/parameters/cancelGroup"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/groupResponse-groupBookingReservation"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "504": {
            "$ref": "#/responses/504"
          },
          "default": {
            "$ref": "#/responses/500"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/GroupId"
        },
        {
          "$ref": "#/parameters/ChainCode"
        }
      ]
    },
    "/group-and-allotments/chains/{chainCode}/groups/{groupId}/committed-sequence-numbers/{committedSequenceNumber}": {
      "get": {
        "tags": [
          "Read Groups"
        ],
        "operationId": "getRetrieveGroupByCommittedSequenceNumber",
        "summary": "retrieve-by-committed-sequence-number",
        "description": "This service gives the possibility to the API users to retrieve the group by using a specific committed sequence number. \n\n The retrieve response, if requested, can also contain the history section: a list of all the committed images of the group.",
        "parameters": [
          {
            "$ref": "#/parameters/CommittedSequenceNumber"
          },
          {
            "$ref": "#/parameters/Ama-Pos"
          },
          {
            "$ref": "#/parameters/Ama-Reservation-Owner"
          },
          {
            "$ref": "#/parameters/Ama-Channel-Identifiers"
          },
          {
            "$ref": "#/parameters/history"
          },
          {
            "$ref": "#/parameters/computeTaxes"
          },
          {
            "$ref": "#/parameters/creationDate"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/groupRetrieveResponse-groupBookingRetrieve"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "504": {
            "$ref": "#/responses/504"
          },
          "default": {
            "$ref": "#/responses/500"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/ChainCode"
        },
        {
          "$ref": "#/parameters/GroupId"
        }
      ]
    },
    "/group-and-allotments/chains/{chainCode}/groups/search": {
      "post": {
        "tags": [
          "Read Groups"
        ],
        "operationId": "postSearchGroups",
        "summary": "search",
        "description": "this service gives the possibility to the API users to search for any Group. The request must include the criteria used to identify the groups wished. \\n\\n The system responds to the users with the list of group images corresponding to the criteria",
        "parameters": [
          {
            "$ref": "#/parameters/Ama-Pos"
          },
          {
            "$ref": "#/parameters/Ama-Reservation-Owner"
          },
          {
            "$ref": "#/parameters/Ama-Channel-Identifiers"
          },
          {
            "$ref": "#/parameters/searchGroup"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/groupSearchResponse-groupBookingReservationSearch"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "504": {
            "$ref": "#/responses/504"
          },
          "default": {
            "$ref": "#/responses/500"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/ChainCode"
        }
      ]
    },
    "/feeds/group-and-allotments/chains/{chainCode}/properties/{propertyCode}/groups/{groupCode}/identifiers/{groupIdentifier}": {
      "post": {
        "tags": [
          "Synchronize Groups"
        ],
        "operationId": "synchronizeGroup",
        "summary": "synchronize",
        "description": "Synchronize group feed",
        "parameters": [
          {
            "$ref": "#/parameters/synchronizedGroup-synchronizeGroupFeed"
          },
          {
            "$ref": "#/parameters/ama-request-id"
          },
          {
            "$ref": "#/parameters/ama-request-correlation-id"
          },
          {
            "$ref": "#/parameters/ama-correlation-id"
          },
          {
            "$ref": "#/parameters/ama-retry-count"
          },
          {
            "$ref": "#/parameters/ama-sequence-id"
          },
          {
            "$ref": "#/parameters/ama-destinations-whitelist"
          },
          {
            "$ref": "#/parameters/ama-destinations-blacklist"
          },
          {
            "$ref": "#/parameters/ama-transmission-time"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/returnFeedSuccess"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "422": {
            "$ref": "#/responses/422"
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "503": {
            "$ref": "#/responses/503"
          },
          "default": {
            "$ref": "#/responses/500"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/ChainCode"
        },
        {
          "$ref": "#/parameters/propertyCode"
        },
        {
          "$ref": "#/parameters/FeedGroupCode"
        },
        {
          "$ref": "#/parameters/FeedGroupIdentifier"
        }
      ]
    }
  },
  "definitions": {
    "GuestsHistoryRes": {
      "description": "list of user profiles",
      "type": "array",
      "maxItems": 1000,
      "items": {
        "type": "object",
        "title": "GuestsHistoryResItem",
        "required": [
          "id",
          "personName"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "identifies a guest.This id (unique for each guest) can be used to cross-referenced the guest inside the data model"
          },
          "age": {
            "$ref": "#/definitions/Age"
          },
          "personName": {
            "$ref": "#/definitions/PersonName"
          },
          "guestProfileId": {
            "$ref": "#/definitions/GuestProfileId"
          },
          "addresses": {
            "type": "array",
            "description": "list of addresses",
            "maxItems": 99,
            "items": {
              "$ref": "#/definitions/AddressWithoutIndex"
            },
            "title": "GuestsHistoryResItemAddresses"
          },
          "telephones": {
            "type": "array",
            "description": "list of telephones and fax",
            "maxItems": 99,
            "items": {
              "$ref": "#/definitions/Telephone"
            },
            "title": "GuestsHistoryResItemTelephones"
          },
          "emails": {
            "type": "array",
            "maxItems": 2,
            "description": "list of emails",
            "items": {
              "$ref": "#/definitions/Email"
            },
            "title": "GuestsHistoryResItemEmails"
          },
          "loyaltyProgram": {
            "$ref": "#/definitions/LoyaltyProgram"
          },
          "additionalMembershipPrograms": {
            "description": "list of additional membership programs of the guest",
            "type": "array",
            "minItems": 1,
            "maxItems": 30,
            "items": {
              "$ref": "#/definitions/additionalMembershipProgram"
            },
            "title": "GuestsHistoryResItemAdditionalMembershipPrograms"
          }
        }
      },
      "title": "GuestsHistoryRes"
    },
    "HistoryTravelAgencyInformation": {
      "description": "the travel agency details",
      "type": "object",
      "required": [
        "identifiers"
      ],
      "properties": {
        "identifiers": {
          "description": "list of identifiers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgencyIdentifiers"
          },
          "title": "HistoryTravelAgencyInformationIdentifiers"
        },
        "agentInfo": {
          "$ref": "#/definitions/AgentInformation"
        },
        "agentUserId": {
          "$ref": "#/definitions/UserId"
        },
        "name": {
          "description": "name of the travel agency",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 64
        },
        "agencyProfileId": {
          "$ref": "#/definitions/AgencyProfileId"
        },
        "address": {
          "title": "address",
          "$ref": "#/definitions/AddressWithoutIndex-1"
        },
        "telephone": {
          "title": "telephone",
          "$ref": "#/definitions/Telephone-0"
        },
        "email": {
          "title": "email",
          "$ref": "#/definitions/Email-0"
        },
        "nativeInformation": {
          "$ref": "#/definitions/AgencyNativeInformation"
        }
      },
      "title": "HistoryTravelAgencyInformation"
    },
    "CancellationReq": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "title": "CancellationReqData",
          "properties": {
            "saleStatus": {
              "description": "sale status of the group contract",
              "type": "string",
              "pattern": "^.*$",
              "maxLength": 50
            },
            "cancellationReasons": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CancellationReason"
              },
              "title": "CancellationReqDataCancellationReasons"
            }
          }
        }
      },
      "title": "CancellationReq"
    },
    "PolicyAssociation": {
      "title": "PolicyAssociation",
      "type": "object",
      "required": [
        "policyCode",
        "period"
      ],
      "properties": {
        "policyCode": {
          "$ref": "#/definitions/PolicyCode"
        },
        "period": {
          "$ref": "#/definitions/PeriodPolicyAssociations"
        }
      }
    },
    "PolicyCode": {
      "type": "string",
      "description": "code used to identify the policy object",
      "pattern": "[A-Z0-9]{1,50}",
      "minLength": 1,
      "maxLength": 50
    },
    "PeriodPolicyAssociations": {
      "title": "PeriodPolicyAssociations",
      "type": "object",
      "minProperties": 1,
      "properties": {
        "start": {
          "description": "start date",
          "type": "string",
          "format": "date",
          "example": "2019-11-22"
        },
        "end": {
          "description": "end date",
          "type": "string",
          "format": "date",
          "example": "2019-12-20"
        },
        "dow": {
          "description": "days of week",
          "type": "string",
          "pattern": "(M|-)(T|-)(W|-)(T|-)(F|-)(S|-)(S|-)",
          "maxLength": 7,
          "example": "MT--FSS"
        }
      },
      "required": [
        "start",
        "end"
      ]
    },
    "Product": {
      "title": "Product",
      "type": "object",
      "description": "a product can be sellable with the group as a package",
      "properties": {
        "code": {
          "type": "string",
          "pattern": "^.*$",
          "example": "BRKF",
          "description": "product code sellable with the group as a pre-defined package",
          "minLength": 2,
          "maxLength": 8
        },
        "productCategory": {
          "type": "string",
          "pattern": "^.*$",
          "example": "SR",
          "maxLength": 8,
          "description": "product category to which the product code belongs"
        },
        "usage": {
          "type": "string",
          "example": "Main",
          "description": "usage of the product for pricing computation purpose. Eg - Main, Mandatory",
          "enum": [
            "Main",
            "Mandatory"
          ]
        },
        "isPriceIncluded": {
          "type": "boolean",
          "description": "indicates how the price of the associated product should be computed in the package"
        },
        "quantity": {
          "type": "integer",
          "description": "indicates the quantity of the product in the predefined package definition"
        }
      }
    },
    "CorporateAccountInfoSearchRes": {
      "type": "object",
      "title": "CorporateAccountInfoSearchRes",
      "properties": {
        "accountName": {
          "$ref": "#/definitions/AccountName"
        },
        "nativeInformation": {
          "$ref": "#/definitions/CompanyNativeInformationSearch"
        },
        "cdNumber": {
          "$ref": "#/definitions/CdNumber"
        },
        "companyProfileId": {
          "$ref": "#/definitions/CompanyProfileId"
        }
      }
    },
    "GroupOfferSearchRes": {
      "type": "object",
      "title": "GroupOfferSearchRes",
      "description": "details about the selected offer",
      "required": [
        "productUses"
      ],
      "properties": {
        "productUses": {
          "type": "array",
          "maxItems": 1000,
          "description": "list of products (w/o attributes) with associated dates that are part of the offer",
          "items": {
            "$ref": "#/definitions/ProductUseSearchRes"
          },
          "title": "GroupOfferSearchResProductUses"
        }
      }
    },
    "BusinessSource": {
      "description": "business source of the group contract",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 100
    },
    "ReservationMethod": {
      "description": "reservation method to create the pickUp reservations",
      "example": "Call-In, List import",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 100
    },
    "GroupIdsReq": {
      "type": "object",
      "title": "GroupIdsReq",
      "description": "container for structured details of ids for groups",
      "required": [
        "groupCode"
      ],
      "properties": {
        "groupCode": {
          "$ref": "#/definitions/GroupCode"
        },
        "externalIds": {
          "description": "collection of alternative IDs for the groups, used by external systems only, ie. sales and catering, PMS linking tools etc. Once set, an ID cannot be modified or removed, and that there can be only one ID per type",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalIdItem"
          },
          "maxItems": 20,
          "title": "GroupIdsReqExternalIds"
        }
      }
    },
    "GroupCode": {
      "description": "group code, identifies the product in case the reservation is for a group. Group code and rate plan code are mutually exclusive",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 3,
      "maxLength": 50
    },
    "PurgeDateTime": {
      "description": "date and time when the confirmation number has to be released (UTC)",
      "type": "string",
      "pattern": "^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2]\\d|3[0-1])T([0-1]\\d|2[0-4]):([0-5]\\d):([0-5]\\d)$",
      "example": "2018-05-26T22:00:00",
      "maxLength": 25
    },
    "GroupHotelReq": {
      "type": "object",
      "title": "GroupHotelReq",
      "description": "the property info provides the unique identification of the property",
      "required": [
        "propertyCode"
      ],
      "properties": {
        "propertyCode": {
          "$ref": "#/definitions/PropertyCode"
        }
      }
    },
    "GroupSearchReq": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "title": "GroupSearchReqData",
          "properties": {
            "agencyName": {
              "description": "name of the agency. For inputs, the service searches for groups with agency name's starting with, ending with or containing characters using wildcard expression (STA*, *END, *CONT*). For inputs where wildcard expression (*) is not used, the service searches for groups with exact match of agency name",
              "type": "string",
              "pattern": "^.*$",
              "maxLength": 64
            },
            "arrivalDate": {
              "$ref": "#/definitions/SearchPeriod-0"
            },
            "bookerFirstName": {
              "description": "first name of the booker. For inputs, the service searches for groups with booker first name's starting with, ending with or containing characters using wildcard expression (STA*, *END, *CONT*). For inputs where wildcard expression (*) is not used, the service searches for groups with exact match of booker first name",
              "type": "string",
              "pattern": "^.*$",
              "maxLength": 56
            },
            "bookerLastName": {
              "description": "last name of the booker. For inputs, the service searches for groups with booker last name's starting with, ending with or containing characters using wildcard expression (STA*, *END, *CONT*). For inputs where wildcard expression (*) is not used, the service searches for groups with exact match of booker last name",
              "type": "string",
              "pattern": "^.*$",
              "maxLength": 57
            },
            "cdNumber": {
              "$ref": "#/definitions/CdNumber"
            },
            "groupId": {
              "description": "identifier of the group master reservation. When received in input, search is done either using ACRS groupCfNumber, externalIds of the groups or externalPmsId starting with, ending with or containing characters using wildcard expression (STA*, *END, *CONT*). For inputs where wildcard expression (*) is not used, the service searches for groups with exact match",
              "type": "string",
              "pattern": "^.*$",
              "minLength": 2,
              "maxLength": 50
            },
            "corporateAccountName": {
              "description": "name of the corporate account. For inputs, the service searches for groups with corporate account name's starting with, ending with or containing characters using wildcard expression (STA*, END*, *CONT*). For inputs where wildcard expression (*) is not used, the service searches for groups with exact match of corporate account name",
              "type": "string",
              "pattern": "^.*$",
              "minLength": 1,
              "maxLength": 35
            },
            "departureDate": {
              "$ref": "#/definitions/SearchPeriod-1"
            },
            "firstName": {
              "description": "first name of the guest. For inputs, the service searches for groups with guest first name's starting with, ending with or containing characters using wildcard expression (STA*, *END, *CONT*). For inputs where wildcard expression (*) is not used, the service searches for groups with exact match of first name",
              "type": "string",
              "pattern": "^.*$",
              "minLength": 1,
              "maxLength": 56
            },
            "groupCode": {
              "description": "group code, identifies the product in case the reservation is for a group",
              "type": "string",
              "pattern": "^.*$",
              "minLength": 2,
              "maxLength": 50
            },
            "groupContractSaleStatus": {
              "description": "sale status of the group contract. The list of accepted values are configurable in the system",
              "type": "array",
              "maxItems": 10,
              "items": {
                "type": "string",
                "pattern": "^.*$",
                "maxLength": 20
              },
              "title": "GroupSearchReqDataGroupContractSaleStatus"
            },
            "groupName": {
              "description": "it is a name of a group. For inputs, the service searches for groups with group name's starting with, ending with or containing characters using wildcard expression (STA*, *END, *CONT*). For inputs where wildcard expression (*) is not used, the service searches for groups with exact match of group name",
              "type": "string",
              "pattern": "^.*$",
              "maxLength": 102
            },
            "lastName": {
              "description": "last name of the guest. For inputs, the service searches for groups with guest first name's starting with, ending with or containing characters using wildcard expression (STA*, *END, *CONT*). For inputs where wildcard expression (*) is not used, the service searches for groups with exact match of last name",
              "type": "string",
              "pattern": "^.*$",
              "minLength": 1,
              "maxLength": 57
            },
            "loyaltyId": {
              "description": "loyalty identifier of the group holder",
              "type": "string",
              "pattern": "^[A-Za-z0-9]{1,28}$",
              "minLength": 1,
              "maxLength": 28
            },
            "guestProfileId": {
              "$ref": "#/definitions/GuestProfileId"
            },
            "industryType": {
              "description": "determines the industry type of the group",
              "type": "string",
              "pattern": "^.*$",
              "maxLength": 50
            },
            "inventoryTypeCode": {
              "$ref": "#/definitions/InventoryTypeCode"
            },
            "agencyProfileId": {
              "$ref": "#/definitions/AgencyProfileId"
            },
            "agencyIdentifiers": {
              "$ref": "#/definitions/AgencyIdentifiers"
            },
            "companyProfileId": {
              "$ref": "#/definitions/CompanyProfileId"
            },
            "propertyCodes": {
              "type": "array",
              "maxItems": 10,
              "description": "property codes",
              "items": {
                "$ref": "#/definitions/PropertyCode"
              },
              "title": "GroupSearchReqDataPropertyCodes"
            },
            "groupPmsStatus": {
              "type": "array",
              "maxItems": 10,
              "description": "group status on PMS side",
              "items": {
                "type": "string",
                "enum": [
                  "InHouse",
                  "CheckedOut",
                  "NoShow"
                ]
              },
              "title": "GroupSearchReqDataGroupPmsStatus"
            },
            "groupStatus": {
              "description": "status of the groups expected in result booked (BK), modified (MY) or cancelled (CL)",
              "type": "array",
              "items": {
                "enum": [
                  "BK",
                  "MY",
                  "CL"
                ],
                "type": "string"
              },
              "title": "GroupSearchReqDataGroupStatus"
            },
            "retrieveMode": {
              "description": "type of result expected for the search, displayList to return the list of groups, checkOneFound to check if at least one group matches the criteria",
              "type": "string",
              "enum": [
                "DisplayList",
                "CheckOneFound"
              ]
            },
            "stayPeriod": {
              "$ref": "#/definitions/SearchPeriod-2"
            },
            "policyTypeCodes": {
              "description": "policy type Code. Exact match only",
              "type": "array",
              "maxItems": 50,
              "items": {
                "type": "string",
                "pattern": "^.*$",
                "minLength": 1,
                "maxLength": 20
              },
              "title": "GroupSearchReqDataPolicyTypeCodes"
            },
            "marketSegments": {
              "description": "market segment, either corporate Market segment or property market segment e.g. GOVERNMENT, CORPORATE, LEISURE etc",
              "type": "array",
              "maxItems": 20,
              "items": {
                "type": "string",
                "pattern": "^.*$",
                "minLength": 1,
                "maxLength": 50
              },
              "title": "GroupSearchReqDataMarketSegments"
            },
            "businessSources": {
              "description": "business Sources. For inputs, the service searches for groups with business Sources starting with, ending with or containing characters using wildcard expression (STA*, *END, *CONT*). For inputs where wildcard expression (*) is not used, the service searches for groups with exact match of business Source",
              "type": "array",
              "maxItems": 20,
              "items": {
                "type": "string",
                "pattern": "^.*$",
                "minLength": 1,
                "maxLength": 100
              },
              "title": "GroupSearchReqDataBusinessSources"
            },
            "reportingCode": {
              "$ref": "#/definitions/ReportingCode"
            },
            "keywords": {
              "maxItems": 10,
              "type": "array",
              "description": "list of group keywords. For inputs, the service searches for groups with at least one keyword match, it looks for exact match without case sensitivity and wild card(*) is not supported",
              "items": {
                "$ref": "#/definitions/Keyword"
              },
              "title": "GroupSearchReqDataKeywords"
            },
            "creationDateHotelLocalTime": {
              "$ref": "#/definitions/SearchPeriod-3"
            },
            "cancellationDateHotelLocalTime": {
              "$ref": "#/definitions/SearchPeriod-4"
            },
            "distributionChannel": {
              "$ref": "#/definitions/DistributionChannel"
            }
          }
        }
      },
      "title": "GroupSearchReq"
    },
    "SearchTravelAgencyInformation": {
      "description": "the travel agency details",
      "type": "object",
      "properties": {
        "name": {
          "description": "name of the travel agency",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 64
        },
        "agencyProfileId": {
          "$ref": "#/definitions/AgencyProfileId"
        },
        "identifiers": {
          "$ref": "#/definitions/AgencyIdentifiers"
        },
        "nativeInformation": {
          "$ref": "#/definitions/AgencyNativeInformationSearch"
        }
      },
      "title": "SearchTravelAgencyInformation"
    },
    "Comments": {
      "type": "object",
      "required": [
        "type",
        "text"
      ],
      "properties": {
        "type": {
          "$ref": "#/definitions/TypeOfComments"
        },
        "language": {
          "$ref": "#/definitions/Language"
        },
        "languageLocality": {
          "$ref": "#/definitions/LanguageLocality"
        },
        "text": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommentText"
          },
          "title": "CommentsText"
        }
      },
      "title": "Comments"
    },
    "TypeOfComments": {
      "description": "type of the comment, ['SupplementaryInfo' or 'ConfidentialRemark' or 'OriginatorChannelViewable']. [ConfidentialRemark] is not visible by the guest. [OriginatorChannelViewable] is only valid at reservation level (not segment)",
      "type": "string",
      "enum": [
        "SupplementaryInfo",
        "ConfidentialRemark",
        "OriginatorChannelViewable"
      ]
    },
    "CommentText": {
      "description": "free flow text in the comment",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 1200
    },
    "CustomData": {
      "description": "all data under customData are stored in the reservation and returned in the response and retrieve. Any valid Json object is accepted",
      "type": "object",
      "title": "CustomData"
    },
    "InvoiceId": {
      "description": "invoice identifier",
      "type": "string",
      "pattern": "^.*$",
      "maxLength": 36
    },
    "SegmentPmsStatus": {
      "description": "segment status on PMS side",
      "type": "string",
      "enum": [
        "InHouse",
        "CheckedOut",
        "NoShow",
        "Waitlisted",
        "PreCheckin"
      ]
    },
    "BookerId": {
      "type": "integer",
      "description": "determine the person who booked the group. It references a guest id"
    },
    "GroupOwner": {
      "required": [
        "agencyDetails"
      ],
      "type": "object",
      "title": "GroupOwner",
      "properties": {
        "agencyDetails": {
          "$ref": "#/definitions/AgencyDetails"
        }
      }
    },
    "GroupCount": {
      "type": "integer",
      "description": "total number of groups in the search response"
    },
    "GroupOfferReq": {
      "type": "object",
      "title": "GroupOfferReq",
      "description": "details about the selected offer",
      "required": [
        "productUses"
      ],
      "properties": {
        "productUses": {
          "$ref": "#/definitions/GroupProductUseReq"
        },
        "ratePlanCode": {
          "$ref": "#/definitions/RatePlanCode"
        }
      }
    },
    "FormOfPaymentReq": {
      "description": "information concerning form of payment (guarantee, deposit, paid by point,...)",
      "type": "object",
      "properties": {
        "paymentInfo": {
          "$ref": "#/definitions/PaymentInfoReq"
        },
        "depositPayments": {
          "description": "list of the payments done for deposits (payment by points excluded)",
          "type": "array",
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/PaymentTransactionReq"
          },
          "title": "FormOfPaymentReqDepositPayments"
        },
        "paymentByPoints": {
          "description": "list of payments made by points",
          "type": "array",
          "maxItems": 50,
          "items": {
            "$ref": "#/definitions/PaymentByPoints"
          },
          "title": "FormOfPaymentReqPaymentByPoints"
        }
      },
      "title": "FormOfPaymentReq"
    },
    "GuestTypeDefinition": {
      "title": "GuestTypeDefinition",
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "guest Type Code",
          "pattern": "^[A-Z0-9_]{2,8}$",
          "example": "CHILD",
          "maxLength": 20
        },
        "startAge": {
          "type": "integer",
          "description": "start age of the range",
          "example": 0
        },
        "endAge": {
          "type": "integer",
          "description": "end age of the range. If no end age is specified the age range is considered up to infinite",
          "example": 18
        }
      }
    },
    "ArrivalTime": {
      "description": "local hotel time when guests plan to arrive at the hotel, i.e. 22:00",
      "type": "string",
      "pattern": "^.*$",
      "format": "time-hour:time-minute"
    },
    "DepartureTime": {
      "description": "local hotel time when guests plan to leave the hotel, i.e. 10:00",
      "type": "string",
      "pattern": "^.*$",
      "format": "time-hour:time-minute"
    },
    "Language": {
      "description": "the ISO 639-1 code, like EN",
      "type": "string",
      "pattern": "^[A-Za-z]{2}$",
      "minLength": 2,
      "maxLength": 2
    },
    "LanguageLocality": {
      "description": "country code, version alpha-2 of the ISO 3166-1 standard, like TW",
      "type": "string",
      "pattern": "^[A-Z]{2}$",
      "minLength": 2,
      "maxLength": 2,
      "example": "TW"
    },
    "LoyaltyProgram": {
      "description": "loyalty program of the guests with hotel provider",
      "type": "object",
      "required": [
        "loyaltyId"
      ],
      "properties": {
        "loyaltyId": {
          "description": "identifier of the guest in the loyalty system",
          "type": "string",
          "pattern": "^[A-Za-z0-9]{1,28}$",
          "minLength": 1,
          "maxLength": 28
        },
        "programs": {
          "description": "list of the associated programs",
          "type": "array",
          "maxItems": 20,
          "items": {
            "type": "object",
            "title": "LoyaltyProgramProgramsItem",
            "properties": {
              "programName": {
                "description": "name of the program",
                "type": "string",
                "pattern": "^.*$",
                "minLength": 1,
                "maxLength": 5
              },
              "tierLevel": {
                "description": "level within the program",
                "type": "string",
                "pattern": "^.*$",
                "minLength": 1,
                "maxLength": 5
              }
            }
          },
          "title": "LoyaltyProgramPrograms"
        },
        "qualifier": {
          "$ref": "#/definitions/LoyaltyProgramQualifier"
        }
      },
      "title": "LoyaltyProgram"
    },
    "LoyaltyProgramQualifier": {
      "description": "qualifier details of the guest",
      "type": "object",
      "properties": {
        "dominance": {
          "description": "a dominant behavior or interest exhibited by the guest",
          "type": "string",
          "pattern": "^.*$",
          "minLength": 1,
          "maxLength": 50
        },
        "tier": {
          "description": "the tier the guest is associated to",
          "type": "string",
          "pattern": "^.*$",
          "minLength": 1,
          "maxLength": 20
        }
      },
      "title": "LoyaltyProgramQualifier"
    },
    "TravelPurpose": {
      "description": "travel purpose of the segment",
      "type": "string",
      "enum": [
        "Business",
        "Leisure"
      ]
    },
    "CancellationReason": {
      "type": "object",
      "description": "reason of the cancellation",
      "properties": {
        "code": {
          "description": "code of the cancellation reason",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 30
        },
        "description": {
          "title": "description",
          "$ref": "#/definitions/Description-4"
        },
        "others": {
          "title": "others",
          "$ref": "#/definitions/Description-5"
        },
        "waiveFees": {
          "description": "flag to waive the cancellation fees",
          "type": "boolean"
        }
      },
      "title": "CancellationReason"
    },
    "StatusBeforeCancellation": {
      "title": "statusBeforeCancellation",
      "type": "string",
      "pattern": "^.*$",
      "maxLength": 50,
      "description": "status of group before its cancellation"
    },
    "SegmentHolderId": {
      "description": "reference to the holder",
      "type": "integer"
    },
    "Description": {
      "type": "object",
      "additionalProperties": {
        "description": "multi-line description text",
        "type": "array",
        "maxItems": 5,
        "items": {
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 1200,
          "minLength": 1
        },
        "title": "DescriptionProperty"
      },
      "example": {
        "en": [
          "line 1",
          "line 2",
          "line 3"
        ],
        "fr": [
          "ligne 1",
          "ligne 2",
          "ligne 3"
        ]
      },
      "title": "Description"
    },
    "GroupDescription": {
      "properties": {
        "type": {
          "type": "string",
          "pattern": "^.*$"
        },
        "text": {
          "type": "string",
          "pattern": "^.*$"
        }
      },
      "type": "object",
      "title": "GroupDescription"
    },
    "PaymentInfoReq": {
      "description": "information concerning payment amount, payment source, payment informer, form of payment",
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/PaymentInfoAmount"
        },
        "paymentSource": {
          "$ref": "#/definitions/PaymentSource"
        },
        "paymentStatus": {
          "$ref": "#/definitions/PaymentStatus"
        },
        "paymentType": {
          "$ref": "#/definitions/PaymentType"
        },
        "paymentCard": {
          "$ref": "#/definitions/PaymentCard"
        },
        "guaranteePaymentId": {
          "$ref": "#/definitions/GuaranteePaymentId"
        },
        "paymentIntent": {
          "$ref": "#/definitions/PaymentIntent"
        },
        "fraudRecordId": {
          "description": "fraud record Id returned by the payment provider",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 99
        },
        "paymentRecordId": {
          "description": "payment record Id returned by the payment provider",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 99
        },
        "transactionDate": {
          "description": "date and time of the payment transaction",
          "type": "string",
          "pattern": "^.*$",
          "example": "2018-05-26T22:00:00",
          "maxLength": 25
        },
        "pares": {
          "description": "technical identifier of the 3D Secure check, binary value",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 99
        },
        "invoiceId": {
          "$ref": "#/definitions/InvoiceId"
        },
        "xid": {
          "description": "technical identifier of the 3D Secure check, binary value",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 99
        },
        "veresCode": {
          "description": "technical identifier of the 3D Secure check",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 1
        },
        "creditCardCompany": {
          "description": "company used in the 3DSecure process",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 4
        },
        "payer": {
          "$ref": "#/definitions/PayerInformation"
        },
        "multiFactorInfo": {
          "$ref": "#/definitions/MultiFactorInfo"
        }
      },
      "title": "PaymentInfoReq"
    },
    "PaymentTransactionReq": {
      "description": "information concerning payment amount, payment source, form of payment",
      "type": "object",
      "properties": {
        "id": {
          "description": "identifies a payment within the segment. This id is unique for each payment object at segment level",
          "type": "integer",
          "maxLength": 10
        },
        "amount": {
          "$ref": "#/definitions/PaymentInfoAmount"
        },
        "paymentSource": {
          "$ref": "#/definitions/PaymentSource"
        },
        "paymentStatus": {
          "$ref": "#/definitions/PaymentStatus"
        },
        "paymentType": {
          "$ref": "#/definitions/PaymentType"
        },
        "paymentCard": {
          "$ref": "#/definitions/PaymentCard"
        },
        "guaranteePaymentId": {
          "$ref": "#/definitions/GuaranteePaymentId"
        },
        "paymentIntent": {
          "$ref": "#/definitions/PaymentIntent"
        },
        "fraudRecordId": {
          "description": "fraud record Id returned by the payment provider",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 99
        },
        "paymentRecordId": {
          "description": "payment record Id returned by the payment provider",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 99
        },
        "transactionDate": {
          "description": "date and time of the payment transaction",
          "type": "string",
          "pattern": "^.*$",
          "example": "2018-05-26T22:00:00",
          "maxLength": 25
        },
        "pares": {
          "description": "technical identifier of the 3D Secure check, binary value",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 99
        },
        "invoiceId": {
          "$ref": "#/definitions/InvoiceId"
        },
        "xid": {
          "description": "technical identifier of the 3D Secure check, binary value",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 99
        },
        "veresCode": {
          "description": "technical identifier of the 3D Secure check",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 1
        },
        "creditCardCompany": {
          "description": "company used in the 3DSecure process",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 4
        },
        "payer": {
          "$ref": "#/definitions/PayerInformation"
        },
        "multiFactorInfo": {
          "$ref": "#/definitions/MultiFactorInfo"
        }
      },
      "title": "PaymentTransactionReq"
    },
    "PaymentByPoints": {
      "description": "payment made with points",
      "type": "object",
      "properties": {
        "transactionId": {
          "$ref": "#/definitions/TransactionId"
        },
        "dailyPoints": {
          "$ref": "#/definitions/DailyPoints"
        },
        "totalPoints": {
          "$ref": "#/definitions/TotalPoints"
        }
      },
      "title": "PaymentByPoints"
    },
    "TransactionId": {
      "description": "transaction identifier for the payment",
      "type": "string",
      "pattern": "^[A-Za-z0-9]{2,9}$",
      "minLength": 2,
      "maxLength": 9
    },
    "DailyPoints": {
      "description": "daily points cost",
      "type": "integer"
    },
    "TotalPoints": {
      "description": "total points cost",
      "type": "integer"
    },
    "PaymentInfoAmount": {
      "description": "the amount paid/to be paid. Mandatory if the paymentStatus is provided",
      "type": "string",
      "pattern": "^.*$",
      "maxLength": 20
    },
    "PaymentSource": {
      "description": "payment source",
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/PaymentSourceCode"
        },
        "text": {
          "$ref": "#/definitions/PaymentSourceText"
        }
      },
      "title": "PaymentSource"
    },
    "PaymentStatus": {
      "description": "indicates if the payment has already been received or not, could be [Payment received or Waiting payment]",
      "type": "string",
      "enum": [
        "PaymentReceived",
        "WaitingPayment"
      ]
    },
    "PaymentType": {
      "description": "payment type based on OTA_CodeList PMT. (1-Cash, 2-Direct Bill, 3-Voucher, 5-Credit Card, 7-Check, 19-IATA Number, 30-Corporate Discount Number, 44-Guarantee to Property, 46-Online Payment, 47-Pay by Points, 48-Pay by EFT Electronic Funds Transfer)",
      "type": "integer",
      "enum": [
        1,
        2,
        3,
        5,
        7,
        19,
        30,
        44,
        46,
        47,
        48
      ]
    },
    "PaymentCard": {
      "description": "used in case of guarantee per credit card (guaranteeTypeCode 5). Details of a credit card if the chosen means of payment is a credit card",
      "type": "object",
      "required": [
        "cardCode",
        "expireDate",
        "cardNumber"
      ],
      "properties": {
        "cardCode": {
          "$ref": "#/definitions/CardCode"
        },
        "expireDate": {
          "$ref": "#/definitions/ExpireDate"
        },
        "cardNumber": {
          "$ref": "#/definitions/CardNumber"
        },
        "cardHolderName": {
          "$ref": "#/definitions/CardHolderName"
        },
        "fraudRiskScore": {
          "$ref": "#/definitions/FraudRiskScore"
        },
        "fraudRiskFlag": {
          "$ref": "#/definitions/FraudRiskFlag"
        },
        "cvvNumber": {
          "$ref": "#/definitions/CvvNumber"
        },
        "issuanceCountry": {
          "$ref": "#/definitions/IssuanceCountry"
        },
        "isCNP": {
          "$ref": "#/definitions/IsCNP"
        },
        "billingAddress": {
          "title": "billingAddress",
          "maxItems": 99,
          "$ref": "#/definitions/AddressWithoutIndex-0"
        }
      },
      "title": "PaymentCard"
    },
    "GuaranteePaymentId": {
      "description": "guarantee identifier used in case of guarantee per Booking source or CD Number (paymentType 19 or 30)",
      "type": "string",
      "pattern": "^[A-Za-z0-9]{1,20}$",
      "minLength": 1,
      "maxLength": 20
    },
    "PaymentIntent": {
      "description": "specifies if the payment is for a deposit, guarantee or refund",
      "type": "string",
      "enum": [
        "Deposit",
        "Guarantee",
        "Refund"
      ]
    },
    "PayerInformation": {
      "description": "describe the payer of the payment object",
      "type": "object",
      "required": [
        "payerType"
      ],
      "properties": {
        "payerId": {
          "type": "integer",
          "description": "identifies a guest which will be the payer of this payment object. This id cross reference a userProfile. It is only set when payerType is set to Guest"
        },
        "payerType": {
          "type": "string",
          "enum": [
            "Guest",
            "CorporateAccount"
          ],
          "description": "identifies the type of the payer. It is either \"Guest\" or \"CorporateAccount\""
        }
      },
      "title": "PayerInformation"
    },
    "CardCode": {
      "description": "the code of the credit card provider",
      "type": "string",
      "pattern": "^[A-Z0-9]{2,2}$",
      "minLength": 2,
      "maxLength": 2
    },
    "ExpireDate": {
      "description": "expire date",
      "type": "string",
      "pattern": "^.*$",
      "maxLength": 25
    },
    "CardNumber": {
      "description": "card number",
      "type": "object",
      "required": [
        "token"
      ],
      "properties": {
        "token": {
          "$ref": "#/definitions/Token"
        }
      },
      "title": "CardNumber"
    },
    "CvvNumber": {
      "description": "the CVV number",
      "type": "object",
      "required": [
        "token"
      ],
      "properties": {
        "token": {
          "$ref": "#/definitions/Token"
        }
      },
      "title": "CvvNumber"
    },
    "IssuanceCountry": {
      "description": "issuance country of the card using the ISO 3166-1 standard code for countries, territories or areas",
      "type": "string",
      "pattern": "^[a-zA-Z]{2}$",
      "minLength": 2,
      "maxLength": 2,
      "example": "BR"
    },
    "CardHolderName": {
      "description": "name of the credit card holder. The name should be as written on the credit card",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 64
    },
    "FraudRiskFlag": {
      "description": "indicates the fraud flag value for the transaction",
      "type": "boolean"
    },
    "FraudRiskScore": {
      "description": "indicates the fraud score for the transaction",
      "type": "string",
      "pattern": "^.*$",
      "maxLength": 99
    },
    "Token": {
      "description": "token provided by the requestor",
      "type": "string",
      "pattern": "^[A-Za-z0-9]{1,19}$",
      "minLength": 1,
      "maxLength": 19
    },
    "IsCNP": {
      "description": "card not present indicator. If it is set to true the card can not be present at check-in time. If it is set to false the card needs to be physically present at check-in time. Default value false",
      "type": "boolean"
    },
    "AddressWithoutIndex": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/AddressType"
        },
        "addressLines": {
          "$ref": "#/definitions/AddressLines"
        },
        "cityName": {
          "$ref": "#/definitions/CityName"
        },
        "postalCode": {
          "$ref": "#/definitions/PostalCode"
        },
        "county": {
          "$ref": "#/definitions/County"
        },
        "stateProv": {
          "$ref": "#/definitions/StateProv"
        },
        "countryName": {
          "$ref": "#/definitions/CountryName"
        },
        "countryCode": {
          "$ref": "#/definitions/CountryCode"
        },
        "companyName": {
          "$ref": "#/definitions/CompanyName"
        },
        "unstructuredAddress": {
          "$ref": "#/definitions/UnstructuredAddress"
        }
      },
      "title": "AddressWithoutIndex"
    },
    "PaymentSourceCode": {
      "description": "the code designating the payment source, e.g. P for PayPal",
      "type": "string",
      "pattern": "^.*$",
      "maxLength": 20
    },
    "PaymentSourceText": {
      "description": "free-form text to describe or name the payment source, e.g. PayPal",
      "type": "string",
      "pattern": "^.*$",
      "maxLength": 100
    },
    "GroupProductUseReq": {
      "type": "array",
      "maxItems": 10000,
      "description": "list of products (w/o attributes) with associated dates that are part of the offer",
      "items": {
        "title": "GroupProductUseReqItem",
        "type": "object",
        "required": [
          "guestCounts",
          "period",
          "inventoryTypeCode"
        ],
        "properties": {
          "id": {
            "$ref": "#/definitions/ProductUseId"
          },
          "period": {
            "$ref": "#/definitions/StartEnd"
          },
          "inventoryTypeCode": {
            "$ref": "#/definitions/InventoryTypeCode"
          },
          "guestCounts": {
            "type": "array",
            "description": "guest type and guest age information. For each guest, OTA AQG codes and age can be specified in input",
            "maxItems": 100,
            "items": {
              "$ref": "#/definitions/GuestCountReq"
            },
            "title": "GroupProductUseReqItemGuestCounts"
          },
          "countersPerInventoryType": {
            "$ref": "#/definitions/CountersPerInventoryTypeReq"
          }
        }
      },
      "title": "GroupProductUseReq"
    },
    "ProductUseId": {
      "description": "unique ID, generated by the CRS, identifying a product use. Included services are also assigned IDs. This ID is required when modifying an existing requested product use and should not specified at creation time",
      "type": "integer",
      "format": "int32"
    },
    "GuestCountReq": {
      "title": "GuestCountReq",
      "type": "object",
      "minProperties": 1,
      "properties": {
        "otaCode": {
          "description": "the OTA Age Qualifier Code (e.g. for an Adult, \"AQC10\"). Either age or a combination of ota code and count is mandatory",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 8
        },
        "count": {
          "description": "number of guest",
          "type": "integer",
          "default": 1
        },
        "age": {
          "$ref": "#/definitions/Age"
        }
      }
    },
    "CountersPerInventoryTypeRes": {
      "title": "CountersPerInventoryTypeRes",
      "type": "object",
      "description": "inventory details about group",
      "properties": {
        "isFlowThrough": {
          "type": "boolean",
          "default": false,
          "description": "sleeping Room Product Type Flow Through flag for this Group. This is the flag indicating if the Sleeping Room Product Type is Flow Through"
        },
        "allocated": {
          "type": "integer",
          "description": "this is the maximum number of rooms that can be sold for this Group (guaranteed and non guaranteed rooms)"
        },
        "originalAllocated": {
          "type": "array",
          "description": "this is the first value greater than 0 set for the allocated number of rooms for this Sleeping Room Product Type",
          "maxItems": 2000,
          "items": {
            "$ref": "#/definitions/OriginalAllocated"
          },
          "title": "CountersPerInventoryTypeResOriginalAllocated"
        },
        "deducted": {
          "type": "integer",
          "description": "number of Deducted (Authorized - AU) rooms for the given period out of the Contracted/Allocated number of rooms"
        },
        "liveCounters": {
          "type": "array",
          "description": "it will hold the inventory liveCounters of the group",
          "maxItems": 2000,
          "title": "CountersPerInventoryTypeResLiveCounters",
          "items": {
            "$ref": "#/definitions/LiveCounters"
          }
        }
      }
    },
    "LiveCounters": {
      "type": "object",
      "title": "LiveCounters",
      "description": "it will hold the inventory liveCounters of the group",
      "properties": {
        "period": {
          "$ref": "#/definitions/StartEnd"
        },
        "sold": {
          "type": "integer",
          "description": "number of rooms actually booked for this Sleeping Room Product Type for this Group"
        },
        "available": {
          "type": "integer",
          "description": "this is the number of rooms available for this Group. Formula :allocated - sold"
        },
        "unsoldDeducted": {
          "type": "integer",
          "description": "unsold deducted rooms for this group. This is the remaining number of rooms that are guaranteed for this Sleeping Room Product Type for this Group.Formula :deducted - sold"
        },
        "cancelled": {
          "type": "integer",
          "description": "the number of cancelled rooms per day per inventory type"
        }
      }
    },
    "OriginalAllocated": {
      "type": "object",
      "properties": {
        "period": {
          "$ref": "#/definitions/StartEnd"
        },
        "value": {
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 5
        }
      },
      "title": "OriginalAllocated"
    },
    "CountersPerInventoryTypeReq": {
      "title": "CountersPerInventoryTypeReq",
      "type": "object",
      "description": "inventory details about group",
      "properties": {
        "isFlowThrough": {
          "type": "boolean",
          "default": false,
          "description": "sleeping Room Product Type Flow Through flag for this Group. This is the flag indicating if the Sleeping Room Product Type is Flow Through"
        },
        "allocated": {
          "type": "integer",
          "description": "this is the maximum number of rooms that can be sold for this Group (guaranteed and non guaranteed rooms)"
        },
        "deducted": {
          "type": "integer",
          "description": "number of Deducted (Authorized - AU) rooms for the given period out of the Contracted/Allocated number of rooms"
        }
      }
    },
    "StartEnd": {
      "title": "StartEnd",
      "minProperties": 1,
      "properties": {
        "start": {
          "description": "start date",
          "type": "string",
          "pattern": "^.*$",
          "format": "date",
          "maxLength": 50,
          "example": "2019-11-22"
        },
        "end": {
          "description": "end date",
          "type": "string",
          "pattern": "^.*$",
          "format": "date",
          "maxLength": 50,
          "example": "2019-12-20"
        }
      },
      "type": "object"
    },
    "AccountName": {
      "description": "corporate account name",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 35
    },
    "CompanyNativeInformationSearch": {
      "description": "contains the information of the company in native language (non-ASCII characters allowed)",
      "type": "object",
      "properties": {
        "language": {
          "$ref": "#/definitions/Language-0"
        },
        "languageLocality": {
          "$ref": "#/definitions/LanguageLocality"
        },
        "accountName": {
          "$ref": "#/definitions/AccountName-0"
        }
      },
      "title": "CompanyNativeInformationSearch"
    },
    "CompanyNativeInformation": {
      "description": "contains the information of the company in native language (non-ASCII characters allowed)",
      "type": "object",
      "properties": {
        "language": {
          "$ref": "#/definitions/Language-0"
        },
        "languageLocality": {
          "$ref": "#/definitions/LanguageLocality"
        },
        "accountName": {
          "$ref": "#/definitions/AccountName-0"
        },
        "address": {
          "title": "address",
          "$ref": "#/definitions/Address-0"
        }
      },
      "title": "CompanyNativeInformation"
    },
    "AgencyNativeInformation": {
      "description": "contains the information of the company in native language (non-ASCII characters allowed)",
      "type": "object",
      "properties": {
        "language": {
          "$ref": "#/definitions/Language-0"
        },
        "languageLocality": {
          "$ref": "#/definitions/LanguageLocality"
        },
        "name": {
          "$ref": "#/definitions/AccountName-1"
        },
        "address": {
          "title": "address",
          "$ref": "#/definitions/Address-0"
        }
      },
      "title": "AgencyNativeInformation"
    },
    "AgencyNativeInformationSearch": {
      "description": "contains the information of the company in native language (non-ASCII characters allowed)",
      "type": "object",
      "properties": {
        "language": {
          "$ref": "#/definitions/Language-0"
        },
        "languageLocality": {
          "$ref": "#/definitions/LanguageLocality"
        },
        "name": {
          "$ref": "#/definitions/AccountName-1"
        }
      },
      "title": "AgencyNativeInformationSearch"
    },
    "CdNumber": {
      "description": "corporate discount number",
      "type": "string",
      "pattern": "^[A-Za-z0-9]{1,20}$",
      "minLength": 1,
      "maxLength": 20
    },
    "IsCdAutoAppended": {
      "description": "if true, it means the cd number has not been filled explicitly by the requestor",
      "type": "boolean"
    },
    "IsMainCorporateAccount": {
      "description": "set to true if the corporate account information is the one that is taken into account",
      "type": "boolean"
    },
    "AccountSource": {
      "description": "source of the corporate account information (loyalty account or corporate account)",
      "type": "string",
      "enum": [
        "Loyalty",
        "Corporate"
      ]
    },
    "CompanyProfileId": {
      "description": "company identifier on the profile system",
      "type": "string",
      "pattern": "^.*$",
      "maxLength": 36
    },
    "Address": {
      "type": "object",
      "properties": {
        "index": {
          "$ref": "#/definitions/AddressIndex"
        },
        "type": {
          "$ref": "#/definitions/AddressType"
        },
        "addressLines": {
          "$ref": "#/definitions/AddressLines"
        },
        "cityName": {
          "$ref": "#/definitions/CityName"
        },
        "postalCode": {
          "$ref": "#/definitions/PostalCode"
        },
        "county": {
          "$ref": "#/definitions/County"
        },
        "stateProv": {
          "$ref": "#/definitions/StateProv"
        },
        "countryName": {
          "$ref": "#/definitions/CountryName"
        },
        "countryCode": {
          "$ref": "#/definitions/CountryCode"
        },
        "companyName": {
          "$ref": "#/definitions/CompanyName"
        },
        "unstructuredAddress": {
          "$ref": "#/definitions/UnstructuredAddress"
        }
      },
      "title": "Address"
    },
    "AddressIndex": {
      "description": "address index. Identify the address inside the object",
      "type": "integer"
    },
    "CityName": {
      "description": "city name",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 30
    },
    "CompanyName": {
      "description": "company name, makes sense if type is business address",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 100
    },
    "CountryCode": {
      "description": "country code defined by the ISO 3166 norm",
      "type": "string",
      "pattern": "^[A-Za-z]{2,2}$",
      "minLength": 2,
      "maxLength": 2
    },
    "CountryName": {
      "description": "country name",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 64
    },
    "County": {
      "description": "county name",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 32
    },
    "PostalCode": {
      "description": "postal or ZIP code",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 16
    },
    "StateProv": {
      "description": "abbreviated state name",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 25
    },
    "AddressType": {
      "description": "defines if the address is personal (1) or business (2), based on OTA_CodeType CLT",
      "type": "integer",
      "enum": [
        1,
        2
      ]
    },
    "AddressLines": {
      "description": "list of address lines",
      "type": "array",
      "maxItems": 5,
      "items": {
        "description": "address line",
        "type": "string",
        "pattern": "^.*$",
        "minLength": 1,
        "maxLength": 150
      },
      "title": "AddressLines"
    },
    "UnstructuredAddress": {
      "description": "list of unstructured address lines",
      "type": "array",
      "maxItems": 10,
      "items": {
        "type": "string",
        "pattern": "^.*$",
        "minLength": 1,
        "maxLength": 150,
        "description": "address without any structure"
      },
      "title": "UnstructuredAddress"
    },
    "Telephone": {
      "type": "object",
      "required": [
        "number"
      ],
      "properties": {
        "locationType": {
          "$ref": "#/definitions/PhoneLocationType"
        },
        "deviceType": {
          "$ref": "#/definitions/PhoneDeviceType"
        },
        "countryCode": {
          "$ref": "#/definitions/PhoneCountryCode"
        },
        "areaCode": {
          "$ref": "#/definitions/PhoneAreaCode"
        },
        "extension": {
          "$ref": "#/definitions/PhoneExtension"
        },
        "number": {
          "$ref": "#/definitions/PhoneNumber"
        }
      },
      "title": "Telephone"
    },
    "PhoneLocationType": {
      "description": "defines if the given phone/fax Number is business (7) or home (6), based on OTA_CodeType PLT",
      "type": "integer",
      "enum": [
        6,
        7
      ]
    },
    "PhoneDeviceType": {
      "description": "the technology associated to the Number, based on OTA_CodeType PTT (1-Phone, 3-Fax, 5-Mobile)",
      "type": "integer",
      "enum": [
        1,
        3,
        5
      ]
    },
    "PhoneCountryCode": {
      "description": "the country code associated to the phone number",
      "type": "string",
      "pattern": "^.*$",
      "format": "numeric",
      "minLength": 1,
      "maxLength": 3
    },
    "PhoneAreaCode": {
      "description": "the area code associated to the phone number",
      "type": "string",
      "pattern": "^.*$",
      "format": "numeric",
      "minLength": 1,
      "maxLength": 8
    },
    "PhoneExtension": {
      "description": "the extension associated to the phone number",
      "type": "string",
      "pattern": "^.*$",
      "format": "numeric",
      "minLength": 1,
      "maxLength": 5
    },
    "PhoneNumber": {
      "description": "phone / fax number",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 57
    },
    "Email": {
      "type": "object",
      "required": [
        "address"
      ],
      "properties": {
        "type": {
          "$ref": "#/definitions/EmailType"
        },
        "language": {
          "$ref": "#/definitions/EmailLanguage"
        },
        "languageLocality": {
          "$ref": "#/definitions/LanguageLocality"
        },
        "address": {
          "$ref": "#/definitions/EmailField"
        }
      },
      "title": "Email"
    },
    "EmailType": {
      "description": "defines if the given Email Number is business (2) or home (1), based on OTA_CodeType EAT",
      "type": "integer",
      "enum": [
        1,
        2
      ]
    },
    "EmailField": {
      "description": "email",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 90
    },
    "EmailLanguage": {
      "description": "preferred language to be used for the email content. Format ISO 639-1 code, like 'en'",
      "type": "string",
      "pattern": "^[A-Za-z]{2}$",
      "minLength": 2,
      "maxLength": 2
    },
    "AgencyDetails": {
      "type": "object",
      "required": [
        "identifiers"
      ],
      "properties": {
        "identifiers": {
          "description": "list of identifiers",
          "type": "array",
          "maxItems": 3,
          "items": {
            "$ref": "#/definitions/AgencyIdentifiers"
          },
          "title": "AgencyDetailsIdentifiers"
        },
        "name": {
          "description": "the agency name",
          "type": "string",
          "pattern": "^.*$"
        },
        "isValid": {
          "description": "indicates that the IATA code of the travel agency is valid",
          "type": "boolean"
        },
        "isTrusted": {
          "description": "indicates that the travel agency is trusted",
          "type": "boolean"
        },
        "address": {
          "title": "address",
          "$ref": "#/definitions/AddressWithoutIndex-1"
        },
        "telephone": {
          "title": "telephone",
          "$ref": "#/definitions/Telephone-0"
        },
        "email": {
          "title": "email",
          "$ref": "#/definitions/Email-0"
        },
        "agencyProfileId": {
          "$ref": "#/definitions/AgencyProfileId"
        },
        "nativeInformation": {
          "$ref": "#/definitions/AgencyNativeInformation"
        }
      },
      "title": "AgencyDetails"
    },
    "AgencyIdentifiers": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "description": "identifier of the agency",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 16
        },
        "type": {
          "description": "type of the agency identifier",
          "type": "string",
          "enum": [
            "IATA",
            "SGA",
            "ABTA",
            "CLIA",
            "ARC",
            "TRUE",
            "MARTAN"
          ]
        }
      },
      "title": "AgencyIdentifiers"
    },
    "AgencyProfileId": {
      "description": "agency identifier on the profile system",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 50
    },
    "PropertyCode": {
      "description": "the property code",
      "type": "string",
      "pattern": "^[A-Z0-9]{1,10}$",
      "minLength": 1,
      "maxLength": 10
    },
    "VendorCode": {
      "maxLength": 5,
      "minLength": 5,
      "pattern": "^[A-Z0-9]{5,5}$",
      "type": "string",
      "description": "vendor code",
      "example": "ABCDE"
    },
    "ChannelCode": {
      "maxLength": 2,
      "minLength": 2,
      "pattern": "^[A-Z0-9]{2,2}$",
      "type": "string",
      "description": "channel code",
      "example": "1A"
    },
    "MetricsCode": {
      "description": "metrics code",
      "type": "string",
      "pattern": "^[A-Z0-9]{3,3}$",
      "example": "ABC",
      "minLength": 3,
      "maxLength": 3
    },
    "TravelAgencyInformation": {
      "description": "the travel agency details",
      "type": "object",
      "required": [
        "identifiers"
      ],
      "properties": {
        "identifiers": {
          "description": "list of identifiers",
          "type": "array",
          "maxItems": 3,
          "items": {
            "$ref": "#/definitions/AgencyIdentifiers"
          },
          "title": "TravelAgencyInformationIdentifiers"
        },
        "agentInfo": {
          "$ref": "#/definitions/AgentInformation"
        },
        "name": {
          "description": "name of the travel agency",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 64
        },
        "agencyProfileId": {
          "$ref": "#/definitions/AgencyProfileId"
        },
        "address": {
          "title": "address",
          "$ref": "#/definitions/AddressWithoutIndex-1"
        },
        "telephone": {
          "title": "telephone",
          "$ref": "#/definitions/Telephone-0"
        },
        "email": {
          "title": "email",
          "$ref": "#/definitions/Email-0"
        },
        "nativeInformation": {
          "$ref": "#/definitions/AgencyNativeInformation"
        }
      },
      "title": "TravelAgencyInformation"
    },
    "CallCenterInformation": {
      "type": "object",
      "required": [
        "type",
        "id"
      ],
      "properties": {
        "type": {
          "$ref": "#/definitions/CallCenterType"
        },
        "id": {
          "$ref": "#/definitions/CallCenterId"
        },
        "agentInfo": {
          "$ref": "#/definitions/callCenterAgentInformation"
        }
      },
      "title": "CallCenterInformation"
    },
    "CallCenterType": {
      "description": "type of information",
      "type": "string",
      "enum": [
        "VDN",
        "ConnId"
      ]
    },
    "CallCenterId": {
      "description": "information details",
      "type": "string",
      "pattern": "^.*$",
      "maxLength": 50
    },
    "AgentInformation": {
      "type": "object",
      "properties": {
        "agentDutyCode": {
          "$ref": "#/definitions/AgentDutyCode"
        },
        "agentInitials": {
          "$ref": "#/definitions/AgentInitials"
        },
        "agentLocation": {
          "$ref": "#/definitions/AgentLocation"
        },
        "agentSine": {
          "$ref": "#/definitions/AgentSine"
        }
      },
      "title": "AgentInformation"
    },
    "AgentDutyCode": {
      "description": "duty code of the travel agent",
      "type": "string",
      "pattern": "^.*$",
      "maxLength": 16
    },
    "AgentInitials": {
      "description": "initials of the travel agent",
      "type": "string",
      "pattern": "^.*$",
      "maxLength": 16
    },
    "AgentLocation": {
      "description": "location of the travel agent",
      "type": "string",
      "pattern": "^.*$",
      "maxLength": 16
    },
    "AgentSine": {
      "description": "sign of the travel agent",
      "type": "string",
      "pattern": "^.*$",
      "maxLength": 16
    },
    "Age": {
      "description": "identifies the age of the user",
      "type": "integer"
    },
    "IdentificationInfo": {
      "description": "container for structured details of identification information",
      "type": "array",
      "maxItems": 20,
      "items": {
        "type": "object",
        "title": "IdentificationInfoItem",
        "properties": {
          "type": {
            "description": "type of identity document",
            "enum": [
              "Passport"
            ],
            "example": "Passport",
            "type": "string"
          },
          "number": {
            "type": "string",
            "example": "QFU514563221J",
            "pattern": "^[a-zA-Z0-9]{1,50}$",
            "maxLength": 50,
            "description": "number of the identity document"
          },
          "issuanceLocation": {
            "type": "string",
            "pattern": "^.*$",
            "description": "a more precise information concerning the place where the document has been issued such as state, department or a city name (e.g. New-York)",
            "minLength": 2,
            "maxLength": 50,
            "example": "New-York"
          },
          "issuanceCountry": {
            "type": "string",
            "description": "country code using ISO 3166-1 standard",
            "pattern": "^[a-zA-Z]{2}$",
            "minLength": 2,
            "maxLength": 2,
            "example": "BR"
          }
        }
      },
      "title": "IdentificationInfo"
    },
    "PersonName": {
      "description": "container for structured details of the guest name",
      "type": "object",
      "required": [
        "firstName",
        "lastName"
      ],
      "properties": {
        "namePrefix": {
          "$ref": "#/definitions/NamePrefix"
        },
        "firstName": {
          "$ref": "#/definitions/GivenName"
        },
        "lastName": {
          "$ref": "#/definitions/Surname"
        },
        "middleName": {
          "$ref": "#/definitions/MiddleName"
        },
        "nameSuffix": {
          "$ref": "#/definitions/NameSuffix"
        },
        "title": {
          "$ref": "#/definitions/Title"
        }
      },
      "title": "PersonName"
    },
    "NamePrefix": {
      "description": "name prefix",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 9
    },
    "NameSuffix": {
      "description": "name suffix",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 9
    },
    "GivenName": {
      "description": "first name",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 56
    },
    "Surname": {
      "description": "last name",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 57
    },
    "MiddleName": {
      "description": "middle name",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 56
    },
    "Title": {
      "description": "title. It is a free text and can take any value",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 20
    },
    "Nationality": {
      "description": "indicates the guest nationality using the ISO 3166-1 alpha-3 standard code for countries, territories or areas",
      "type": "string",
      "pattern": "[A-Za-z]{2,3}",
      "minLength": 2,
      "maxLength": 3,
      "example": "BR"
    },
    "GuestProfileId": {
      "description": "guest identifier on the profile system",
      "type": "string",
      "pattern": "^.*$",
      "maxLength": 36
    },
    "GuestNativeInformationSearch": {
      "description": "contains the information of the guest in native language (non-ASCII characters allowed)",
      "type": "object",
      "properties": {
        "language": {
          "$ref": "#/definitions/Language-0"
        },
        "languageLocality": {
          "$ref": "#/definitions/LanguageLocality"
        },
        "personName": {
          "title": "personName",
          "$ref": "#/definitions/PersonName-0"
        }
      },
      "title": "GuestNativeInformationSearch"
    },
    "GuestNativeInformation": {
      "description": "contains the information of the guest in native language (non-ASCII characters allowed)",
      "type": "object",
      "properties": {
        "language": {
          "$ref": "#/definitions/Language-0"
        },
        "languageLocality": {
          "$ref": "#/definitions/LanguageLocality"
        },
        "addresses": {
          "type": "array",
          "maxItems": 99,
          "description": "list of addresses in native language (non-ASCII characters allowed)",
          "items": {
            "$ref": "#/definitions/AddressWithoutIndex"
          },
          "title": "GuestNativeInformationAddresses"
        },
        "personName": {
          "title": "personName",
          "$ref": "#/definitions/PersonName-0"
        }
      },
      "title": "GuestNativeInformation"
    },
    "FrequentTraveler": {
      "description": "loyalty program of the guests with an airline",
      "type": "object",
      "required": [
        "membershipId"
      ],
      "properties": {
        "membershipId": {
          "description": "unique identifier of the member. Examples - 1234567890 or AF1234567890 (in this case programId is not mandatory)",
          "type": "string",
          "pattern": "^.*$",
          "format": "alphanumeric",
          "minLength": 1,
          "maxLength": 28
        },
        "programId": {
          "description": "loyalty program owner’s code (for instance “AF” for Air France). May be absent in case it is unknown",
          "type": "string",
          "pattern": "^.*$",
          "format": "alphanumeric",
          "minLength": 2,
          "maxLength": 3
        }
      },
      "title": "FrequentTraveler"
    },
    "ContactPerson": {
      "description": "container for guest contact person information",
      "type": "object",
      "required": [
        "relation",
        "personName"
      ],
      "properties": {
        "relation": {
          "description": "define the relation between the guest and its contact name (business or personal contact)",
          "example": "Parent",
          "type": "string",
          "pattern": "^.*$",
          "minLength": 1,
          "maxLength": 32
        },
        "personName": {
          "$ref": "#/definitions/ContactPersonName"
        }
      },
      "title": "ContactPerson"
    },
    "ContactPersonName": {
      "required": [
        "lastName"
      ],
      "type": "object",
      "title": "ContactPersonName",
      "properties": {
        "namePrefix": {
          "$ref": "#/definitions/ContactNamePrefix"
        },
        "firstName": {
          "$ref": "#/definitions/ContactGivenName"
        },
        "lastName": {
          "$ref": "#/definitions/ContactSurname"
        }
      },
      "description": "container for guest person name details"
    },
    "ContactNamePrefix": {
      "description": "name prefix",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 16
    },
    "ContactGivenName": {
      "description": "first name",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 64
    },
    "ContactSurname": {
      "description": "last name",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 64
    },
    "PricePlanInGroup": {
      "properties": {
        "extraPersonCharge": {
          "description": "a non-zero positive value. This charge applies to all inventory types",
          "type": "string",
          "pattern": "^.*$"
        },
        "currency": {
          "type": "string",
          "pattern": "^.*$"
        },
        "taxInclusion": {
          "type": "string",
          "description": "indicates the tax inclusion and computation of tax",
          "enum": [
            "IncludedInRate",
            "ExcludedFromRate",
            "House"
          ]
        },
        "amountRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AmountRule"
          },
          "title": "PricePlanInGroupAmountRules"
        },
        "chargeMethod": {
          "description": "unit for which the charge applies",
          "type": "string",
          "enum": [
            "PerPerson",
            "PerProduct",
            "PerProductByOccupancy",
            "PerProductPerGuestType"
          ]
        },
        "chargeFrequency": {
          "description": "defines the pricing frequency. Example PerNight for SR or NR; AND PerStay or PerUse for NR only",
          "type": "string",
          "enum": [
            "PerNight",
            "PerStay",
            "PerUse"
          ]
        },
        "bookingPattern": {
          "description": "determines the availability of the Product with respect to the main product",
          "type": "string",
          "enum": [
            "DayOfCheckIn",
            "DayOfCheckOut",
            "Anytime"
          ]
        },
        "productCode": {
          "description": "code representing the product for the given product category for the price plan. Example - SR, BRKF, SPA",
          "type": "string",
          "pattern": "^.*$",
          "example": "BRKF",
          "minLength": 2,
          "maxLength": 8
        }
      },
      "type": "object",
      "title": "PricePlanInGroup"
    },
    "Policy": {
      "type": "object",
      "title": "Policy",
      "properties": {
        "policyType": {
          "type": "string",
          "description": "type of the policy",
          "enum": [
            "CancellationPolicy",
            "DepositPolicy",
            "CancellationNoShowPolicy"
          ]
        },
        "level": {
          "type": "string",
          "description": "specifies at which level the policy should apply",
          "enum": [
            "Pickup",
            "Group"
          ]
        },
        "penalty": {
          "$ref": "#/definitions/Penalty"
        },
        "deadline": {
          "$ref": "#/definitions/Deadline"
        },
        "refundPercentage": {
          "type": "string",
          "pattern": "^.*$",
          "description": "percentage of refund applicable"
        },
        "cancellationTime": {
          "type": "string",
          "pattern": "^.*$",
          "example": "08:00:00",
          "description": "cancellation time applicable for the Cancellation and no-show cancellation policy"
        },
        "isFollowingHousePolicy": {
          "type": "boolean",
          "description": "flag indicating if the policy is following house or defined in the scope of the rate plan / group"
        }
      }
    },
    "StayRestriction": {
      "title": "StayRestriction",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "type of object for stay restriction when part of other objects or services",
          "readOnly": true,
          "example": "StayRestriction"
        },
        "restrictionType": {
          "type": "string",
          "enum": [
            "ClosedToDeparture",
            "ClosedToArrival",
            "NoStay",
            "RequiredStayOver",
            "LOSRestriction",
            "StayThrough"
          ]
        },
        "id": {
          "type": "string",
          "description": "system generated id for the restriction",
          "readOnly": true,
          "pattern": "^.*$"
        },
        "period": {
          "$ref": "#/definitions/PeriodWithDow"
        },
        "inventoryTypeCode": {
          "type": "string",
          "description": "a code representing the business code for the Inventory type",
          "pattern": "^.*$",
          "example": "KNGN",
          "maxLength": 5
        },
        "yieldClass": {
          "type": "string",
          "description": "yield class on which the restriction applies",
          "pattern": "^.*$",
          "maxLength": 64,
          "minLength": 1
        },
        "roomBucket": {
          "type": "string",
          "description": "room bucket on which the restriction applies",
          "maxLength": 64,
          "minLength": 1
        },
        "codeType": {
          "type": "string",
          "description": "codeType on which the restriction applies",
          "enum": [
            "RatePlan",
            "PriceGrid",
            "RateParityGroup",
            "RateBucket"
          ]
        },
        "code": {
          "type": "string",
          "description": "code for the given code type for which the restriction is applicable"
        },
        "applyToCheckIn": {
          "type": "boolean",
          "description": "indicates whether the restriction applies at CheckIn"
        },
        "daysRanges": {
          "type": "array",
          "description": "indicates the minimum and maximum ranges for a given restriction",
          "items": {
            "type": "object",
            "title": "StayRestrictionDaysRangesItem",
            "properties": {
              "min": {
                "type": "integer"
              },
              "max": {
                "type": "integer"
              }
            }
          },
          "title": "StayRestrictionDaysRanges"
        },
        "status": {
          "type": "string",
          "description": "input Only , Used to set or unset stay restriction",
          "enum": [
            "Active",
            "Inactive"
          ]
        }
      }
    },
    "AdvanceBookingRestriction": {
      "type": "object",
      "title": "AdvanceBookingRestriction",
      "properties": {
        "type": {
          "type": "string",
          "example": "AdvanceBookingRestriction"
        },
        "subType": {
          "type": "string",
          "description": "supported values - SellPeriod, RelativeDOW, AlternateDOW, Relative",
          "enum": [
            "SellPeriod",
            "RelativeDOW",
            "AlternateDOW",
            "Relative"
          ]
        },
        "code": {
          "type": "string",
          "example": "RP123",
          "description": "unique Identifier of Rate Plan, Rate Bucket or Rate Parity Group",
          "minLength": 1,
          "maxLength": 50
        },
        "codeType": {
          "type": "string",
          "example": "RatePlan",
          "description": "supported values - RatePlan, RateBucket or RateParityGroup",
          "enum": [
            "RatePlan",
            "RateParityGroup",
            "RateBucket"
          ]
        },
        "yieldClass": {
          "type": "string",
          "description": "yield class on which the restriction applies",
          "maxLength": 64,
          "minLength": 1
        },
        "roomBucket": {
          "type": "string",
          "description": "room bucket on which the restriction applies",
          "maxLength": 64,
          "minLength": 1
        },
        "startDate": {
          "type": "string",
          "example": "2019-04-23",
          "pattern": "[0-9]{4}-[0-9]{2}-[0-3][0-9]",
          "description": "start Date for the check-in period of the advance booking restriction",
          "maxLength": 10
        },
        "endDate": {
          "type": "string",
          "example": "2019-04-29",
          "pattern": "[0-9]{4}-[0-9]{2}-[0-3][0-9]",
          "description": "end date for the check-in period of the advance booking restriction",
          "maxLength": 10
        },
        "dow": {
          "type": "string",
          "pattern": "(M|-)(T|-)(W|-)(T|-)(F|-)(S|-)(S|-)",
          "example": "MT-TFS-",
          "maxLength": 10
        },
        "inventoryTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InventoryTypeCode"
          },
          "title": "AdvanceBookingRestrictionInventoryTypes"
        },
        "sellStartDate": {
          "type": "string",
          "example": "2019-04-23",
          "description": "start date from which the user is allowed to sell or book the business as a booking restriction"
        },
        "sellEndDate": {
          "type": "string",
          "description": "end date up to which the user is allowed to sell or book the business as a booking restriction"
        },
        "minOffset": {
          "type": "integer",
          "description": "minimum lead time (in days) that a booking can be created before (or relative to) the check-in date  as a booking restriction",
          "example": 2
        },
        "maxOffset": {
          "type": "integer",
          "description": "maximum lead time (in days) that a booking can be created before (or relative to) the check-in date as a booking restriction",
          "example": 10
        }
      },
      "required": [
        "subType"
      ]
    },
    "GroupSecurityFlags": {
      "properties": {
        "isExcludedFromGroupsList": {
          "description": "indicate if the Group excluded from Search Groups List",
          "type": "boolean"
        },
        "isRateSecuredFromSNB": {
          "description": "indicates if the Group’s Rates secured from shopping and booking",
          "type": "boolean"
        },
        "isRateSecuredFromReporting": {
          "description": "indicates if the Group's Rates secured from Groups List and Reports",
          "type": "boolean"
        },
        "isGroupDescriptionSecured": {
          "description": "indicates if the Group s Description Secured from Groups List and Reports",
          "type": "boolean"
        },
        "isBookingProcedureSecured": {
          "description": "indicates if the Group Booking Procedures secured from Groups List and Reports",
          "type": "boolean"
        },
        "isRateVisibleForCorporateId": {
          "description": "applicable only if a corporate id is provided. Indicates if the rate is visible",
          "type": "boolean"
        }
      },
      "type": "object",
      "title": "GroupSecurityFlags"
    },
    "RateReferenceInGroup": {
      "type": "object",
      "properties": {
        "ratePlanCode": {
          "$ref": "#/definitions/RatePlanCode"
        },
        "pricePlanCode": {
          "$ref": "#/definitions/PricePlanCode"
        },
        "relationship": {
          "type": "string",
          "enum": [
            "AttachedPlan",
            "BasePlan"
          ]
        },
        "coverage": {
          "type": "string",
          "enum": [
            "Core",
            "PreShoulder",
            "PostShoulder",
            "Full"
          ]
        }
      },
      "title": "RateReferenceInGroup"
    },
    "PricePlanCode": {
      "description": "price plan code",
      "type": "string",
      "pattern": "^[A-Z0-9]{2,50}$",
      "minLength": 2,
      "maxLength": 50
    },
    "RatePlanCode": {
      "description": "rate plan code",
      "type": "string",
      "pattern": "^[A-Z0-9]{1,50}$",
      "minLength": 1,
      "maxLength": 50
    },
    "Period": {
      "title": "Period",
      "type": "object",
      "minProperties": 1,
      "properties": {
        "start": {
          "description": "start date-time follows ISO 8601 format",
          "type": "string",
          "pattern": "^.*$",
          "example": "2019-12-20T23:59:59",
          "maxLength": 25
        },
        "end": {
          "description": "end date-time follows ISO 8601 format",
          "type": "string",
          "pattern": "^.*$",
          "example": "2019-12-21T23:59:59",
          "maxLength": 25
        },
        "dow": {
          "description": "days of week",
          "type": "string",
          "pattern": "^(M|-)(T|-)(W|-)(T|-)(F|-)(S|-)(S|-)$",
          "example": "MT--FSS",
          "maxLength": 8
        }
      }
    },
    "PeriodWithDow": {
      "title": "PeriodWithDow",
      "type": "object",
      "minProperties": 1,
      "properties": {
        "dow": {
          "description": "days of week",
          "type": "string",
          "pattern": "^(M|-)(T|-)(W|-)(T|-)(F|-)(S|-)(S|-)$",
          "example": "MT--FSS",
          "maxLength": 8
        },
        "start": {
          "description": "start date",
          "type": "string",
          "pattern": "^.*$",
          "format": "date",
          "example": "2019-11-22"
        },
        "end": {
          "description": "end date",
          "type": "string",
          "pattern": "^.*$",
          "format": "date",
          "example": "2019-12-20"
        }
      }
    },
    "AmountRule": {
      "title": "AmountRule",
      "type": "object",
      "minProperties": 1,
      "properties": {
        "type": {
          "type": "string",
          "pattern": "^.*$",
          "description": "name of the Data Model, \"AmountRule\"",
          "example": "AmountRule"
        },
        "comment": {
          "type": "string",
          "pattern": "^.*$",
          "description": "comment of the Amount Rules"
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "inventoryTypes": {
          "$ref": "#/definitions/MapOfPricePoints"
        },
        "roomClasses": {
          "$ref": "#/definitions/MapOfPricePoints"
        },
        "attributes": {
          "$ref": "#/definitions/MapOfPricePoints"
        },
        "products": {
          "$ref": "#/definitions/MapOfPricePoints"
        }
      }
    },
    "MapOfPricePoints": {
      "type": "object",
      "additionalProperties": {
        "description": "list of amounts",
        "type": "array",
        "items": {
          "$ref": "#/definitions/PricePoint"
        },
        "title": "MapOfPricePointsProperty"
      },
      "example": {
        "ABCD": [
          {
            "value": "110",
            "computationType": "Flat",
            "guestType": "ADULT"
          },
          {
            "value": "85",
            "computationType": "Flat",
            "guestType": "INFANT"
          }
        ],
        "XYZ": [
          {
            "value": "120.00",
            "computationType": "Flat",
            "guestType": "ADULT"
          }
        ]
      },
      "title": "MapOfPricePoints"
    },
    "PricePoint": {
      "title": "PricePoint",
      "type": "object",
      "minProperties": 1,
      "properties": {
        "computationType": {
          "description": "indicates how the value is used for the amount computation. Flat is the default value",
          "type": "string",
          "enum": [
            "Flat",
            "AmountAdd",
            "AmountOff",
            "PercentAdd",
            "PercentOff"
          ]
        },
        "value": {
          "description": "value of the price point. it could be an amount or a percentage",
          "type": "string",
          "example": "20",
          "pattern": "^.*$"
        },
        "occupancy": {
          "description": "in case the pricing can vary based on the occupancy (number of guests)",
          "type": "integer",
          "example": 2
        },
        "guestType": {
          "description": "in case the pricing can vary based on the guest type",
          "type": "string",
          "pattern": "^.*$"
        }
      },
      "required": [
        "value"
      ]
    },
    "GroupGuestsReq": {
      "maxItems": 300,
      "type": "array",
      "description": "list of user profiles",
      "items": {
        "title": "GroupGuestsReqItem",
        "type": "object",
        "required": [
          "personName"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "identifies a guest within the group. This id (unique for each guest) can be used to cross-referenced a guest from the bookerId"
          },
          "age": {
            "$ref": "#/definitions/Age"
          },
          "identificationInfo": {
            "$ref": "#/definitions/IdentificationInfo"
          },
          "personName": {
            "$ref": "#/definitions/PersonName"
          },
          "nativeInformation": {
            "$ref": "#/definitions/GuestNativeInformation"
          },
          "guestProfileId": {
            "$ref": "#/definitions/GuestProfileId"
          },
          "addresses": {
            "maxItems": 99,
            "type": "array",
            "description": "list of addresses",
            "items": {
              "$ref": "#/definitions/AddressWithoutIndex"
            },
            "title": "GroupGuestsReqItemAddresses"
          },
          "telephones": {
            "maxItems": 99,
            "type": "array",
            "description": "list of telephones and fax",
            "items": {
              "$ref": "#/definitions/Telephone"
            },
            "title": "GroupGuestsReqItemTelephones"
          },
          "emails": {
            "maxItems": 2,
            "type": "array",
            "description": "list of emails",
            "items": {
              "$ref": "#/definitions/Email"
            },
            "title": "GroupGuestsReqItemEmails"
          },
          "loyaltyProgram": {
            "$ref": "#/definitions/LoyaltyProgram"
          },
          "frequentTraveler": {
            "$ref": "#/definitions/FrequentTraveler"
          },
          "customData": {
            "$ref": "#/definitions/CustomData"
          },
          "nationalities": {
            "type": "array",
            "description": "indicates the guest nationality using the ISO 3166-1 standard code for countries, territories or areas",
            "maxItems": 5,
            "items": {
              "$ref": "#/definitions/Nationality"
            },
            "title": "GroupGuestsReqItemNationalities"
          },
          "contactPerson": {
            "$ref": "#/definitions/ContactPerson"
          },
          "additionalMembershipPrograms": {
            "description": "list of additional membership programs of the guest",
            "type": "array",
            "minItems": 1,
            "maxItems": 30,
            "items": {
              "$ref": "#/definitions/additionalMembershipProgram"
            },
            "title": "GroupGuestsReqItemAdditionalMembershipPrograms"
          }
        }
      },
      "title": "GroupGuestsReq"
    },
    "IsFoundGroupReservation": {
      "description": "set to true if at least one group matching the criteria is found, false otherwise",
      "type": "boolean"
    },
    "CreateDateTime": {
      "description": "date and time of creation (UTC)",
      "type": "string",
      "pattern": "^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2]\\d|3[0-1])T([0-1]\\d|2[0-4]):([0-5]\\d):([0-5]\\d)\\.(\\d{3})$",
      "example": "2018-05-26T22:00:00.000",
      "maxLength": 25
    },
    "CreateDateTimeHotelLocalTime": {
      "description": "date and time of creation, expressed in hotel local time",
      "type": "string",
      "pattern": "^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2]\\d|3[0-1])T([0-1]\\d|2[0-4]):([0-5]\\d):([0-5]\\d)\\.(\\d{3})$",
      "example": "2018-05-26T22:00:00.000",
      "maxLength": 25
    },
    "LastUpdateDateTime": {
      "description": "date and time of the last active image (last modification for history), expressed in UTC",
      "type": "string",
      "pattern": "^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2]\\d|3[0-1])T([0-1]\\d|2[0-4]):([0-5]\\d):([0-5]\\d)\\.(\\d{3})$",
      "example": "2018-05-26T22:00:00.000",
      "maxLength": 25
    },
    "LastUpdateDateTimeHotelLocalTime": {
      "description": "date and time of the last active image (last modification for history) expressed in hotel local time",
      "type": "string",
      "pattern": "^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2]\\d|3[0-1])T([0-1]\\d|2[0-4]):([0-5]\\d):([0-5]\\d)\\.(\\d{3})$",
      "example": "2018-05-26T22:00:00.000",
      "maxLength": 25
    },
    "CorporateAccountInfoReq": {
      "description": "list of corporate accounts (up to 2 from different sources)",
      "type": "array",
      "maxItems": 2,
      "items": {
        "type": "object",
        "title": "CorporateAccountInfoReqItem",
        "properties": {
          "accountName": {
            "$ref": "#/definitions/AccountName"
          },
          "cdNumber": {
            "$ref": "#/definitions/CdNumber"
          },
          "isCdAutoAppended": {
            "$ref": "#/definitions/IsCdAutoAppended"
          },
          "accountSource": {
            "$ref": "#/definitions/AccountSource"
          },
          "address": {
            "$ref": "#/definitions/Address"
          },
          "telephone": {
            "$ref": "#/definitions/Telephone"
          },
          "email": {
            "$ref": "#/definitions/Email"
          },
          "companyProfileId": {
            "$ref": "#/definitions/CompanyProfileId"
          },
          "nativeInformation": {
            "$ref": "#/definitions/CompanyNativeInformation"
          }
        }
      },
      "title": "CorporateAccountInfoReq"
    },
    "CorporateAccountInfoRes": {
      "description": "list of corporate accounts (up to 2 from different sources)",
      "type": "array",
      "maxItems": 2,
      "items": {
        "type": "object",
        "title": "CorporateAccountInfoResItem",
        "properties": {
          "accountName": {
            "$ref": "#/definitions/AccountName"
          },
          "cdNumber": {
            "$ref": "#/definitions/CdNumber"
          },
          "isCdAutoAppended": {
            "$ref": "#/definitions/IsCdAutoAppended"
          },
          "accountSource": {
            "$ref": "#/definitions/AccountSource"
          },
          "address": {
            "$ref": "#/definitions/Address"
          },
          "telephone": {
            "$ref": "#/definitions/Telephone"
          },
          "email": {
            "$ref": "#/definitions/Email"
          },
          "isMainCorporateAccount": {
            "$ref": "#/definitions/IsMainCorporateAccount"
          },
          "companyProfileId": {
            "$ref": "#/definitions/CompanyProfileId"
          },
          "nativeInformation": {
            "$ref": "#/definitions/CompanyNativeInformation"
          }
        }
      },
      "title": "CorporateAccountInfoRes"
    },
    "GroupHotelRes": {
      "type": "object",
      "title": "GroupHotelRes",
      "description": "the property info provides the unique identification of the property",
      "required": [
        "chainCode",
        "propertyCode"
      ],
      "properties": {
        "chainCode": {
          "$ref": "#/definitions/ChainCode"
        },
        "brandCode": {
          "$ref": "#/definitions/BrandCode"
        },
        "propertyCode": {
          "$ref": "#/definitions/PropertyCode"
        },
        "propertyCurrency": {
          "$ref": "#/definitions/Currency"
        },
        "propertyName": {
          "$ref": "#/definitions/PropertyName"
        },
        "cityCode": {
          "$ref": "#/definitions/CityCode"
        },
        "countryCode": {
          "$ref": "#/definitions/CountryCode"
        },
        "regionCode": {
          "$ref": "#/definitions/RegionCode"
        }
      }
    },
    "HotelSearchRes": {
      "required": [
        "chainCode",
        "propertyCode"
      ],
      "type": "object",
      "title": "HotelSearchRes",
      "properties": {
        "chainCode": {
          "$ref": "#/definitions/ChainCode"
        },
        "propertyCode": {
          "$ref": "#/definitions/PropertyCode"
        },
        "propertyCurrency": {
          "$ref": "#/definitions/Currency"
        }
      },
      "description": "the property info provides the unique identification of the property"
    },
    "BrandCode": {
      "description": "unique identifier of a Brand in a Chain",
      "type": "string",
      "pattern": "^[A-Z0-9]{2,3}$",
      "example": "BRD",
      "maxLength": 3
    },
    "ChainCode": {
      "description": "unique identifier of a Chain in the CRS",
      "type": "string",
      "maxLength": 3,
      "pattern": "^[A-Z0-9]{2,3}$",
      "example": "INT"
    },
    "Currency": {
      "description": "indicates the currency [ISO4217]",
      "type": "string",
      "pattern": "^[A-Z]{3,3}$",
      "minLength": 3,
      "maxLength": 3,
      "example": "USD"
    },
    "PropertyName": {
      "description": "the name of the property",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 64
    },
    "CityCode": {
      "description": "the code of the city of the property",
      "type": "string",
      "pattern": "^[A-Za-z0-9]{3,5}$",
      "minLength": 3,
      "maxLength": 5
    },
    "RegionCode": {
      "description": "the code of the region of the property",
      "type": "string",
      "pattern": "^[A-Za-z0-9]{1,3}$",
      "minLength": 1,
      "maxLength": 3,
      "example": "01"
    },
    "UserId": {
      "description": "user id of the authenticated user",
      "type": "string",
      "pattern": "^.*$",
      "maxLength": 16
    },
    "UserLastName": {
      "description": "last name of the authenticated user",
      "type": "string",
      "pattern": "^.*$",
      "maxLength": 57
    },
    "UserFirstName": {
      "description": "first name of the authenticated user",
      "type": "string",
      "pattern": "^.*$",
      "maxLength": 52
    },
    "RateAmounts": {
      "type": "object",
      "title": "RateAmounts",
      "properties": {
        "amtBfTax": {
          "$ref": "#/definitions/AmountBeforeTax"
        },
        "bsAmt": {
          "$ref": "#/definitions/BaseAmount"
        },
        "amtAfTax": {
          "$ref": "#/definitions/AmountAfterTax"
        }
      }
    },
    "TaxAmount": {
      "description": "tax amount",
      "type": "object",
      "required": [
        "amount",
        "isIncludedInRate"
      ],
      "properties": {
        "amount": {
          "description": "amount computed for this tax code",
          "type": "string",
          "pattern": "^.*$",
          "minLength": 1,
          "maxLength": 20
        },
        "taxCode": {
          "description": "tax code",
          "type": "string",
          "pattern": "^.*$",
          "minLength": 1,
          "maxLength": 20
        },
        "isIncludedInRate": {
          "description": "indicates if the tax has been included in the rate conveyed in associated \"baseAmount\". This field takes into account the inclusion set at house and rate plan level",
          "type": "boolean"
        },
        "otaCode": {
          "$ref": "#/definitions/OtaTaxCode"
        },
        "taxDefIds": {
          "description": "references the Tax Definition Item applied to compute this tax amount",
          "type": "array",
          "items": {
            "type": "integer"
          },
          "title": "TaxAmountTaxDefIds"
        }
      },
      "title": "TaxAmount"
    },
    "SubTotalTaxAmt": {
      "description": "tax amount, with pay at hotel Taxes",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaxAmount"
        },
        {
          "type": "object",
          "title": "SubTotalTaxAmtallOf1",
          "properties": {
            "payableAmount": {
              "description": "part of the sub total amount that can be payed before arriving at the hotel. Returned only when at least one tax or service charge that must be paid at the hotel is applicable. Returned only for subtotals of excluded taxes or service charges",
              "type": "string",
              "pattern": "^.*$",
              "minLength": 1,
              "maxLength": 20
            },
            "payHotelAmount": {
              "description": "part of the sub total amount that need to be paid at the hotel. Returned only when at least one tax or service charge that must be paid at the hotel is applicable. Returned only for subtotals of excluded taxes or service charges",
              "type": "string",
              "pattern": "^.*$",
              "minLength": 1,
              "maxLength": 20
            }
          }
        }
      ],
      "title": "SubTotalTaxAmt"
    },
    "PayableTotalTaxes": {
      "description": "total amount of taxes and services charges that can be payed before arriving at the hotel. Returned only when at least one tax or service charge that must be paid at the hotel is applicable",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 20
    },
    "PayHotelTotalTaxes": {
      "description": "total amount of taxes and service charges to pay at the hotel. Returned only when at least one tax or service charge that must be paid at the hotel is applicable",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 20
    },
    "DailyTypeAmount": {
      "description": "all details on a given daily rate",
      "type": "object",
      "required": [
        "amtType",
        "bsAmt"
      ],
      "properties": {
        "amtType": {
          "description": "defines if amounts are average, checkin or highest rate",
          "type": "string",
          "enum": [
            "Average",
            "Checkin",
            "Highest"
          ]
        },
        "amtBfTax": {
          "$ref": "#/definitions/AmountBeforeTax"
        },
        "bsAmt": {
          "$ref": "#/definitions/BaseAmount"
        },
        "amtAfTax": {
          "$ref": "#/definitions/AmountAfterTax"
        }
      },
      "title": "DailyTypeAmount"
    },
    "AmountBeforeTax": {
      "description": "amount excluding all taxes/service charges",
      "type": "string",
      "pattern": "^.*$"
    },
    "BaseAmount": {
      "description": "amount defined in the CRS which includes included taxes/service charges and excludes excluded taxes/service charges",
      "type": "string",
      "pattern": "^.*$"
    },
    "AmountAfterTax": {
      "description": "amount including all taxes/service charges",
      "type": "string",
      "pattern": "^.*$"
    },
    "OtaTaxCode": {
      "description": "tax code (Refer to [FTT] OTA code list)",
      "type": "string",
      "enum": [
        "FTT1",
        "FTT2",
        "FTT3",
        "FTT4",
        "FTT5",
        "FTT6",
        "FTT7",
        "FTT8",
        "FTT9",
        "FTT10",
        "FTT11",
        "FTT12",
        "FTT13",
        "FTT14",
        "FTT15",
        "FTT16",
        "FTT17",
        "FTT18",
        "FTT19",
        "FTT20",
        "FTT21",
        "FTT22",
        "FTT23",
        "FTT24",
        "FTT25",
        "FTT26",
        "FTT27",
        "FTT28",
        "FTT29",
        "FTT30",
        "FTT31",
        "FTT32",
        "FTT33",
        "FTT34",
        "FTT35",
        "FTT36",
        "FTT37",
        "FTT38",
        "FTT39",
        "FTT40",
        "FTT41",
        "FTT42",
        "FTT43",
        "FTT44",
        "FTT45",
        "FTT46",
        "FTT47",
        "FTT48",
        "FTT49",
        "FTT50",
        "FTT51",
        "FTT52",
        "FTT53",
        "FTT54",
        "FTT55",
        "FTT56"
      ]
    },
    "Date": {
      "type": "string",
      "pattern": "^.*$",
      "format": "date",
      "maxLength": 25
    },
    "PriceRange": {
      "properties": {
        "min": {
          "type": "string",
          "pattern": "^.*$",
          "format": "number",
          "example": "10.00"
        },
        "max": {
          "type": "string",
          "pattern": "^.*$",
          "format": "number",
          "example": "50.00"
        }
      },
      "minProperties": 1,
      "type": "object",
      "title": "PriceRange"
    },
    "IntegerRange": {
      "properties": {
        "min": {
          "type": "integer",
          "example": 2
        },
        "max": {
          "type": "integer",
          "example": 8
        }
      },
      "minProperties": 1,
      "type": "object",
      "title": "IntegerRange"
    },
    "IsMainProduct": {
      "description": "defines whether or not the productUse contains the main product of the offer",
      "type": "boolean",
      "default": false
    },
    "Status": {
      "description": "booked (BK) if all segments are in BK state, cancelled (CL) if all segments have been cancelled, (modified) MY otherwise",
      "type": "string",
      "enum": [
        "BK",
        "MY",
        "CL"
      ]
    },
    "ImageStatus": {
      "type": "string",
      "description": "status of the image of the group. Pending - after a 2-steps create before the commit. Committed - after the commit in a 2-steps process or after a successful creation for a 1-step process",
      "enum": [
        "Pending",
        "Committed"
      ]
    },
    "CancellationDateTime": {
      "description": "date and time of cancellation (UTC)",
      "type": "string",
      "pattern": "^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2]\\d|3[0-1])T([0-1]\\d|2[0-4]):([0-5]\\d):([0-5]\\d)\\.(\\d{3})$",
      "example": "2018-05-26T22:00:00.000",
      "maxLength": 25
    },
    "CancellationDateTimeHotelLocalTime": {
      "description": "date and time of cancellation, expressed in hotel local time",
      "type": "string",
      "pattern": "^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2]\\d|3[0-1])T([0-1]\\d|2[0-4]):([0-5]\\d):([0-5]\\d)\\.(\\d{3})$",
      "example": "2018-05-26T22:00:00.000",
      "maxLength": 25
    },
    "GroupBodyIdsRes": {
      "type": "object",
      "title": "GroupBodyIdsRes",
      "description": "container for structured details of ids for groups",
      "required": [
        "groupCfNumber",
        "imageId",
        "groupCode"
      ],
      "properties": {
        "groupCfNumber": {
          "$ref": "#/definitions/CfNumber"
        },
        "groupCxNumber": {
          "$ref": "#/definitions/CxNumber"
        },
        "imageId": {
          "$ref": "#/definitions/ImageId"
        },
        "committedSequenceNumber": {
          "$ref": "#/definitions/CommittedSequenceNumber"
        },
        "groupCode": {
          "$ref": "#/definitions/GroupCode"
        },
        "externalIds": {
          "description": "collection of alternative IDs for the groups, used by external systems only, ie. sales and catering, PMS linking tools etc. Once set, an ID cannot be modified or removed, and that there can be only one ID per type",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalIdItem"
          },
          "maxItems": 20,
          "title": "GroupBodyIdsResExternalIds"
        },
        "groupContractInternalId": {
          "$ref": "#/definitions/GroupContractInternalId"
        }
      }
    },
    "GroupContractInternalId": {
      "type": "string",
      "pattern": "^.*$",
      "maxLength": 50,
      "description": "unique group identifier of rates component",
      "example": "12345678"
    },
    "DictionaryProducts": {
      "description": "product details",
      "type": "object",
      "required": [
        "inventoryTypeCode",
        "inventoryTypeName",
        "productCode"
      ],
      "properties": {
        "inventoryTypeCode": {
          "$ref": "#/definitions/InventoryTypeCode"
        },
        "otaCode": {
          "$ref": "#/definitions/OtaCode"
        },
        "inventoryTypeName": {
          "title": "inventoryTypeName",
          "$ref": "#/definitions/Description-0"
        },
        "productClass": {
          "description": "product parent class both for sleeping room and non-room products",
          "type": "string",
          "pattern": "^.*$",
          "minLength": 1,
          "maxLength": 64
        },
        "yieldClass": {
          "description": "rms yield class for sleeping room",
          "type": "string",
          "pattern": "^.*$",
          "minLength": 1,
          "maxLength": 64
        },
        "maximumNumberParticipant": {
          "description": "maximum allowed number of participants for this inventory Item (extra participants included)",
          "type": "integer"
        },
        "extraPersonStart": {
          "$ref": "#/definitions/ExtraPersonStart"
        },
        "description": {
          "title": "description",
          "$ref": "#/definitions/Description-1"
        },
        "productCode": {
          "$ref": "#/definitions/ProductCode"
        },
        "pacCode": {
          "$ref": "#/definitions/PacCode"
        },
        "productName": {
          "description": "name of the product",
          "type": "string",
          "pattern": "^.*$",
          "minLength": 1,
          "maxLength": 64
        },
        "attributeCodes": {
          "description": "list of attribute codes composing the requested product",
          "type": "array",
          "maxItems": 50,
          "items": {
            "$ref": "#/definitions/AttributeCode"
          },
          "title": "DictionaryProductsAttributeCodes"
        },
        "roomCategory": {
          "description": "the room category of the inventory type",
          "type": "string",
          "minLength": 1,
          "maxLength": 4,
          "pattern": "^.*$"
        }
      },
      "title": "DictionaryProducts"
    },
    "Attribute": {
      "type": "object",
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/AttributeCode"
        },
        "name": {
          "title": "name",
          "$ref": "#/definitions/Description-2"
        },
        "description": {
          "title": "description",
          "$ref": "#/definitions/Description-3"
        }
      },
      "title": "Attribute"
    },
    "ExtraPersonStart": {
      "type": "integer",
      "description": "indicates when an extra person charge is applicable to the guest. For instance, if the value is set to 2 and a guest makes a reservation for 2 people then an extra charge will be applied for the second person",
      "minimum": 2
    },
    "GroupGuestsRes": {
      "type": "array",
      "description": "list of user profiles",
      "items": {
        "title": "GroupGuestsResItem",
        "type": "object",
        "required": [
          "id",
          "personName"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "identifies a guest within the group. This id (unique for each guest) can be used to cross-referenced a guest from the bookerId"
          },
          "age": {
            "$ref": "#/definitions/Age"
          },
          "identificationInfo": {
            "$ref": "#/definitions/IdentificationInfo"
          },
          "personName": {
            "$ref": "#/definitions/PersonName"
          },
          "nativeInformation": {
            "$ref": "#/definitions/GuestNativeInformation"
          },
          "guestProfileId": {
            "$ref": "#/definitions/GuestProfileId"
          },
          "addresses": {
            "type": "array",
            "description": "list of addresses",
            "maxItems": 99,
            "items": {
              "$ref": "#/definitions/AddressWithoutIndex"
            },
            "title": "GroupGuestsResItemAddresses"
          },
          "telephones": {
            "type": "array",
            "description": "list of telephones and fax",
            "maxItems": 99,
            "items": {
              "$ref": "#/definitions/Telephone"
            },
            "title": "GroupGuestsResItemTelephones"
          },
          "emails": {
            "maxItems": 2,
            "type": "array",
            "description": "list of emails",
            "items": {
              "$ref": "#/definitions/Email"
            },
            "title": "GroupGuestsResItemEmails"
          },
          "loyaltyProgram": {
            "$ref": "#/definitions/LoyaltyProgram"
          },
          "frequentTraveler": {
            "$ref": "#/definitions/FrequentTraveler"
          },
          "customData": {
            "$ref": "#/definitions/CustomData"
          },
          "nationalities": {
            "type": "array",
            "description": "indicates the guest nationality using the ISO 3166-1 standard code for countries, territories or areas",
            "items": {
              "$ref": "#/definitions/Nationality"
            },
            "title": "GroupGuestsResItemNationalities"
          },
          "contactPerson": {
            "$ref": "#/definitions/ContactPerson"
          },
          "additionalMembershipPrograms": {
            "description": "list of additional membership programs of the guest",
            "type": "array",
            "minItems": 1,
            "maxItems": 30,
            "items": {
              "$ref": "#/definitions/additionalMembershipProgram"
            },
            "title": "GroupGuestsResItemAdditionalMembershipPrograms"
          }
        }
      },
      "title": "GroupGuestsRes"
    },
    "GuestSearchRes": {
      "required": [
        "id",
        "personName"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "identifies a guest within the group. This id (unique for each guest) can be used to cross-referenced a guest from the segmentHolderId, bookerId or guestOccIds"
        },
        "age": {
          "$ref": "#/definitions/Age"
        },
        "personName": {
          "$ref": "#/definitions/PersonName"
        },
        "nativeInformation": {
          "$ref": "#/definitions/GuestNativeInformationSearch"
        },
        "guestProfileId": {
          "$ref": "#/definitions/GuestProfileId"
        },
        "loyaltyProgram": {
          "$ref": "#/definitions/LoyaltyProgram"
        }
      },
      "title": "GuestSearchRes"
    },
    "TotalGroup": {
      "required": [
        "currency",
        "finalPriceAmt"
      ],
      "type": "object",
      "title": "TotalGroup",
      "properties": {
        "currency": {
          "$ref": "#/definitions/Currency"
        },
        "amtBfTax": {
          "$ref": "#/definitions/AmountBeforeTax"
        },
        "bsAmt": {
          "$ref": "#/definitions/BaseAmount"
        },
        "amtAfTax": {
          "$ref": "#/definitions/AmountAfterTax"
        },
        "finalPriceAmt": {
          "$ref": "#/definitions/FinalPriceAmt"
        },
        "totalTaxes": {
          "type": "string",
          "description": "total amount of all applicable taxes",
          "pattern": "^.*$"
        }
      }
    },
    "FormOfPaymentRes": {
      "description": "information concerning form of payment (guarantee, deposit, paid by point,...)",
      "type": "object",
      "properties": {
        "paymentInfo": {
          "$ref": "#/definitions/PaymentInfoRes"
        },
        "depositPayments": {
          "description": "list of the payments done for deposits (payment by points excluded)",
          "type": "array",
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/PaymentTransactionRes"
          },
          "title": "FormOfPaymentResDepositPayments"
        },
        "paymentByPoints": {
          "description": "list of payments made by points",
          "type": "array",
          "maxItems": 50,
          "items": {
            "$ref": "#/definitions/PaymentByPoints"
          },
          "title": "FormOfPaymentResPaymentByPoints"
        },
        "transactionIdsForRefundPoints": {
          "description": "list of transaction ids when refund points is needed after a modify",
          "type": "array",
          "maxItems": 50,
          "items": {
            "$ref": "#/definitions/RefundPoints"
          },
          "title": "FormOfPaymentResTransactionIdsForRefundPoints"
        }
      },
      "title": "FormOfPaymentRes"
    },
    "TaxDefinitionShopping": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaxDefinition"
        },
        {
          "type": "object",
          "properties": {
            "dow": {
              "description": "Applicable day of week list",
              "$ref": "#/definitions/Dow"
            }
          },
          "title": "TaxDefinitionShoppingallOf1"
        }
      ],
      "title": "TaxDefinitionShopping"
    },
    "TaxDefinition": {
      "description": "the applicable rules of taxes for a given tax change of the stay",
      "type": "object",
      "required": [
        "id",
        "chargeFrequency",
        "chargeUnit",
        "value",
        "valueType",
        "isInclusive",
        "start",
        "end"
      ],
      "properties": {
        "id": {
          "description": "an unique ID for this tax definition item. Referenced in rates tax breakdown",
          "type": "integer"
        },
        "taxCode": {
          "description": "tax code",
          "type": "string",
          "pattern": "^.*$",
          "minLength": 1,
          "maxLength": 20
        },
        "otaCode": {
          "$ref": "#/definitions/OtaTaxCode"
        },
        "productCodes": {
          "type": "array",
          "description": "product code of tax",
          "minItems": 1,
          "maxItems": 99,
          "items": {
            "$ref": "#/definitions/ProductCode"
          },
          "title": "TaxDefinitionProductCodes"
        },
        "description": {
          "$ref": "#/definitions/Description"
        },
        "longDescription": {
          "$ref": "#/definitions/Description"
        },
        "name": {
          "description": "name of the tax",
          "type": "string",
          "pattern": "^.*$",
          "minLength": 1,
          "maxLength": 99
        },
        "otaClassification": {
          "type": "string",
          "description": "ota classification to identify the taxes and fees",
          "pattern": "^.*$",
          "minLength": 1,
          "maxLength": 64,
          "example": "Tax, Service Charge"
        },
        "taxOn": {
          "description": "tax application mode (on Tax(tax on tax), on Net(tax on amount before taxes), on Rate(tax on amount containing included taxes and excluding excluded taxes, default value))",
          "type": "string",
          "enum": [
            "Rate",
            "Net",
            "Tax"
          ]
        },
        "chargeFrequency": {
          "$ref": "#/definitions/ChargeFrequency"
        },
        "chargeUnit": {
          "$ref": "#/definitions/ChargeUnit"
        },
        "value": {
          "$ref": "#/definitions/Value"
        },
        "currency": {
          "$ref": "#/definitions/Currency"
        },
        "valueType": {
          "$ref": "#/definitions/ValueType"
        },
        "isInclusive": {
          "$ref": "#/definitions/IsInclusive"
        },
        "start": {
          "description": "first date on which the tax definition item applies (for the requested stay)",
          "type": "string",
          "pattern": "^.*$",
          "format": "date",
          "maxLength": 25
        },
        "end": {
          "description": "last date on which the tax applies (for the requested stay)",
          "type": "string",
          "pattern": "^.*$",
          "format": "date",
          "maxLength": 25
        },
        "dow": {
          "$ref": "#/definitions/Dow"
        },
        "relatedTaxIds": {
          "type": "array",
          "maxItems": 999,
          "description": "list of associated parent tax ids on which the tax on tax is applied",
          "items": {
            "$ref": "#/definitions/RelatedTaxId"
          },
          "title": "TaxDefinitionRelatedTaxIds"
        }
      },
      "title": "TaxDefinition"
    },
    "GroupTaxDefinition": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseTaxDefinition"
        },
        {
          "type": "object",
          "properties": {
            "periods": {
              "type": "array",
              "description": "values per periods",
              "items": {
                "$ref": "#/definitions/TaxPeriod"
              },
              "title": "GroupTaxDefinitionallOf1Periods"
            }
          },
          "title": "GroupTaxDefinitionallOf1"
        },
        {
          "type": "object",
          "properties": {
            "scope": {
              "$ref": "#/definitions/TaxScope"
            }
          },
          "title": "GroupTaxDefinitionallOf2"
        }
      ],
      "title": "GroupTaxDefinition"
    },
    "BaseTaxDefinition": {
      "type": "object",
      "required": [
        "taxTypeCode",
        "items"
      ],
      "properties": {
        "taxTypeCode": {
          "type": "string",
          "pattern": "^.*$",
          "description": "an OTA fee tax type code",
          "example": "12"
        },
        "name": {
          "type": "string",
          "pattern": "^.*$",
          "description": "name of the tax of fee",
          "maxLength": 64,
          "example": "TAXNAME"
        },
        "otaClassification": {
          "type": "string",
          "description": "ota classification to identify the taxes and fees",
          "pattern": "^.*$",
          "minLength": 1,
          "maxLength": 64,
          "example": "Tax, Service Charge"
        },
        "description": {
          "type": "string",
          "pattern": "^.*$",
          "description": "short description of the tax or fee",
          "maxLength": 80,
          "example": "Resort fee"
        },
        "longDescription": {
          "type": "string",
          "pattern": "^.*$",
          "description": "long description of the tax or fee",
          "example": "Resort fee"
        },
        "modelVersion": {
          "type": "integer",
          "description": "version of the Tax Model"
        },
        "taxCode": {
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 5,
          "description": "user defined code",
          "example": "TAX01"
        },
        "activationStatus": {
          "type": "string",
          "description": "whether the tax is effective or not",
          "enum": [
            "Active",
            "Inactive"
          ]
        },
        "inclusionStatus": {
          "type": "string",
          "description": "whether tax is included in or excluded from rate",
          "enum": [
            "IncludedInRate",
            "ExcludedFromRate"
          ]
        },
        "paymentAtHotelStatus": {
          "type": "string",
          "enum": [
            "PaidAtHotel",
            "OnlinePayment"
          ]
        },
        "currency": {
          "description": "indicates the currency code [ISO4217]",
          "type": "string",
          "pattern": "[A-Z]{3,3}",
          "minLength": 3,
          "maxLength": 3,
          "example": "USD"
        },
        "computationType": {
          "type": "string",
          "description": "type of computation, either Flat or Percentage",
          "enum": [
            "Flat",
            "Percentage"
          ]
        },
        "computationMode": {
          "type": "string",
          "description": "which base amount to consider",
          "enum": [
            "AmountWithTaxes",
            "AmountWithoutTaxes",
            "TaxesOnly",
            "NetOnly"
          ]
        },
        "chargePerPerson": {
          "type": "boolean",
          "description": "whether tax applies for each person or as a whole"
        },
        "chargeFrequency": {
          "type": "string",
          "description": "how the tax is computed, once or repeated each day",
          "enum": [
            "PerDay",
            "PerStay"
          ]
        },
        "residency": {
          "type": "string",
          "description": "which individuals the tax apply to",
          "enum": [
            "All",
            "ResidentOnly",
            "NonResidentOnly"
          ]
        },
        "source": {
          "type": "string",
          "pattern": "^.*$",
          "description": "indicates the source of the creation of the tax or fee",
          "example": "property level"
        },
        "isNegotiable": {
          "type": "boolean",
          "description": "indicates if the tax is negotiable or not"
        },
        "relatedTaxCodes": {
          "type": "array",
          "description": "provides the list of codes of the taxes to which this tax or fee applies",
          "items": {
            "type": "string",
            "pattern": "^.*$",
            "maxLength": 5,
            "example": "TAX02"
          },
          "title": "BaseTaxDefinitionRelatedTaxCodes"
        },
        "items": {
          "type": "array",
          "description": "which sellable items are taxed",
          "items": {
            "$ref": "#/definitions/TaxItem"
          },
          "title": "BaseTaxDefinitionItems"
        },
        "isReservationOverridable": {
          "type": "boolean",
          "description": "indicates if the tax can be overridden in the reservation record",
          "default": false
        },
        "overrideScope": {
          "type": "array",
          "items": {
            "type": "object",
            "title": "BaseTaxDefinitionOverrideScopeItem",
            "properties": {
              "code": {
                "type": "string",
                "pattern": "^.*$",
                "description": "code of the object for which the tax can be overridden",
                "maxLength": 50,
                "example": "RP123"
              },
              "codeType": {
                "type": "string",
                "description": "code type",
                "enum": [
                  "RatePlan",
                  "Group"
                ]
              }
            },
            "required": [
              "code",
              "codeType"
            ]
          },
          "title": "BaseTaxDefinitionOverrideScope"
        },
        "interfaceTaxName": {
          "type": "string",
          "pattern": "^.*$",
          "description": "Tax name through which it could be identified by an external system",
          "example": "Interface tax name"
        }
      },
      "title": "BaseTaxDefinition"
    },
    "TaxDefinitionWithId": {
      "allOf": [
        {
          "$ref": "#/definitions/GroupTaxDefinition"
        },
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "pattern": "^[0-9A-Z]{1,8}$",
              "description": "unique system generated ID of a tax/fee"
            }
          }
        }
      ]
    },
    "TaxItem": {
      "type": "object",
      "required": [
        "productCategory",
        "codeType"
      ],
      "properties": {
        "productCategory": {
          "description": "product category like SR=SleepingRoom, MR=MeetingRoom or NonRoom=NR",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 8,
          "example": "NR"
        },
        "codeType": {
          "description": "generic code type, like Room, Service, Product, ProductClass",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 64,
          "example": "Product"
        },
        "codes": {
          "type": "array",
          "items": {
            "description": "code of the item or product",
            "type": "string",
            "pattern": "^.*$",
            "maxLength": 64,
            "example": "C1"
          },
          "title": "TaxItemCodes"
        }
      },
      "title": "TaxItem"
    },
    "TaxPeriod": {
      "type": "object",
      "description": "restriction on when the value applies",
      "required": [
        "dow"
      ],
      "properties": {
        "startDate": {
          "$ref": "#/definitions/Date"
        },
        "endDate": {
          "$ref": "#/definitions/Date"
        },
        "dow": {
          "description": "list of applicable days of weeks. 'MTWTFSS' for all days of weeks. A dash is present for any missing day. For instance, 'MT-----' for Monday and Tuesday only, '-T-T---' for Tuesday and Thursday only",
          "type": "string",
          "pattern": "^[M-][T-][W-][T-][F-][S-][S-]$",
          "maxLength": 7
        },
        "isProgressiveLOS": {
          "type": "boolean",
          "description": "indicates if the tax computation per length of stay is progressive"
        },
        "values": {
          "type": "array",
          "maxItems": 50,
          "description": "values per criteria",
          "items": {
            "$ref": "#/definitions/TaxValue"
          },
          "title": "TaxPeriodValues"
        }
      },
      "title": "TaxPeriod"
    },
    "TaxValue": {
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^-?[0-9]+(\\.[0-9]+)?$",
          "description": "percentage or flat amount of the tax",
          "example": "9.12",
          "maxLength": 10
        },
        "guestTypes": {
          "type": "array",
          "maxItems": 50,
          "items": {
            "type": "string",
            "pattern": "^.*$",
            "maxLength": 10
          },
          "title": "TaxValueGuestTypes"
        },
        "inventoryTypes": {
          "type": "array",
          "maxItems": 50,
          "items": {
            "type": "string",
            "pattern": "^.*$",
            "maxLength": 10
          },
          "title": "TaxValueInventoryTypes"
        },
        "price": {
          "$ref": "#/definitions/PriceRange"
        },
        "lengthOfStay": {
          "$ref": "#/definitions/IntegerRange"
        },
        "age": {
          "$ref": "#/definitions/IntegerRange"
        }
      },
      "type": "object",
      "title": "TaxValue"
    },
    "TaxScope": {
      "description": "where the tax applies",
      "type": "object",
      "required": [
        "chainCode",
        "propertyCodes"
      ],
      "properties": {
        "chainCode": {
          "$ref": "#/definitions/ChainCode"
        },
        "propertyCodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PropertyCode"
          },
          "title": "TaxScopePropertyCodes"
        }
      },
      "title": "TaxScope"
    },
    "Dow": {
      "description": "list of applicable days of weeks. 'MTWTFSS' for all days of weeks. A dash is present for any missing day. For instance, 'MT-----' for Monday and Tuesday only, '-T-T---' for Tuesday and Thursday only",
      "type": "string",
      "pattern": "^.*$",
      "maxLength": 7
    },
    "ProductCode": {
      "type": "string",
      "pattern": "^.*$",
      "description": "code defining the product (Sleeping room, meeting room or any service)",
      "example": "SR",
      "maxLength": 8
    },
    "ChargeUnit": {
      "description": "unit for which the charge applies. Note that the PerUse charge unit is deprecated",
      "type": "string",
      "enum": [
        "PerPerson",
        "PerProduct",
        "PerUse"
      ]
    },
    "ChargeFrequency": {
      "description": "time frame used to apply the charge during the course of reservation",
      "type": "string",
      "enum": [
        "PerNight",
        "PerStay"
      ]
    },
    "Value": {
      "description": "value that can be an amount or a percentage",
      "type": "string",
      "pattern": "^.*$",
      "maxLength": 10
    },
    "ValueType": {
      "description": "type of \"value\"",
      "type": "string",
      "enum": [
        "Flat",
        "Percent"
      ]
    },
    "IsInclusive": {
      "description": "indicates if the tax is included or excluded in rate",
      "type": "boolean"
    },
    "PaymentInfoRes": {
      "description": "information concerning payment amount, payment source, payment informer, form of payment",
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/PaymentInfoAmount"
        },
        "paymentSource": {
          "$ref": "#/definitions/PaymentSource"
        },
        "paymentStatus": {
          "$ref": "#/definitions/PaymentStatus"
        },
        "paymentType": {
          "$ref": "#/definitions/PaymentType"
        },
        "paymentCard": {
          "$ref": "#/definitions/PaymentCardRes"
        },
        "guaranteePaymentId": {
          "$ref": "#/definitions/GuaranteePaymentId"
        },
        "paymentIntent": {
          "$ref": "#/definitions/PaymentIntent"
        },
        "informerVendorCode": {
          "$ref": "#/definitions/InformerVendorCode"
        },
        "fraudRecordId": {
          "description": "fraud record Id returned by the payment provider",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 99
        },
        "paymentRecordId": {
          "description": "payment record Id returned by the payment provider",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 99
        },
        "transactionDate": {
          "description": "date and time of the payment transaction",
          "type": "string",
          "pattern": "^.*$",
          "example": "2018-05-26T22:00:00",
          "maxLength": 25
        },
        "pares": {
          "description": "technical identifier of the 3D Secure check, binary value",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 99
        },
        "invoiceId": {
          "$ref": "#/definitions/InvoiceId"
        },
        "xid": {
          "description": "technical identifier of the 3D Secure check, binary value",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 99
        },
        "veresCode": {
          "description": "technical identifier of the 3D Secure check",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 1
        },
        "creditCardCompany": {
          "description": "company used in the 3DSecure process",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 4
        },
        "payer": {
          "$ref": "#/definitions/PayerInformation"
        },
        "multiFactorInfo": {
          "$ref": "#/definitions/MultiFactorInfo"
        }
      },
      "title": "PaymentInfoRes"
    },
    "PaymentTransactionRes": {
      "description": "information concerning payment amount, payment source, payment informer, form of payment",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "description": "identifies a payment within the segment. This id is unique for each payment object at segment level",
          "type": "integer",
          "maxLength": 10
        },
        "amount": {
          "$ref": "#/definitions/PaymentInfoAmount"
        },
        "paymentSource": {
          "$ref": "#/definitions/PaymentSource"
        },
        "paymentStatus": {
          "$ref": "#/definitions/PaymentStatus"
        },
        "paymentType": {
          "$ref": "#/definitions/PaymentType"
        },
        "paymentCard": {
          "$ref": "#/definitions/PaymentCardRes"
        },
        "guaranteePaymentId": {
          "$ref": "#/definitions/GuaranteePaymentId"
        },
        "paymentIntent": {
          "$ref": "#/definitions/PaymentIntent"
        },
        "informerVendorCode": {
          "description": "vendorCode of the channel doing the payment transaction",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 5
        },
        "channelSubUser": {
          "description": "subUser of the channel doing the payment transaction",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 8
        },
        "fraudRecordId": {
          "description": "fraud record Id returned by the payment provider",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 99
        },
        "paymentRecordId": {
          "description": "payment record Id returned by the payment provider",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 99
        },
        "transactionDate": {
          "description": "date and time of the payment transaction",
          "type": "string",
          "pattern": "^.*$",
          "example": "2018-05-26T22:00:00",
          "maxLength": 25
        },
        "pares": {
          "description": "technical identifier of the 3D Secure check, binary value",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 99
        },
        "invoiceId": {
          "$ref": "#/definitions/InvoiceId"
        },
        "xid": {
          "description": "technical identifier of the 3D Secure check, binary value",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 99
        },
        "veresCode": {
          "description": "technical identifier of the 3D Secure check",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 1
        },
        "creditCardCompany": {
          "description": "company used in the 3DSecure process",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 4
        },
        "payer": {
          "$ref": "#/definitions/PayerInformation"
        },
        "multiFactorInfo": {
          "$ref": "#/definitions/MultiFactorInfo"
        }
      },
      "title": "PaymentTransactionRes"
    },
    "RefundPoints": {
      "description": "transaction identifier of the payment to be refunded",
      "type": "string",
      "pattern": "^.*$"
    },
    "PaymentCardRes": {
      "description": "used in case of guarantee per credit card (guaranteeTypeCode 5). Details of a credit card if the chosen means of payment is a credit card",
      "type": "object",
      "required": [
        "cardCode",
        "expireDate",
        "cardNumber"
      ],
      "properties": {
        "cardCode": {
          "$ref": "#/definitions/CardCode"
        },
        "expireDate": {
          "$ref": "#/definitions/ExpireDate"
        },
        "cardNumber": {
          "$ref": "#/definitions/CardNumber"
        },
        "cardHolderName": {
          "$ref": "#/definitions/CardHolderName"
        },
        "fraudRiskScore": {
          "$ref": "#/definitions/FraudRiskScore"
        },
        "fraudRiskFlag": {
          "$ref": "#/definitions/FraudRiskFlag"
        },
        "issuanceCountry": {
          "$ref": "#/definitions/IssuanceCountry"
        },
        "isCNP": {
          "$ref": "#/definitions/IsCNP"
        },
        "billingAddress": {
          "title": "billingAddress",
          "$ref": "#/definitions/AddressWithoutIndex-0"
        }
      },
      "title": "PaymentCardRes"
    },
    "InformerVendorCode": {
      "description": "vendor code which set the paymentStatus to 'Payment received'",
      "type": "string",
      "pattern": "^.*$",
      "maxLength": 5
    },
    "ProductUseSearchRes": {
      "required": [
        "period",
        "inventoryTypeCode",
        "productCode"
      ],
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/ProductUseId"
        },
        "period": {
          "$ref": "#/definitions/StartEnd-0"
        },
        "inventoryTypeCode": {
          "$ref": "#/definitions/InventoryTypeCode"
        },
        "isMainProduct": {
          "$ref": "#/definitions/IsMainProduct"
        },
        "productCode": {
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 50,
          "description": "code defining the product type (Sleeping room, meeting room or any service)"
        }
      },
      "title": "ProductUseSearchRes"
    },
    "Fees": {
      "description": "fee",
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "description": "type or origin of the fee",
          "type": "string",
          "enum": [
            "Cancellation",
            "NoShow"
          ]
        },
        "amount": {
          "description": "fee amount",
          "type": "string",
          "pattern": "^.*$"
        },
        "numberOfNights": {
          "description": "number of nights charged in case of cancellation",
          "type": "integer"
        }
      },
      "title": "Fees"
    },
    "GuestCountRes": {
      "title": "GuestCountRes",
      "type": "object",
      "minProperties": 1,
      "properties": {
        "otaCode": {
          "description": "the OTA Age Qualifier Code (e.g. for an Adult, \"AQC10\")",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 8
        },
        "count": {
          "description": "number of guest",
          "type": "integer"
        },
        "age": {
          "$ref": "#/definitions/Age"
        },
        "guestType": {
          "description": "guest type code",
          "type": "string",
          "maxLength": 50,
          "pattern": "^.*$"
        }
      }
    },
    "PricingFrequency": {
      "description": "the frequency under which the product is priced",
      "type": "string",
      "enum": [
        "PerNight",
        "PerStay",
        "PerUse"
      ]
    },
    "PricingMethod": {
      "description": "the method under which the product is priced",
      "type": "string",
      "enum": [
        "PerProduct",
        "PerPerson",
        "PerProductPerOcc",
        "PerProductPerGuestType"
      ]
    },
    "TaxInclusionMode": {
      "description": "indicates the tax inclusion's mode defined at rate plan level",
      "type": "string",
      "enum": [
        "Included",
        "Excluded",
        "FollowHouse"
      ]
    },
    "RateDefinition": {
      "description": "the applicable rate changes of the stay. Gives the definition of rate set in the GRS",
      "type": "object",
      "required": [
        "id",
        "start",
        "end",
        "amount"
      ],
      "properties": {
        "id": {
          "description": "id of the RateDefinition element",
          "type": "integer"
        },
        "start": {
          "description": "first date on which the rate amount applies (for the requested stay)",
          "type": "string",
          "pattern": "^.*$",
          "format": "date"
        },
        "end": {
          "description": "last date on which the rate amount applies (for the requested stay)",
          "type": "string",
          "pattern": "^.*$",
          "format": "date"
        },
        "amount": {
          "description": "the base daily amount configured in the GRS which can include extra person charges depending on channel setting. In case of Package, it includes the price of all the products",
          "type": "string",
          "pattern": "^.*$"
        }
      },
      "title": "RateDefinition"
    },
    "DailyRateDetails": {
      "description": "all details on a given daily rate",
      "type": "object",
      "properties": {
        "amtBfTax": {
          "$ref": "#/definitions/AmountBeforeTax"
        },
        "bsAmt": {
          "$ref": "#/definitions/BaseAmount"
        },
        "amtAfTax": {
          "$ref": "#/definitions/AmountAfterTax"
        },
        "taxList": {
          "description": "the list of applicable taxes for this rate",
          "type": "array",
          "minItems": 1,
          "maxItems": 99,
          "items": {
            "$ref": "#/definitions/TaxAmount"
          },
          "title": "DailyRateDetailsTaxList"
        },
        "totalTaxes": {
          "description": "total of all the taxes and fees in a day",
          "type": "string",
          "pattern": "^.*$",
          "minLength": 1,
          "maxLength": 20
        },
        "rateDefId": {
          "$ref": "#/definitions/Id"
        },
        "subTotalServiceCharges": {
          "description": "total tax amounts classified as service charge",
          "type": "array",
          "minItems": 1,
          "maxItems": 2,
          "items": {
            "$ref": "#/definitions/SubTotalTaxAmt"
          },
          "title": "DailyRateDetailsSubTotalServiceCharges"
        },
        "subTotalTaxes": {
          "description": "total tax amounts classified as tax",
          "type": "array",
          "minItems": 1,
          "maxItems": 2,
          "items": {
            "$ref": "#/definitions/SubTotalTaxAmt"
          },
          "title": "DailyRateDetailsSubTotalTaxes"
        },
        "payableTotalTaxes": {
          "$ref": "#/definitions/PayableTotalTaxes"
        },
        "payHotelTotalTaxes": {
          "$ref": "#/definitions/PayHotelTotalTaxes"
        },
        "payableAmtAfTx": {
          "description": "amount after all taxes except those payable at the hotel",
          "type": "string",
          "pattern": "^.*$"
        }
      },
      "title": "DailyRateDetails"
    },
    "Id": {
      "description": "a unique ID for the corresponding definition item. Used as reference",
      "type": "integer",
      "format": "int32"
    },
    "FinalPriceAmt": {
      "description": "total including cancellation or no-show fees, with taxes except those payable at the hotel",
      "type": "string",
      "pattern": "^.*$"
    },
    "GroupInventory": {
      "properties": {
        "countersPerDay": {
          "type": "array",
          "title": "GroupInventoryCountersPerDay",
          "items": {
            "type": "object",
            "title": "GroupInventoryCountersPerDayItem",
            "properties": {
              "date": {
                "type": "string",
                "pattern": "^.*$",
                "format": "date"
              },
              "allocated": {
                "description": "daily total contracted (CT) rooms",
                "type": "integer"
              },
              "deducted": {
                "description": "daily total authorized (AU) rooms",
                "type": "integer"
              },
              "sold": {
                "description": "daily total sold rooms",
                "type": "integer"
              },
              "highestRoomRate": {
                "description": "daily highest room rate among the contracted rooms types. Number of decimals point follows the property currency definition",
                "type": "string",
                "pattern": "^.*$"
              },
              "lowestRoomRate": {
                "description": "daily lowest room rate among the contracted rooms types. Number of decimals point follows the property currency definition",
                "type": "string",
                "pattern": "^.*$"
              },
              "originalAllocated": {
                "description": "daily total originally contracted (CT) rooms",
                "type": "integer"
              },
              "cancelled": {
                "description": "daily total cancelled rooms",
                "type": "integer"
              },
              "available": {
                "description": "daily total available rooms",
                "type": "integer"
              }
            }
          }
        },
        "release": {
          "$ref": "#/definitions/InventoryReleaseData"
        }
      },
      "type": "object",
      "title": "GroupInventory"
    },
    "InventoryReleaseData": {
      "type": "object",
      "title": "InventoryReleaseData",
      "properties": {
        "date": {
          "type": "string",
          "pattern": "^.*$",
          "format": "date"
        },
        "days": {
          "type": "integer"
        },
        "isRolling": {
          "type": "boolean"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupReleaseRule"
          },
          "title": "InventoryReleaseDataRules"
        }
      }
    },
    "GroupReleaseRules": {
      "title": "GroupReleaseRules",
      "description": "full representation of group release",
      "type": "object",
      "required": [
        "isRolling"
      ],
      "properties": {
        "date": {
          "type": "string",
          "pattern": "^.*$",
          "format": "date"
        },
        "days": {
          "type": "integer"
        },
        "isRolling": {
          "type": "boolean"
        }
      }
    },
    "GroupInventoryReleaseRules": {
      "properties": {
        "release": {
          "$ref": "#/definitions/GroupReleaseRules"
        }
      },
      "type": "object",
      "title": "GroupInventoryReleaseRules"
    },
    "GroupReleaseRule": {
      "properties": {
        "period": {
          "$ref": "#/definitions/Period"
        },
        "value": {
          "type": "string",
          "pattern": "^.*$"
        },
        "computationType": {
          "type": "string",
          "enum": [
            "Flat",
            "Percent"
          ]
        },
        "isRolling": {
          "type": "boolean"
        }
      },
      "type": "object",
      "title": "GroupReleaseRule"
    },
    "AttributeCode": {
      "description": "code of the attribute",
      "type": "string",
      "pattern": "^[A-Z0-9]{1,8}$",
      "minLength": 1,
      "maxLength": 8,
      "example": "RVT25"
    },
    "InventoryTypeCode": {
      "description": "business code representing an inventory type",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 50
    },
    "OtaCode": {
      "description": "community code of the product type [OTA]",
      "type": "string",
      "pattern": "^[A-Z0-9]{3,8}$",
      "minLength": 3,
      "maxLength": 8
    },
    "PacCode": {
      "description": "unique combination code of product, attributes and occupancy",
      "type": "string",
      "pattern": "^[A-Z0-9]{2,8}$",
      "maxLength": 8
    },
    "CfNumber": {
      "description": "hotel Confirmation Number. It is a ACRS confirmation number",
      "type": "string",
      "pattern": "^[A-Z0-9]{8,10}$",
      "minLength": 8,
      "maxLength": 10,
      "example": "41771771"
    },
    "CxNumber": {
      "description": "hotel Cancellation Number. Mandatory if the action concerns a cancel",
      "type": "string",
      "pattern": "^[A-Z0-9]{8,10}$",
      "minLength": 8,
      "maxLength": 11,
      "example": "31771771"
    },
    "ImageId": {
      "description": "image ID (unique per confirmation number)",
      "type": "integer"
    },
    "CommittedSequenceNumber": {
      "type": "integer",
      "description": "sequence number of this image among all the committed images in the group"
    },
    "GroupPartialModifyReq": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "list of modify operations to perform on the resource",
          "type": "array",
          "maxItems": 5000,
          "items": {
            "$ref": "#/definitions/ModificationChange"
          },
          "title": "GroupPartialModifyReqData"
        },
        "meta": {
          "description": "additional properties needed to process the request",
          "type": "object",
          "properties": {
            "pickupPropagation": {
              "$ref": "#/definitions/PickupPropagation"
            }
          },
          "title": "GroupPartialModifyReqMeta"
        }
      },
      "title": "GroupPartialModifyReq"
    },
    "ModificationChange": {
      "type": "object",
      "description": "change operation to apply to the resource",
      "required": [
        "op",
        "path"
      ],
      "properties": {
        "op": {
          "description": "operation used for the change",
          "type": "string",
          "enum": [
            "upsert",
            "append",
            "remove"
          ]
        },
        "path": {
          "description": "path used for the change",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 300
        },
        "value": {
          "description": "the json structure (not a string, i.e. without opening and closing quotes) to be inserted at the specified path"
        }
      },
      "title": "ModificationChange"
    },
    "MultiFactorInfo": {
      "description": "payment transaction information",
      "type": "object",
      "properties": {
        "agreedMandate": {
          "type": "string",
          "description": "describes the agreed mandate between the cardholder and the agent/third party. [NA=No agreement for future MIT, NS=Agreement for future No show/Cancellation Fee, BP=Agreement for prepayment/balance payment,FR=Agreement for recurring payment (fixed date), UR=Agreement for recurring payment (usage based non fixed date)]",
          "maxLength": 2,
          "pattern": "^.*$"
        },
        "authenticationDidNotComplete": {
          "type": "string",
          "description": "this value is required to communicate to the authorizing party that authentication could not be completed in certain circumstances",
          "pattern": "^[A-Za-z0-9]{1,2}$",
          "maxLength": 2
        },
        "bookingChannel": {
          "type": "string",
          "description": "indicates in which channel the transaction was initiated. [MO=Mail order, TO=Telephone order, EC=Ecomm, FA=Face-To-Face]",
          "maxLength": 2,
          "pattern": "^.*$"
        },
        "cardNumberCollection": {
          "type": "string",
          "description": "determines how the card number was collected for the transaction. [K=Keyed in, S=Card On File]",
          "maxLength": 1,
          "pattern": "^.*$"
        },
        "cavv": {
          "type": "string",
          "description": "cardholder Authentication Verification Value. The value should be appended to the authorization message signifying that the transaction has been successfully authenticated. Required only for MasterCard",
          "pattern": "^[A-Za-z0-9]{1,48}$",
          "maxLength": 48
        },
        "dsTransactionId": {
          "type": "string",
          "description": "unique transaction identifier assigned by the Directory Server (DS) to identify a single transaction",
          "pattern": "^[A-Za-z0-9]{1,36}$",
          "maxLength": 36
        },
        "eci": {
          "type": "string",
          "description": "electronic Commerce Indicator. The ECI value is part of the 2 data elements that indicate the transaction was processed electronically. This should be passed on the authorization transaction to the gateway/processor",
          "pattern": "^[A-Za-z0-9]{1,40}$",
          "maxLength": 40
        },
        "exemptionUsed": {
          "type": "string",
          "description": "determines which exemption was used. Before using any exemption or Delegated authentication, a Booking Agent must ensure the acquirer of the merchant is allowing use of this exemption. [TR=Transaction Risk Analysis Exemption, TV=Trusted Beneficiary Exemption, LV=Low Value Exemption, SC=Secure Corporate Exemption, DA=Delegated Authentication]",
          "maxLength": 2,
          "pattern": "^.*$"
        },
        "identifierOfAuthorization": {
          "type": "string",
          "description": "describes the Transaction ID/Trace ID of the authorization request when performed by the Booking Agent",
          "pattern": "^[A-Za-z0-9]{1,16}$",
          "maxLength": 16
        },
        "merchantName": {
          "type": "string",
          "description": "used by authenticator in authentication request",
          "pattern": "^[A-Za-z0-9]{1,40}$",
          "maxLength": 40
        },
        "tavv": {
          "type": "string",
          "description": "token Authentication Verification Value. Required only for Visa card",
          "pattern": "^[A-Za-z0-9]{1,40}$",
          "maxLength": 40
        },
        "threeDsAuthenticationValue": {
          "type": "string",
          "description": "3D Secure Authentication value",
          "pattern": "^[A-Za-z0-9]{1,40}$",
          "maxLength": 40
        },
        "threeDsVersion": {
          "type": "string",
          "description": "version of 3D Secure used",
          "pattern": "^[A-Za-z0-9]{1,10}$",
          "maxLength": 10
        },
        "transactionXid": {
          "type": "string",
          "description": "transaction identifier resulting from authentication processing",
          "pattern": "^[A-Za-z0-9]{1,40}$",
          "maxLength": 40
        }
      },
      "title": "MultiFactorInfo"
    },
    "ExternalIdItem": {
      "type": "object",
      "title": "ExternalIdItem",
      "description": "defines an external ID for the group",
      "required": [
        "id",
        "type"
      ],
      "properties": {
        "id": {
          "description": "an external ID",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 50
        },
        "type": {
          "description": "defines the type of external ID",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 50
        }
      }
    },
    "Keyword": {
      "description": "short name assigned to group",
      "type": "string",
      "pattern": "^.*$",
      "maxLength": 50
    },
    "ResponseError_400": {
      "type": "object",
      "required": [
        "errors"
      ],
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "title": "ResponseError_400Errors"
        }
      },
      "example": {
        "errors": [
          {
            "status": 400,
            "code": 320,
            "title": "Exception at decoding",
            "detail": "Error returned when the request could not be decoded"
          }
        ]
      },
      "title": "ResponseError_400"
    },
    "ResponseError_401": {
      "type": "object",
      "required": [
        "errors"
      ],
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "title": "ResponseError_401Errors"
        }
      },
      "example": {
        "errors": [
          {
            "status": 401,
            "code": 71,
            "title": "Wrong authentication credentials"
          }
        ]
      },
      "title": "ResponseError_401"
    },
    "ResponseError_403": {
      "type": "object",
      "required": [
        "errors"
      ],
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "title": "ResponseError_403Errors"
        }
      },
      "example": {
        "errors": [
          {
            "status": 403,
            "code": 400,
            "title": "The property does not exist in the CRS."
          }
        ]
      },
      "title": "ResponseError_403"
    },
    "ResponseError_404": {
      "type": "object",
      "required": [
        "errors"
      ],
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "title": "ResponseError_404Errors"
        }
      },
      "example": {
        "errors": [
          {
            "status": 404,
            "code": 97,
            "title": "No group available for the input group Id"
          }
        ]
      },
      "title": "ResponseError_404"
    },
    "ResponseError_406": {
      "type": "object",
      "required": [
        "errors"
      ],
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "title": "ResponseError_406Errors"
        }
      },
      "example": {
        "errors": [
          {
            "status": 406,
            "code": 172,
            "title": "Requested version not supported [3.99]"
          }
        ]
      },
      "title": "ResponseError_406"
    },
    "ResponseError_422": {
      "type": "object",
      "required": [
        "errors"
      ],
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "title": "ResponseError_422Errors"
        }
      },
      "example": {
        "errors": [
          {
            "status": 422,
            "code": 0,
            "title": "Unprocessable entity"
          }
        ]
      },
      "title": "ResponseError_422"
    },
    "ResponseError_429": {
      "type": "object",
      "required": [
        "errors"
      ],
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "title": "ResponseError_429Errors"
        }
      },
      "example": {
        "errors": [
          {
            "status": 429,
            "code": 0,
            "title": "Too many requests"
          }
        ]
      },
      "title": "ResponseError_429"
    },
    "ResponseError_500": {
      "type": "object",
      "required": [
        "errors"
      ],
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "title": "ResponseError_500Errors"
        }
      },
      "example": {
        "errors": [
          {
            "status": 500,
            "code": 448,
            "title": "System error"
          }
        ]
      },
      "title": "ResponseError_500"
    },
    "responseError_503": {
      "type": "object",
      "required": [
        "errors"
      ],
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "title": "ResponseError_503Errors"
        }
      },
      "example": {
        "errors": [
          {
            "status": 503,
            "code": 110008,
            "title": "Service Unavailable"
          }
        ]
      },
      "title": "ResponseError_503"
    },
    "ResponseError_504": {
      "type": "object",
      "required": [
        "errors"
      ],
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "title": "ResponseError_504Errors"
        }
      },
      "example": {
        "errors": [
          {
            "status": 504,
            "code": 15346,
            "title": "ESPINV Message too old"
          }
        ]
      },
      "title": "ResponseError_504"
    },
    "Error": {
      "type": "object",
      "title": "Error",
      "properties": {
        "status": {
          "description": "the HTTP status code applicable to this error",
          "type": "integer",
          "example": 400
        },
        "code": {
          "description": "an application-specific error code",
          "type": "integer",
          "example": 14453
        },
        "title": {
          "description": "a short summary of the error",
          "type": "string",
          "pattern": "[A-Z0-9]{1,1000}",
          "maxLength": 1000
        },
        "detail": {
          "description": "explanation of the error",
          "type": "string",
          "pattern": "[A-Z0-9]{1,1000}",
          "maxLength": 1000
        },
        "source": {
          "type": "object",
          "title": "ErrorSource",
          "description": "an object containing references to the source of the error",
          "properties": {
            "pointer": {
              "description": "a JSON Pointer [RFC6901] to the associated entity in the request document",
              "type": "string",
              "pattern": "[A-Z0-9]{1,1000}",
              "maxLength": 1000
            },
            "parameter": {
              "description": "a string indicating which URI query parameter caused the issue",
              "type": "string",
              "pattern": "[A-Z0-9]{1,1000}",
              "maxLength": 1000
            },
            "example": {
              "type": "string",
              "description": "a sample input to guide the user when resolving this issue",
              "pattern": "[A-Z0-9]{1,1000}",
              "maxLength": 1000
            }
          }
        }
      }
    },
    "Warning": {
      "type": "object",
      "title": "Warning",
      "properties": {
        "status": {
          "description": "the HTTP status code applicable to this warning",
          "type": "integer",
          "example": 200
        },
        "code": {
          "description": "an application-specific warning code",
          "type": "integer",
          "example": 14353
        },
        "id": {
          "description": "id of the warning, used to link the warning to a specific element in the response",
          "type": "integer"
        },
        "isPreventingCommit": {
          "description": "boolean to indicate if the warning will prevent the commit action",
          "type": "boolean"
        },
        "title": {
          "description": "a short summary of the warning",
          "type": "string",
          "pattern": "^.*$"
        },
        "detail": {
          "description": "explanation of the warning",
          "type": "string",
          "pattern": "^.*$"
        },
        "source": {
          "type": "object",
          "title": "WarningSource",
          "description": "an object containing references to the source of the warning",
          "minProperties": 1,
          "properties": {
            "pointer": {
              "description": "a JSON Pointer [RFC6901] to the associated entity in the request document",
              "type": "string",
              "pattern": "^.*$"
            },
            "parameter": {
              "description": "a string indicating which URI query parameter caused the warning",
              "type": "string",
              "pattern": "^.*$"
            },
            "example": {
              "type": "string",
              "pattern": "^.*$",
              "description": "a sample input to guide the user when resolving this warning"
            }
          }
        }
      }
    },
    "ReportingCode": {
      "description": "the reporting code is attached to a reservation record (including Group reservation) in order to track and provide reporting capabilities for customers in their own ecosystem(e.g. TIBKLND, TIEXLND)",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 20
    },
    "PickupPropagation": {
      "type": "object",
      "description": "propagation of changes to the pickup reservations part of this group",
      "required": [
        "isPropagationRequested"
      ],
      "properties": {
        "isPropagationRequested": {
          "type": "boolean",
          "description": "enables the propagation of the changes to the pickup reservations that are part of this group"
        },
        "fieldsToPropagate": {
          "type": "array",
          "description": "list of field identifiers, to be propagated to existing pickup reservations. Possibles values - ratePlanCode businessSource marketSegment propertyMarketSegment userProfiles corporateAccountInfo ownerAgencyDetails",
          "maxItems": 100,
          "items": {
            "type": "string",
            "pattern": "^.*$",
            "maxLength": 300
          },
          "title": "PickupPropagationFieldsToPropagate"
        }
      },
      "title": "PickupPropagation"
    },
    "Penalty": {
      "type": "object",
      "title": "Penalty",
      "description": "type of penalties applicable when, how and how much",
      "properties": {
        "nightBasedAmount": {
          "type": "string",
          "description": "amount of the penalty expressed in number of nights",
          "enum": [
            "FirstNight",
            "LastNight",
            "FirstAndLastNight",
            "EntireStay",
            "NoCharge",
            "EqualToDeposit"
          ]
        },
        "monetaryAmount": {
          "type": "string",
          "pattern": "^.*$",
          "description": "monetary amount applicable"
        },
        "currency": {
          "description": "currency code",
          "type": "string",
          "pattern": "^.*$"
        },
        "percentageFee": {
          "type": "string",
          "pattern": "^.*$",
          "description": "percentage of the total amount charged as the cancellation/deposit/no show cancellation fee"
        }
      }
    },
    "Deadline": {
      "type": "object",
      "title": "Deadline",
      "description": "due date about when and how much payment",
      "properties": {
        "type": {
          "type": "string",
          "description": "indicates when is the deadline to make the payment",
          "enum": [
            "AtBookingTime",
            "PriorToArrival",
            "AfterBooking"
          ]
        },
        "numberOfDays": {
          "type": "integer",
          "description": "indicates the number of days with respect to the defined deadline type"
        }
      }
    },
    "Issue": {
      "type": "object",
      "title": "Issue",
      "properties": {
        "status": {
          "description": "the HTTP status code applicable to this error",
          "type": "integer",
          "example": 400
        },
        "code": {
          "description": "an application-specific error code",
          "type": "integer",
          "example": 14453
        },
        "title": {
          "description": "a short summary of the error",
          "type": "string",
          "pattern": "[A-Z0-9]{1,1000}",
          "maxLength": 1000
        },
        "detail": {
          "description": "explanation of the error",
          "type": "string",
          "pattern": "[A-Z0-9]{1,1000}",
          "maxLength": 1000
        },
        "source": {
          "type": "object",
          "title": "IssueSource",
          "description": "an object containing references to the source of the error",
          "properties": {
            "pointer": {
              "description": "a JSON Pointer [RFC6901] to the associated entity in the request document",
              "type": "string",
              "pattern": "[A-Z0-9]{1,1000}",
              "maxLength": 1000
            },
            "parameter": {
              "description": "a string indicating which URI query parameter caused the issue",
              "type": "string",
              "pattern": "[A-Z0-9]{1,1000}",
              "maxLength": 1000
            },
            "example": {
              "type": "string",
              "description": "a sample input to guide the user when resolving this issue",
              "pattern": "[A-Z0-9]{1,1000}",
              "maxLength": 1000
            }
          }
        }
      }
    },
    "FeedsMeta": {
      "properties": {
        "chainCode": {
          "description": "chain/corporate code",
          "type": "string",
          "pattern": "[A-Z0-9]{2,3}",
          "minLength": 2,
          "maxLength": 3
        },
        "propertyCode": {
          "description": "property/hotel code",
          "type": "string",
          "pattern": "[A-Z0-9]{1,8}",
          "minLength": 1,
          "maxLength": 8
        },
        "generationTime": {
          "description": "date-time Zulu time up to the second at which the data has been gathered. Format is ISO8601.",
          "example": "2019-12-21T23:59:50Z",
          "type": "string",
          "format": "date-time"
        },
        "action": {
          "description": "create - for reservation creation. refresh - to push reservation again. update - for reservation modification. delete - for reservation cancellation",
          "type": "string",
          "example": "Create",
          "enum": [
            "Create",
            "Refresh",
            "Update",
            "Delete"
          ]
        }
      },
      "type": "object",
      "title": "FeedsMeta"
    },
    "FeedSuccess": {
      "type": "object",
      "description": "Successful Operation",
      "title": "FeedSuccess",
      "properties": {
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Issue"
          },
          "title": "FeedSuccessWarnings"
        }
      }
    },
    "Commission": {
      "type": "object",
      "required": [
        "commissionType",
        "value"
      ],
      "properties": {
        "commissionType": {
          "description": "type of the commission opted",
          "type": "string",
          "enum": [
            "Flat",
            "Percentage"
          ]
        },
        "value": {
          "description": "value of the commission rate, based on the room rate. It can be either a flat amount or a percentage depending on the commission type",
          "type": "string",
          "maxLength": 13
        }
      },
      "title": "Commission"
    },
    "CustomerOwnReference": {
      "description": "it is used to store reference of the customer. It is used in relation to any form of payment",
      "type": "string",
      "maxLength": 24
    },
    "PurchaseOrderReference": {
      "description": "it is used to store reference of the purchase order. It is used in relation to any form of payment",
      "type": "string",
      "maxLength": 24
    },
    "DistributionChannel": {
      "description": "channel name distributing the group",
      "type": "string",
      "example": "Passkey",
      "maxLength": 64,
      "pattern": "^.*$"
    },
    "RelatedTaxId": {
      "type": "integer",
      "pattern": "^.*$",
      "description": "list of associated parent tax ids on which the tax on tax is applied",
      "maxLength": 5
    },
    "programId": {
      "description": "membership identifier of the guest",
      "type": "string",
      "minLength": 1,
      "maxLength": 50,
      "example": "1231231"
    },
    "programCode": {
      "description": "program code of the membership program",
      "type": "string",
      "minLength": 1,
      "maxLength": 20,
      "example": "PC12"
    },
    "programLevel": {
      "description": "level within the membership program",
      "type": "string",
      "minLength": 1,
      "maxLength": 50,
      "example": "Gold"
    },
    "programType": {
      "description": "type of the membership program",
      "type": "string",
      "minLength": 1,
      "maxLength": 50,
      "example": "mLite"
    },
    "additionalMembershipProgram": {
      "description": "additional membership program of the guest",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/programId"
        },
        "programCode": {
          "$ref": "#/definitions/programCode"
        },
        "programType": {
          "$ref": "#/definitions/programType"
        },
        "level": {
          "$ref": "#/definitions/programLevel"
        }
      },
      "title": "AdditionalMembershipProgram"
    },
    "callCenterAgentInformation": {
      "type": "object",
      "properties": {
        "agentDutyCode": {
          "description": "duty code of the call center agent",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 16,
          "example": "CS"
        },
        "agentInitials": {
          "description": "initials of the call center agent",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 16,
          "example": "HD"
        },
        "agentId": {
          "description": "id of the call center agent",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 16,
          "example": "DGRM"
        }
      },
      "title": "CallCenterAgentInformation"
    },
    "RateReferenceInGroup-groupBookingReservationRequest": {
      "type": "object",
      "properties": {
        "ratePlanCode": {
          "$ref": "#/definitions/RatePlanCode"
        },
        "pricePlanCode": {
          "$ref": "#/definitions/PricePlanCode"
        },
        "relationship": {
          "type": "string",
          "enum": [
            "AttachedPlan",
            "BasePlan"
          ]
        }
      },
      "title": "RateReferenceInGroup-groupBookingReservationRequest"
    },
    "GroupSecurityFlags-groupBookingReservationRequest": {
      "properties": {
        "isExcludedFromGroupsList": {
          "description": "indicate if the Group excluded from Search Groups List",
          "type": "boolean"
        },
        "isRateSecuredFromSNB": {
          "description": "indicates if the Group’s Rates secured from shopping and booking",
          "type": "boolean"
        },
        "isRateSecuredFromReporting": {
          "description": "indicates if the Group's Rates secured from Groups List and Reports",
          "type": "boolean"
        },
        "isGroupDescriptionSecured": {
          "description": "indicates if the Group s Description Secured from Groups List and Reports",
          "type": "boolean"
        },
        "isBookingProcedureSecured": {
          "description": "indicates if the Group Booking Procedures secured from Groups List and Reports",
          "type": "boolean"
        },
        "isRateVisibleForCorporateId": {
          "description": "applicable only if a corporate id is provided. Indicates if the rate is visible",
          "type": "boolean"
        }
      },
      "type": "object",
      "required": [
        "isBookingProcedureSecured",
        "isExcludedFromGroupsList",
        "isGroupDescriptionSecured",
        "isRateSecuredFromReporting",
        "isRateSecuredFromSNB"
      ],
      "title": "GroupSecurityFlags-groupBookingReservationRequest"
    },
    "AdvanceBookingRestriction-groupBookingReservationRequest": {
      "type": "object",
      "title": "AdvanceBookingRestriction-groupBookingReservationRequest",
      "properties": {
        "startDate": {
          "type": "string",
          "example": "2019-04-23",
          "pattern": "[0-9]{4}-[0-9]{2}-[0-3][0-9]",
          "description": "start Date for the check-in period of the advance booking restriction",
          "maxLength": 10
        },
        "endDate": {
          "type": "string",
          "example": "2019-04-29",
          "pattern": "[0-9]{4}-[0-9]{2}-[0-3][0-9]",
          "description": "end date for the check-in period of the advance booking restriction",
          "maxLength": 10
        },
        "dow": {
          "type": "string",
          "pattern": "(M|-)(T|-)(W|-)(T|-)(F|-)(S|-)(S|-)",
          "example": "MT-TFS-",
          "maxLength": 10
        },
        "inventoryTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InventoryTypeCode"
          },
          "title": "AdvanceBookingRestriction-groupBookingReservationRequestInventoryTypes"
        },
        "minOffset": {
          "type": "integer",
          "description": "minimum lead time (in days) that a booking can be created before (or relative to) the check-in date  as a booking restriction",
          "example": 2
        },
        "maxOffset": {
          "type": "integer",
          "description": "maximum lead time (in days) that a booking can be created before (or relative to) the check-in date as a booking restriction",
          "example": 10
        }
      }
    },
    "StayRestriction-groupBookingReservationRequest": {
      "title": "StayRestriction-groupBookingReservationRequest",
      "type": "object",
      "properties": {
        "restrictionType": {
          "type": "string",
          "enum": [
            "ClosedToDeparture",
            "ClosedToArrival",
            "NoStay",
            "RequiredStayOver",
            "LOSRestriction",
            "StayThrough"
          ]
        },
        "id": {
          "type": "string",
          "description": "system generated id for the restriction",
          "readOnly": true,
          "pattern": "^.*$"
        },
        "period": {
          "$ref": "#/definitions/PeriodWithDow"
        },
        "inventoryTypeCode": {
          "type": "string",
          "description": "a code representing the business code for the Inventory type",
          "pattern": "^.*$",
          "example": "KNGN",
          "maxLength": 5
        },
        "yieldClass": {
          "type": "string",
          "description": "yield class on which the restriction applies",
          "pattern": "^.*$",
          "maxLength": 64,
          "minLength": 1
        },
        "daysRanges": {
          "type": "array",
          "description": "indicates the minimum and maximum ranges for a given restriction",
          "items": {
            "type": "object",
            "title": "StayRestriction-groupBookingReservationRequestDaysRangesItem",
            "properties": {
              "min": {
                "type": "integer"
              },
              "max": {
                "type": "integer"
              }
            }
          },
          "title": "StayRestriction-groupBookingReservationRequestDaysRanges"
        },
        "status": {
          "type": "string",
          "description": "input Only , Used to set or unset stay restriction",
          "enum": [
            "Active",
            "Inactive"
          ]
        }
      }
    },
    "Policy-groupBookingReservationRequest": {
      "type": "object",
      "title": "Policy-groupBookingReservationRequest",
      "properties": {
        "policyType": {
          "type": "string",
          "description": "type of the policy",
          "enum": [
            "CancellationPolicy",
            "DepositPolicy",
            "CancellationNoShowPolicy"
          ]
        },
        "level": {
          "type": "string",
          "description": "specifies at which level the policy should apply",
          "enum": [
            "Pickup",
            "Group"
          ]
        },
        "penalty": {
          "$ref": "#/definitions/Penalty"
        },
        "deadline": {
          "$ref": "#/definitions/Deadline"
        },
        "refundPercentage": {
          "type": "string",
          "pattern": "^.*$",
          "description": "percentage of refund applicable"
        },
        "cancellationTime": {
          "type": "string",
          "pattern": "^.*$",
          "example": "08:00:00",
          "description": "cancellation time applicable for the Cancellation and no-show cancellation policy"
        },
        "isFollowingHousePolicy": {
          "type": "boolean",
          "description": "flag indicating if the policy is following house or defined in the scope of the rate plan / group"
        }
      },
      "required": [
        "level",
        "policyType"
      ]
    },
    "PricePoint-groupBookingReservationRequest": {
      "title": "PricePoint-groupBookingReservationRequest",
      "type": "object",
      "minProperties": 1,
      "properties": {
        "computationType": {
          "description": "indicates how the value is used for the amount computation. Flat is the default value",
          "type": "string",
          "enum": [
            "Flat",
            "AmountAdd",
            "AmountOff",
            "PercentAdd",
            "PercentOff"
          ]
        },
        "value": {
          "description": "value of the price point. it could be an amount or a percentage",
          "type": "string",
          "example": "20",
          "pattern": "^.*$"
        },
        "occupancy": {
          "description": "in case the pricing can vary based on the occupancy (number of guests)",
          "type": "integer",
          "example": 2
        },
        "guestType": {
          "description": "in case the pricing can vary based on the guest type",
          "type": "string",
          "pattern": "^.*$"
        }
      },
      "required": [
        "value"
      ]
    },
    "MapOfPricePoints-groupBookingReservationRequest": {
      "type": "object",
      "additionalProperties": {
        "description": "list of amounts",
        "type": "array",
        "items": {
          "$ref": "#/definitions/PricePoint-groupBookingReservationRequest"
        },
        "title": "MapOfPricePoints-groupBookingReservationRequestProperty"
      },
      "example": {
        "ABCD": [
          {
            "value": "110",
            "computationType": "Flat",
            "guestType": "ADULT"
          },
          {
            "value": "85",
            "computationType": "Flat",
            "guestType": "INFANT"
          }
        ],
        "XYZ": [
          {
            "value": "120.00",
            "computationType": "Flat",
            "guestType": "ADULT"
          }
        ]
      },
      "title": "MapOfPricePoints-groupBookingReservationRequest"
    },
    "AmountRule-groupBookingReservationRequest": {
      "title": "AmountRule-groupBookingReservationRequest",
      "type": "object",
      "minProperties": 1,
      "properties": {
        "type": {
          "type": "string",
          "pattern": "^.*$",
          "description": "name of the Data Model, \"AmountRule\"",
          "example": "AmountRule"
        },
        "comment": {
          "type": "string",
          "pattern": "^.*$",
          "description": "comment of the Amount Rules"
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "inventoryTypes": {
          "$ref": "#/definitions/MapOfPricePoints-groupBookingReservationRequest"
        }
      },
      "required": [
        "inventoryTypes",
        "period"
      ]
    },
    "PricePlanInGroup-groupBookingReservationRequest": {
      "properties": {
        "extraPersonCharge": {
          "description": "a non-zero positive value. This charge applies to all inventory types",
          "type": "string",
          "pattern": "^.*$"
        },
        "amountRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AmountRule-groupBookingReservationRequest"
          },
          "title": "PricePlanInGroup-groupBookingReservationRequestAmountRules"
        },
        "chargeMethod": {
          "description": "unit for which the charge applies",
          "type": "string",
          "enum": [
            "PerPerson",
            "PerProduct",
            "PerProductByOccupancy",
            "PerProductPerGuestType"
          ]
        },
        "chargeFrequency": {
          "description": "defines the pricing frequency. Example PerNight for SR or NR; AND PerStay or PerUse for NR only",
          "type": "string",
          "enum": [
            "PerNight",
            "PerStay",
            "PerUse"
          ]
        },
        "bookingPattern": {
          "description": "determines the availability of the Product with respect to the main product",
          "type": "string",
          "enum": [
            "DayOfCheckIn",
            "DayOfCheckOut",
            "Anytime"
          ]
        },
        "productCode": {
          "description": "code representing the product for the given product category for the price plan. Example - SR, BRKF, SPA",
          "type": "string",
          "pattern": "^.*$",
          "example": "BRKF",
          "minLength": 2,
          "maxLength": 8
        }
      },
      "type": "object",
      "title": "PricePlanInGroup-groupBookingReservationRequest"
    },
    "BaseTaxDefinition-groupBookingReservationRequest": {
      "type": "object",
      "required": [
        "taxTypeCode"
      ],
      "properties": {
        "taxTypeCode": {
          "type": "string",
          "pattern": "^.*$",
          "description": "an OTA fee tax type code",
          "example": "12"
        },
        "inclusionStatus": {
          "type": "string",
          "description": "whether tax is included in or excluded from rate",
          "enum": [
            "IncludedInRate",
            "ExcludedFromRate"
          ]
        },
        "computationType": {
          "type": "string",
          "description": "type of computation, either Flat or Percentage",
          "enum": [
            "Flat",
            "Percentage"
          ]
        },
        "chargeFrequency": {
          "type": "string",
          "description": "how the tax is computed, once or repeated each day",
          "enum": [
            "PerDay",
            "PerStay"
          ]
        },
        "items": {
          "type": "array",
          "description": "which sellable items are taxed",
          "items": {
            "$ref": "#/definitions/TaxItem"
          },
          "title": "BaseTaxDefinition-groupBookingReservationRequestItems"
        }
      },
      "title": "BaseTaxDefinition-groupBookingReservationRequest"
    },
    "TaxPeriod-groupBookingReservationRequest": {
      "type": "object",
      "description": "restriction on when the value applies",
      "required": [
        "values"
      ],
      "properties": {
        "dow": {
          "description": "list of applicable days of weeks. 'MTWTFSS' for all days of weeks. A dash is present for any missing day. For instance, 'MT-----' for Monday and Tuesday only, '-T-T---' for Tuesday and Thursday only",
          "type": "string",
          "pattern": "^[M-][T-][W-][T-][F-][S-][S-]$",
          "maxLength": 7
        },
        "values": {
          "type": "array",
          "maxItems": 50,
          "description": "values per criteria",
          "items": {
            "$ref": "#/definitions/TaxValue"
          },
          "title": "TaxPeriod-groupBookingReservationRequestValues"
        }
      },
      "title": "TaxPeriod-groupBookingReservationRequest"
    },
    "GroupTaxDefinition-groupBookingReservationRequest": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseTaxDefinition-groupBookingReservationRequest"
        },
        {
          "type": "object",
          "properties": {
            "periods": {
              "type": "array",
              "description": "values per periods",
              "items": {
                "$ref": "#/definitions/TaxPeriod-groupBookingReservationRequest"
              },
              "title": "GroupTaxDefinition-groupBookingReservationRequestallOf1Periods"
            }
          },
          "title": "GroupTaxDefinition-groupBookingReservationRequestallOf1"
        },
        {
          "type": "object",
          "properties": {},
          "title": "GroupTaxDefinition-groupBookingReservationRequestallOf2"
        }
      ],
      "title": "GroupTaxDefinition-groupBookingReservationRequest"
    },
    "TaxDefinitionWithId-groupBookingReservationRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/GroupTaxDefinition-groupBookingReservationRequest"
        },
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "pattern": "^[0-9A-Z]{1,8}$",
              "description": "unique system generated ID of a tax/fee"
            }
          }
        }
      ],
      "title": "TaxDefinitionWithId-groupBookingReservationRequest"
    },
    "GroupContract-groupBookingReservationRequest": {
      "title": "GroupContract-groupBookingReservationRequest",
      "type": "object",
      "description": "group contract data model",
      "properties": {
        "name": {
          "description": "group name",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 100
        },
        "externalPmsId": {
          "description": "external group ID may be used to identify a Group along with Property and Group Code. Set on the PMS only and stored with the group",
          "type": "string",
          "maxLength": 50,
          "pattern": "^.*$"
        },
        "flow": {
          "description": "determines if the group is created online (on the fly) or offline (default)",
          "type": "string",
          "enum": [
            "Offline",
            "Online"
          ],
          "default": "Offline"
        },
        "isAllotment": {
          "description": "indicates if the contract corresponds to an allotment (isAllotment = true) or to a \"normal\" group (isAllotment = false)",
          "type": "boolean",
          "default": false
        },
        "saleStatus": {
          "description": "for identification of a group sale status so that the group can be picked up",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 50
        },
        "propertyMarketSegment": {
          "description": "determines the market segmentation for the group as defined for the property",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 50
        },
        "corporateMarketSegment": {
          "description": "determines the market segmentation for the group as defined for the corporate",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 50
        },
        "industryType": {
          "description": "determines the industry type for the group",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 50
        },
        "policyTypeCode": {
          "description": "policy type code associated to the group",
          "type": "string",
          "pattern": "^.*$",
          "minLength": 1,
          "maxLength": 20
        },
        "corporateId": {
          "description": "corporate Id",
          "type": "string",
          "maxLength": 50,
          "pattern": "^.*$"
        },
        "isHousing": {
          "description": "indicates if group booking is limited to the hotel associated with the group or accepted from any hotel or reservation office",
          "type": "boolean"
        },
        "isCommissionable": {
          "description": "indicates if the group is subject to commission ( = true) or not  ( = false)",
          "type": "boolean"
        },
        "isGuaranteeRequired": {
          "description": "indicates if guarantee is required for the group or not",
          "type": "boolean"
        },
        "isElastic": {
          "description": "indicates if the group is Elastic or not. By default, a group is not elastic",
          "type": "boolean"
        },
        "allowExtraDays": {
          "description": "indicates if the period of the reservations booking on the group can be partially outside of the group period",
          "type": "boolean"
        },
        "applyHouseEarlyDepartureFee": {
          "description": "indicates if the group is subject to early departures fee ( = true) or not  ( = false)",
          "type": "boolean"
        },
        "isFollowingHousePolicy": {
          "description": "flag indicating if the policy is following house or defined in the scope of the rate plan / group",
          "type": "boolean"
        },
        "period": {
          "$ref": "#/definitions/StartEnd"
        },
        "corePeriod": {
          "$ref": "#/definitions/StartEnd"
        },
        "descriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupDescription"
          },
          "title": "GroupContract-groupBookingReservationRequestDescriptions"
        },
        "rateReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RateReferenceInGroup-groupBookingReservationRequest"
          },
          "title": "GroupContract-groupBookingReservationRequestRateReferences"
        },
        "security": {
          "$ref": "#/definitions/GroupSecurityFlags-groupBookingReservationRequest"
        },
        "advanceBookingRestrictions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdvanceBookingRestriction-groupBookingReservationRequest"
          },
          "title": "GroupContract-groupBookingReservationRequestAdvanceBookingRestrictions"
        },
        "stayRestrictions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StayRestriction-groupBookingReservationRequest"
          },
          "title": "GroupContract-groupBookingReservationRequestStayRestrictions"
        },
        "policies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Policy-groupBookingReservationRequest"
          },
          "title": "GroupContract-groupBookingReservationRequestPolicies"
        },
        "pricePlans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PricePlanInGroup-groupBookingReservationRequest"
          },
          "title": "GroupContract-groupBookingReservationRequestPricePlans"
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product"
          },
          "title": "GroupContract-groupBookingReservationRequestProducts"
        },
        "taxes": {
          "type": "array",
          "description": "array of taxes of the group contract",
          "items": {
            "$ref": "#/definitions/TaxDefinitionWithId-groupBookingReservationRequest"
          },
          "title": "GroupContract-groupBookingReservationRequestTaxes"
        },
        "commission": {
          "description": "commission type and value",
          "$ref": "#/definitions/Commission"
        },
        "policyAssociations": {
          "type": "array",
          "description": "policies that are applied to the group from the policy catalogue",
          "items": {
            "$ref": "#/definitions/PolicyAssociation"
          },
          "title": "GroupContract-groupBookingReservationRequestPolicyAssociations"
        }
      },
      "required": [
        "isCommissionable",
        "isHousing",
        "name",
        "period"
      ]
    },
    "GroupContractAndReleaseRules-groupBookingReservationRequest": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GroupContract-groupBookingReservationRequest"
        },
        {
          "type": "object",
          "properties": {
            "inventory": {
              "$ref": "#/definitions/GroupInventoryReleaseRules"
            }
          },
          "title": "GroupContractAndReleaseRules-groupBookingReservationRequestallOf1"
        }
      ],
      "title": "GroupContractAndReleaseRules-groupBookingReservationRequest"
    },
    "GroupBodyReq-groupBookingReservationRequest": {
      "type": "object",
      "description": "full representation of group record",
      "title": "GroupBodyReq-groupBookingReservationRequest",
      "required": [
        "hotel"
      ],
      "properties": {
        "hotel": {
          "$ref": "#/definitions/GroupHotelReq"
        },
        "groupContract": {
          "$ref": "#/definitions/GroupContractAndReleaseRules-groupBookingReservationRequest"
        },
        "groupIds": {
          "$ref": "#/definitions/GroupIdsReq"
        },
        "travelPurpose": {
          "$ref": "#/definitions/TravelPurpose"
        },
        "businessSource": {
          "$ref": "#/definitions/BusinessSource"
        },
        "language": {
          "$ref": "#/definitions/Language"
        },
        "languageLocality": {
          "$ref": "#/definitions/LanguageLocality"
        },
        "departureTime": {
          "$ref": "#/definitions/DepartureTime"
        },
        "arrivalTime": {
          "$ref": "#/definitions/ArrivalTime"
        },
        "reservationMethod": {
          "$ref": "#/definitions/ReservationMethod"
        },
        "formOfPayment": {
          "$ref": "#/definitions/FormOfPaymentReq"
        },
        "offer": {
          "$ref": "#/definitions/GroupOfferReq"
        },
        "corporateAccountInfo": {
          "$ref": "#/definitions/CorporateAccountInfoReq"
        },
        "bookerId": {
          "$ref": "#/definitions/BookerId"
        },
        "groupHolderId": {
          "$ref": "#/definitions/SegmentHolderId"
        },
        "groupPmsStatus": {
          "$ref": "#/definitions/SegmentPmsStatus"
        },
        "invoiceIds": {
          "maxItems": 1000,
          "type": "array",
          "description": "list of invoice Ids. Each Id is unique in the group",
          "items": {
            "$ref": "#/definitions/InvoiceId"
          },
          "title": "GroupBodyReq-groupBookingReservationRequestInvoiceIds"
        },
        "customData": {
          "$ref": "#/definitions/CustomData"
        },
        "comments": {
          "type": "array",
          "description": "list the comments",
          "items": {
            "$ref": "#/definitions/Comments"
          },
          "title": "GroupBodyReq-groupBookingReservationRequestComments"
        },
        "userProfiles": {
          "$ref": "#/definitions/GroupGuestsReq"
        },
        "option": {
          "type": "string",
          "description": "to differentiate group information view provided by different flow. \"Booking\" option provides detailed group information than \"quote\" option",
          "enum": [
            "Quote",
            "Booking"
          ]
        },
        "keywords": {
          "maxItems": 10,
          "type": "array",
          "description": "list of group keywords",
          "items": {
            "$ref": "#/definitions/Keyword"
          },
          "title": "GroupBodyReq-groupBookingReservationRequestKeywords"
        },
        "customerOwnReference": {
          "$ref": "#/definitions/CustomerOwnReference"
        },
        "purchaseOrderReference": {
          "$ref": "#/definitions/PurchaseOrderReference"
        },
        "distributionChannel": {
          "$ref": "#/definitions/DistributionChannel"
        }
      }
    },
    "GroupReq-groupBookingReservationRequest": {
      "type": "object",
      "title": "GroupReq-groupBookingReservationRequest",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/GroupBodyReq-groupBookingReservationRequest"
        }
      }
    },
    "GuaranteeRequiredPeriod-groupBookingReservation": {
      "minProperties": 1,
      "properties": {
        "start": {
          "description": "start date",
          "type": "string",
          "pattern": "^.*$",
          "format": "date",
          "example": "2019-11-22"
        },
        "end": {
          "description": "end date",
          "type": "string",
          "pattern": "^.*$",
          "format": "date",
          "example": "2019-12-20"
        },
        "isGuaranteeRequired": {
          "description": "if false, guarantee information is not mandatory at the time of booking. If true, Guarantee Information is required at the time of booking",
          "type": "boolean"
        }
      },
      "type": "object",
      "title": "GuaranteeRequiredPeriod-groupBookingReservation"
    },
    "RateReferenceInGroup-groupBookingReservation": {
      "type": "object",
      "properties": {
        "ratePlanCode": {
          "$ref": "#/definitions/RatePlanCode"
        },
        "pricePlanCode": {
          "$ref": "#/definitions/PricePlanCode"
        },
        "relationship": {
          "type": "string",
          "enum": [
            "AttachedPlan",
            "BasePlan"
          ]
        }
      },
      "title": "RateReferenceInGroup-groupBookingReservation"
    },
    "GroupSecurityFlags-groupBookingReservation": {
      "properties": {
        "isExcludedFromGroupsList": {
          "description": "indicate if the Group excluded from Search Groups List",
          "type": "boolean"
        },
        "isRateSecuredFromSNB": {
          "description": "indicates if the Group’s Rates secured from shopping and booking",
          "type": "boolean"
        },
        "isRateSecuredFromReporting": {
          "description": "indicates if the Group's Rates secured from Groups List and Reports",
          "type": "boolean"
        },
        "isGroupDescriptionSecured": {
          "description": "indicates if the Group s Description Secured from Groups List and Reports",
          "type": "boolean"
        },
        "isBookingProcedureSecured": {
          "description": "indicates if the Group Booking Procedures secured from Groups List and Reports",
          "type": "boolean"
        },
        "isRateVisibleForCorporateId": {
          "description": "applicable only if a corporate id is provided. Indicates if the rate is visible",
          "type": "boolean"
        }
      },
      "type": "object",
      "required": [
        "isBookingProcedureSecured",
        "isExcludedFromGroupsList",
        "isGroupDescriptionSecured",
        "isRateSecuredFromReporting",
        "isRateSecuredFromSNB"
      ],
      "title": "GroupSecurityFlags-groupBookingReservation"
    },
    "AdvanceBookingRestriction-groupBookingReservation": {
      "type": "object",
      "title": "AdvanceBookingRestriction-groupBookingReservation",
      "properties": {
        "startDate": {
          "type": "string",
          "example": "2019-04-23",
          "pattern": "[0-9]{4}-[0-9]{2}-[0-3][0-9]",
          "description": "start Date for the check-in period of the advance booking restriction",
          "maxLength": 10
        },
        "endDate": {
          "type": "string",
          "example": "2019-04-29",
          "pattern": "[0-9]{4}-[0-9]{2}-[0-3][0-9]",
          "description": "end date for the check-in period of the advance booking restriction",
          "maxLength": 10
        },
        "dow": {
          "type": "string",
          "pattern": "(M|-)(T|-)(W|-)(T|-)(F|-)(S|-)(S|-)",
          "example": "MT-TFS-",
          "maxLength": 10
        },
        "inventoryTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InventoryTypeCode"
          },
          "title": "AdvanceBookingRestriction-groupBookingReservationInventoryTypes"
        },
        "minOffset": {
          "type": "integer",
          "description": "minimum lead time (in days) that a booking can be created before (or relative to) the check-in date  as a booking restriction",
          "example": 2
        },
        "maxOffset": {
          "type": "integer",
          "description": "maximum lead time (in days) that a booking can be created before (or relative to) the check-in date as a booking restriction",
          "example": 10
        }
      }
    },
    "StayRestriction-groupBookingReservation": {
      "title": "StayRestriction-groupBookingReservation",
      "type": "object",
      "properties": {
        "restrictionType": {
          "type": "string",
          "enum": [
            "ClosedToDeparture",
            "ClosedToArrival",
            "NoStay",
            "RequiredStayOver",
            "LOSRestriction",
            "StayThrough"
          ]
        },
        "id": {
          "type": "string",
          "description": "system generated id for the restriction",
          "readOnly": true,
          "pattern": "^.*$"
        },
        "period": {
          "$ref": "#/definitions/PeriodWithDow"
        },
        "inventoryTypeCode": {
          "type": "string",
          "description": "a code representing the business code for the Inventory type",
          "pattern": "^.*$",
          "example": "KNGN",
          "maxLength": 5
        },
        "yieldClass": {
          "type": "string",
          "description": "yield class on which the restriction applies",
          "pattern": "^.*$",
          "maxLength": 64,
          "minLength": 1
        },
        "daysRanges": {
          "type": "array",
          "description": "indicates the minimum and maximum ranges for a given restriction",
          "items": {
            "type": "object",
            "title": "StayRestriction-groupBookingReservationDaysRangesItem",
            "properties": {
              "min": {
                "type": "integer"
              },
              "max": {
                "type": "integer"
              }
            }
          },
          "title": "StayRestriction-groupBookingReservationDaysRanges"
        },
        "status": {
          "type": "string",
          "description": "input Only , Used to set or unset stay restriction",
          "enum": [
            "Active",
            "Inactive"
          ]
        }
      }
    },
    "Policy-groupBookingReservation": {
      "type": "object",
      "title": "Policy-groupBookingReservation",
      "properties": {
        "policyType": {
          "type": "string",
          "description": "type of the policy",
          "enum": [
            "CancellationPolicy",
            "DepositPolicy",
            "CancellationNoShowPolicy"
          ]
        },
        "level": {
          "type": "string",
          "description": "specifies at which level the policy should apply",
          "enum": [
            "Pickup",
            "Group"
          ]
        },
        "penalty": {
          "$ref": "#/definitions/Penalty"
        },
        "deadline": {
          "$ref": "#/definitions/Deadline"
        },
        "refundPercentage": {
          "type": "string",
          "pattern": "^.*$",
          "description": "percentage of refund applicable"
        },
        "cancellationTime": {
          "type": "string",
          "pattern": "^.*$",
          "example": "08:00:00",
          "description": "cancellation time applicable for the Cancellation and no-show cancellation policy"
        },
        "isFollowingHousePolicy": {
          "type": "boolean",
          "description": "flag indicating if the policy is following house or defined in the scope of the rate plan / group"
        }
      },
      "required": [
        "level",
        "policyType"
      ]
    },
    "PricePoint-groupBookingReservation": {
      "title": "PricePoint-groupBookingReservation",
      "type": "object",
      "minProperties": 1,
      "properties": {
        "computationType": {
          "description": "indicates how the value is used for the amount computation. Flat is the default value",
          "type": "string",
          "enum": [
            "Flat",
            "AmountAdd",
            "AmountOff",
            "PercentAdd",
            "PercentOff"
          ]
        },
        "value": {
          "description": "value of the price point. it could be an amount or a percentage",
          "type": "string",
          "example": "20",
          "pattern": "^.*$"
        },
        "occupancy": {
          "description": "in case the pricing can vary based on the occupancy (number of guests)",
          "type": "integer",
          "example": 2
        },
        "guestType": {
          "description": "in case the pricing can vary based on the guest type",
          "type": "string",
          "pattern": "^.*$"
        }
      },
      "required": [
        "value"
      ]
    },
    "MapOfPricePoints-groupBookingReservation": {
      "type": "object",
      "additionalProperties": {
        "description": "list of amounts",
        "type": "array",
        "items": {
          "$ref": "#/definitions/PricePoint-groupBookingReservation"
        },
        "title": "MapOfPricePoints-groupBookingReservationProperty"
      },
      "example": {
        "ABCD": [
          {
            "value": "110",
            "computationType": "Flat",
            "guestType": "ADULT"
          },
          {
            "value": "85",
            "computationType": "Flat",
            "guestType": "INFANT"
          }
        ],
        "XYZ": [
          {
            "value": "120.00",
            "computationType": "Flat",
            "guestType": "ADULT"
          }
        ]
      },
      "title": "MapOfPricePoints-groupBookingReservation"
    },
    "AmountRule-groupBookingReservation": {
      "title": "AmountRule-groupBookingReservation",
      "type": "object",
      "minProperties": 1,
      "properties": {
        "type": {
          "type": "string",
          "pattern": "^.*$",
          "description": "name of the Data Model, \"AmountRule\"",
          "example": "AmountRule"
        },
        "comment": {
          "type": "string",
          "pattern": "^.*$",
          "description": "comment of the Amount Rules"
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "inventoryTypes": {
          "$ref": "#/definitions/MapOfPricePoints-groupBookingReservation"
        }
      },
      "required": [
        "inventoryTypes",
        "period"
      ]
    },
    "PricePlanInGroup-groupBookingReservation": {
      "properties": {
        "extraPersonCharge": {
          "description": "a non-zero positive value. This charge applies to all inventory types",
          "type": "string",
          "pattern": "^.*$"
        },
        "amountRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AmountRule-groupBookingReservation"
          },
          "title": "PricePlanInGroup-groupBookingReservationAmountRules"
        },
        "chargeMethod": {
          "description": "unit for which the charge applies",
          "type": "string",
          "enum": [
            "PerPerson",
            "PerProduct",
            "PerProductByOccupancy",
            "PerProductPerGuestType"
          ]
        },
        "chargeFrequency": {
          "description": "defines the pricing frequency. Example PerNight for SR or NR; AND PerStay or PerUse for NR only",
          "type": "string",
          "enum": [
            "PerNight",
            "PerStay",
            "PerUse"
          ]
        },
        "bookingPattern": {
          "description": "determines the availability of the Product with respect to the main product",
          "type": "string",
          "enum": [
            "DayOfCheckIn",
            "DayOfCheckOut",
            "Anytime"
          ]
        },
        "productCode": {
          "description": "code representing the product for the given product category for the price plan. Example - SR, BRKF, SPA",
          "type": "string",
          "pattern": "^.*$",
          "example": "BRKF",
          "minLength": 2,
          "maxLength": 8
        }
      },
      "type": "object",
      "title": "PricePlanInGroup-groupBookingReservation"
    },
    "BaseTaxDefinition-groupBookingReservation": {
      "type": "object",
      "required": [
        "taxTypeCode"
      ],
      "properties": {
        "taxTypeCode": {
          "type": "string",
          "pattern": "^.*$",
          "description": "an OTA fee tax type code",
          "example": "12"
        },
        "otaClassification": {
          "type": "string",
          "description": "ota classification to identify the taxes and fees",
          "pattern": "^.*$",
          "minLength": 1,
          "maxLength": 64,
          "example": "Tax, Service Charge"
        },
        "inclusionStatus": {
          "type": "string",
          "description": "whether tax is included in or excluded from rate",
          "enum": [
            "IncludedInRate",
            "ExcludedFromRate"
          ]
        },
        "computationType": {
          "type": "string",
          "description": "type of computation, either Flat or Percentage",
          "enum": [
            "Flat",
            "Percentage"
          ]
        },
        "chargeFrequency": {
          "type": "string",
          "description": "how the tax is computed, once or repeated each day",
          "enum": [
            "PerDay",
            "PerStay"
          ]
        },
        "items": {
          "type": "array",
          "description": "which sellable items are taxed",
          "items": {
            "$ref": "#/definitions/TaxItem"
          },
          "title": "BaseTaxDefinition-groupBookingReservationItems"
        }
      },
      "title": "BaseTaxDefinition-groupBookingReservation"
    },
    "TaxPeriod-groupBookingReservation": {
      "type": "object",
      "description": "restriction on when the value applies",
      "required": [
        "values"
      ],
      "properties": {
        "dow": {
          "description": "list of applicable days of weeks. 'MTWTFSS' for all days of weeks. A dash is present for any missing day. For instance, 'MT-----' for Monday and Tuesday only, '-T-T---' for Tuesday and Thursday only",
          "type": "string",
          "pattern": "^[M-][T-][W-][T-][F-][S-][S-]$",
          "maxLength": 7
        },
        "values": {
          "type": "array",
          "maxItems": 50,
          "description": "values per criteria",
          "items": {
            "$ref": "#/definitions/TaxValue"
          },
          "title": "TaxPeriod-groupBookingReservationValues"
        }
      },
      "title": "TaxPeriod-groupBookingReservation"
    },
    "GroupTaxDefinition-groupBookingReservation": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseTaxDefinition-groupBookingReservation"
        },
        {
          "type": "object",
          "properties": {
            "periods": {
              "type": "array",
              "description": "values per periods",
              "items": {
                "$ref": "#/definitions/TaxPeriod-groupBookingReservation"
              },
              "title": "GroupTaxDefinition-groupBookingReservationallOf1Periods"
            }
          },
          "title": "GroupTaxDefinition-groupBookingReservationallOf1"
        },
        {
          "type": "object",
          "properties": {},
          "title": "GroupTaxDefinition-groupBookingReservationallOf2"
        }
      ],
      "title": "GroupTaxDefinition-groupBookingReservation"
    },
    "TaxDefinitionWithId-groupBookingReservation": {
      "allOf": [
        {
          "$ref": "#/definitions/GroupTaxDefinition-groupBookingReservation"
        },
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "pattern": "^[0-9A-Z]{1,8}$",
              "description": "unique system generated ID of a tax/fee"
            }
          }
        }
      ],
      "title": "TaxDefinitionWithId-groupBookingReservation"
    },
    "GroupContract-groupBookingReservation": {
      "title": "GroupContract-groupBookingReservation",
      "type": "object",
      "description": "group contract data model",
      "properties": {
        "name": {
          "description": "group name",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 100
        },
        "externalPmsId": {
          "description": "external group ID may be used to identify a Group along with Property and Group Code. Set on the PMS only and stored with the group",
          "type": "string",
          "maxLength": 50,
          "pattern": "^.*$"
        },
        "flow": {
          "description": "determines if the group is created online (on the fly) or offline (default)",
          "type": "string",
          "enum": [
            "Offline",
            "Online"
          ],
          "default": "Offline"
        },
        "isAllotment": {
          "description": "indicates if the contract corresponds to an allotment (isAllotment = true) or to a \"normal\" group (isAllotment = false)",
          "type": "boolean",
          "default": false
        },
        "saleStatus": {
          "description": "for identification of a group sale status so that the group can be picked up",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 50
        },
        "readyForPickup": {
          "description": "indicates if the group is ready for pickup or not",
          "type": "boolean"
        },
        "propertyMarketSegment": {
          "description": "determines the market segmentation for the group as defined for the property",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 50
        },
        "corporateMarketSegment": {
          "description": "determines the market segmentation for the group as defined for the corporate",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 50
        },
        "industryType": {
          "description": "determines the industry type for the group",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 50
        },
        "policyTypeCode": {
          "description": "policy type code associated to the group",
          "type": "string",
          "pattern": "^.*$",
          "minLength": 1,
          "maxLength": 20
        },
        "corporateId": {
          "description": "corporate Id",
          "type": "string",
          "maxLength": 50,
          "pattern": "^.*$"
        },
        "isHousing": {
          "description": "indicates if group booking is limited to the hotel associated with the group or accepted from any hotel or reservation office",
          "type": "boolean"
        },
        "isCommissionable": {
          "description": "indicates if the group is subject to commission ( = true) or not  ( = false)",
          "type": "boolean"
        },
        "isGuaranteeRequired": {
          "description": "indicates if guarantee is required for the group or not",
          "type": "boolean"
        },
        "isElastic": {
          "description": "indicates if the group is Elastic or not. By default, a group is not elastic",
          "type": "boolean"
        },
        "allowExtraDays": {
          "description": "indicates if the period of the reservations booking on the group can be partially outside of the group period",
          "type": "boolean"
        },
        "applyHouseEarlyDepartureFee": {
          "description": "indicates if the group is subject to early departures fee ( = true) or not  ( = false)",
          "type": "boolean"
        },
        "isFollowingHousePolicy": {
          "description": "flag indicating if the policy is following house or defined in the scope of the rate plan / group",
          "type": "boolean"
        },
        "period": {
          "$ref": "#/definitions/StartEnd"
        },
        "corePeriod": {
          "$ref": "#/definitions/StartEnd"
        },
        "guaranteeRequiredPeriods": {
          "description": "allows user to set a specific guarantee policy per day. Takes priority upon isGuaranteeRequired at groupContract level",
          "type": "array",
          "maxItems": 2000,
          "items": {
            "$ref": "#/definitions/GuaranteeRequiredPeriod-groupBookingReservation"
          },
          "title": "GroupContract-groupBookingReservationGuaranteeRequiredPeriods"
        },
        "descriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupDescription"
          },
          "title": "GroupContract-groupBookingReservationDescriptions"
        },
        "rateReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RateReferenceInGroup-groupBookingReservation"
          },
          "title": "GroupContract-groupBookingReservationRateReferences"
        },
        "security": {
          "$ref": "#/definitions/GroupSecurityFlags-groupBookingReservation"
        },
        "advanceBookingRestrictions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdvanceBookingRestriction-groupBookingReservation"
          },
          "title": "GroupContract-groupBookingReservationAdvanceBookingRestrictions"
        },
        "stayRestrictions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StayRestriction-groupBookingReservation"
          },
          "title": "GroupContract-groupBookingReservationStayRestrictions"
        },
        "policies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Policy-groupBookingReservation"
          },
          "title": "GroupContract-groupBookingReservationPolicies"
        },
        "pricePlans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PricePlanInGroup-groupBookingReservation"
          },
          "title": "GroupContract-groupBookingReservationPricePlans"
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product"
          },
          "title": "GroupContract-groupBookingReservationProducts"
        },
        "taxes": {
          "type": "array",
          "description": "array of taxes of the group contract",
          "items": {
            "$ref": "#/definitions/TaxDefinitionWithId-groupBookingReservation"
          },
          "title": "GroupContract-groupBookingReservationTaxes"
        },
        "commission": {
          "description": "commission type and value",
          "$ref": "#/definitions/Commission"
        },
        "policyAssociations": {
          "type": "array",
          "description": "policies that are applied to the group from the policy catalogue",
          "items": {
            "$ref": "#/definitions/PolicyAssociation"
          },
          "title": "GroupContract-groupBookingReservationPolicyAssociations"
        }
      },
      "required": [
        "isCommissionable",
        "isHousing",
        "name",
        "period"
      ]
    },
    "GroupContractAndReleaseRules-groupBookingReservation": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GroupContract-groupBookingReservation"
        },
        {
          "type": "object",
          "properties": {
            "inventory": {
              "$ref": "#/definitions/GroupInventoryReleaseRules"
            }
          },
          "title": "GroupContractAndReleaseRules-groupBookingReservationallOf1"
        }
      ],
      "title": "GroupContractAndReleaseRules-groupBookingReservation"
    },
    "ReportingData-groupBookingReservation": {
      "description": "contains information conveyed for Reporting use only",
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/ReportingCode"
        }
      },
      "title": "ReportingData-groupBookingReservation"
    },
    "PointOfSale-groupBookingReservation": {
      "type": "object",
      "required": [
        "vendorCode",
        "channelCode"
      ],
      "properties": {
        "hotelSource": {
          "$ref": "#/definitions/PropertyCode"
        },
        "vendorCode": {
          "$ref": "#/definitions/VendorCode"
        },
        "vendorTypes": {
          "description": "the vendor type code [0 = Unknown, 1 = PMS, 2 = booking tool, 3 = brand website, 4 = GDS/3rd party website, 5 = mobile, 6 = alternate distribution system]",
          "type": "array",
          "items": {
            "type": "integer",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6
            ]
          },
          "title": "PointOfSale-groupBookingReservationVendorTypes"
        },
        "channelCode": {
          "$ref": "#/definitions/ChannelCode"
        },
        "channelSubCode": {
          "$ref": "#/definitions/ChannelCode"
        },
        "metricsCode": {
          "$ref": "#/definitions/MetricsCode"
        },
        "travelAgencyInfo": {
          "$ref": "#/definitions/TravelAgencyInformation"
        },
        "origin": {
          "description": "indicates the Expedia channel that was used for the reservation, if relevant",
          "type": "string",
          "pattern": "^.*$"
        },
        "callCenterInformation": {
          "description": "list of call centers information",
          "type": "array",
          "maxItems": 2,
          "items": {
            "$ref": "#/definitions/CallCenterInformation"
          },
          "title": "PointOfSale-groupBookingReservationCallCenterInformation"
        },
        "reportingData": {
          "$ref": "#/definitions/ReportingData-groupBookingReservation"
        }
      },
      "title": "PointOfSale-groupBookingReservation"
    },
    "CountersPerInventoryTypeRes-groupBookingReservation": {
      "title": "CountersPerInventoryTypeRes-groupBookingReservation",
      "type": "object",
      "description": "inventory details about group",
      "properties": {
        "isFlowThrough": {
          "type": "boolean",
          "default": false,
          "description": "sleeping Room Product Type Flow Through flag for this Group. This is the flag indicating if the Sleeping Room Product Type is Flow Through"
        },
        "allocated": {
          "type": "integer",
          "description": "this is the maximum number of rooms that can be sold for this Group (guaranteed and non guaranteed rooms)"
        },
        "originalAllocated": {
          "type": "array",
          "description": "this is the first value greater than 0 set for the allocated number of rooms for this Sleeping Room Product Type",
          "maxItems": 2000,
          "items": {
            "$ref": "#/definitions/OriginalAllocated"
          },
          "title": "CountersPerInventoryTypeRes-groupBookingReservationOriginalAllocated"
        },
        "deducted": {
          "type": "integer",
          "description": "number of Deducted (Authorized - AU) rooms for the given period out of the Contracted/Allocated number of rooms"
        }
      }
    },
    "GroupProductUseRes-groupBookingReservation": {
      "title": "GroupProductUseRes-groupBookingReservation",
      "type": "object",
      "required": [
        "guestCounts",
        "period",
        "inventoryTypeCode"
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/ProductUseId"
        },
        "period": {
          "$ref": "#/definitions/StartEnd-0"
        },
        "inventoryTypeCode": {
          "$ref": "#/definitions/InventoryTypeCode"
        },
        "guestCounts": {
          "type": "array",
          "description": "guest type and guest age information",
          "items": {
            "$ref": "#/definitions/GuestCountRes"
          },
          "title": "GroupProductUseRes-groupBookingReservationGuestCounts"
        },
        "countersPerInventoryType": {
          "$ref": "#/definitions/CountersPerInventoryTypeRes-groupBookingReservation"
        }
      }
    },
    "GroupOfferRes-groupBookingReservation": {
      "type": "object",
      "title": "GroupOfferRes-groupBookingReservation",
      "description": "details about the selected offer",
      "required": [
        "productUses"
      ],
      "properties": {
        "productUses": {
          "type": "array",
          "description": "list of product uses",
          "items": {
            "$ref": "#/definitions/GroupProductUseRes-groupBookingReservation"
          },
          "title": "GroupOfferRes-groupBookingReservationProductUses"
        },
        "fees": {
          "type": "array",
          "description": "list of fees only used for modify and cancel actions",
          "items": {
            "$ref": "#/definitions/Fees"
          },
          "title": "GroupOfferRes-groupBookingReservationFees"
        },
        "ratePlanCode": {
          "$ref": "#/definitions/RatePlanCode"
        }
      }
    },
    "TaxDefinition-groupBookingReservation": {
      "description": "the applicable rules of taxes for a given tax change of the stay",
      "type": "object",
      "required": [
        "id",
        "chargeFrequency",
        "chargeUnit",
        "value",
        "valueType",
        "isInclusive",
        "start",
        "end"
      ],
      "properties": {
        "id": {
          "description": "an unique ID for this tax definition item. Referenced in rates tax breakdown",
          "type": "integer"
        },
        "taxCode": {
          "description": "tax code",
          "type": "string",
          "pattern": "^.*$",
          "minLength": 1,
          "maxLength": 20
        },
        "otaCode": {
          "$ref": "#/definitions/OtaTaxCode"
        },
        "productCodes": {
          "type": "array",
          "description": "product code of tax",
          "minItems": 1,
          "maxItems": 99,
          "items": {
            "$ref": "#/definitions/ProductCode"
          },
          "title": "TaxDefinition-groupBookingReservationProductCodes"
        },
        "description": {
          "$ref": "#/definitions/Description"
        },
        "longDescription": {
          "$ref": "#/definitions/Description"
        },
        "name": {
          "description": "name of the tax",
          "type": "string",
          "pattern": "^.*$",
          "minLength": 1,
          "maxLength": 99
        },
        "taxOn": {
          "description": "tax application mode (on Tax(tax on tax), on Net(tax on amount before taxes), on Rate(tax on amount containing included taxes and excluding excluded taxes, default value))",
          "type": "string",
          "enum": [
            "Rate",
            "Net",
            "Tax"
          ]
        },
        "chargeFrequency": {
          "$ref": "#/definitions/ChargeFrequency"
        },
        "chargeUnit": {
          "$ref": "#/definitions/ChargeUnit"
        },
        "value": {
          "$ref": "#/definitions/Value"
        },
        "currency": {
          "$ref": "#/definitions/Currency"
        },
        "valueType": {
          "$ref": "#/definitions/ValueType"
        },
        "isInclusive": {
          "$ref": "#/definitions/IsInclusive"
        },
        "start": {
          "description": "first date on which the tax definition item applies (for the requested stay)",
          "type": "string",
          "pattern": "^.*$",
          "format": "date",
          "maxLength": 25
        },
        "end": {
          "description": "last date on which the tax applies (for the requested stay)",
          "type": "string",
          "pattern": "^.*$",
          "format": "date",
          "maxLength": 25
        },
        "dow": {
          "$ref": "#/definitions/Dow"
        }
      },
      "title": "TaxDefinition-groupBookingReservation"
    },
    "TaxDefinitionShopping-groupBookingReservation": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaxDefinition-groupBookingReservation"
        },
        {
          "type": "object",
          "properties": {},
          "title": "TaxDefinitionShopping-groupBookingReservationallOf1"
        }
      ],
      "title": "TaxDefinitionShopping-groupBookingReservation"
    },
    "GroupBodyRes-groupBookingReservation": {
      "title": "GroupBodyRes-groupBookingReservation",
      "description": "full representation of group record",
      "type": "object",
      "required": [
        "status",
        "imageStatus",
        "creationDateTime",
        "lastUpdateDateTime",
        "groupIds",
        "hotel"
      ],
      "properties": {
        "status": {
          "$ref": "#/definitions/Status"
        },
        "imageStatus": {
          "$ref": "#/definitions/ImageStatus"
        },
        "creationDateTime": {
          "$ref": "#/definitions/CreateDateTime"
        },
        "lastUpdateDateTime": {
          "$ref": "#/definitions/LastUpdateDateTime"
        },
        "lastUpdateDateTimeHotelLocalTime": {
          "$ref": "#/definitions/LastUpdateDateTimeHotelLocalTime"
        },
        "cancellationDateTime": {
          "$ref": "#/definitions/CancellationDateTime"
        },
        "purgeDateTime": {
          "$ref": "#/definitions/PurgeDateTime"
        },
        "authenticatedUser": {
          "$ref": "#/definitions/AuthenticatedUser-0"
        },
        "impersonatedUser": {
          "title": "impersonatedUser",
          "$ref": "#/definitions/AuthenticatedUser-1"
        },
        "groupIds": {
          "$ref": "#/definitions/GroupBodyIdsRes"
        },
        "hotel": {
          "$ref": "#/definitions/GroupHotelRes"
        },
        "products": {
          "type": "array",
          "description": "the list of products (base product + attribute(s)) returned",
          "items": {
            "$ref": "#/definitions/DictionaryProducts"
          },
          "title": "GroupBodyRes-groupBookingReservationProducts"
        },
        "attributes": {
          "type": "array",
          "description": "the list of attributes",
          "items": {
            "$ref": "#/definitions/Attribute"
          },
          "title": "GroupBodyRes-groupBookingReservationAttributes"
        },
        "groupContract": {
          "$ref": "#/definitions/GroupContractAndReleaseRules-groupBookingReservation"
        },
        "userProfiles": {
          "$ref": "#/definitions/GroupGuestsRes"
        },
        "totalGroup": {
          "type": "array",
          "description": "list of totals per currency",
          "items": {
            "$ref": "#/definitions/TotalGroup"
          },
          "title": "GroupBodyRes-groupBookingReservationTotalGroup"
        },
        "comments": {
          "type": "array",
          "description": "list the comments",
          "items": {
            "$ref": "#/definitions/Comments"
          },
          "title": "GroupBodyRes-groupBookingReservationComments"
        },
        "customData": {
          "$ref": "#/definitions/CustomData"
        },
        "invoiceIds": {
          "type": "array",
          "description": "list of invoice Ids. Each Id is unique in the group",
          "items": {
            "$ref": "#/definitions/InvoiceId"
          },
          "title": "GroupBodyRes-groupBookingReservationInvoiceIds"
        },
        "groupHolderId": {
          "$ref": "#/definitions/SegmentHolderId"
        },
        "groupPmsStatus": {
          "$ref": "#/definitions/SegmentPmsStatus"
        },
        "isGroupHolderNameModified": {
          "type": "boolean",
          "description": "indicates that the group holder name of the current  mage is different from the one the previous committed image"
        },
        "bookerId": {
          "$ref": "#/definitions/BookerId"
        },
        "creator": {
          "$ref": "#/definitions/PointOfSale-groupBookingReservation-0"
        },
        "requestor": {
          "$ref": "#/definitions/PointOfSale-groupBookingReservation-1"
        },
        "owner": {
          "$ref": "#/definitions/GroupOwner"
        },
        "corporateAccountInfo": {
          "$ref": "#/definitions/CorporateAccountInfoRes"
        },
        "offer": {
          "$ref": "#/definitions/GroupOfferRes-groupBookingReservation"
        },
        "formOfPayment": {
          "$ref": "#/definitions/FormOfPaymentRes"
        },
        "taxDefinitions": {
          "type": "array",
          "description": "the applicable rules of taxes for each tax change of the segment",
          "items": {
            "$ref": "#/definitions/TaxDefinitionShopping-groupBookingReservation"
          },
          "title": "GroupBodyRes-groupBookingReservationTaxDefinitions"
        },
        "cancellationReasons": {
          "type": "array",
          "description": "description about reasons for cancelling group ",
          "items": {
            "$ref": "#/definitions/CancellationReason"
          },
          "title": "GroupBodyRes-groupBookingReservationCancellationReasons"
        },
        "guestTypeDefinitions": {
          "type": "array",
          "description": "guest type set-up defined in the property",
          "items": {
            "$ref": "#/definitions/GuestTypeDefinition"
          },
          "title": "GroupBodyRes-groupBookingReservationGuestTypeDefinitions"
        },
        "arrivalTime": {
          "$ref": "#/definitions/ArrivalTime"
        },
        "departureTime": {
          "$ref": "#/definitions/DepartureTime"
        },
        "travelPurpose": {
          "$ref": "#/definitions/TravelPurpose"
        },
        "businessSource": {
          "$ref": "#/definitions/BusinessSource"
        },
        "reservationMethod": {
          "$ref": "#/definitions/ReservationMethod"
        },
        "language": {
          "$ref": "#/definitions/Language"
        },
        "languageLocality": {
          "$ref": "#/definitions/LanguageLocality"
        },
        "statusBeforeCancellation": {
          "$ref": "#/definitions/StatusBeforeCancellation"
        },
        "keywords": {
          "maxItems": 10,
          "type": "array",
          "description": "list of group keywords",
          "items": {
            "$ref": "#/definitions/Keyword"
          },
          "title": "GroupBodyRes-groupBookingReservationKeywords"
        },
        "customerOwnReference": {
          "$ref": "#/definitions/CustomerOwnReference"
        },
        "purchaseOrderReference": {
          "$ref": "#/definitions/PurchaseOrderReference"
        },
        "distributionChannel": {
          "$ref": "#/definitions/DistributionChannel"
        }
      }
    },
    "GroupRes-groupBookingReservation": {
      "type": "object",
      "title": "GroupRes-groupBookingReservation",
      "properties": {
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Warning"
          },
          "title": "GroupRes-groupBookingReservationWarnings"
        },
        "data": {
          "title": "GroupRes-groupBookingReservationData",
          "type": "object",
          "properties": {
            "group": {
              "$ref": "#/definitions/GroupBodyRes-groupBookingReservation"
            }
          }
        }
      }
    },
    "GuaranteeRequiredPeriod-groupBookingRetrieve": {
      "minProperties": 1,
      "properties": {
        "start": {
          "description": "start date",
          "type": "string",
          "pattern": "^.*$",
          "format": "date",
          "example": "2019-11-22"
        },
        "end": {
          "description": "end date",
          "type": "string",
          "pattern": "^.*$",
          "format": "date",
          "example": "2019-12-20"
        },
        "isGuaranteeRequired": {
          "description": "if false, guarantee information is not mandatory at the time of booking. If true, Guarantee Information is required at the time of booking",
          "type": "boolean"
        }
      },
      "type": "object",
      "title": "GuaranteeRequiredPeriod-groupBookingRetrieve"
    },
    "RateReferenceInGroup-groupBookingRetrieve": {
      "type": "object",
      "properties": {
        "ratePlanCode": {
          "$ref": "#/definitions/RatePlanCode"
        },
        "pricePlanCode": {
          "$ref": "#/definitions/PricePlanCode"
        },
        "relationship": {
          "type": "string",
          "enum": [
            "AttachedPlan",
            "BasePlan"
          ]
        }
      },
      "title": "RateReferenceInGroup-groupBookingRetrieve"
    },
    "AdvanceBookingRestriction-groupBookingRetrieve": {
      "type": "object",
      "title": "AdvanceBookingRestriction-groupBookingRetrieve",
      "properties": {
        "startDate": {
          "type": "string",
          "example": "2019-04-23",
          "pattern": "[0-9]{4}-[0-9]{2}-[0-3][0-9]",
          "description": "start Date for the check-in period of the advance booking restriction",
          "maxLength": 10
        },
        "endDate": {
          "type": "string",
          "example": "2019-04-29",
          "pattern": "[0-9]{4}-[0-9]{2}-[0-3][0-9]",
          "description": "end date for the check-in period of the advance booking restriction",
          "maxLength": 10
        },
        "dow": {
          "type": "string",
          "pattern": "(M|-)(T|-)(W|-)(T|-)(F|-)(S|-)(S|-)",
          "example": "MT-TFS-",
          "maxLength": 10
        },
        "inventoryTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InventoryTypeCode"
          },
          "title": "AdvanceBookingRestriction-groupBookingRetrieveInventoryTypes"
        },
        "minOffset": {
          "type": "integer",
          "description": "minimum lead time (in days) that a booking can be created before (or relative to) the check-in date  as a booking restriction",
          "example": 2
        },
        "maxOffset": {
          "type": "integer",
          "description": "maximum lead time (in days) that a booking can be created before (or relative to) the check-in date as a booking restriction",
          "example": 10
        }
      }
    },
    "StayRestriction-groupBookingRetrieve": {
      "title": "StayRestriction-groupBookingRetrieve",
      "type": "object",
      "properties": {
        "restrictionType": {
          "type": "string",
          "enum": [
            "ClosedToDeparture",
            "ClosedToArrival",
            "NoStay",
            "RequiredStayOver",
            "LOSRestriction",
            "StayThrough"
          ]
        },
        "id": {
          "type": "string",
          "description": "system generated id for the restriction",
          "readOnly": true,
          "pattern": "^.*$"
        },
        "period": {
          "$ref": "#/definitions/PeriodWithDow"
        },
        "inventoryTypeCode": {
          "type": "string",
          "description": "a code representing the business code for the Inventory type",
          "pattern": "^.*$",
          "example": "KNGN",
          "maxLength": 5
        },
        "yieldClass": {
          "type": "string",
          "description": "yield class on which the restriction applies",
          "pattern": "^.*$",
          "maxLength": 64,
          "minLength": 1
        },
        "daysRanges": {
          "type": "array",
          "description": "indicates the minimum and maximum ranges for a given restriction",
          "items": {
            "type": "object",
            "title": "StayRestriction-groupBookingRetrieveDaysRangesItem",
            "properties": {
              "min": {
                "type": "integer"
              },
              "max": {
                "type": "integer"
              }
            }
          },
          "title": "StayRestriction-groupBookingRetrieveDaysRanges"
        },
        "status": {
          "type": "string",
          "description": "input Only , Used to set or unset stay restriction",
          "enum": [
            "Active",
            "Inactive"
          ]
        }
      }
    },
    "AmountRule-groupBookingRetrieve": {
      "title": "AmountRule-groupBookingRetrieve",
      "type": "object",
      "minProperties": 1,
      "properties": {
        "type": {
          "type": "string",
          "pattern": "^.*$",
          "description": "name of the Data Model, \"AmountRule\"",
          "example": "AmountRule"
        },
        "comment": {
          "type": "string",
          "pattern": "^.*$",
          "description": "comment of the Amount Rules"
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "inventoryTypes": {
          "$ref": "#/definitions/MapOfPricePoints"
        }
      }
    },
    "PricePlanInGroup-groupBookingRetrieve": {
      "properties": {
        "extraPersonCharge": {
          "description": "a non-zero positive value. This charge applies to all inventory types",
          "type": "string",
          "pattern": "^.*$"
        },
        "amountRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AmountRule-groupBookingRetrieve"
          },
          "title": "PricePlanInGroup-groupBookingRetrieveAmountRules"
        },
        "chargeMethod": {
          "description": "unit for which the charge applies",
          "type": "string",
          "enum": [
            "PerPerson",
            "PerProduct",
            "PerProductByOccupancy",
            "PerProductPerGuestType"
          ]
        },
        "chargeFrequency": {
          "description": "defines the pricing frequency. Example PerNight for SR or NR; AND PerStay or PerUse for NR only",
          "type": "string",
          "enum": [
            "PerNight",
            "PerStay",
            "PerUse"
          ]
        },
        "bookingPattern": {
          "description": "determines the availability of the Product with respect to the main product",
          "type": "string",
          "enum": [
            "DayOfCheckIn",
            "DayOfCheckOut",
            "Anytime"
          ]
        },
        "productCode": {
          "description": "code representing the product for the given product category for the price plan. Example - SR, BRKF, SPA",
          "type": "string",
          "pattern": "^.*$",
          "example": "BRKF",
          "minLength": 2,
          "maxLength": 8
        }
      },
      "type": "object",
      "title": "PricePlanInGroup-groupBookingRetrieve"
    },
    "BaseTaxDefinition-groupBookingRetrieve": {
      "type": "object",
      "required": [
        "taxTypeCode",
        "items"
      ],
      "properties": {
        "taxTypeCode": {
          "type": "string",
          "pattern": "^.*$",
          "description": "an OTA fee tax type code",
          "example": "12"
        },
        "otaClassification": {
          "type": "string",
          "description": "ota classification to identify the taxes and fees",
          "pattern": "^.*$",
          "minLength": 1,
          "maxLength": 64,
          "example": "Tax, Service Charge"
        },
        "inclusionStatus": {
          "type": "string",
          "description": "whether tax is included in or excluded from rate",
          "enum": [
            "IncludedInRate",
            "ExcludedFromRate"
          ]
        },
        "computationType": {
          "type": "string",
          "description": "type of computation, either Flat or Percentage",
          "enum": [
            "Flat",
            "Percentage"
          ]
        },
        "chargeFrequency": {
          "type": "string",
          "description": "how the tax is computed, once or repeated each day",
          "enum": [
            "PerDay",
            "PerStay"
          ]
        },
        "items": {
          "type": "array",
          "description": "which sellable items are taxed",
          "items": {
            "$ref": "#/definitions/TaxItem"
          },
          "title": "BaseTaxDefinition-groupBookingRetrieveItems"
        }
      },
      "title": "BaseTaxDefinition-groupBookingRetrieve"
    },
    "TaxPeriod-groupBookingRetrieve": {
      "type": "object",
      "description": "restriction on when the value applies",
      "required": [
        "dow"
      ],
      "properties": {
        "dow": {
          "description": "list of applicable days of weeks. 'MTWTFSS' for all days of weeks. A dash is present for any missing day. For instance, 'MT-----' for Monday and Tuesday only, '-T-T---' for Tuesday and Thursday only",
          "type": "string",
          "pattern": "^[M-][T-][W-][T-][F-][S-][S-]$",
          "maxLength": 7
        },
        "values": {
          "type": "array",
          "maxItems": 50,
          "description": "values per criteria",
          "items": {
            "$ref": "#/definitions/TaxValue"
          },
          "title": "TaxPeriod-groupBookingRetrieveValues"
        }
      },
      "title": "TaxPeriod-groupBookingRetrieve"
    },
    "GroupTaxDefinition-groupBookingRetrieve": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseTaxDefinition-groupBookingRetrieve"
        },
        {
          "type": "object",
          "properties": {
            "periods": {
              "type": "array",
              "description": "values per periods",
              "items": {
                "$ref": "#/definitions/TaxPeriod-groupBookingRetrieve"
              },
              "title": "GroupTaxDefinition-groupBookingRetrieveallOf1Periods"
            }
          },
          "title": "GroupTaxDefinition-groupBookingRetrieveallOf1"
        },
        {
          "type": "object",
          "properties": {},
          "title": "GroupTaxDefinition-groupBookingRetrieveallOf2"
        }
      ],
      "title": "GroupTaxDefinition-groupBookingRetrieve"
    },
    "TaxDefinitionWithId-groupBookingRetrieve": {
      "allOf": [
        {
          "$ref": "#/definitions/GroupTaxDefinition-groupBookingRetrieve"
        },
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "pattern": "^[0-9A-Z]{1,8}$",
              "description": "unique system generated ID of a tax/fee"
            }
          }
        }
      ],
      "title": "TaxDefinitionWithId-groupBookingRetrieve"
    },
    "GroupContract-groupBookingRetrieve": {
      "title": "GroupContract-groupBookingRetrieve",
      "type": "object",
      "description": "group contract data model",
      "properties": {
        "name": {
          "description": "group name",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 100
        },
        "externalPmsId": {
          "description": "external group ID may be used to identify a Group along with Property and Group Code. Set on the PMS only and stored with the group",
          "type": "string",
          "maxLength": 50,
          "pattern": "^.*$"
        },
        "flow": {
          "description": "determines if the group is created online (on the fly) or offline (default)",
          "type": "string",
          "enum": [
            "Offline",
            "Online"
          ],
          "default": "Offline"
        },
        "isAllotment": {
          "description": "indicates if the contract corresponds to an allotment (isAllotment = true) or to a \"normal\" group (isAllotment = false)",
          "type": "boolean",
          "default": false
        },
        "saleStatus": {
          "description": "for identification of a group sale status so that the group can be picked up",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 50
        },
        "readyForPickup": {
          "description": "indicates if the group is ready for pickup or not",
          "type": "boolean"
        },
        "propertyMarketSegment": {
          "description": "determines the market segmentation for the group as defined for the property",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 50
        },
        "corporateMarketSegment": {
          "description": "determines the market segmentation for the group as defined for the corporate",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 50
        },
        "industryType": {
          "description": "determines the industry type for the group",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 50
        },
        "policyTypeCode": {
          "description": "policy type code associated to the group",
          "type": "string",
          "pattern": "^.*$",
          "minLength": 1,
          "maxLength": 20
        },
        "corporateId": {
          "description": "corporate Id",
          "type": "string",
          "maxLength": 50,
          "pattern": "^.*$"
        },
        "isHousing": {
          "description": "indicates if group booking is limited to the hotel associated with the group or accepted from any hotel or reservation office",
          "type": "boolean"
        },
        "isCommissionable": {
          "description": "indicates if the group is subject to commission ( = true) or not  ( = false)",
          "type": "boolean"
        },
        "isGuaranteeRequired": {
          "description": "indicates if guarantee is required for the group or not",
          "type": "boolean"
        },
        "isElastic": {
          "description": "indicates if the group is Elastic or not. By default, a group is not elastic",
          "type": "boolean"
        },
        "allowExtraDays": {
          "description": "indicates if the period of the reservations booking on the group can be partially outside of the group period",
          "type": "boolean"
        },
        "applyHouseEarlyDepartureFee": {
          "description": "indicates if the group is subject to early departures fee ( = true) or not  ( = false)",
          "type": "boolean"
        },
        "isFollowingHousePolicy": {
          "description": "flag indicating if the policy is following house or defined in the scope of the rate plan / group",
          "type": "boolean"
        },
        "period": {
          "$ref": "#/definitions/StartEnd"
        },
        "corePeriod": {
          "$ref": "#/definitions/StartEnd"
        },
        "guaranteeRequiredPeriods": {
          "description": "allows user to set a specific guarantee policy per day. Takes priority upon isGuaranteeRequired at groupContract level",
          "type": "array",
          "maxItems": 2000,
          "items": {
            "$ref": "#/definitions/GuaranteeRequiredPeriod-groupBookingRetrieve"
          },
          "title": "GroupContract-groupBookingRetrieveGuaranteeRequiredPeriods"
        },
        "descriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupDescription"
          },
          "title": "GroupContract-groupBookingRetrieveDescriptions"
        },
        "rateReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RateReferenceInGroup-groupBookingRetrieve"
          },
          "title": "GroupContract-groupBookingRetrieveRateReferences"
        },
        "security": {
          "$ref": "#/definitions/GroupSecurityFlags"
        },
        "advanceBookingRestrictions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdvanceBookingRestriction-groupBookingRetrieve"
          },
          "title": "GroupContract-groupBookingRetrieveAdvanceBookingRestrictions"
        },
        "stayRestrictions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StayRestriction-groupBookingRetrieve"
          },
          "title": "GroupContract-groupBookingRetrieveStayRestrictions"
        },
        "policies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Policy"
          },
          "title": "GroupContract-groupBookingRetrievePolicies"
        },
        "pricePlans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PricePlanInGroup-groupBookingRetrieve"
          },
          "title": "GroupContract-groupBookingRetrievePricePlans"
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product"
          },
          "title": "GroupContract-groupBookingRetrieveProducts"
        },
        "taxes": {
          "type": "array",
          "description": "array of taxes of the group contract",
          "items": {
            "$ref": "#/definitions/TaxDefinitionWithId-groupBookingRetrieve"
          },
          "title": "GroupContract-groupBookingRetrieveTaxes"
        },
        "commission": {
          "description": "commission type and value",
          "$ref": "#/definitions/Commission"
        },
        "policyAssociations": {
          "type": "array",
          "description": "policies that are applied to the group from the policy catalogue",
          "items": {
            "$ref": "#/definitions/PolicyAssociation"
          },
          "title": "GroupContract-groupBookingRetrievePolicyAssociations"
        }
      }
    },
    "GroupContractAndInventory-groupBookingRetrieve": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GroupContract-groupBookingRetrieve"
        },
        {
          "type": "object",
          "properties": {
            "inventory": {
              "$ref": "#/definitions/GroupInventory"
            }
          },
          "title": "GroupContractAndInventory-groupBookingRetrieveallOf1"
        }
      ],
      "title": "GroupContractAndInventory-groupBookingRetrieve"
    },
    "ReportingData-groupBookingRetrieve": {
      "description": "contains information conveyed for Reporting use only",
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/ReportingCode"
        }
      },
      "title": "ReportingData-groupBookingRetrieve"
    },
    "PointOfSale-groupBookingRetrieve": {
      "type": "object",
      "required": [
        "vendorCode",
        "channelCode"
      ],
      "properties": {
        "hotelSource": {
          "$ref": "#/definitions/PropertyCode"
        },
        "vendorCode": {
          "$ref": "#/definitions/VendorCode"
        },
        "vendorTypes": {
          "description": "the vendor type code [0 = Unknown, 1 = PMS, 2 = booking tool, 3 = brand website, 4 = GDS/3rd party website, 5 = mobile, 6 = alternate distribution system]",
          "type": "array",
          "items": {
            "type": "integer",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6
            ]
          },
          "title": "PointOfSale-groupBookingRetrieveVendorTypes"
        },
        "channelCode": {
          "$ref": "#/definitions/ChannelCode"
        },
        "channelSubCode": {
          "$ref": "#/definitions/ChannelCode"
        },
        "metricsCode": {
          "$ref": "#/definitions/MetricsCode"
        },
        "travelAgencyInfo": {
          "$ref": "#/definitions/TravelAgencyInformation"
        },
        "origin": {
          "description": "indicates the Expedia channel that was used for the reservation, if relevant",
          "type": "string",
          "pattern": "^.*$"
        },
        "callCenterInformation": {
          "description": "list of call centers information",
          "type": "array",
          "maxItems": 2,
          "items": {
            "$ref": "#/definitions/CallCenterInformation"
          },
          "title": "PointOfSale-groupBookingRetrieveCallCenterInformation"
        },
        "reportingData": {
          "$ref": "#/definitions/ReportingData-groupBookingRetrieve"
        }
      },
      "title": "PointOfSale-groupBookingRetrieve"
    },
    "DailyRate-groupBookingRetrieve": {
      "type": "object",
      "properties": {
        "dailyTotalRate": {
          "$ref": "#/definitions/DailyRateDetails"
        }
      },
      "title": "DailyRate-groupBookingRetrieve"
    },
    "RateChange-groupBookingRetrieve": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DailyRate-groupBookingRetrieve"
        },
        {
          "type": "object",
          "required": [
            "start",
            "end"
          ],
          "properties": {
            "start": {
              "description": "period start date",
              "type": "string",
              "pattern": "^.*$",
              "format": "date"
            },
            "end": {
              "description": "period end date",
              "type": "string",
              "pattern": "^.*$",
              "format": "date"
            }
          },
          "title": "RateChange-groupBookingRetrieveallOf1"
        }
      ],
      "title": "RateChange-groupBookingRetrieve"
    },
    "ProductUseRates-groupBookingRetrieve": {
      "type": "object",
      "description": "rates of the product",
      "properties": {
        "dailyRates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RateChange-groupBookingRetrieve"
          },
          "title": "ProductUseRates-groupBookingRetrieveDailyRates"
        },
        "totalRate": {
          "$ref": "#/definitions/TotalRateDetails-0"
        },
        "totalBaseOccRate": {
          "$ref": "#/definitions/TotalRateDetails-1"
        },
        "totalExtraOccRate": {
          "$ref": "#/definitions/TotalRateDetails-2"
        },
        "pricingFrequency": {
          "$ref": "#/definitions/PricingFrequency"
        },
        "pricingMethod": {
          "$ref": "#/definitions/PricingMethod"
        },
        "isDefaultPricingBased": {
          "description": "indicates if current product is priced using default rate",
          "type": "boolean"
        },
        "taxInclusionMode": {
          "$ref": "#/definitions/TaxInclusionMode"
        },
        "hasRateChange": {
          "description": "indicates that the base amount of the offer is changing over the stay",
          "type": "boolean"
        },
        "ratesDefinition": {
          "$ref": "#/definitions/RatesDefinition-0"
        }
      },
      "title": "ProductUseRates-groupBookingRetrieve"
    },
    "GroupProductUseRes-groupBookingRetrieve": {
      "title": "GroupProductUseRes-groupBookingRetrieve",
      "type": "object",
      "required": [
        "guestCounts",
        "period",
        "inventoryTypeCode"
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/ProductUseId"
        },
        "period": {
          "$ref": "#/definitions/StartEnd-0"
        },
        "inventoryTypeCode": {
          "$ref": "#/definitions/InventoryTypeCode"
        },
        "productRates": {
          "$ref": "#/definitions/ProductUseRates-groupBookingRetrieve"
        },
        "packageRates": {
          "$ref": "#/definitions/ProductUseRates-groupBookingRetrieve"
        },
        "guestCounts": {
          "type": "array",
          "description": "guest type and guest age information",
          "items": {
            "$ref": "#/definitions/GuestCountRes"
          },
          "title": "GroupProductUseRes-groupBookingRetrieveGuestCounts"
        },
        "countersPerInventoryType": {
          "$ref": "#/definitions/CountersPerInventoryTypeRes"
        },
        "parentProductUseId": {
          "$ref": "#/definitions/ProductUseId-0"
        }
      }
    },
    "GroupOfferRes-groupBookingRetrieve": {
      "type": "object",
      "title": "GroupOfferRes-groupBookingRetrieve",
      "description": "details about the selected offer",
      "required": [
        "productUses"
      ],
      "properties": {
        "productUses": {
          "type": "array",
          "description": "list of product uses",
          "items": {
            "$ref": "#/definitions/GroupProductUseRes-groupBookingRetrieve"
          },
          "title": "GroupOfferRes-groupBookingRetrieveProductUses"
        },
        "fees": {
          "type": "array",
          "description": "list of fees only used for modify and cancel actions",
          "items": {
            "$ref": "#/definitions/Fees"
          },
          "title": "GroupOfferRes-groupBookingRetrieveFees"
        },
        "ratePlanCode": {
          "$ref": "#/definitions/RatePlanCode"
        }
      }
    },
    "TaxDefinitionShopping-groupBookingRetrieve": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaxDefinition"
        },
        {
          "type": "object",
          "properties": {},
          "title": "TaxDefinitionShopping-groupBookingRetrieveallOf1"
        }
      ],
      "title": "TaxDefinitionShopping-groupBookingRetrieve"
    },
    "GroupBodyRetrieveRes-groupBookingRetrieve": {
      "type": "object",
      "description": "full representation of group record",
      "title": "GroupBodyRetrieveRes-groupBookingRetrieve",
      "required": [
        "status",
        "imageStatus",
        "creationDateTime",
        "lastUpdateDateTime",
        "groupIds",
        "hotel"
      ],
      "properties": {
        "status": {
          "$ref": "#/definitions/Status"
        },
        "imageStatus": {
          "$ref": "#/definitions/ImageStatus"
        },
        "creationDateTime": {
          "$ref": "#/definitions/CreateDateTime"
        },
        "lastUpdateDateTime": {
          "$ref": "#/definitions/LastUpdateDateTime"
        },
        "lastUpdateDateTimeHotelLocalTime": {
          "$ref": "#/definitions/LastUpdateDateTimeHotelLocalTime"
        },
        "cancellationDateTime": {
          "$ref": "#/definitions/CancellationDateTime"
        },
        "purgeDateTime": {
          "$ref": "#/definitions/PurgeDateTime"
        },
        "authenticatedUser": {
          "$ref": "#/definitions/AuthenticatedUser-0"
        },
        "impersonatedUser": {
          "$ref": "#/definitions/AuthenticatedUser-1"
        },
        "groupIds": {
          "$ref": "#/definitions/GroupBodyIdsRes"
        },
        "hotel": {
          "$ref": "#/definitions/GroupHotelRes"
        },
        "products": {
          "type": "array",
          "description": "the list of products (base product + attribute(s)) returned",
          "items": {
            "$ref": "#/definitions/DictionaryProducts"
          },
          "title": "GroupBodyRetrieveRes-groupBookingRetrieveProducts"
        },
        "attributes": {
          "type": "array",
          "description": "the list of attributes",
          "items": {
            "$ref": "#/definitions/Attribute"
          },
          "title": "GroupBodyRetrieveRes-groupBookingRetrieveAttributes"
        },
        "groupContract": {
          "$ref": "#/definitions/GroupContractAndInventory-groupBookingRetrieve"
        },
        "userProfiles": {
          "$ref": "#/definitions/GroupGuestsRes"
        },
        "totalGroup": {
          "type": "array",
          "description": "list of totals per currency",
          "items": {
            "$ref": "#/definitions/TotalGroup"
          },
          "title": "GroupBodyRetrieveRes-groupBookingRetrieveTotalGroup"
        },
        "comments": {
          "type": "array",
          "description": "list the comments",
          "items": {
            "$ref": "#/definitions/Comments"
          },
          "title": "GroupBodyRetrieveRes-groupBookingRetrieveComments"
        },
        "customData": {
          "$ref": "#/definitions/CustomData"
        },
        "invoiceIds": {
          "type": "array",
          "description": "list of invoice Ids. Each Id is unique in the group",
          "items": {
            "$ref": "#/definitions/InvoiceId"
          },
          "title": "GroupBodyRetrieveRes-groupBookingRetrieveInvoiceIds"
        },
        "groupHolderId": {
          "$ref": "#/definitions/SegmentHolderId"
        },
        "groupPmsStatus": {
          "$ref": "#/definitions/SegmentPmsStatus"
        },
        "isGroupHolderNameModified": {
          "type": "boolean",
          "description": "indicates that the group holder name of the current image is different from the one the previous committed image"
        },
        "bookerId": {
          "$ref": "#/definitions/BookerId"
        },
        "creator": {
          "$ref": "#/definitions/PointOfSale-groupBookingRetrieve"
        },
        "requestor": {
          "$ref": "#/definitions/PointOfSale-groupBookingRetrieve"
        },
        "owner": {
          "$ref": "#/definitions/GroupOwner"
        },
        "corporateAccountInfo": {
          "$ref": "#/definitions/CorporateAccountInfoRes"
        },
        "offer": {
          "$ref": "#/definitions/GroupOfferRes-groupBookingRetrieve"
        },
        "formOfPayment": {
          "$ref": "#/definitions/FormOfPaymentRes"
        },
        "taxDefinitions": {
          "type": "array",
          "description": "the applicable rules of taxes for each tax change of the segment",
          "items": {
            "$ref": "#/definitions/TaxDefinitionShopping-groupBookingRetrieve"
          },
          "title": "GroupBodyRetrieveRes-groupBookingRetrieveTaxDefinitions"
        },
        "businessSource": {
          "$ref": "#/definitions/BusinessSource"
        },
        "reservationMethod": {
          "$ref": "#/definitions/ReservationMethod"
        },
        "cancellationReasons": {
          "type": "array",
          "description": "reasons for cancelling group",
          "items": {
            "$ref": "#/definitions/CancellationReason"
          },
          "title": "GroupBodyRetrieveRes-groupBookingRetrieveCancellationReasons"
        },
        "guestTypeDefinitions": {
          "type": "array",
          "description": "guest type set-up defined in the property",
          "items": {
            "$ref": "#/definitions/GuestTypeDefinition"
          },
          "title": "GroupBodyRetrieveRes-groupBookingRetrieveGuestTypeDefinitions"
        },
        "arrivalTime": {
          "$ref": "#/definitions/ArrivalTime"
        },
        "departureTime": {
          "$ref": "#/definitions/DepartureTime"
        },
        "travelPurpose": {
          "$ref": "#/definitions/TravelPurpose"
        },
        "language": {
          "$ref": "#/definitions/Language"
        },
        "languageLocality": {
          "$ref": "#/definitions/LanguageLocality"
        },
        "keywords": {
          "maxItems": 10,
          "type": "array",
          "description": "list of group keywords",
          "items": {
            "$ref": "#/definitions/Keyword"
          },
          "title": "GroupBodyRetrieveRes-groupBookingRetrieveKeywords"
        },
        "customerOwnReference": {
          "$ref": "#/definitions/CustomerOwnReference"
        },
        "purchaseOrderReference": {
          "$ref": "#/definitions/PurchaseOrderReference"
        },
        "distributionChannel": {
          "$ref": "#/definitions/DistributionChannel"
        }
      }
    },
    "GroupContractAndReleaseRules-groupBookingRetrieve": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GroupContract-groupBookingRetrieve"
        },
        {
          "type": "object",
          "properties": {
            "inventory": {
              "$ref": "#/definitions/GroupInventoryReleaseRules"
            }
          },
          "title": "GroupContractAndReleaseRules-groupBookingRetrieveallOf1"
        }
      ],
      "title": "GroupContractAndReleaseRules-groupBookingRetrieve"
    },
    "HistoryPointOfSale-groupBookingRetrieve": {
      "type": "object",
      "required": [
        "vendorCode",
        "channelCode"
      ],
      "properties": {
        "hotelSource": {
          "$ref": "#/definitions/PropertyCode"
        },
        "vendorCode": {
          "$ref": "#/definitions/VendorCode"
        },
        "channelCode": {
          "$ref": "#/definitions/ChannelCode"
        },
        "channelSubCode": {
          "$ref": "#/definitions/ChannelCode"
        },
        "travelAgencyInfo": {
          "$ref": "#/definitions/HistoryTravelAgencyInformation"
        },
        "origin": {
          "description": "indicates the Expedia channel that was used for the transaction, if relevant",
          "type": "string",
          "pattern": "^.*$"
        },
        "callCenterInformation": {
          "description": "list of call centers information",
          "type": "array",
          "maxItems": 2,
          "items": {
            "$ref": "#/definitions/CallCenterInformation"
          },
          "title": "HistoryPointOfSale-groupBookingRetrieveCallCenterInformation"
        },
        "reportingData": {
          "$ref": "#/definitions/ReportingData-groupBookingRetrieve"
        }
      },
      "title": "HistoryPointOfSale-groupBookingRetrieve"
    },
    "GroupHistoryOfferRes-groupBookingRetrieve": {
      "type": "object",
      "title": "GroupHistoryOfferRes-groupBookingRetrieve",
      "description": "historyOffer",
      "required": [
        "productUses"
      ],
      "properties": {
        "productUses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupProductUseRes-groupBookingRetrieve"
          },
          "title": "GroupHistoryOfferRes-groupBookingRetrieveProductUses"
        }
      }
    },
    "GroupBodyHistory-groupBookingRetrieve": {
      "type": "object",
      "description": "full representation of group record",
      "title": "GroupBodyHistory-groupBookingRetrieve",
      "required": [
        "status",
        "imageStatus",
        "creationDateTime",
        "lastUpdateDateTime",
        "groupIds",
        "hotel",
        "end",
        "start"
      ],
      "properties": {
        "status": {
          "$ref": "#/definitions/Status"
        },
        "imageStatus": {
          "$ref": "#/definitions/ImageStatus"
        },
        "creationDateTime": {
          "$ref": "#/definitions/CreateDateTime"
        },
        "lastUpdateDateTime": {
          "$ref": "#/definitions/LastUpdateDateTime"
        },
        "lastUpdateDateTimeHotelLocalTime": {
          "$ref": "#/definitions/LastUpdateDateTimeHotelLocalTime"
        },
        "cancellationDateTime": {
          "$ref": "#/definitions/CancellationDateTime"
        },
        "purgeDateTime": {
          "$ref": "#/definitions/PurgeDateTime"
        },
        "authenticatedUser": {
          "$ref": "#/definitions/AuthenticatedUser-0"
        },
        "impersonatedUser": {
          "$ref": "#/definitions/AuthenticatedUser-1"
        },
        "groupIds": {
          "$ref": "#/definitions/GroupBodyIdsRes"
        },
        "hotel": {
          "$ref": "#/definitions/GroupHotelRes"
        },
        "products": {
          "type": "array",
          "description": "the list of products (base product + attribute(s)) returned",
          "items": {
            "$ref": "#/definitions/DictionaryProducts"
          },
          "title": "GroupBodyHistory-groupBookingRetrieveProducts"
        },
        "attributes": {
          "type": "array",
          "description": "the list of attributes",
          "items": {
            "$ref": "#/definitions/Attribute"
          },
          "title": "GroupBodyHistory-groupBookingRetrieveAttributes"
        },
        "groupContract": {
          "$ref": "#/definitions/GroupContractAndReleaseRules-groupBookingRetrieve"
        },
        "userProfiles": {
          "$ref": "#/definitions/GuestsHistoryRes"
        },
        "totalGroup": {
          "type": "array",
          "description": "list of totals per currency",
          "items": {
            "$ref": "#/definitions/TotalGroup"
          },
          "title": "GroupBodyHistory-groupBookingRetrieveTotalGroup"
        },
        "comments": {
          "type": "array",
          "description": "list the comments",
          "items": {
            "$ref": "#/definitions/Comments"
          },
          "title": "GroupBodyHistory-groupBookingRetrieveComments"
        },
        "customData": {
          "$ref": "#/definitions/CustomData"
        },
        "invoiceIds": {
          "type": "array",
          "description": "list of invoice Ids. Each Id is unique in the group",
          "items": {
            "$ref": "#/definitions/InvoiceId"
          },
          "title": "GroupBodyHistory-groupBookingRetrieveInvoiceIds"
        },
        "groupHolderId": {
          "$ref": "#/definitions/SegmentHolderId"
        },
        "groupPmsStatus": {
          "$ref": "#/definitions/SegmentPmsStatus"
        },
        "end": {
          "type": "string",
          "pattern": "^.*$",
          "description": "end date",
          "format": "date"
        },
        "start": {
          "type": "string",
          "pattern": "^.*$",
          "description": "start date",
          "format": "date"
        },
        "isGroupHolderNameModified": {
          "type": "boolean",
          "description": "indicates that the group holder name of the current image is different from the one the previous committed image"
        },
        "bookerId": {
          "$ref": "#/definitions/BookerId"
        },
        "requestor": {
          "$ref": "#/definitions/HistoryPointOfSale-groupBookingRetrieve"
        },
        "owner": {
          "$ref": "#/definitions/GroupOwner"
        },
        "corporateAccountInfo": {
          "$ref": "#/definitions/CorporateAccountInfoRes"
        },
        "offer": {
          "$ref": "#/definitions/GroupHistoryOfferRes-groupBookingRetrieve"
        },
        "formOfPayment": {
          "$ref": "#/definitions/FormOfPaymentRes"
        },
        "taxDefinitions": {
          "type": "array",
          "description": "the applicable rules of taxes for each tax change of the segment",
          "items": {
            "$ref": "#/definitions/TaxDefinitionShopping-groupBookingRetrieve"
          },
          "title": "GroupBodyHistory-groupBookingRetrieveTaxDefinitions"
        },
        "cancellationReasons": {
          "type": "array",
          "description": "reasons for cancelling group",
          "items": {
            "$ref": "#/definitions/CancellationReason"
          },
          "title": "GroupBodyHistory-groupBookingRetrieveCancellationReasons"
        },
        "guestTypeDefinitions": {
          "type": "array",
          "description": "guest type set-up defined in the property",
          "items": {
            "$ref": "#/definitions/GuestTypeDefinition"
          },
          "title": "GroupBodyHistory-groupBookingRetrieveGuestTypeDefinitions"
        },
        "arrivalTime": {
          "$ref": "#/definitions/ArrivalTime"
        },
        "departureTime": {
          "$ref": "#/definitions/DepartureTime"
        },
        "travelPurpose": {
          "$ref": "#/definitions/TravelPurpose"
        },
        "businessSource": {
          "$ref": "#/definitions/BusinessSource"
        },
        "reservationMethod": {
          "$ref": "#/definitions/ReservationMethod"
        },
        "language": {
          "$ref": "#/definitions/Language"
        },
        "languageLocality": {
          "$ref": "#/definitions/LanguageLocality"
        },
        "statusBeforeCancellation": {
          "$ref": "#/definitions/StatusBeforeCancellation"
        },
        "keywords": {
          "maxItems": 10,
          "type": "array",
          "description": "list of group keywords",
          "items": {
            "$ref": "#/definitions/Keyword"
          },
          "title": "GroupBodyHistory-groupBookingRetrieveKeywords"
        },
        "customerOwnReference": {
          "$ref": "#/definitions/CustomerOwnReference"
        },
        "purchaseOrderReference": {
          "$ref": "#/definitions/PurchaseOrderReference"
        }
      }
    },
    "GroupRetrieveRes-groupBookingRetrieve": {
      "type": "object",
      "title": "GroupRetrieveRes-groupBookingRetrieve",
      "description": "retrieve group",
      "required": [
        "data"
      ],
      "properties": {
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Warning"
          },
          "title": "GroupRetrieveRes-groupBookingRetrieveWarnings"
        },
        "data": {
          "title": "GroupRetrieveRes-groupBookingRetrieveData",
          "type": "object",
          "properties": {
            "group": {
              "$ref": "#/definitions/GroupBodyRetrieveRes-groupBookingRetrieve"
            },
            "history": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GroupBodyHistory-groupBookingRetrieve"
              },
              "title": "GroupRetrieveRes-groupBookingRetrieveDataHistory"
            }
          }
        }
      }
    },
    "GroupBodyModifyRes-groupBookingReservation": {
      "type": "object",
      "description": "full representation of group record",
      "title": "GroupBodyModifyRes-groupBookingReservation",
      "required": [
        "status",
        "imageStatus",
        "creationDateTime",
        "lastUpdateDateTime",
        "groupIds",
        "hotel"
      ],
      "properties": {
        "status": {
          "$ref": "#/definitions/Status"
        },
        "imageStatus": {
          "$ref": "#/definitions/ImageStatus"
        },
        "creationDateTime": {
          "$ref": "#/definitions/CreateDateTime"
        },
        "lastUpdateDateTime": {
          "$ref": "#/definitions/LastUpdateDateTime"
        },
        "lastUpdateDateTimeHotelLocalTime": {
          "$ref": "#/definitions/LastUpdateDateTime"
        },
        "cancellationDateTime": {
          "$ref": "#/definitions/CancellationDateTime"
        },
        "purgeDateTime": {
          "$ref": "#/definitions/PurgeDateTime"
        },
        "authenticatedUser": {
          "$ref": "#/definitions/AuthenticatedUser-0"
        },
        "impersonatedUser": {
          "$ref": "#/definitions/AuthenticatedUser-1"
        },
        "groupIds": {
          "$ref": "#/definitions/GroupBodyIdsRes"
        },
        "hotel": {
          "$ref": "#/definitions/GroupHotelRes"
        },
        "products": {
          "type": "array",
          "description": "the list of products (base product + attribute(s)) returned",
          "items": {
            "$ref": "#/definitions/DictionaryProducts"
          },
          "title": "GroupBodyModifyRes-groupBookingReservationProducts"
        },
        "attributes": {
          "type": "array",
          "description": "the list of attributes",
          "items": {
            "$ref": "#/definitions/Attribute"
          },
          "title": "GroupBodyModifyRes-groupBookingReservationAttributes"
        },
        "groupContract": {
          "$ref": "#/definitions/GroupContractAndReleaseRules-groupBookingReservation"
        },
        "userProfiles": {
          "$ref": "#/definitions/GroupGuestsRes"
        },
        "totalGroup": {
          "type": "array",
          "description": "list of totals per currency",
          "items": {
            "$ref": "#/definitions/TotalGroup"
          },
          "title": "GroupBodyModifyRes-groupBookingReservationTotalGroup"
        },
        "comments": {
          "type": "array",
          "description": "list the comments",
          "items": {
            "$ref": "#/definitions/Comments"
          },
          "title": "GroupBodyModifyRes-groupBookingReservationComments"
        },
        "customData": {
          "$ref": "#/definitions/CustomData"
        },
        "invoiceIds": {
          "type": "array",
          "description": "list of invoice Ids. Each Id is unique in the group",
          "items": {
            "$ref": "#/definitions/InvoiceId"
          },
          "title": "GroupBodyModifyRes-groupBookingReservationInvoiceIds"
        },
        "groupHolderId": {
          "$ref": "#/definitions/SegmentHolderId"
        },
        "groupPmsStatus": {
          "$ref": "#/definitions/SegmentPmsStatus"
        },
        "isGroupHolderNameModified": {
          "type": "boolean",
          "description": "indicates that the group holder name of the current image is different from the one the previous committed image"
        },
        "bookerId": {
          "$ref": "#/definitions/BookerId"
        },
        "creator": {
          "$ref": "#/definitions/PointOfSale-groupBookingReservation"
        },
        "requestor": {
          "$ref": "#/definitions/PointOfSale-groupBookingReservation"
        },
        "owner": {
          "$ref": "#/definitions/GroupOwner"
        },
        "corporateAccountInfo": {
          "$ref": "#/definitions/CorporateAccountInfoRes"
        },
        "offer": {
          "$ref": "#/definitions/GroupOfferRes-groupBookingReservation"
        },
        "formOfPayment": {
          "$ref": "#/definitions/FormOfPaymentRes"
        },
        "taxDefinitions": {
          "type": "array",
          "description": "the applicable rules of taxes for each tax change of the segment",
          "items": {
            "$ref": "#/definitions/TaxDefinitionShopping-groupBookingReservation"
          },
          "title": "GroupBodyModifyRes-groupBookingReservationTaxDefinitions"
        },
        "cancellationReasons": {
          "type": "array",
          "description": "description about reasons for cancelling group",
          "items": {
            "$ref": "#/definitions/CancellationReason"
          },
          "title": "GroupBodyModifyRes-groupBookingReservationCancellationReasons"
        },
        "guestTypeDefinitions": {
          "type": "array",
          "description": "guest type set-up defined in the property",
          "items": {
            "$ref": "#/definitions/GuestTypeDefinition"
          },
          "title": "GroupBodyModifyRes-groupBookingReservationGuestTypeDefinitions"
        },
        "arrivalTime": {
          "$ref": "#/definitions/ArrivalTime"
        },
        "departureTime": {
          "$ref": "#/definitions/DepartureTime"
        },
        "travelPurpose": {
          "$ref": "#/definitions/TravelPurpose"
        },
        "businessSource": {
          "$ref": "#/definitions/BusinessSource"
        },
        "reservationMethod": {
          "$ref": "#/definitions/ReservationMethod"
        },
        "language": {
          "$ref": "#/definitions/Language"
        },
        "languageLocality": {
          "$ref": "#/definitions/LanguageLocality"
        },
        "statusBeforeCancellation": {
          "$ref": "#/definitions/StatusBeforeCancellation"
        },
        "keywords": {
          "maxItems": 10,
          "type": "array",
          "description": "list of group keywords",
          "items": {
            "$ref": "#/definitions/Keyword"
          },
          "title": "GroupBodyModifyRes-groupBookingReservationKeywords"
        },
        "customerOwnReference": {
          "$ref": "#/definitions/CustomerOwnReference"
        },
        "purchaseOrderReference": {
          "$ref": "#/definitions/PurchaseOrderReference"
        },
        "distributionChannel": {
          "$ref": "#/definitions/DistributionChannel"
        }
      }
    },
    "GroupModifyRes-groupBookingReservation": {
      "type": "object",
      "title": "GroupModifyRes-groupBookingReservation",
      "description": "modify group",
      "required": [
        "data"
      ],
      "properties": {
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Warning"
          },
          "title": "GroupModifyRes-groupBookingReservationWarnings"
        },
        "data": {
          "title": "GroupModifyRes-groupBookingReservationData",
          "type": "object",
          "properties": {
            "group": {
              "$ref": "#/definitions/GroupBodyModifyRes-groupBookingReservation"
            }
          }
        }
      }
    },
    "RateReferenceInGroup-groupBookingReservationSearch": {
      "type": "object",
      "properties": {
        "ratePlanCode": {
          "$ref": "#/definitions/RatePlanCode"
        },
        "pricePlanCode": {
          "$ref": "#/definitions/PricePlanCode"
        },
        "relationship": {
          "type": "string",
          "enum": [
            "AttachedPlan",
            "BasePlan"
          ]
        }
      },
      "title": "RateReferenceInGroup-groupBookingReservationSearch"
    },
    "GroupContract-groupBookingReservationSearch": {
      "title": "GroupContract-groupBookingReservationSearch",
      "type": "object",
      "description": "group contract data model",
      "properties": {
        "name": {
          "description": "group name",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 100
        },
        "externalPmsId": {
          "description": "external group ID may be used to identify a Group along with Property and Group Code. Set on the PMS only and stored with the group",
          "type": "string",
          "maxLength": 50,
          "pattern": "^.*$"
        },
        "isAllotment": {
          "description": "indicates if the contract corresponds to an allotment (isAllotment = true) or to a \"normal\" group (isAllotment = false)",
          "type": "boolean",
          "default": false
        },
        "saleStatus": {
          "description": "for identification of a group sale status so that the group can be picked up",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 50
        },
        "propertyMarketSegment": {
          "description": "determines the market segmentation for the group as defined for the property",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 50
        },
        "corporateMarketSegment": {
          "description": "determines the market segmentation for the group as defined for the corporate",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 50
        },
        "industryType": {
          "description": "determines the industry type for the group",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 50
        },
        "policyTypeCode": {
          "description": "policy type code associated to the group",
          "type": "string",
          "pattern": "^.*$",
          "minLength": 1,
          "maxLength": 20
        },
        "corporateId": {
          "description": "corporate Id",
          "type": "string",
          "maxLength": 50,
          "pattern": "^.*$"
        },
        "isHousing": {
          "description": "indicates if group booking is limited to the hotel associated with the group or accepted from any hotel or reservation office",
          "type": "boolean"
        },
        "isElastic": {
          "description": "indicates if the group is Elastic or not. By default, a group is not elastic",
          "type": "boolean"
        },
        "allowExtraDays": {
          "description": "indicates if the period of the reservations booking on the group can be partially outside of the group period",
          "type": "boolean"
        },
        "isFollowingHousePolicy": {
          "description": "flag indicating if the policy is following house or defined in the scope of the rate plan / group",
          "type": "boolean"
        },
        "period": {
          "$ref": "#/definitions/StartEnd"
        },
        "corePeriod": {
          "$ref": "#/definitions/StartEnd"
        },
        "rateReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RateReferenceInGroup-groupBookingReservationSearch"
          },
          "title": "GroupContract-groupBookingReservationSearchRateReferences"
        },
        "security": {
          "$ref": "#/definitions/GroupSecurityFlags"
        }
      }
    },
    "GroupContractAndReleaseRules-groupBookingReservationSearch": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GroupContract-groupBookingReservationSearch"
        },
        {
          "type": "object",
          "properties": {
            "inventory": {
              "$ref": "#/definitions/GroupInventoryReleaseRules"
            }
          },
          "title": "GroupContractAndReleaseRules-groupBookingReservationSearchallOf1"
        }
      ],
      "title": "GroupContractAndReleaseRules-groupBookingReservationSearch"
    },
    "ReportingData-groupBookingReservationSearch": {
      "description": "contains information conveyed for Reporting use only",
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/ReportingCode"
        }
      },
      "title": "ReportingData-groupBookingReservationSearch"
    },
    "GroupReservations-groupBookingReservationSearch": {
      "title": "GroupReservations-groupBookingReservationSearch",
      "type": "object",
      "required": [
        "status",
        "groupIds",
        "hotel",
        "creationDateTime"
      ],
      "properties": {
        "status": {
          "$ref": "#/definitions/Status"
        },
        "groupIds": {
          "$ref": "#/definitions/GroupBodyIdsRes"
        },
        "hotel": {
          "$ref": "#/definitions/HotelSearchRes"
        },
        "groupContract": {
          "$ref": "#/definitions/GroupContractAndReleaseRules-groupBookingReservationSearch"
        },
        "userProfiles": {
          "type": "array",
          "description": "user profile for reservation search",
          "items": {
            "$ref": "#/definitions/GuestSearchRes"
          },
          "title": "GroupReservations-groupBookingReservationSearchUserProfiles"
        },
        "corporateAccountInfo": {
          "maxItems": 2,
          "type": "array",
          "description": "list of corporate accounts (up to 2 from different sources)",
          "items": {
            "$ref": "#/definitions/CorporateAccountInfoSearchRes"
          },
          "title": "GroupReservations-groupBookingReservationSearchCorporateAccountInfo"
        },
        "businessSource": {
          "$ref": "#/definitions/BusinessSource"
        },
        "comments": {
          "type": "array",
          "description": "list the comments",
          "items": {
            "$ref": "#/definitions/Comments"
          },
          "title": "GroupReservations-groupBookingReservationSearchComments"
        },
        "reservationMethod": {
          "$ref": "#/definitions/ReservationMethod"
        },
        "offer": {
          "$ref": "#/definitions/GroupOfferSearchRes"
        },
        "creationDateTimeHotelLocalTime": {
          "$ref": "#/definitions/CreateDateTimeHotelLocalTime"
        },
        "creationDateTime": {
          "$ref": "#/definitions/CreateDateTime"
        },
        "cancellationDateTimeHotelLocalTime": {
          "$ref": "#/definitions/CancellationDateTimeHotelLocalTime"
        },
        "cancellationDateTime": {
          "$ref": "#/definitions/CancellationDateTime"
        },
        "bookerId": {
          "$ref": "#/definitions/BookerId"
        },
        "groupHolderId": {
          "$ref": "#/definitions/SegmentHolderId"
        },
        "groupPmsStatus": {
          "$ref": "#/definitions/SegmentPmsStatus"
        },
        "creator": {
          "$ref": "#/definitions/SearchPointOfSale-groupBookingReservationSearch-0"
        },
        "requestor": {
          "$ref": "#/definitions/SearchPointOfSale-groupBookingReservationSearch-1"
        },
        "owner": {
          "$ref": "#/definitions/SearchPointOfSale-groupBookingReservationSearch-2"
        },
        "keywords": {
          "maxItems": 10,
          "type": "array",
          "description": "list of group keywords",
          "items": {
            "$ref": "#/definitions/Keyword"
          },
          "title": "GroupReservations-groupBookingReservationSearchKeywords"
        },
        "distributionChannel": {
          "$ref": "#/definitions/DistributionChannel"
        }
      }
    },
    "GroupSearchRes-groupBookingReservationSearch": {
      "type": "object",
      "title": "GroupSearchRes-groupBookingReservationSearch",
      "description": "search group",
      "properties": {
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Warning"
          },
          "title": "GroupSearchRes-groupBookingReservationSearchWarnings"
        },
        "data": {
          "description": "search group response",
          "type": "object",
          "title": "GroupSearchRes-groupBookingReservationSearchData",
          "properties": {
            "isGroupFound": {
              "$ref": "#/definitions/IsFoundGroupReservation"
            },
            "groupCount": {
              "$ref": "#/definitions/GroupCount"
            },
            "groupReservations": {
              "description": "list of groups matching the search criteria. Returned in case retrieve_mode in request is set to displayList",
              "type": "array",
              "items": {
                "$ref": "#/definitions/GroupReservations-groupBookingReservationSearch"
              },
              "title": "GroupSearchRes-groupBookingReservationSearchDataGroupReservations"
            }
          }
        }
      }
    },
    "GuaranteeRequiredPeriod-synchronizeGroupFeed": {
      "minProperties": 1,
      "properties": {
        "start": {
          "description": "start date",
          "type": "string",
          "pattern": "^.*$",
          "format": "date",
          "example": "2019-11-22"
        },
        "end": {
          "description": "end date",
          "type": "string",
          "pattern": "^.*$",
          "format": "date",
          "example": "2019-12-20"
        },
        "isGuaranteeRequired": {
          "description": "if false, guarantee information is not mandatory at the time of booking. If true, Guarantee Information is required at the time of booking",
          "type": "boolean"
        }
      },
      "type": "object",
      "title": "GuaranteeRequiredPeriod-synchronizeGroupFeed"
    },
    "GroupContract-synchronizeGroupFeed": {
      "title": "GroupContract-synchronizeGroupFeed",
      "type": "object",
      "description": "group contract data model",
      "properties": {
        "id": {
          "description": "unique identifier of the Group Contract, unique at chain level",
          "type": "string",
          "pattern": "[A-Z0-9]{8,10}",
          "minLength": 8,
          "maxLength": 10
        },
        "code": {
          "$ref": "#/definitions/GroupCode"
        },
        "name": {
          "description": "group name",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 100
        },
        "propertyCode": {
          "description": "unique code assigned to a particular hotel",
          "type": "string"
        },
        "externalPmsId": {
          "description": "external group ID may be used to identify a Group along with Property and Group Code. Set on the PMS only and stored with the group",
          "type": "string",
          "maxLength": 50,
          "pattern": "^.*$"
        },
        "internalId": {
          "description": "internal group ID created by the system and used to identify the group within AHP. May not not be accessible for other systems/channels",
          "type": "string"
        },
        "flow": {
          "description": "determines if the group is created online (on the fly) or offline (default)",
          "type": "string",
          "enum": [
            "Offline",
            "Online"
          ],
          "default": "Offline"
        },
        "isAllotment": {
          "description": "indicates if the contract corresponds to an allotment (isAllotment = true) or to a \"normal\" group (isAllotment = false)",
          "type": "boolean",
          "default": false
        },
        "saleStatus": {
          "description": "for identification of a group sale status so that the group can be picked up",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 50
        },
        "readyForPickup": {
          "description": "indicates if the group is ready for pickup or not",
          "type": "boolean"
        },
        "propertyMarketSegment": {
          "description": "determines the market segmentation for the group as defined for the property",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 50
        },
        "corporateMarketSegment": {
          "description": "determines the market segmentation for the group as defined for the corporate",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 50
        },
        "industryType": {
          "description": "determines the industry type for the group",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 50
        },
        "policyTypeCode": {
          "description": "policy type code associated to the group",
          "type": "string",
          "pattern": "^.*$",
          "minLength": 1,
          "maxLength": 20
        },
        "corporateId": {
          "description": "corporate Id",
          "type": "string",
          "maxLength": 50,
          "pattern": "^.*$"
        },
        "bookingImageId": {
          "description": "input-only. Version number of the master reservation created at the reservation end",
          "type": "string"
        },
        "isHousing": {
          "description": "indicates if group booking is limited to the hotel associated with the group or accepted from any hotel or reservation office",
          "type": "boolean"
        },
        "isCommissionable": {
          "description": "indicates if the group is subject to commission ( = true) or not  ( = false)",
          "type": "boolean"
        },
        "isGuaranteeRequired": {
          "description": "indicates if guarantee is required for the group or not",
          "type": "boolean"
        },
        "isElastic": {
          "description": "indicates if the group is Elastic or not. By default, a group is not elastic",
          "type": "boolean"
        },
        "allowExtraDays": {
          "description": "indicates if the period of the reservations booking on the group can be partially outside of the group period",
          "type": "boolean"
        },
        "applyHouseEarlyDepartureFee": {
          "description": "indicates if the group is subject to early departures fee ( = true) or not  ( = false)",
          "type": "boolean"
        },
        "isFollowingHousePolicy": {
          "description": "flag indicating if the policy is following house or defined in the scope of the rate plan / group",
          "type": "boolean"
        },
        "period": {
          "$ref": "#/definitions/StartEnd"
        },
        "corePeriod": {
          "$ref": "#/definitions/StartEnd"
        },
        "guaranteeRequiredPeriods": {
          "description": "allows user to set a specific guarantee policy per day. Takes priority upon isGuaranteeRequired at groupContract level",
          "type": "array",
          "maxItems": 2000,
          "items": {
            "$ref": "#/definitions/GuaranteeRequiredPeriod-synchronizeGroupFeed"
          },
          "title": "GroupContract-synchronizeGroupFeedGuaranteeRequiredPeriods"
        },
        "descriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupDescription"
          },
          "title": "GroupContract-synchronizeGroupFeedDescriptions"
        },
        "rateReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RateReferenceInGroup"
          },
          "title": "GroupContract-synchronizeGroupFeedRateReferences"
        },
        "security": {
          "$ref": "#/definitions/GroupSecurityFlags"
        },
        "advanceBookingRestrictions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdvanceBookingRestriction"
          },
          "title": "GroupContract-synchronizeGroupFeedAdvanceBookingRestrictions"
        },
        "stayRestrictions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StayRestriction"
          },
          "title": "GroupContract-synchronizeGroupFeedStayRestrictions"
        },
        "policies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Policy"
          },
          "title": "GroupContract-synchronizeGroupFeedPolicies"
        },
        "pricePlans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PricePlanInGroup"
          },
          "title": "GroupContract-synchronizeGroupFeedPricePlans"
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product"
          },
          "title": "GroupContract-synchronizeGroupFeedProducts"
        },
        "taxes": {
          "type": "array",
          "description": "array of taxes of the group contract",
          "items": {
            "$ref": "#/definitions/TaxDefinitionWithId"
          },
          "title": "GroupContract-synchronizeGroupFeedTaxes"
        },
        "commission": {
          "description": "commission type and value",
          "$ref": "#/definitions/Commission"
        },
        "policyAssociations": {
          "type": "array",
          "description": "policies that are applied to the group from the policy catalogue",
          "items": {
            "$ref": "#/definitions/PolicyAssociation"
          },
          "title": "GroupContract-synchronizeGroupFeedPolicyAssociations"
        }
      }
    },
    "GroupInventory-synchronizeGroupFeed": {
      "properties": {
        "release": {
          "$ref": "#/definitions/InventoryReleaseData"
        }
      },
      "type": "object",
      "title": "GroupInventory-synchronizeGroupFeed"
    },
    "GroupContractAndInventory-synchronizeGroupFeed": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GroupContract-synchronizeGroupFeed"
        },
        {
          "type": "object",
          "properties": {
            "inventory": {
              "$ref": "#/definitions/GroupInventory-synchronizeGroupFeed"
            }
          },
          "title": "GroupContractAndInventory-synchronizeGroupFeedallOf1"
        }
      ],
      "title": "GroupContractAndInventory-synchronizeGroupFeed"
    },
    "ReportingData-synchronizeGroupFeed": {
      "description": "contains information conveyed for Reporting use only",
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/ReportingCode"
        }
      },
      "title": "ReportingData-synchronizeGroupFeed"
    },
    "PointOfSale-synchronizeGroupFeed": {
      "type": "object",
      "required": [
        "vendorCode",
        "channelCode"
      ],
      "properties": {
        "hotelSource": {
          "$ref": "#/definitions/PropertyCode"
        },
        "vendorCode": {
          "$ref": "#/definitions/VendorCode"
        },
        "vendorTypes": {
          "description": "the vendor type code [0 = Unknown, 1 = PMS, 2 = booking tool, 3 = brand website, 4 = GDS/3rd party website, 5 = mobile, 6 = alternate distribution system]",
          "type": "array",
          "items": {
            "type": "integer",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6
            ]
          },
          "title": "PointOfSale-synchronizeGroupFeedVendorTypes"
        },
        "channelCode": {
          "$ref": "#/definitions/ChannelCode"
        },
        "channelSubCode": {
          "$ref": "#/definitions/ChannelCode"
        },
        "metricsCode": {
          "$ref": "#/definitions/MetricsCode"
        },
        "travelAgencyInfo": {
          "$ref": "#/definitions/TravelAgencyInformation"
        },
        "origin": {
          "description": "indicates the Expedia channel that was used for the reservation, if relevant",
          "type": "string",
          "pattern": "^.*$"
        },
        "callCenterInformation": {
          "description": "list of call centers information",
          "type": "array",
          "maxItems": 2,
          "items": {
            "$ref": "#/definitions/CallCenterInformation"
          },
          "title": "PointOfSale-synchronizeGroupFeedCallCenterInformation"
        },
        "reportingData": {
          "$ref": "#/definitions/ReportingData-synchronizeGroupFeed"
        }
      },
      "title": "PointOfSale-synchronizeGroupFeed"
    },
    "CountersPerInventoryTypeRes-synchronizeGroupFeed": {
      "title": "CountersPerInventoryTypeRes-synchronizeGroupFeed",
      "type": "object",
      "description": "inventory details about group",
      "properties": {
        "isFlowThrough": {
          "type": "boolean",
          "default": false,
          "description": "sleeping Room Product Type Flow Through flag for this Group. This is the flag indicating if the Sleeping Room Product Type is Flow Through"
        },
        "allocated": {
          "type": "integer",
          "description": "this is the maximum number of rooms that can be sold for this Group (guaranteed and non guaranteed rooms)"
        },
        "originalAllocated": {
          "type": "array",
          "description": "this is the first value greater than 0 set for the allocated number of rooms for this Sleeping Room Product Type",
          "maxItems": 2000,
          "items": {
            "$ref": "#/definitions/OriginalAllocated"
          },
          "title": "CountersPerInventoryTypeRes-synchronizeGroupFeedOriginalAllocated"
        },
        "deducted": {
          "type": "integer",
          "description": "number of Deducted (Authorized - AU) rooms for the given period out of the Contracted/Allocated number of rooms"
        }
      }
    },
    "GroupProductUseRes-synchronizeGroupFeed": {
      "title": "GroupProductUseRes-synchronizeGroupFeed",
      "type": "object",
      "required": [
        "guestCounts",
        "period",
        "inventoryTypeCode"
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/ProductUseId"
        },
        "period": {
          "$ref": "#/definitions/StartEnd-0"
        },
        "inventoryTypeCode": {
          "$ref": "#/definitions/InventoryTypeCode"
        },
        "guestCounts": {
          "type": "array",
          "description": "guest type and guest age information",
          "items": {
            "$ref": "#/definitions/GuestCountRes"
          },
          "title": "GroupProductUseRes-synchronizeGroupFeedGuestCounts"
        },
        "countersPerInventoryType": {
          "$ref": "#/definitions/CountersPerInventoryTypeRes-synchronizeGroupFeed"
        }
      }
    },
    "GroupOfferRes-synchronizeGroupFeed": {
      "type": "object",
      "title": "GroupOfferRes-synchronizeGroupFeed",
      "description": "details about the selected offer",
      "required": [
        "productUses"
      ],
      "properties": {
        "productUses": {
          "type": "array",
          "description": "list of product uses",
          "items": {
            "$ref": "#/definitions/GroupProductUseRes-synchronizeGroupFeed"
          },
          "title": "GroupOfferRes-synchronizeGroupFeedProductUses"
        },
        "fees": {
          "type": "array",
          "description": "list of fees only used for modify and cancel actions",
          "items": {
            "$ref": "#/definitions/Fees"
          },
          "title": "GroupOfferRes-synchronizeGroupFeedFees"
        },
        "ratePlanCode": {
          "$ref": "#/definitions/RatePlanCode"
        }
      }
    },
    "GroupBodyRetrieveRes-synchronizeGroupFeed": {
      "type": "object",
      "description": "full representation of group record",
      "title": "GroupBodyRetrieveRes-synchronizeGroupFeed",
      "required": [
        "status",
        "imageStatus",
        "creationDateTime",
        "lastUpdateDateTime",
        "groupIds",
        "hotel"
      ],
      "properties": {
        "status": {
          "$ref": "#/definitions/Status"
        },
        "imageStatus": {
          "$ref": "#/definitions/ImageStatus"
        },
        "creationDateTime": {
          "$ref": "#/definitions/CreateDateTime"
        },
        "lastUpdateDateTime": {
          "$ref": "#/definitions/LastUpdateDateTime"
        },
        "lastUpdateDateTimeHotelLocalTime": {
          "$ref": "#/definitions/LastUpdateDateTimeHotelLocalTime"
        },
        "cancellationDateTime": {
          "$ref": "#/definitions/CancellationDateTime"
        },
        "purgeDateTime": {
          "$ref": "#/definitions/PurgeDateTime"
        },
        "authenticatedUser": {
          "$ref": "#/definitions/AuthenticatedUser-0"
        },
        "impersonatedUser": {
          "$ref": "#/definitions/AuthenticatedUser-1"
        },
        "groupIds": {
          "$ref": "#/definitions/GroupBodyIdsRes"
        },
        "hotel": {
          "$ref": "#/definitions/GroupHotelRes"
        },
        "products": {
          "type": "array",
          "description": "the list of products (base product + attribute(s)) returned",
          "items": {
            "$ref": "#/definitions/DictionaryProducts"
          },
          "title": "GroupBodyRetrieveRes-synchronizeGroupFeedProducts"
        },
        "attributes": {
          "type": "array",
          "description": "the list of attributes",
          "items": {
            "$ref": "#/definitions/Attribute"
          },
          "title": "GroupBodyRetrieveRes-synchronizeGroupFeedAttributes"
        },
        "groupContract": {
          "$ref": "#/definitions/GroupContractAndInventory-synchronizeGroupFeed"
        },
        "userProfiles": {
          "$ref": "#/definitions/GroupGuestsRes"
        },
        "totalGroup": {
          "type": "array",
          "description": "list of totals per currency",
          "items": {
            "$ref": "#/definitions/TotalGroup"
          },
          "title": "GroupBodyRetrieveRes-synchronizeGroupFeedTotalGroup"
        },
        "comments": {
          "type": "array",
          "description": "list the comments",
          "items": {
            "$ref": "#/definitions/Comments"
          },
          "title": "GroupBodyRetrieveRes-synchronizeGroupFeedComments"
        },
        "customData": {
          "$ref": "#/definitions/CustomData"
        },
        "invoiceIds": {
          "type": "array",
          "description": "list of invoice Ids. Each Id is unique in the group",
          "items": {
            "$ref": "#/definitions/InvoiceId"
          },
          "title": "GroupBodyRetrieveRes-synchronizeGroupFeedInvoiceIds"
        },
        "groupHolderId": {
          "$ref": "#/definitions/SegmentHolderId"
        },
        "groupPmsStatus": {
          "$ref": "#/definitions/SegmentPmsStatus"
        },
        "isGroupHolderNameModified": {
          "type": "boolean",
          "description": "indicates that the group holder name of the current image is different from the one the previous committed image"
        },
        "bookerId": {
          "$ref": "#/definitions/BookerId"
        },
        "creator": {
          "$ref": "#/definitions/PointOfSale-synchronizeGroupFeed"
        },
        "requestor": {
          "$ref": "#/definitions/PointOfSale-synchronizeGroupFeed"
        },
        "owner": {
          "$ref": "#/definitions/GroupOwner"
        },
        "corporateAccountInfo": {
          "$ref": "#/definitions/CorporateAccountInfoRes"
        },
        "offer": {
          "$ref": "#/definitions/GroupOfferRes-synchronizeGroupFeed"
        },
        "formOfPayment": {
          "$ref": "#/definitions/FormOfPaymentRes"
        },
        "taxDefinitions": {
          "type": "array",
          "description": "the applicable rules of taxes for each tax change of the segment",
          "items": {
            "$ref": "#/definitions/TaxDefinitionShopping"
          },
          "title": "GroupBodyRetrieveRes-synchronizeGroupFeedTaxDefinitions"
        },
        "businessSource": {
          "$ref": "#/definitions/BusinessSource"
        },
        "reservationMethod": {
          "$ref": "#/definitions/ReservationMethod"
        },
        "cancellationReasons": {
          "type": "array",
          "description": "reasons for cancelling group",
          "items": {
            "$ref": "#/definitions/CancellationReason"
          },
          "title": "GroupBodyRetrieveRes-synchronizeGroupFeedCancellationReasons"
        },
        "guestTypeDefinitions": {
          "type": "array",
          "description": "guest type set-up defined in the property",
          "items": {
            "$ref": "#/definitions/GuestTypeDefinition"
          },
          "title": "GroupBodyRetrieveRes-synchronizeGroupFeedGuestTypeDefinitions"
        },
        "arrivalTime": {
          "$ref": "#/definitions/ArrivalTime"
        },
        "departureTime": {
          "$ref": "#/definitions/DepartureTime"
        },
        "travelPurpose": {
          "$ref": "#/definitions/TravelPurpose"
        },
        "language": {
          "$ref": "#/definitions/Language"
        },
        "languageLocality": {
          "$ref": "#/definitions/LanguageLocality"
        },
        "keywords": {
          "maxItems": 10,
          "type": "array",
          "description": "list of group keywords",
          "items": {
            "$ref": "#/definitions/Keyword"
          },
          "title": "GroupBodyRetrieveRes-synchronizeGroupFeedKeywords"
        },
        "customerOwnReference": {
          "$ref": "#/definitions/CustomerOwnReference"
        },
        "purchaseOrderReference": {
          "$ref": "#/definitions/PurchaseOrderReference"
        },
        "distributionChannel": {
          "$ref": "#/definitions/DistributionChannel"
        }
      }
    },
    "AddressWithoutIndex-0": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/AddressType"
        },
        "addressLines": {
          "$ref": "#/definitions/AddressLines"
        },
        "cityName": {
          "$ref": "#/definitions/CityName"
        },
        "postalCode": {
          "$ref": "#/definitions/PostalCode"
        },
        "county": {
          "$ref": "#/definitions/County"
        },
        "stateProv": {
          "$ref": "#/definitions/StateProv"
        },
        "countryName": {
          "$ref": "#/definitions/CountryName"
        },
        "countryCode": {
          "$ref": "#/definitions/CountryCode"
        },
        "companyName": {
          "$ref": "#/definitions/CompanyName"
        },
        "unstructuredAddress": {
          "$ref": "#/definitions/UnstructuredAddress"
        }
      },
      "description": "billing address, potentially different from the payer address",
      "title": "AddressWithoutIndex-0"
    },
    "Language-0": {
      "description": "the ISO 639-1 code, like ZH",
      "type": "string",
      "pattern": "^[A-Za-z]{2}$",
      "minLength": 2,
      "maxLength": 2
    },
    "AccountName-0": {
      "description": "corporate account name in native language (non-ASCII characters allowed)",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 35
    },
    "Address-0": {
      "type": "object",
      "properties": {
        "index": {
          "$ref": "#/definitions/AddressIndex"
        },
        "type": {
          "$ref": "#/definitions/AddressType"
        },
        "addressLines": {
          "$ref": "#/definitions/AddressLines"
        },
        "cityName": {
          "$ref": "#/definitions/CityName"
        },
        "postalCode": {
          "$ref": "#/definitions/PostalCode"
        },
        "county": {
          "$ref": "#/definitions/County"
        },
        "stateProv": {
          "$ref": "#/definitions/StateProv"
        },
        "countryName": {
          "$ref": "#/definitions/CountryName"
        },
        "countryCode": {
          "$ref": "#/definitions/CountryCode"
        },
        "companyName": {
          "$ref": "#/definitions/CompanyName"
        },
        "unstructuredAddress": {
          "$ref": "#/definitions/UnstructuredAddress"
        }
      },
      "description": "address in native language (non-ASCII characters allowed)",
      "title": "Address-0"
    },
    "PersonName-0": {
      "description": "container for structured details of the guest name in native language (non-ASCII characters allowed)",
      "type": "object",
      "required": [
        "firstName",
        "lastName"
      ],
      "properties": {
        "namePrefix": {
          "$ref": "#/definitions/NamePrefix"
        },
        "firstName": {
          "$ref": "#/definitions/GivenName"
        },
        "lastName": {
          "$ref": "#/definitions/Surname"
        },
        "middleName": {
          "$ref": "#/definitions/MiddleName"
        },
        "nameSuffix": {
          "$ref": "#/definitions/NameSuffix"
        },
        "title": {
          "$ref": "#/definitions/Title"
        }
      },
      "title": "PersonName-0"
    },
    "AuthenticatedUser-0": {
      "title": "AuthenticatedUser-0",
      "description": "authenticated user information",
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/UserId"
        },
        "lastName": {
          "$ref": "#/definitions/UserLastName"
        },
        "firstName": {
          "$ref": "#/definitions/UserFirstName"
        }
      }
    },
    "AuthenticatedUser-1": {
      "title": "AuthenticatedUser-1",
      "description": "impersonated user information.It is the one who does the transaction on behalf of the authenticated user",
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/UserId"
        },
        "lastName": {
          "$ref": "#/definitions/UserLastName"
        },
        "firstName": {
          "$ref": "#/definitions/UserFirstName"
        }
      }
    },
    "Description-0": {
      "type": "object",
      "additionalProperties": {
        "description": "multi-line description text",
        "type": "array",
        "maxItems": 5,
        "items": {
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 1200,
          "minLength": 1
        },
        "title": "Description-0Property"
      },
      "example": {
        "en": [
          "line 1",
          "line 2",
          "line 3"
        ],
        "fr": [
          "ligne 1",
          "ligne 2",
          "ligne 3"
        ]
      },
      "description": "name of the inventory Type (short description)",
      "title": "Description-0"
    },
    "Description-1": {
      "type": "object",
      "additionalProperties": {
        "description": "multi-line description text",
        "type": "array",
        "maxItems": 5,
        "items": {
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 1200,
          "minLength": 1
        },
        "title": "Description-1Property"
      },
      "example": {
        "en": [
          "line 1",
          "line 2",
          "line 3"
        ],
        "fr": [
          "ligne 1",
          "ligne 2",
          "ligne 3"
        ]
      },
      "description": "description of the inventory Item",
      "title": "Description-1"
    },
    "Description-2": {
      "type": "object",
      "additionalProperties": {
        "description": "multi-line description text",
        "type": "array",
        "maxItems": 5,
        "items": {
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 1200,
          "minLength": 1
        },
        "title": "Description-2Property"
      },
      "example": {
        "en": [
          "line 1",
          "line 2",
          "line 3"
        ],
        "fr": [
          "ligne 1",
          "ligne 2",
          "ligne 3"
        ]
      },
      "description": "name of the attribute",
      "title": "Description-2"
    },
    "Description-3": {
      "type": "object",
      "additionalProperties": {
        "description": "multi-line description text",
        "type": "array",
        "maxItems": 5,
        "items": {
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 1200,
          "minLength": 1
        },
        "title": "Description-3Property"
      },
      "example": {
        "en": [
          "line 1",
          "line 2",
          "line 3"
        ],
        "fr": [
          "ligne 1",
          "ligne 2",
          "ligne 3"
        ]
      },
      "description": "description of the attribute",
      "title": "Description-3"
    },
    "AddressWithoutIndex-1": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/AddressType"
        },
        "addressLines": {
          "$ref": "#/definitions/AddressLines"
        },
        "cityName": {
          "$ref": "#/definitions/CityName"
        },
        "postalCode": {
          "$ref": "#/definitions/PostalCode"
        },
        "county": {
          "$ref": "#/definitions/County"
        },
        "stateProv": {
          "$ref": "#/definitions/StateProv"
        },
        "countryName": {
          "$ref": "#/definitions/CountryName"
        },
        "countryCode": {
          "$ref": "#/definitions/CountryCode"
        },
        "companyName": {
          "$ref": "#/definitions/CompanyName"
        },
        "unstructuredAddress": {
          "$ref": "#/definitions/UnstructuredAddress"
        }
      },
      "description": "address of the travel agency",
      "title": "AddressWithoutIndex-1"
    },
    "Telephone-0": {
      "type": "object",
      "required": [
        "number"
      ],
      "properties": {
        "locationType": {
          "$ref": "#/definitions/PhoneLocationType"
        },
        "deviceType": {
          "$ref": "#/definitions/PhoneDeviceType"
        },
        "countryCode": {
          "$ref": "#/definitions/PhoneCountryCode"
        },
        "areaCode": {
          "$ref": "#/definitions/PhoneAreaCode"
        },
        "extension": {
          "$ref": "#/definitions/PhoneExtension"
        },
        "number": {
          "$ref": "#/definitions/PhoneNumber"
        }
      },
      "description": "telephone of the travel agency",
      "title": "Telephone-0"
    },
    "Email-0": {
      "type": "object",
      "required": [
        "address"
      ],
      "properties": {
        "type": {
          "$ref": "#/definitions/EmailType"
        },
        "language": {
          "$ref": "#/definitions/EmailLanguage"
        },
        "languageLocality": {
          "$ref": "#/definitions/LanguageLocality"
        },
        "address": {
          "$ref": "#/definitions/EmailField"
        }
      },
      "description": "email address of the travel agency",
      "title": "Email-0"
    },
    "AccountName-1": {
      "description": "agency name in native language (non-ASCII characters allowed)",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 35
    },
    "PointOfSale-groupBookingReservation-0": {
      "type": "object",
      "required": [
        "vendorCode",
        "channelCode"
      ],
      "properties": {
        "hotelSource": {
          "$ref": "#/definitions/PropertyCode"
        },
        "vendorCode": {
          "$ref": "#/definitions/VendorCode"
        },
        "vendorTypes": {
          "description": "the vendor type code [0 = Unknown, 1 = PMS, 2 = booking tool, 3 = brand website, 4 = GDS/3rd party website, 5 = mobile, 6 = alternate distribution system]",
          "type": "array",
          "items": {
            "type": "integer",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6
            ]
          },
          "title": "PointOfSale-groupBookingReservation-0VendorTypes"
        },
        "channelCode": {
          "$ref": "#/definitions/ChannelCode"
        },
        "channelSubCode": {
          "$ref": "#/definitions/ChannelCode"
        },
        "metricsCode": {
          "$ref": "#/definitions/MetricsCode"
        },
        "travelAgencyInfo": {
          "$ref": "#/definitions/TravelAgencyInformation"
        },
        "origin": {
          "description": "indicates the Expedia channel that was used for the reservation, if relevant",
          "type": "string",
          "pattern": "^.*$"
        },
        "callCenterInformation": {
          "description": "list of call centers information",
          "type": "array",
          "maxItems": 2,
          "items": {
            "$ref": "#/definitions/CallCenterInformation"
          },
          "title": "PointOfSale-groupBookingReservation-0CallCenterInformation"
        },
        "reportingData": {
          "$ref": "#/definitions/ReportingData-groupBookingReservation"
        }
      },
      "title": "PointOfSale-groupBookingReservation-0",
      "description": "contains the details of the channel which created the group"
    },
    "PointOfSale-groupBookingReservation-1": {
      "type": "object",
      "required": [
        "vendorCode",
        "channelCode"
      ],
      "properties": {
        "hotelSource": {
          "$ref": "#/definitions/PropertyCode"
        },
        "vendorCode": {
          "$ref": "#/definitions/VendorCode"
        },
        "vendorTypes": {
          "description": "the vendor type code [0 = Unknown, 1 = PMS, 2 = booking tool, 3 = brand website, 4 = GDS/3rd party website, 5 = mobile, 6 = alternate distribution system]",
          "type": "array",
          "items": {
            "type": "integer",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6
            ]
          },
          "title": "PointOfSale-groupBookingReservation-1VendorTypes"
        },
        "channelCode": {
          "$ref": "#/definitions/ChannelCode"
        },
        "channelSubCode": {
          "$ref": "#/definitions/ChannelCode"
        },
        "metricsCode": {
          "$ref": "#/definitions/MetricsCode"
        },
        "travelAgencyInfo": {
          "$ref": "#/definitions/TravelAgencyInformation"
        },
        "origin": {
          "description": "indicates the Expedia channel that was used for the reservation, if relevant",
          "type": "string",
          "pattern": "^.*$"
        },
        "callCenterInformation": {
          "description": "list of call centers information",
          "type": "array",
          "maxItems": 2,
          "items": {
            "$ref": "#/definitions/CallCenterInformation"
          },
          "title": "PointOfSale-groupBookingReservation-1CallCenterInformation"
        },
        "reportingData": {
          "$ref": "#/definitions/ReportingData-groupBookingReservation"
        }
      },
      "title": "PointOfSale-groupBookingReservation-1",
      "description": "contains the details of the channel which requested the transaction"
    },
    "StartEnd-0": {
      "title": "StartEnd-0",
      "minProperties": 1,
      "properties": {
        "start": {
          "description": "start date",
          "type": "string",
          "pattern": "^.*$",
          "format": "date",
          "maxLength": 50,
          "example": "2019-11-22"
        },
        "end": {
          "description": "end date",
          "type": "string",
          "pattern": "^.*$",
          "format": "date",
          "maxLength": 50,
          "example": "2019-12-20"
        }
      },
      "description": "period during which the product is available",
      "type": "object"
    },
    "Description-4": {
      "type": "object",
      "additionalProperties": {
        "description": "multi-line description text",
        "type": "array",
        "maxItems": 5,
        "items": {
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 1200,
          "minLength": 1
        },
        "title": "Description-4Property"
      },
      "example": {
        "en": [
          "line 1",
          "line 2",
          "line 3"
        ],
        "fr": [
          "ligne 1",
          "ligne 2",
          "ligne 3"
        ]
      },
      "description": "description of the cancellation reason",
      "title": "Description-4"
    },
    "Description-5": {
      "type": "object",
      "additionalProperties": {
        "description": "multi-line description text",
        "type": "array",
        "maxItems": 5,
        "items": {
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 1200,
          "minLength": 1
        },
        "title": "Description-5Property"
      },
      "example": {
        "en": [
          "line 1",
          "line 2",
          "line 3"
        ],
        "fr": [
          "ligne 1",
          "ligne 2",
          "ligne 3"
        ]
      },
      "description": "exceptional cancellation reason",
      "title": "Description-5"
    },
    "TotalRateDetails-0": {
      "description": "total amount of a segment with extra person",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RateAmounts"
        },
        {
          "type": "object",
          "properties": {
            "payableAmtAfTax": {
              "description": "amount after all taxes except those payable at the hotel",
              "type": "string",
              "pattern": "^.*$"
            },
            "taxGroups": {
              "description": "the applicable taxes grouped by tax code and inclusion in rate",
              "type": "array",
              "minItems": 1,
              "maxItems": 99,
              "items": {
                "$ref": "#/definitions/TaxAmount"
              },
              "title": "TotalRateDetails-0allOf1TaxGroups"
            },
            "totalTaxes": {
              "description": "total amount of all applicable taxes",
              "type": "string",
              "pattern": "^.*$",
              "minLength": 1,
              "maxLength": 20
            },
            "daily": {
              "description": "daily average, highest or checkin rate for the stay",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DailyTypeAmount"
              },
              "title": "TotalRateDetails-0allOf1Daily"
            }
          },
          "title": "TotalRateDetails-0allOf1"
        }
      ],
      "title": "TotalRateDetails-0"
    },
    "TotalRateDetails-1": {
      "description": "total amount of a segment without extra person",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RateAmounts"
        },
        {
          "type": "object",
          "properties": {
            "payableAmtAfTax": {
              "description": "amount after all taxes except those payable at the hotel",
              "type": "string",
              "pattern": "^.*$"
            },
            "taxGroups": {
              "description": "the applicable taxes grouped by tax code and inclusion in rate",
              "type": "array",
              "minItems": 1,
              "maxItems": 99,
              "items": {
                "$ref": "#/definitions/TaxAmount"
              },
              "title": "TotalRateDetails-1allOf1TaxGroups"
            },
            "totalTaxes": {
              "description": "total amount of all applicable taxes",
              "type": "string",
              "pattern": "^.*$",
              "minLength": 1,
              "maxLength": 20
            },
            "daily": {
              "description": "daily average, highest or checkin rate for the stay",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DailyTypeAmount"
              },
              "title": "TotalRateDetails-1allOf1Daily"
            }
          },
          "title": "TotalRateDetails-1allOf1"
        }
      ],
      "title": "TotalRateDetails-1"
    },
    "TotalRateDetails-2": {
      "description": "total amount of extra person in a segment",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RateAmounts"
        },
        {
          "type": "object",
          "properties": {
            "payableAmtAfTax": {
              "description": "amount after all taxes except those payable at the hotel",
              "type": "string",
              "pattern": "^.*$"
            },
            "taxGroups": {
              "description": "the applicable taxes grouped by tax code and inclusion in rate",
              "type": "array",
              "minItems": 1,
              "maxItems": 99,
              "items": {
                "$ref": "#/definitions/TaxAmount"
              },
              "title": "TotalRateDetails-2allOf1TaxGroups"
            },
            "totalTaxes": {
              "description": "total amount of all applicable taxes",
              "type": "string",
              "pattern": "^.*$",
              "minLength": 1,
              "maxLength": 20
            },
            "daily": {
              "description": "daily average, highest or checkin rate for the stay",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DailyTypeAmount"
              },
              "title": "TotalRateDetails-2allOf1Daily"
            }
          },
          "title": "TotalRateDetails-2allOf1"
        }
      ],
      "title": "TotalRateDetails-2"
    },
    "RatesDefinition-0": {
      "type": "object",
      "title": "RatesDefinition-0",
      "required": [
        "rateChanges"
      ],
      "properties": {
        "rateChanges": {
          "description": "the applicable rate changes of the stay. Gives the definition of rate set in the GRS",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RateDefinition"
          },
          "title": "RatesDefinition-0RateChanges"
        },
        "dailyExtraPersonCharge": {
          "description": "daily amount for 1 extra participant for non-service. Returned depending on channel profile and setting",
          "type": "string",
          "pattern": "^.*$"
        },
        "average": {
          "description": "the average rate",
          "type": "string",
          "pattern": "^.*$"
        },
        "checkin": {
          "description": "the checkin rate depending on channel setting",
          "type": "string",
          "pattern": "^.*$"
        },
        "highest": {
          "description": "the highest rate depending on channel setting",
          "type": "string",
          "pattern": "^.*$"
        }
      },
      "description": "the list of applicable rates for current offer"
    },
    "ProductUseId-0": {
      "description": "contains the id of the sleepingRoom ProductUse linked to the NRP ProductUse",
      "type": "integer",
      "format": "int32"
    },
    "SearchPeriod-0": {
      "type": "object",
      "required": [
        "start"
      ],
      "properties": {
        "start": {
          "description": "search period start date",
          "type": "string",
          "pattern": "^.*$",
          "format": "date",
          "maxLength": 25
        },
        "end": {
          "description": "search period end date",
          "type": "string",
          "pattern": "^.*$",
          "format": "date",
          "maxLength": 25
        }
      },
      "description": "date range of arrival date (group Start date)",
      "title": "SearchPeriod-0"
    },
    "SearchPeriod-1": {
      "type": "object",
      "required": [
        "start"
      ],
      "properties": {
        "start": {
          "description": "search period start date",
          "type": "string",
          "pattern": "^.*$",
          "format": "date",
          "maxLength": 25
        },
        "end": {
          "description": "search period end date",
          "type": "string",
          "pattern": "^.*$",
          "format": "date",
          "maxLength": 25
        }
      },
      "description": "date range of departure date (group end date)",
      "title": "SearchPeriod-1"
    },
    "SearchPeriod-2": {
      "type": "object",
      "required": [
        "start"
      ],
      "properties": {
        "start": {
          "description": "search period start date",
          "type": "string",
          "pattern": "^.*$",
          "format": "date",
          "maxLength": 25
        },
        "end": {
          "description": "search period end date",
          "type": "string",
          "pattern": "^.*$",
          "format": "date",
          "maxLength": 25
        }
      },
      "description": "date situated within the stay period, between group StartDate (included) and group EndDate (excluded)",
      "title": "SearchPeriod-2"
    },
    "SearchPeriod-3": {
      "type": "object",
      "required": [
        "start"
      ],
      "properties": {
        "start": {
          "description": "search period start date",
          "type": "string",
          "pattern": "^.*$",
          "format": "date",
          "maxLength": 25
        },
        "end": {
          "description": "search period end date",
          "type": "string",
          "pattern": "^.*$",
          "format": "date",
          "maxLength": 25
        }
      },
      "description": "date range of creation date (in hotel local time)",
      "title": "SearchPeriod-3"
    },
    "SearchPeriod-4": {
      "type": "object",
      "required": [
        "start"
      ],
      "properties": {
        "start": {
          "description": "search period start date",
          "type": "string",
          "pattern": "^.*$",
          "format": "date",
          "maxLength": 25
        },
        "end": {
          "description": "search period end date",
          "type": "string",
          "pattern": "^.*$",
          "format": "date",
          "maxLength": 25
        }
      },
      "description": "date range of cancellation date (in hotel local time)",
      "title": "SearchPeriod-4"
    },
    "SearchPointOfSale-groupBookingReservationSearch-0": {
      "type": "object",
      "properties": {
        "travelAgencyInfo": {
          "$ref": "#/definitions/SearchTravelAgencyInformation"
        },
        "vendorCode": {
          "$ref": "#/definitions/VendorCode"
        },
        "reportingData": {
          "$ref": "#/definitions/ReportingData-groupBookingReservationSearch"
        }
      },
      "title": "SearchPointOfSale-groupBookingReservationSearch-0",
      "description": "contains the details of the channel which created the group"
    },
    "SearchPointOfSale-groupBookingReservationSearch-1": {
      "type": "object",
      "properties": {
        "travelAgencyInfo": {
          "$ref": "#/definitions/SearchTravelAgencyInformation"
        },
        "vendorCode": {
          "$ref": "#/definitions/VendorCode"
        },
        "reportingData": {
          "$ref": "#/definitions/ReportingData-groupBookingReservationSearch"
        }
      },
      "title": "SearchPointOfSale-groupBookingReservationSearch-1",
      "description": "contains the details of the channel which requested the transaction"
    },
    "SearchPointOfSale-groupBookingReservationSearch-2": {
      "type": "object",
      "properties": {
        "travelAgencyInfo": {
          "$ref": "#/definitions/SearchTravelAgencyInformation"
        },
        "vendorCode": {
          "$ref": "#/definitions/VendorCode"
        },
        "reportingData": {
          "$ref": "#/definitions/ReportingData-groupBookingReservationSearch"
        }
      },
      "title": "SearchPointOfSale-groupBookingReservationSearch-2",
      "description": "contains the details of the channel owner of the group"
    }
  },
  "parameters": {
    "ChainCode": {
      "description": "chain code identifier",
      "in": "path",
      "name": "chainCode",
      "required": true,
      "type": "string",
      "pattern": "^.*$"
    },
    "GroupId": {
      "description": "group unique identifier",
      "in": "path",
      "name": "groupId",
      "required": true,
      "type": "string",
      "pattern": "^.*$"
    },
    "CommittedSequenceNumber": {
      "name": "committedSequenceNumber",
      "in": "path",
      "required": true,
      "description": "committed Sequence Number of the group",
      "type": "integer",
      "format": "int32"
    },
    "FeedGroupCode": {
      "description": "code for the group which is unique within the same inventory weeks of the effective dates.(dates covered by group period)",
      "in": "path",
      "name": "groupCode",
      "required": true,
      "type": "string",
      "pattern": "^.*$",
      "minLength": 3,
      "maxLength": 50
    },
    "FeedGroupIdentifier": {
      "description": "it can be either groupExternalId or previousFirstArrivalDate. Either one must be present to identify the group",
      "in": "path",
      "name": "groupIdentifier",
      "required": true,
      "type": "string",
      "pattern": "^.*$"
    },
    "propertyCode": {
      "name": "propertyCode",
      "in": "path",
      "required": true,
      "description": "the property code",
      "type": "string",
      "pattern": "^[A-Z0-9]{1,10}$",
      "minLength": 1,
      "maxLength": 10
    },
    "Ama-Pos": {
      "description": "schema must match with Ama-Pos definition",
      "in": "header",
      "name": "Ama-Pos",
      "type": "string",
      "pattern": "^.*$"
    },
    "Ama-Reservation-Owner": {
      "description": "schema must match with Ama-Reservation-Owner definition",
      "in": "header",
      "name": "Ama-Reservation-Owner",
      "type": "string",
      "pattern": "^.*$"
    },
    "Ama-Channel-Identifiers": {
      "description": "schema must match with Ama-Channel-Identifiers definition",
      "in": "header",
      "name": "Ama-Channel-Identifiers",
      "type": "string",
      "pattern": "^.*$"
    },
    "ama-request-id": {
      "name": "Ama-Request-Id",
      "in": "header",
      "required": false,
      "type": "string",
      "description": "request Id of the message.Unique transaction identifier"
    },
    "ama-request-correlation-id": {
      "name": "Ama-Request-Correlation-Id",
      "in": "header",
      "required": false,
      "type": "string",
      "description": "correlation request id grouping several transactions that are related"
    },
    "ama-correlation-id": {
      "name": "Ama-Correlation-Id",
      "in": "header",
      "required": false,
      "type": "string",
      "description": "correlation request id grouping several transactions that are related"
    },
    "ama-retry-count": {
      "name": "Ama-Retry-Count",
      "in": "header",
      "required": false,
      "type": "string",
      "description": "retry count of the message"
    },
    "ama-sequence-id": {
      "name": "Ama-Sequence-Id",
      "in": "header",
      "required": false,
      "type": "string",
      "format": "int32",
      "description": "sequence of the message depending on the scope. Refer implementation details"
    },
    "ama-destinations-whitelist": {
      "name": "Ama-Destinations-Whitelist",
      "in": "header",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "targeted systems for the message"
    },
    "ama-destinations-blacklist": {
      "name": "Ama-Destinations-Blacklist",
      "in": "header",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "targeted systems for the message except the ones in this list"
    },
    "ama-transmission-time": {
      "name": "Ama-Transmission-Time",
      "in": "header",
      "required": false,
      "type": "string",
      "format": "date-time",
      "description": "time when the header is attached to the message"
    },
    "history": {
      "name": "history",
      "in": "query",
      "required": false,
      "description": "parameter used to request retrieve history",
      "type": "boolean",
      "default": false
    },
    "inventoryCounters": {
      "description": "inventory counters will be included in the response if the value is true. It is recommended not to request inventory counters in order to improve the response time",
      "in": "query",
      "default": false,
      "name": "inventoryCounters",
      "type": "boolean"
    },
    "computeTaxes": {
      "name": "computeTaxes",
      "in": "query",
      "required": false,
      "description": "parameter used to allow compute taxes",
      "type": "boolean",
      "default": false
    },
    "creationDate": {
      "name": "creationDate",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "date of creation (UTC). If not provided in the request only active reservation will be retrieved",
      "format": "date"
    },
    "partialModifyGroup": {
      "name": "partialModifyGroup",
      "description": "it's used for partial group modification",
      "in": "body",
      "schema": {
        "$ref": "#/definitions/GroupPartialModifyReq"
      }
    },
    "cancelGroup": {
      "name": "cancelGroup",
      "description": "it's used for group cancellation",
      "in": "body",
      "schema": {
        "$ref": "#/definitions/CancellationReq"
      }
    },
    "searchGroup": {
      "name": "searchGroup",
      "description": "it's used for group search",
      "in": "body",
      "schema": {
        "$ref": "#/definitions/GroupSearchReq"
      }
    },
    "createGroup-groupBookingReservationRequest": {
      "name": "createGroup",
      "description": "it's used for group creation",
      "in": "body",
      "schema": {
        "$ref": "#/definitions/GroupReq-groupBookingReservationRequest"
      }
    },
    "synchronizedGroup-synchronizeGroupFeed": {
      "name": "synchronizedGroup",
      "in": "body",
      "description": "actual content to synchronize",
      "required": true,
      "schema": {
        "title": "SynchronizedGroup-synchronizeGroupFeed",
        "required": [
          "data"
        ],
        "properties": {
          "meta": {
            "$ref": "#/definitions/FeedsMeta"
          },
          "data": {
            "$ref": "#/definitions/GroupBodyRetrieveRes-synchronizeGroupFeed"
          }
        },
        "type": "object"
      }
    }
  },
  "responses": {
    "400": {
      "description": "Bad request.\n\nExamples of functional error codes (not exhaustive list):\n\ncode    | title\n------- | -------------------\n320     | Exception at decoding\n",
      "schema": {
        "$ref": "#/definitions/ResponseError_400"
      }
    },
    "401": {
      "description": "Unauthorized.\n\nExamples of functional error codes (not exhaustive list):\n\ncode    | title\n------- | -------------------\n701      | Wrong authentication credentials\n",
      "schema": {
        "$ref": "#/definitions/ResponseError_401"
      }
    },
    "403": {
      "description": "Forbidden.\n\nExamples of functional error codes (not exhaustive list):\n\ncode    | title\n------- | -------------------\n400     | The property does not exist in the CRS.\n",
      "schema": {
        "$ref": "#/definitions/ResponseError_403"
      }
    },
    "404": {
      "description": "Not Found.\n\nExamples of functional error codes (not exhaustive list):\n\ncode    | title\n------- | -------------------\n97      | No group available for the input group Id\n",
      "schema": {
        "$ref": "#/definitions/ResponseError_404"
      }
    },
    "406": {
      "description": "Not Acceptable.\n\nExamples of functional error codes (not exhaustive list):\n\ncode    | title\n------- | -------------------\n172     | Requested version not supported [ X.X ].\n",
      "schema": {
        "$ref": "#/definitions/ResponseError_406"
      }
    },
    "422": {
      "description": "Unprocessable entity.\n",
      "schema": {
        "$ref": "#/definitions/ResponseError_422"
      }
    },
    "429": {
      "description": "Too many requests.\n",
      "schema": {
        "$ref": "#/definitions/ResponseError_429"
      }
    },
    "500": {
      "description": "Internal Server Error.\n\nExamples of functional error codes (not exhaustive list):\n\ncode    | title\n------- | -------------------\n448     | System error\n450     | Unable to process\n",
      "schema": {
        "$ref": "#/definitions/ResponseError_500"
      }
    },
    "503": {
      "description": "Forbidden\n\ncode    | title\n------- | -------------------\n110008  | Service Unavailable\n",
      "schema": {
        "$ref": "#/definitions/responseError_503"
      }
    },
    "504": {
      "description": "Gateway Timeout.\n\nExamples of functional error codes (not exhaustive list):\n\ncode    | title\n------- | -------------------\n15345   | ESPINV RTO occurred\n15346   | ESPINV Message too old\n",
      "schema": {
        "$ref": "#/definitions/ResponseError_504"
      }
    },
    "returnFeedSuccess": {
      "description": "successful Operation",
      "schema": {
        "$ref": "#/definitions/FeedSuccess"
      }
    },
    "groupResponse-groupBookingReservation": {
      "description": "Successful operation.",
      "schema": {
        "$ref": "#/definitions/GroupRes-groupBookingReservation"
      }
    },
    "groupRetrieveResponse-groupBookingRetrieve": {
      "description": "Successful operation.",
      "schema": {
        "$ref": "#/definitions/GroupRetrieveRes-groupBookingRetrieve"
      }
    },
    "groupModifyResponse-groupBookingReservation": {
      "description": "Successful operation.",
      "schema": {
        "$ref": "#/definitions/GroupModifyRes-groupBookingReservation"
      }
    },
    "groupSearchResponse-groupBookingReservationSearch": {
      "description": "Successful operation.",
      "schema": {
        "$ref": "#/definitions/GroupSearchRes-groupBookingReservationSearch"
      }
    }
  },
  "x-metadata": {
    "status": 1,
    "branch": "feature/GroupAPI_V2.6"
  }
}