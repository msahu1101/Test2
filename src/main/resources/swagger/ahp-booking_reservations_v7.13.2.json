{
  "swagger": "2.0",
  "info": {
    "version": "7.13.2",
    "title": "ACRS_JSON_Reservation",
    "description": "The Reservations API of the Amadeus Hospitality CRS application.\nIt comprises how to create, modify, reinstate, cancel, migrate, retrieve, commit and ignore reservations\n",
    "x-release-note": {
      "7.0.0": [
        "########## New Features ##########",
        "Consumption Rules",
        "Guest type set-up",
        "Search POST operation - replacing GET",
        "Multi-segment reservation linkage",
        "Taxes, Service Charges and Fees by Guest Type/ Age",
        "Ability to set the override tax ignored flag",
        "########## New in request ##########",
        "hide_no_show query parameter - search",
        "########## New in Response ##########",
        "hotelReservation.folderId",
        "taxDefinitions.value renamed values and changed from string to array[object]",
        "hotels.isPseudoProperty",
        "hotels.masterPropertyCode",
        "hotels.masterPropertyName",
        "########## New in Request and Response ##########",
        "segments[].offer.productUses[].guestCounts[].id",
        "segments[].offer.productUses[].guestCounts[].otaCode",
        "segments[].offer.productUses[].guestCounts[].guestType (only in response)",
        "segments[].offer.productUses[].guestCounts[].count",
        "reservationIds.pmsCxNumber",
        "reservationIds.extCxNumber",
        "segments[].offer.corpMarketSegment,",
        "segments[].offer.nightlyCorpMarketSegments[]",
        "segments[].offer.policyTypeCode",
        "########## Moved ##########",
        "segments.offer.ratePlanCode to segments.offer.productUses[].ratePlanCode",
        "##########  Removed ###################",
        "authorization from the header",
        "ama-api-version from the header",
        "hotelReservation.segments[].loyaltyProgram from segment",
        "amtBfTx and AmtAfTx in the original base rates",
        "data.hotelReservation.groupContracts[].marketSegmentation - mapped to nightlyCorpMarketSegments and corpMarketSegment",
        "########## Renamed ##########",
        "productCode to inventoryTypeCode",
        "productName to inventoryTypeName",
        "productTypeCode to productCode",
        "productTypeName to productName",
        "upgradedProductCode to upgradedInventoryTypeCode",
        "segment.owner.agencyDetails.travelAgencyName to name",
        "segments.offer.propertyMarketSegmentation to propertyMarketSegment",
        "createDateTime to creationDateTime",
        "resStatus to status",
        "reservationType to type",
        "taxDefinitions[].taxCode to code",
        "taxDefinitions[].otaCode to taxTypeCode",
        "taxDefinitions[].isInclusive renamed isIncluded",
        "taxDefinitions[].productTypeCode renamed productCodes",
        "taxDefinitions[].taxOn renamed computationMode",
        "taxDefinitions[].value to values[]",
        "taxDefinitions[].valueType to ComputationType",
        "########## Other Changes ##########",
        "Error and Warning structure to follow Amadeus guidelines",
        "reservationIDs.pmsCfNumber Increased length to 50 char",
        "isMainProduct to optional - migration",
        "ratePlans[] optional for pickup bookings - if no hardcoded ratePlanCode provided in RQ"
      ],
      "7.1.0": [
        "########## New Features ##########",
        "Multiple identical rooms reservation",
        "########## New in request ##########",
        "includePseudoPropertyReservations field in search",
        "corpMarketSegment - search",
        "########## New in Response ##########",
        "segments[].offer.productUses.productRates.pricingFrequency (PerUse) - productRates & packageRates level",
        "segments[].offer.productUses.productRates.BookingPattern - productRates & packageRates level",
        "hotels.isPseudoProperty",
        "hotels.masterPropertyCode",
        "hotels.masterPropertyName",
        "hotelReservation.ratePlans.gamingBucket",
        "hotels[].guestTypeDefinition.startAge",
        "hotels[].guestTypeDefinition.endAge",
        "hotels[].guestTypeDefinition.otaCodes",
        "hotels[].guestTypeDefinition.code",
        "hotels[].guestTypeDefinition.description",
        "printRate boolean at reservation level",
        "########## New in Request and Response ##########",
        "data.creator",
        "data.hotelReservation.segment.creator",
        "data.hotelReservation.segment.owner",
        "segments[].offer.isPerpetualOffer",
        "userProfiles[].loyaltyProgram.qualifier.dominance",
        "userProfiles[].loyaltyProgram.qualifier..tier",
        "segments[].offer.productUses[].routingInstructions[].code",
        "segments[].offer.productUses[].routingInstructions[].authorizerCode",
        "segments[].offer.productUses[].routingInstructions[].routingCode",
        "segments[].offer.productUses[].routingInstructions[].window",
        "segments[].offer.productUses[].routingInstructions[].limitCriteria",
        "segments[].offer.productUses[].routingInstructions[].limitValue",
        "segments[].offer.productUses[].routingInstructions[].period",
        "segments[].offer.productUses[].routingInstructions[].routingLimitType",
        "segments[].offer.productUses[].routingInstructions[].couponNumber",
        "segments[].offer.productUses[].routingInstructions[].covers",
        "segments[].offer.productUses[].routingInstructions[].source",
        "segments[].offer.productUses[].routingInstructions[].isDaily",
        "segments[].offer.productUses[].routingInstructions[].comment",
        "segments[].offer.productUses[].routingInstructions[].id",
        "segments[].offer.productUses[].totalGuestCounts[].guestType",
        "segments[].offer.productUses[].guestCounts[].age",
        "segments[].offer.productUses[].guestCounts[].id",
        "segments[].offer.productUses[].guestCounts[].otaCode",
        "segments[].offer.productUses[].guestCounts[].guestType (only in response)",
        "segments[].offer.productUses[].guestCounts[].count",
        "segments[].offer.productUses[].productRates.pricingMethod - new enum values 'PerProductPerOcc' and 'PerProductPerGuestType'",
        "segments[].offer.productUses[].packageRates.pricingMethod - new enum values 'PerProductPerOcc' and 'PerProductPerGuestType'",
        "data.hotelReservation.reportingData object",
        "########## Other Changes ##########",
        "remove specific type from the payment fields  segments.formOfPayment.paymentInfo|depositPayments.multiFactorInfo authenticationDidNotComplete, cavv, dsTransactionId, eci, identifierOfAuthorization, merchantName, tavv, threeDsAuthenticationValue, threeDsVersion, transactionXid"
      ],
      "7.1.1": [
        "########## Other Changes ##########",
        "CFNumber and CXNumber - search new format"
      ],
      "7.2.0": [
        "########## New Features ##########",
        "Field length extension",
        "########## New in request ##########",
        "Optional fields under the header Ama-Channel-Identifiers - channelClass, channelType, channel, subChannel",
        "########## New in Response ##########",
        "hotelReservation.ratePlans.longDescription",
        "reportingData object in the pointOfSale object",
        "########## Moved ##########",
        "reportingData.channelClass to pointOfSale.reportingData.channelClass",
        "reportingData.channelType to pointOfSale.reportingData.channelType",
        "reportingData.channel to pointOfSale.reportingData.channel",
        "reportingData.subChannel to pointOfSale.reportingData.subChannel",
        "########## Other Changes ##########",
        "Extend maxLength of ratePlanCode, priceGridCode, inventoryTypeCode, groupCode to 50"
      ],
      "7.2.1": [
        "########## Other Changes ##########",
        "Support any OTA age qualifying code"
      ],
      "7.3.0": [
        "########## New Features ##########",
        "Partial search for, data.cxNumber, data.cfNumber",
        "Enhance price structure with distinction between taxes pre-paid and paid at hotel",
        "Ability to modify the loyalty id in reservation",
        "Ability to post partial deposit amount in create/modify reservation",
        "New API services (Create, Modify and Retrieve) for link reservation",
        "########## New Operation ##########",
        "/hotel/reservations/{chainCode}/{cfNumber}/reinstate -Â Ability to move a cancelled/no-show/checked-out reservation back to confirmed status",
        "########## New in request ##########",
        "promoCode - create, modify, migrate, search",
        "data.segments[0].id - reinstate",
        "promoGroupCode - search",
        "hotels.isPseudoProperty - migrate",
        "hotels.masterPropertyCode - migrate",
        "hotels.masterPropertyName - migrate",
        "userProfilePendingReq.externalProfileIds - modify",
        "corpMarketSegment - search",
        "hide_no_show query parameter - search",
        "includePseudoPropertyReservations - search",
        "reportingData.channelClass - create, modify, migrate, search",
        "reportingData.channelType - create, modify, migrate, search",
        "reportingData.channel - create, modify, migrate, search",
        "reportingData.subChannel - create, modify, migrate, search",
        "promoCode - create, modify, migrate, search",
        "data.segments[0].id - reinstate",
        "promoGroupCode - search",
        "hotels.isPseudoProperty - migrate",
        "hotels.masterPropertyCode - migrate",
        "hotels.masterPropertyName - migrate",
        "userProfilePendingReq.externalProfileIds - modify",
        "links - search",
        "includeJointReservations - search",
        "includeSharedReservations - search",
        "########## New in Response ##########",
        "hotelReservation.shareId",
        "userProfileRes.externalProfileIds",
        "userProfileSearchRes.externalProfileIds",
        "corporateAccountInfoSearchRes.externalProfileIds",
        "userProfilePendingRes.externalProfileIds",
        "searchTravelAgencyInformation.externalProfileIds",
        "userProfileHistoryRes.externalProfileIds",
        "segments[].indicators.hasForcedRestrictions",
        "segments[].indicators.hasForcedInventoryAvailability",
        "segments[].indicators.isCancelledAfterDeadline",
        "segments[].indicators.hasRateOverride",
        "segments[].indicators.isRateOverrideWithinThreshold",
        "userProfiles[].isSelfLimiting",
        "userProfiles[].guestProfileStatus",
        "userProfiles[].discrepancyFound",
        "userProfiles[].discrepancyReason",
        "userProfiles[].profileNotFound",
        "segments[].owner.agencyDetails.discrepancyFound",
        "segments[].owner.agencyDetails.discrepancyReason",
        "segments[].owner.agencyDetails.profileNotFound",
        "segments[].corporateAccountInfo[].companyProfileStatus",
        "segments[].corporateAccountInfo[].discrepancyFound",
        "segments[].corporateAccountInfo[].discrepancyReason",
        "segments[].corporateAccountInfo[].profileNotFound",
        "Updated enum for travelAgencyInfo.identifiers[0].type",
        "hotels[].freeGuestsDefinitions",
        "\\\"isPaidAtHotel\\\" under taxDefinitions(segment), to denote if tax needs to be paid at hotel.",
        "\\\"payableAmount\\\" and \\\"payHotelAmount\\\" for all subTotalTaxes and subTotalServiceCharges, for the excluded taxes and service charges",
        "\\\"payableAmtAfTx\\\" under all daily and total rate structures, to define amount after all taxes except those payable at the hotel",
        "\\\"payableTotalTaxes\\\" and \\\"payHotelTotalTaxes\\\" in structures where total taxes(daily & all total) are defined, for taxes payable now and taxes payable at hotel",
        "reportingData.channelClass",
        "reportingData.channelType",
        "reportingData.channel",
        "reportingData.subChannel",
        "hotelReservation.ratePlans.longDescription",
        "segments[].offer.promoCode",
        "hotelReservation.shareId",
        "segments[].offer.promoGroupCode",
        "userProfileRes.externalProfileIds",
        "userProfileSearchRes.externalProfileIds",
        "corporateAccountInfoSearchRes.externalProfileIds",
        "userProfilePendingRes.externalProfileIds",
        "searchTravelAgencyInformation.externalProfileIds",
        "userProfileHistoryRes.externalProfileIds",
        "segments[].indicators.hasForcedRestrictions",
        "segments[].indicators.hasForcedInventoryAvailability",
        "segments[].indicators.isCancelledAfterDeadline",
        "segments[].indicators.hasRateOverride",
        "segments[].indicators.isRateOverrideWithinThreshold",
        "Add data.hotelReservation.userProfiles[0].isSelfLimiting",
        "Add data.hotelReservation.userProfiles[0].guestProfileStatus",
        "Add data.hotelReservation.userProfiles[0].discrepancyFound",
        "Add data.hotelReservation.userProfiles[0].discrepancyReason",
        "Add data.hotelReservation.userProfiles[0].profileNotFound",
        "Add data.hotelReservation.segments[0].owner.agencyDetails.discrepancyFound",
        "Add data.hotelReservation.segments[0].owner.agencyDetails.discrepancyReason",
        "Add data.hotelReservation.segments[0].owner.agencyDetails.profileNotFound",
        "Add data.hotelReservation.segments[0].corporateAccountInfo[0].companyProfileStatus",
        "data.hotelReservation.segments[0].corporateAccountInfo[0].discrepancyFound",
        "data.hotelReservation.segments[0].corporateAccountInfo[0].discrepancyReason",
        "data.hotelReservation.segments[0].corporateAccountInfo[0].profileNotFound",
        "Updated enum for travelAgencyInfo.identifiers[0].type",
        "Added flag \"isPaidAtHotel\" under taxDefinitions(segment), to denote if tax needs to be paid at hotel.",
        "Added \"payableAmount\" and \"payHotelAmount\" for all subTotalTaxes and subTotalServiceCharges, for the excluded taxes and service charges",
        "Added \"payableAmtAfTx\" under all daily and total rate structures, to define amount after all taxes except those payable at the hotel",
        "Added \"payableTotalTaxes\" & \"payHotelTotalTaxes\" in structures where total taxes(daily & all total) are defined, for taxes payable now and taxes payable at hotel",
        "hotels[].freeGuestsDefinitions",
        "########## New in Request and Response ##########",
        "segments[].traces",
        "segments[].alerts",
        "segments[].serviceRequest.type",
        "segments[].offer.promoCode",
        "segments[].offer.promoGroupCode",
        "corporateAccount.externalProfileIds",
        "userProfilePendingReq.externalProfileIds",
        "agencyDetails.externalProfileIds",
        "data.hotelLinkReservation.type",
        "data.hotelLinkReservation.sharePricingMethod",
        "########## Renamed ##########",
        "data.hotelReservation.folderId to data.hotelReservation.linkId",
        "########## Other Changes ##########",
        "Reduce maxLength to 10 of hotelReservation.reservationIds.cxNumber",
        "Extend maxLength to 50 for ratePlanCode, priceGridCode, inventoryTypeCode fields",
        "Updated maxLength of requestCode in specialRequests and specialRequestsReq to 20",
        "Replaced fields data.hotelReservation.linkId and data.hotelReservation.shareId with object data.hotelReservation.links containing fields data.hotelReservation.links.id and data.hotelReservation.links.type",
        "Updated enum for bookingPatterning by adding [Anytime]",
        "Change description of HotelLinkReservationReq.cfNumbers, nationalities, linkModificationChanges, migGuestsReq",
        "Optional cfNumbers in HotelLinkReservationRes",
        "Increase length of serviceRequest code from 4..4 to 4..20",
        "Update of the reinstateReservationReq segments description",
        "length of groupCode search parameter from 3..4 to 2..51",
        "change description of propertyCode, promoCodes, promoGroupCodes search criteria"
      ],
      "7.3.1": [
        "########## New in Response ##########",
        "Added \"payableAmount\" and \"payHotelAmount\" for all subTotalTaxes and subTotalServiceCharges, for the excluded taxes and service charges in Retrieve History",
        "Added \"payableAmtAfTx\" under all daily and total rate structures in Retrieve History, to define amount after all taxes except those payable at the hotel",
        "Added \"payableTotalTaxes\" & \"payHotelTotalTaxes\" in structures where total taxes(daily & all total) are defined in Retrieve History, for taxes payable now and taxes payable at hotel"
      ],
      "7.4.0": [
        "########## New in request ##########",
        "data.reportingData.reportingCode for search",
        "data.externalShareId for search",
        "########## New in response ##########",
        "data.hotelReservation.creator.reportingData.reportingCode",
        "data.hotelReservation.requestor.reportingData.reportingCode",
        "########## New in Request and Response ##########",
        "data.hotelReservation.segment[].creator.reportingData.reportingCode",
        "data.hotelReservation.segment[].requestor.reportingData.reportingCode",
        "data.hotelReservation.reservationIds.externalShareId",
        "########## New Operation ##########",
        "/reservation/chains/{chainCode}/links/{linkId}/detailed for synchronizing share",
        "########## Other Changes ##########",
        "response error code 429 added",
        ".data.hotelReservation.segments[0].serviceRequests[0].code - minLength reduced from 4 to 1 in both request and response",
        ".data.hotelReservation.segments[0].owner.agencyDetails.agencyProfileStatus - deprecated in Request",
        ".data.hotelReservation.segments[0].owner.agencyDetails.profileNotFound - deprecated in Request",
        ".data.hotelReservation.segments[0].owner.agencyDetails.discrepancyFound - deprecated in Request",
        ".data.hotelReservation.segments[0].owner.agencyDetails.discrepancyReason - deprecated in Request"
      ],
      "7.4.1": [
        "########## Other Changes ##########",
        ".data.hotelReservation.segments[0].offer.productUses - link fixed in request API",
        ".data.hotelReservation.segments[0].offer.productUses[0].routingInstructions[0].dow - Corrected by masking it in request API"
      ],
      "7.5.0": [
        "########## New in Request and Response ##########",
        ".data.hotelReservation.segments[0].arrivalAmenities[0].ArrivalAmenity - create, modify, reinstate, migrate, retrieve, history",
        ".data.hotelReservation.chargePrivilege -  create, modify, reinstate, migrate, retrieve, history",
        "########## New in response ##########",
        ".data.creator.VendorName - create, modify, retrieve, search, migrate",
        ".data.requestor.VendorName - create, modify, retrieve, search, migrate",
        ".data.hotelReservation.segments[0].creator.VendorName - create, modify, retrieve, search, migrate",
        ".data.hotelReservation.segments[0].requestor.VendorName - create, modify, retrieve, search, migrate"
      ],
      "7.5.1": [
        "########## Other Changes ##########",
        ".data.hotelReservation.segments[0].offer.productUses - link fixed in request API",
        ".data.hotelReservation.segments[0].offer.productUses[0].routingInstructions[0].dow - Corrected by masking it in request API"
      ],
      "7.6.0": [
        "########## New in Request and Response ##########",
        ".data.hotelReservation.segments[0].offer.productUses[0].routingInstructions[0].dow - create, modify, retrieve, migrate, Search",
        ".data.hotelReservation.segments[0].offer.rateAccessCode - create, modify, retrieve, history",
        "########## New in response ##########",
        ".data.hotelReservation.segments[0].offer.commission.amount- create, modify, retrieve, migrate",
        ".data.hotelReservation.segments[0].offer.rateAccessCode - search",
        "########## Other Changes ##########",
        ".data.hotelReservation.ratePlans[0].name - max item limit of the array extended from 5 to 28",
        ".data.hotelReservation.ratePlans[0].description - max item limit of the array extended from 5 to 28",
        ".data.hotelReservation.products[0].inventoryTypeName - max item limit of the array extended from 5 to 28",
        ".data.hotelReservation.products[0].description - max item limit of the array extended from 5 to 28",
        "########## New in Request ##########",
        ".data.hotelReservation.segments[0].offer.rateAccessCode - migrate"
      ],
      "7.7.0": [
        "########## New in Request and Response ##########",
        ".data.hotelReservation.segments[0].businessSource",
        ".data.hotelReservation.segments[0].assignedRooms[]",
        ".data.hotelReservation.segments[0].isAssignedRoomLocked",
        ".data.hotelReservation.segments[0].comments[0].isProcessed",
        ".data.hotelReservation.segments[0].comments[0].UserName",
        ".data.hotelReservation.segments[0].policyProcessStatus",
        ".data.hotelReservation.segments[0].offer.productUses[0].requestedRoomConfiguration",
        ".data.hotelReservation.segments[0].offer.productUses[0].attributeCodes[]",
        ".data.hotelReservation.segments[0].segmentPmsStatus, new enum \"NoShowToBeProcessed\" added",
        ".data.hotelReservation.userProfiles[].isVip",
        "########## New in response ##########",
        ".data.hotelReservation.segments[0].checkInDateTime",
        ".data.hotelReservation.segments[0].checkOutDateTime",
        ".data.hotelReservation.segments[0].comments[0].processedDateTime",
        ".data.creator.metricsName and .data.hotelReservation.segments[0].creator.metricsName",
        ".data.requestor.metricsName and .data.hotelReservation.segments[0].requestor.metricsName",
        ".data.hotelReservations[0].reservationIds.imageId - search",
        ".data.hotelReservations[0].reservationIds.committedSequenceNumber - search",
        ".data.hotelReservations[0].lastUpdateDateTime - search",
        ".data.hotelReservations[0].segments[0].lastUpdateDateTime - search",
        ".data.hotelReservations[0].segments[0].offer.productUses.isRateFloorUsed",
        "########## New Operation ############",
        "POST /reservation/chains/{chainCode}/search-archived-and-active - search-archived-and-active",
        "GET /reservation/chains/{chainCode}/reservations/{cfNumber}/last-committed-archived-and-active - retrieve-last-committed-archived-and-active-reservation",
        "GET /reservation/chains/{chainCode}/reservations/{cfNumber}/last-archived-and-active - retrieve-last-archived-and-active-reservation",
        "POST /reservation/chains/{chainCode}/multi-retrieve-archived-and-active - multi-retrieve-archived-and-active",
        "########## New in request ##########",
        ".data.rateAccessCodes - search",
        ".data.isRateFloorUsed - search",
        ".data.hotelReservations[0].segments[0].offer.productUses.isRateFloorUsed - migrate",
        "########## Other Changes ##########",
        "Unused HotelReservationMigrateReq.Links removed from migration request",
        ".data.hotelReservation.segments.offer.productUses.requestedRoomConfiguration - max length set to 20",
        ".data.hotelReservation.segments.comments.userName - max length set to 99",
        ".data.rateAccessCodes - added max item limit as 1 in search"
      ],
      "7.7.1": [
        "########## New in response ##########",
        "data.ReservationIdentifiers in  - .data.reservationIdentifiers - multi-retrieve-archived-and-active",
        "########## Other Changes ##########",
        "data.hotelReservation.segments.depositPayments description update",
        "data.hotelReservation.segments.businessSource now is in data.hotelReservation.businessSource",
        "data.hotelReservation.segments.checkInDateTime changed description",
        "data.hotelReservation.segments.checkOutDateTime changed description",
        "data.hotelReservation.segments[0].formOfPayment.depositPayments changed description"
      ],
      "7.8.0": [
        "########## New in Request and Response ##########",
        ".data.hotelReservation.segments[0].offer.isOneOffOffer",
        ".data.hotelReservation.segments[0].rateOverrideReason",
        ".data.hotelReservation.reservationIds.externalTravelWithId",
        ".data.hotelReservation.emailNotification - Create and modify",
        ".data.hotelReservation.smsNotification - Create and modify",
        ".data.hotelReservation.segments[0].formOfPayment.paymentInfo.paymentCard.fraudRiskScore --create --modify",
        ".data.hotelReservation.segments[0].formOfPayment.paymentInfo.paymentCard.fraudRiskFlag --create --modify",
        "########## New in request ##########",
        ".data.hotelReservation.segments[0].offer.productUses[0].taxOverride",
        ".data.paymentIntent - search and search-archived-and-active",
        ".data.paymentStatus - search and search-archived-and-active",
        ".data.policyProcessStatus - search and search-archived-and-active",
        ".data.propertyMarketSegment - search and search-archived-and-active",
        ".data.loyaltyTierLevel - search and search-archived-and-active",
        ".data.transportationId - search and search-archived-and-active",
        ".data.isMultiRoom - search and search-archived-and-active",
        ".data.hotelReservation.emailNotification --migrate",
        ".data.hotelReservation.smsNotification --migrate",
        ".data.hotelReservation.segments[0].formOfPayment.paymentInfo.paymentCard.fraudRiskScore --migrate",
        ".data.hotelReservation.segments[0].formOfPayment.paymentInfo.paymentCard.fraudRiskFlag --migrate",
        "########## New in response ##########",
        ".data.hotelReservation.ratePlans[0].agencyIdentifiers",
        ".data.hotelReservation.segments[0].taxDefinitions[0].overrideInd",
        ".data.hotelReservation.segments[0].formOfPayment[0].paymentInfo[0].paymentIntent - search and search-archived-and-active",
        ".data.hotelReservation.segments[0].arrivalTransport - search and search-archived-and-active",
        ".data.hotelReservation.segments[0].departureTransport - search and search-archived-and-active",
        ".data.hotelReservation.segments[0].comments - search and search-archived-and-active",
        ".data.hotelReservation.comments - search and search-archived-and-active",
        ".data.hotelReservation.segments[0].arrivalTime - search and search-archived-and-active",
        ".data.hotelReservation.segments[0].departureTime - search and search-archived-and-active",
        ".data.hotelReservation.requestor[0].metricsName - search and search-archived-and-active",
        ".data.hotelReservation.requestor[0].travelAgencyInfo[0].agentInfo - search and search-archived-and-active",
        ".data.hotelReservation.creator[0].metricsName - search and search-archived-and-active",
        ".data.hotelReservation.creator[0].travelAgencyInfo[0].agentInfo - search and search-archived-and-active",
        ".data[0].hotelReservation.warningIds[0] -- multi-retrieve -- multi-retrieve-archived-and-active",
        ".data.hotelReservation.emailNotification --cancel --multi-retrieve --retrieve --retrieve history",
        ".data.hotelReservation.smsNotification --cancel --multi-retrieve --retrieve --retrieve history",
        ".data.hotelReservation.segments[0].formOfPayment.paymentInfo.paymentCard.fraudRiskScore --migrate --cancel --retrieve --multi-retrieve",
        ".data.hotelReservation.segments[0].formOfPayment.paymentInfo.paymentCard.fraudRiskFlag --migrate --cancel --retrieve --multi-retrieve",
        "########## New Operation ############",
        "POST /reservation/chains/{chainCode}/multi-retrieve - multi-retrieve",
        "########## Other Changes ##########",
        ".data - type changed from array to object in the request - multi-retrieve-archived-and-active",
        ".data.ReservationIdentifiers - Property added as type array in the request - multi-retrieve-archived-and-active",
        "GET /reservation/chains/{chainCode}/reservations/{cfNumber}/last-committed-archived-and-active removed segmentIds parameter",
        "########## Removed Operation ##########",
        "GET /reservation/chains/{chainCode}/reservations/{cfNumber}/last-archived-and-active - retrieve-last-archived-and-active-reservation"
      ],
      "7.9.0": [
        "########## New in Request and Response ##########",
        ".data.hotelReservation.userProfiles[0].nativeInformation",
        ".data.hotelReservation.segments[0].corporateAccountInfo[0].nativeInformation",
        ".data.hotelReservation.segments[0].formOfPayment.paymentInfo.paymentCard.cardNumber.longToken",
        ".data.hotelReservation.segments[0].formOfPayment.paymentInfo.paymentCard.cardNumber.tokenProviderName",
        ".data.hotelReservation.segments[0].formOfPayment.depositPayments[0].paymentCard.cardNumber.longToken",
        ".data.hotelReservation.segments[0].formOfPayment.depositPayments[0].paymentCard.cardNumber.tokenProviderName",
        ".data.hotelReservation.emailNotification - create-pending, modify-pending",
        ".data.hotelReservation.smsNotification - create-pending, modify-pending",
        ".data.hotelReservation.chargePrivilege - create-pending, modify-pending",
        ".data.hotelReservation.userProfiles[0].nationalities - create-pending, modify-pending",
        "########## New in response ##########",
        ".data.hotelReservation.userProfiles[0].nativeInformation - search and search-archived-and-active",
        ".data.hotelReservation.segments[0].corporateAccountInfo[0].nativeInformation - search and search-archived-and-active",
        ".data.hotelReservation.userProfiles[0].emails[0] - search and search-archived-and-active",
        ".data.hotelReservation.groupContracts[0].externalIds - create, modify, retrieve, migrate, search, search-archived-and-active, last-committed-archived-and-active",
        ".data.hotelReservation.groupContracts[0].groupCfNumber - create, modify, retrieve, migrate, search, search-archived-and-active, last-committed-archived-and-active",
        ".data.hotelReservation.groupContracts[0].externalPmsId - create, modify, retrieve, migrate, search, search-archived-and-active, last-committed-archived-and-active",
        ".data.hotelReservation.segments[0].offer.productUses[0].packageRates.mainWithIncludedProducts[0] - create, modify, retrieve, cancel, last-committed-archived-and-active, multi-retrieve, multi-retrieve-archived-and-active",
        ".data.hotelReservation.emailNotification - partial-modify-pending",
        ".data.hotelReservation.smsNotification - partial-modify-pending",
        ".data.hotelReservation.chargePrivilege - partial-modify-pending",
        ".data.hotelReservation.userProfiles[0].nationalities - partial-modify-pending",
        "########## New in request ##########",
        ".data.hotelReservation.emailAddress - search and search-archived-and-active",
        ".data.hotelReservation.segments[0].offer.productUses[0].taxFeeOverride[0].overridePerDay[0].period -Create, modify, migrate",
        ".data.groupId - search and search-archived-and-active",
        ".data.hotelReservation.segments[0].offer.productUses[0].channelRatePlanCode",
        ".data.hotelReservation.segments[0].offer.productUses[0].channelInventoryTypeCode",
        ".data.hotelReservation.segments[0].offer.productUses[0].packageRates.mainWithIncludedProducts[0] - migrate",
        "########## Other Changes ##########",
        "POST /reservation/chains/{chainCode}/multi-retrieve - description update",
        ".data.hotelReservation.segments[0].offer.isOneOffOffer - description update",
        "Pattern Update - travelAgencyInfo.agencyProfileId",
        ".data.hotelReservation.segments[0].assignedRooms[0] - changed to array (was changed by mistake into object)",
        ".data.history.resStatus now .data.history.status - retrieve",
        "Updated enum for travelAgencyInfo.identifiers[0].type",
        "Max character limit of 50 is added to data.hotelReservation.groupContracts[0].externalPmsId in the response and to data.groupId in the search request",
        "Updated the description of comments[0].comment.text - Create, Modify, Cancel, Retrieve",
        "parameters.creationDate - description update"
      ],
      "7.10.0": [
        "########## New in Request and Response ##########",
        "data.hotelReservation.segments[0].indicators.isNonRoomProductIgnored - create, full-modify",
        "########## New in Request ##########",
        "data.hotelReservation.segments[0].indicators.isNonRoomProductIgnored - migrate",
        "########## New in Response ##########",
        "data.hotelReservation.segments[0].indicators.isNonRoomProductIgnored - partial-modify, retrieve",
        "data.hotelReservation.segments[0].offer.productUses.packageRates - retrieve history"
      ],
      "7.11.0": [
        "########## New in Request ##########",
        "data.hotelReservation.userProfiles[0].nativeInformation - migrate",
        "data.hotelReservation.segments[0].taxDefinitions[0].relatedTaxIds[0] - migrate",
        "########## New in Response ##########",
        "data.hotelReservation.segments[0].taxDefinitions[0].relatedTaxIds[0] - create, modify, reinstate, cancel, retrieve, multi-retrieve, ignore, commit",
        "########## Other Changes ##########",
        "Changed warnings structure from object into array - migrate",
        "identificationInfo[0].type - new enum values \"DRIVER_LICENSE\",\"IDENTITY_CARD\",\"POLICE_WARRANT_CARD\" added",
        "data.hotelReservation.segments[].segmentPmsStatus - enum value changed from NoShowTobeProcessed to NoShowToBeProcessed",
        "data.hotelReservation.segments[0].formOfPayment.paymentInfo.paymentCard.cardNumber.token - length is increased from 19 to 50 and pattern is changed - create, modify",
        "data.hotelReservation.segments[0].formOfPayment.depositPayments[0].paymentCard.cardNumber.token - length is increased from 19 to 50 and pattern is changed - create, modify",
        "data.hotelReservation.segments[0].assignedRoom - description update",
        "data.hotelReservationReq.segments[0].assignedRoom - description update"
      ],
      "7.12.0": [
        "########## New in Request ##########",
        "data.hotelReservation.sharePricingMethod - migrate",
        "data.hotelReservation.segments[0].offer.productUses[0].channelRatePlanCode - migrate",
        "data.hotelReservation.segments[0].offer.productUses[0].channelInventoryTypeCode - migrate"
      ],
      "7.13.0": [
        "########## New Features ##########",
        "ability to add additional membership programs to an user profile",
        "########## New in Request ##########",
        "data.hotelReservation.userProfiles[].additionalMembershipPrograms[] - create, modify, migrate",
        "data.programCode - search, search-archived-and-active",
        "########## New in Response ##########",
        "data.hotelReservation.userProfiles[].additionalMembershipPrograms[] - create, modify, reinstate, cancel, retrieve, retrieve-by-image-id, retrieve-last-reservation, retrieve-archived-and-active-reservation, retrieve-by-committed-seq-num, multi-retrieve, multi-retrieve-archived-and-active, commit, ignore",
        "data.hotelReservations[].userProfiles[].additionalMembershipPrograms[] - search, search-archived-and-active",
        "data.hotelReservation.segments[0].offer.productUses[0].channelRatePlanCode - create, full-modify, partial-modify, reinstate, cancel, retrieve, retrieve-by-image-id, retrieve-last-reservation, retrieve-archived-and-active-reservation, retrieve-by-committed-seq-num, retrieve-last-committed-archived-and-active-reservation, multi-retrieve, multi-retrieve-archived-and-active",
        "data.hotelReservation.segments[0].offer.productUses[0].channelInventoryTypeCode - create, full-modify, partial-modify, reinstate, cancel, retrieve, retrieve-by-image-id, retrieve-last-reservation, retrieve-archived-and-active-reservation, retrieve-by-committed-seq-num, retrieve-last-committed-archived-and-active-reservation, multi-retrieve, multi-retrieve-archived-and-active",
        "data.history.segments[0].offer.productUses[0].channelRatePlanCode - retrieve",
        "data.history.segments[0].offer.productUses[0].channelInventoryTypeCode - retrieve",
        "########## New in Request and Response ##########",
        "data.hotelReservation.segments[0].indicators.isOverrideTaxIgnored - create, modify, cancel, migrate, ignore, commit, retrieve, retrieve-last-committed-archived-and-active-reservation, multi-retrieve, multi-retrieve-archived-and-active",
        "########## Other Changes ##########",
        "data.loyaltyId - description update in search API request",
        "ability to add additional channel rate plan code and channel inventory type code",
        "removed pattern in request for data.hotelReservation.segments[0].offer.productUses[0].channelRatePlanCode"
      ],
	  "7.13.1": [
        "########## Other Changes ##########",
        "removed pattern in request for data.hotelReservation.segments[0].offer.productUses[0].channelRatePlanCode"
      ],
	  "7.13.2": [
        "########## Other Changes ##########",
        "automatically generate models title to make them unique and compatible with code generation"
      ]
    },
    "termsOfService": "https://developers.amadeus.com",
    "contact": {
      "name": "Amadeus Hospitality Systems Integration Support"
    },
    "license": {
      "name": "Amadeus IT Group SA",
      "url": "https://www.amadeus.com"
    }
  },
  "basePath": "/v7",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "name": "1-Step Operations"
    },
    {
      "name": "Retrieve Operations"
    },
    {
      "name": "2-Step Operations"
    },
    {
      "name": "Reservation Link"
    }
  ],
  "paths": {
    "/hotel/reservations/{chainCode}": {
      "post": {
        "tags": [
          "1-Step Operations"
        ],
        "operationId": "postCreateReservation",
        "summary": "create",
        "description": "This service gives the possibility to the API users to create a reservation and commit the request at the same time.",
        "parameters": [
          {
            "$ref": "#/parameters/ama-pos"
          },
          {
            "$ref": "#/parameters/ama-reservation-owner"
          },
          {
            "$ref": "#/parameters/ama-channel-identifiers"
          },
          {
            "$ref": "#/parameters/ama-remote-jump-data"
          },
          {
            "$ref": "#/parameters/chainCode"
          },
          {
            "$ref": "#/parameters/createReservation-reservationCreateReq"
          },
          {
            "$ref": "#/parameters/sendUserNotif"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/reservationResponse"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "504": {
            "$ref": "#/responses/504"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/hotel/reservations/{chainCode}/pending": {
      "post": {
        "tags": [
          "2-Step Operations"
        ],
        "operationId": "postCreateReservationPending",
        "summary": "create-pending",
        "description": "This service gives the possibility to the API users to create a reservation in pending status. \n\n If the user wants to confirm the creation, a request of commit needs to be used to change the status to confirmed.",
        "parameters": [
          {
            "$ref": "#/parameters/ama-pos"
          },
          {
            "$ref": "#/parameters/ama-reservation-owner"
          },
          {
            "$ref": "#/parameters/ama-channel-identifiers"
          },
          {
            "$ref": "#/parameters/ama-remote-jump-data"
          },
          {
            "$ref": "#/parameters/ama-user-session-id"
          },
          {
            "$ref": "#/parameters/chainCode"
          },
          {
            "$ref": "#/parameters/createPendingReservation"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/reservationCreatePendingResponse"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "504": {
            "$ref": "#/responses/504"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/hotel/reservations/{chainCode}/{cfNumber}": {
      "get": {
        "tags": [
          "Retrieve Operations"
        ],
        "operationId": "getRetrieveReservation",
        "summary": "retrieve",
        "description": "This service gives the possibility to the API users to retrieve the last committed image of the reservation by using the confirmation number in the query. \n\n The retrieve response, if requested, can also contain the history section: a list of all the committed images of the reservation.",
        "parameters": [
          {
            "$ref": "#/parameters/ama-pos"
          },
          {
            "$ref": "#/parameters/ama-reservation-owner"
          },
          {
            "$ref": "#/parameters/ama-channel-identifiers"
          },
          {
            "$ref": "#/parameters/ama-remote-jump-data"
          },
          {
            "$ref": "#/parameters/chainCode"
          },
          {
            "$ref": "#/parameters/cfNumber"
          },
          {
            "$ref": "#/parameters/history"
          },
          {
            "$ref": "#/parameters/synchroNumber"
          },
          {
            "$ref": "#/parameters/segmentIds"
          },
          {
            "$ref": "#/parameters/retrieveDelta"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/reservationRetrieveResponse-reservation"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "504": {
            "$ref": "#/responses/504"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      },
      "put": {
        "tags": [
          "1-Step Operations"
        ],
        "operationId": "putModifyReservation",
        "summary": "full-modify",
        "description": "This service gives the possibility to the API users to modify the reservation and commit the request at the same time.",
        "parameters": [
          {
            "$ref": "#/parameters/ama-pos"
          },
          {
            "$ref": "#/parameters/ama-reservation-owner"
          },
          {
            "$ref": "#/parameters/ama-channel-identifiers"
          },
          {
            "$ref": "#/parameters/ama-remote-jump-data"
          },
          {
            "$ref": "#/parameters/ama-user-session-id"
          },
          {
            "$ref": "#/parameters/chainCode"
          },
          {
            "$ref": "#/parameters/cfNumber"
          },
          {
            "$ref": "#/parameters/modifyReservation-reservationModifyReq"
          },
          {
            "$ref": "#/parameters/sendUserNotif"
          },
          {
            "$ref": "#/parameters/baseImageId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/reservationModifyResponse"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "504": {
            "$ref": "#/responses/504"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      },
      "patch": {
        "tags": [
          "1-Step Operations"
        ],
        "operationId": "patchPartialModifyReservation",
        "summary": "partial-modify",
        "description": "This service gives the possibility to the API users to partially modify the reservation and commit the request at the same time.",
        "parameters": [
          {
            "$ref": "#/parameters/ama-pos"
          },
          {
            "$ref": "#/parameters/ama-reservation-owner"
          },
          {
            "$ref": "#/parameters/ama-channel-identifiers"
          },
          {
            "$ref": "#/parameters/ama-remote-jump-data"
          },
          {
            "$ref": "#/parameters/ama-user-session-id"
          },
          {
            "$ref": "#/parameters/chainCode"
          },
          {
            "$ref": "#/parameters/cfNumber"
          },
          {
            "$ref": "#/parameters/partialModifyReservation"
          },
          {
            "$ref": "#/parameters/sendUserNotif"
          },
          {
            "$ref": "#/parameters/baseImageId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/reservationModifyResponse"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "504": {
            "$ref": "#/responses/504"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/hotel/reservations/{chainCode}/{cfNumber}/reinstate": {
      "post": {
        "tags": [
          "1-Step Operations"
        ],
        "operationId": "postReinstateReservation",
        "summary": "reinstate",
        "description": "This service gives the possibility to the API users to reinstate a reservation which is in a cancelled, checked-out or no-show status.",
        "parameters": [
          {
            "$ref": "#/parameters/ama-pos"
          },
          {
            "$ref": "#/parameters/ama-channel-identifiers"
          },
          {
            "$ref": "#/parameters/ama-remote-jump-data"
          },
          {
            "$ref": "#/parameters/ama-user-session-id"
          },
          {
            "$ref": "#/parameters/chainCode"
          },
          {
            "$ref": "#/parameters/cfNumber"
          },
          {
            "$ref": "#/parameters/reinstateReservation"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/reservationModifyResponse"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "504": {
            "$ref": "#/responses/504"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/hotel/reservations/{chainCode}/{cfNumber}/commit": {
      "put": {
        "tags": [
          "2-Step Operations"
        ],
        "operationId": "putCommitReservation",
        "summary": "commit",
        "description": "This service gives the possibility to the API users to confirm all the actions done from the starting request to the commit event. \n\n It is only after the commit that all the actions are confirmed and the booker is engaged.",
        "parameters": [
          {
            "$ref": "#/parameters/ama-pos"
          },
          {
            "$ref": "#/parameters/ama-reservation-owner"
          },
          {
            "$ref": "#/parameters/ama-channel-identifiers"
          },
          {
            "$ref": "#/parameters/ama-remote-jump-data"
          },
          {
            "$ref": "#/parameters/ama-user-session-id"
          },
          {
            "$ref": "#/parameters/chainCode"
          },
          {
            "$ref": "#/parameters/cfNumber"
          },
          {
            "$ref": "#/parameters/sendUserNotif"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/reservationResponse"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "504": {
            "$ref": "#/responses/504"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/hotel/reservations/{chainCode}/{cfNumber}/pending": {
      "delete": {
        "tags": [
          "2-Step Operations"
        ],
        "operationId": "deleteIgnoreReservation",
        "summary": "ignore",
        "description": "This service gives the possibility to the API users to ignore the current pending transaction for a given reservation. In case there is no previous committed image for this reservation, no data element is sent back. ",
        "parameters": [
          {
            "$ref": "#/parameters/ama-pos"
          },
          {
            "$ref": "#/parameters/ama-reservation-owner"
          },
          {
            "$ref": "#/parameters/ama-channel-identifiers"
          },
          {
            "$ref": "#/parameters/ama-remote-jump-data"
          },
          {
            "$ref": "#/parameters/ama-user-session-id"
          },
          {
            "$ref": "#/parameters/chainCode"
          },
          {
            "$ref": "#/parameters/cfNumber"
          },
          {
            "$ref": "#/parameters/baseImageId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/reservationResponse"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "504": {
            "$ref": "#/responses/504"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      },
      "put": {
        "tags": [
          "2-Step Operations"
        ],
        "operationId": "putModifyReservationPending",
        "summary": "modify-pending",
        "description": "This service gives the possibility to the API users to modify the reservation in pending status. \n\n If the user wants to confirm the modification, a request of commit needs to be used to change the status to confirmed.",
        "parameters": [
          {
            "$ref": "#/parameters/ama-pos"
          },
          {
            "$ref": "#/parameters/ama-reservation-owner"
          },
          {
            "$ref": "#/parameters/ama-channel-identifiers"
          },
          {
            "$ref": "#/parameters/ama-remote-jump-data"
          },
          {
            "$ref": "#/parameters/ama-user-session-id"
          },
          {
            "$ref": "#/parameters/chainCode"
          },
          {
            "$ref": "#/parameters/cfNumber"
          },
          {
            "$ref": "#/parameters/modifyPendingReservation"
          },
          {
            "$ref": "#/parameters/baseImageId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/reservationModifyPendingResponse"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "504": {
            "$ref": "#/responses/504"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      },
      "patch": {
        "tags": [
          "2-Step Operations"
        ],
        "operationId": "patchPartialModifyReservationPending",
        "summary": "partial-modify-pending",
        "description": "This service gives the possibility to the API users to partially modify the reservation in pending status. \n\n If the user wants to confirm the modification, a request of commit needs to be used to change the status to confirmed.",
        "parameters": [
          {
            "$ref": "#/parameters/ama-pos"
          },
          {
            "$ref": "#/parameters/ama-reservation-owner"
          },
          {
            "$ref": "#/parameters/ama-channel-identifiers"
          },
          {
            "$ref": "#/parameters/ama-remote-jump-data"
          },
          {
            "$ref": "#/parameters/ama-user-session-id"
          },
          {
            "$ref": "#/parameters/chainCode"
          },
          {
            "$ref": "#/parameters/cfNumber"
          },
          {
            "$ref": "#/parameters/partialModifyReservation"
          },
          {
            "$ref": "#/parameters/baseImageId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/reservationModifyPendingResponse"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "504": {
            "$ref": "#/responses/504"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/hotel/reservations/{chainCode}/{cfNumber}/cancel": {
      "put": {
        "tags": [
          "1-Step Operations"
        ],
        "operationId": "putCancelReservation",
        "summary": "cancel",
        "description": "This service gives the possibility to the API users to cancel the whole reservation and commit the request at the same time.",
        "parameters": [
          {
            "$ref": "#/parameters/ama-pos"
          },
          {
            "$ref": "#/parameters/ama-reservation-owner"
          },
          {
            "$ref": "#/parameters/ama-channel-identifiers"
          },
          {
            "$ref": "#/parameters/ama-remote-jump-data"
          },
          {
            "$ref": "#/parameters/ama-user-session-id"
          },
          {
            "$ref": "#/parameters/chainCode"
          },
          {
            "$ref": "#/parameters/cfNumber"
          },
          {
            "$ref": "#/parameters/cancelReservation"
          },
          {
            "$ref": "#/parameters/sendUserNotif"
          },
          {
            "$ref": "#/parameters/baseImageId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/reservationResponse"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "504": {
            "$ref": "#/responses/504"
          }
        }
      }
    },
    "/hotel/reservations/{chainCode}/{cfNumber}/cancel/pending": {
      "put": {
        "tags": [
          "2-Step Operations"
        ],
        "operationId": "putCancelReservationPending",
        "summary": "cancel-pending",
        "description": "This service gives the possibility to the API users to cancel the whole reservation in pending status. \n\n If the user wants to confirm the cancellation, a request of commit needs to be used to change the status to confirmed.",
        "parameters": [
          {
            "$ref": "#/parameters/ama-pos"
          },
          {
            "$ref": "#/parameters/ama-reservation-owner"
          },
          {
            "$ref": "#/parameters/ama-channel-identifiers"
          },
          {
            "$ref": "#/parameters/ama-remote-jump-data"
          },
          {
            "$ref": "#/parameters/ama-user-session-id"
          },
          {
            "$ref": "#/parameters/chainCode"
          },
          {
            "$ref": "#/parameters/cfNumber"
          },
          {
            "$ref": "#/parameters/cancelReservation"
          },
          {
            "$ref": "#/parameters/baseImageId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/reservationResponse"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "504": {
            "$ref": "#/responses/504"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/hotel/reservations/{chainCode}/{cfNumber}/migrate": {
      "put": {
        "tags": [
          "1-Step Operations"
        ],
        "operationId": "putMigrateReservation",
        "summary": "migrate",
        "description": "This service gives the possibility to the API users to migrate the reservation. \n\n The migrate request message is a complete message with all prices and policies. \n\n A successful migration response will be always empty.",
        "parameters": [
          {
            "$ref": "#/parameters/chainCode"
          },
          {
            "$ref": "#/parameters/cfNumber"
          },
          {
            "$ref": "#/parameters/migrateReservation"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/reservationMigrateResponse"
          },
          "201": {
            "$ref": "#/responses/reservationMigrateWithCreationResponse"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "504": {
            "$ref": "#/responses/504"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/hotel/reservations/{chainCode}/{cfNumber}/images/{imageId}": {
      "get": {
        "tags": [
          "Retrieve Operations"
        ],
        "operationId": "getRetrieveByImageId",
        "summary": "retrieve-by-image-id",
        "description": "This service gives the possibility to the API users to retrieve a specific image/images of the reservation by using the confirmation number and the list of imageId. \n\n The retrieve response contains all the list of images requested. \n\n The retrieve response, if requested, can also contain the history section: a list of all the committed images of the reservation.",
        "parameters": [
          {
            "$ref": "#/parameters/ama-pos"
          },
          {
            "$ref": "#/parameters/ama-reservation-owner"
          },
          {
            "$ref": "#/parameters/ama-channel-identifiers"
          },
          {
            "$ref": "#/parameters/ama-remote-jump-data"
          },
          {
            "$ref": "#/parameters/chainCode"
          },
          {
            "$ref": "#/parameters/cfNumber"
          },
          {
            "$ref": "#/parameters/history"
          },
          {
            "$ref": "#/parameters/imageId"
          },
          {
            "$ref": "#/parameters/retrieveDelta"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/reservationRetrieveResponse-reservation"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "504": {
            "$ref": "#/responses/504"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/hotel/reservations/{chainCode}/{cfNumber}/last": {
      "get": {
        "tags": [
          "Retrieve Operations"
        ],
        "operationId": "getRetrieveLastReservation",
        "summary": "retrieve-last-reservation",
        "description": "This service gives the possibility to the API users to retrieve the last image of the reservation (both pending or committed) by using the confirmation number in the query. \n\n The retrieve response, if requested, can also contain the history section: a list of all the committed images of the reservation.",
        "parameters": [
          {
            "$ref": "#/parameters/ama-pos"
          },
          {
            "$ref": "#/parameters/ama-reservation-owner"
          },
          {
            "$ref": "#/parameters/ama-channel-identifiers"
          },
          {
            "$ref": "#/parameters/ama-remote-jump-data"
          },
          {
            "$ref": "#/parameters/ama-user-session-id"
          },
          {
            "$ref": "#/parameters/chainCode"
          },
          {
            "$ref": "#/parameters/cfNumber"
          },
          {
            "$ref": "#/parameters/history"
          },
          {
            "$ref": "#/parameters/synchroNumber"
          },
          {
            "$ref": "#/parameters/retrieveDelta"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/reservationRetrieveLastResponse"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "504": {
            "$ref": "#/responses/504"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/reservation/chains/{chainCode}/reservations/{cfNumber}/last-committed-archived-and-active": {
      "get": {
        "tags": [
          "Retrieve Operations"
        ],
        "operationId": "getRetrieveLastCommittedArchivedAndActiveReservation",
        "summary": "retrieve-last-committed-archived-and-active-reservation",
        "description": "This service gives the possibility to the API users to retrieve the last committed image (both archived and active) of the reservation by using the confirmation number in the query",
        "parameters": [
          {
            "$ref": "#/parameters/ama-pos"
          },
          {
            "$ref": "#/parameters/ama-reservation-owner"
          },
          {
            "$ref": "#/parameters/ama-channel-identifiers"
          },
          {
            "$ref": "#/parameters/ama-remote-jump-data"
          },
          {
            "$ref": "#/parameters/chainCode"
          },
          {
            "$ref": "#/parameters/cfNumber"
          },
          {
            "$ref": "#/parameters/history"
          },
          {
            "$ref": "#/parameters/creationDate"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/reservationRetrieveArchivedResponse"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "504": {
            "$ref": "#/responses/504"
          }
        }
      }
    },
    "/hotel/reservations/{chainCode}/{cfNumber}/committed-sequence-number/{committedSequenceNumber}": {
      "get": {
        "tags": [
          "Retrieve Operations"
        ],
        "operationId": "getRetrieveReservationByCommittedSequenceNumber",
        "summary": "retrieve-by-committed-seq-num",
        "description": "This service gives the possibility to the API users to retrieve the reservation by using a specific committed sequence number. \n\n The retrieve response, if requested, can also contain the history section: a list of all the committed images of the reservation.",
        "parameters": [
          {
            "$ref": "#/parameters/ama-pos"
          },
          {
            "$ref": "#/parameters/ama-reservation-owner"
          },
          {
            "$ref": "#/parameters/ama-channel-identifiers"
          },
          {
            "$ref": "#/parameters/ama-remote-jump-data"
          },
          {
            "$ref": "#/parameters/chainCode"
          },
          {
            "$ref": "#/parameters/cfNumber"
          },
          {
            "$ref": "#/parameters/committedSequenceNumber"
          },
          {
            "$ref": "#/parameters/history"
          },
          {
            "$ref": "#/parameters/retrieveDelta"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/reservationRetrieveResponse-reservation"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "504": {
            "$ref": "#/responses/504"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/hotel/reservations/{chainCode}/cx-number/{cxNumber}": {
      "get": {
        "tags": [
          "Retrieve Operations"
        ],
        "operationId": "getRetrieveReservationByCxNumber",
        "summary": "retrieve-by-cancellation-number",
        "description": "This service gives the possibility to the API users to retrieve cancelled reservation by using the cancellation number. \n\n The retrieve response, if requested, can also contain the history section: a list of all the committed images of the reservation.",
        "parameters": [
          {
            "$ref": "#/parameters/ama-pos"
          },
          {
            "$ref": "#/parameters/ama-reservation-owner"
          },
          {
            "$ref": "#/parameters/ama-channel-identifiers"
          },
          {
            "$ref": "#/parameters/ama-remote-jump-data"
          },
          {
            "$ref": "#/parameters/chainCode"
          },
          {
            "$ref": "#/parameters/cxNumber"
          },
          {
            "$ref": "#/parameters/history"
          },
          {
            "$ref": "#/parameters/retrieveDelta"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/reservationRetrieveResponse-reservation"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "504": {
            "$ref": "#/responses/504"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/hotel/reservations/{chainCode}/cx-number/{cxNumber}/committed-sequence-number/{committedSequenceNumber}": {
      "get": {
        "tags": [
          "Retrieve Operations"
        ],
        "operationId": "getRetrieveReservationByCxNumberByCommittedSequenceNumber",
        "summary": "retrieve-by-cancellation-and-committed-seq-num",
        "description": "This service gives the possibility to the API users to retrieve cancelled reservation by using cancellation number and committed sequence number in the request. \n\n The retrieve response, if requested, can also contain the history section: a list of all the committed images of the reservation.",
        "parameters": [
          {
            "$ref": "#/parameters/ama-pos"
          },
          {
            "$ref": "#/parameters/ama-reservation-owner"
          },
          {
            "$ref": "#/parameters/ama-channel-identifiers"
          },
          {
            "$ref": "#/parameters/ama-remote-jump-data"
          },
          {
            "$ref": "#/parameters/chainCode"
          },
          {
            "$ref": "#/parameters/cxNumber"
          },
          {
            "$ref": "#/parameters/committedSequenceNumber"
          },
          {
            "$ref": "#/parameters/history"
          },
          {
            "$ref": "#/parameters/retrieveDelta"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/reservationRetrieveResponse-reservation"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "504": {
            "$ref": "#/responses/504"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/reservation/chains/{chainCode}/multi-retrieve": {
      "post": {
        "tags": [
          "Retrieve Operations"
        ],
        "operationId": "postMultiRetrieveReservations",
        "summary": "multi-retrieve",
        "description": "This service gives the possibility to the API users to retrieve multiple reservations at one go. \n Only the last committed active image of the reservation will be present in the response by using the confirmation number in the request body",
        "parameters": [
          {
            "$ref": "#/parameters/ama-channel-identifiers"
          },
          {
            "$ref": "#/parameters/chainCode"
          },
          {
            "$ref": "#/parameters/multiRetrieveReservation-multiRetrieveRequest"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/reservationMultiRetrieveResponse"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "504": {
            "$ref": "#/responses/504"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/reservation/chains/{chainCode}/multi-retrieve-archived-and-active": {
      "post": {
        "tags": [
          "Retrieve Operations"
        ],
        "operationId": "postRetrieveReservations",
        "summary": "multi-retrieve-archived-and-active",
        "description": "this service gives the possibility to the API users to retrieve multiple reservations at one go. \n Either active or archived, only the last committed image of the reservation will be present in the response by using the confirmation number in the request body",
        "parameters": [
          {
            "$ref": "#/parameters/ama-channel-identifiers"
          },
          {
            "$ref": "#/parameters/chainCode"
          },
          {
            "$ref": "#/parameters/retrieveReservation"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/reservationMultiRetrieveArchivedAndActiveResponse-reservationMultiRetrieveRes"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "504": {
            "$ref": "#/responses/504"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/hotel/reservations/{chainCode}/search": {
      "post": {
        "tags": [
          "Retrieve Operations"
        ],
        "operationId": "postSearchReservations",
        "summary": "search",
        "description": "This service gives the possibility to the API users to search for any reservation. The request must include the criteria used to identify the reservations or reservation's segment(s) wished. \n\n The system responds to the users with the list of reservation images corresponding to reservation-related criteria or having at least one segment matching segment-related criteria.",
        "parameters": [
          {
            "$ref": "#/parameters/ama-pos"
          },
          {
            "$ref": "#/parameters/ama-reservation-owner"
          },
          {
            "$ref": "#/parameters/ama-channel-identifiers"
          },
          {
            "$ref": "#/parameters/ama-remote-jump-data"
          },
          {
            "$ref": "#/parameters/chainCode"
          },
          {
            "$ref": "#/parameters/searchReservation"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/reservationSearchResponse-postSearchReservations"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "504": {
            "$ref": "#/responses/504"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/reservation/chains/{chainCode}/search-archived-and-active": {
      "post": {
        "tags": [
          "Retrieve Operations"
        ],
        "operationId": "postSearchArchivedAndActiveReservations",
        "summary": "search-archived-and-active",
        "description": "This service gives the possibility to the API users to search for both active and archived reservation. The request must include the criteria used to identify the reservations or reservation's segment(s) wished. \n\n The system responds to the users with the list of reservation images corresponding to reservation-related criteria or having at least one segment matching segment-related criteria.",
        "parameters": [
          {
            "$ref": "#/parameters/ama-pos"
          },
          {
            "$ref": "#/parameters/ama-reservation-owner"
          },
          {
            "$ref": "#/parameters/ama-channel-identifiers"
          },
          {
            "$ref": "#/parameters/ama-remote-jump-data"
          },
          {
            "$ref": "#/parameters/chainCode"
          },
          {
            "$ref": "#/parameters/searchReservation"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/reservationSearchResponse-postSearchReservations"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "504": {
            "$ref": "#/responses/504"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/reservation/chains/{chainCode}/links": {
      "post": {
        "tags": [
          "Reservation Link"
        ],
        "operationId": "postCreateLinkReservation",
        "summary": "create-link",
        "description": "This service gives the possibility to the API users to create a link between reservations.",
        "parameters": [
          {
            "$ref": "#/parameters/ama-pos"
          },
          {
            "$ref": "#/parameters/ama-reservation-owner"
          },
          {
            "$ref": "#/parameters/ama-channel-identifiers"
          },
          {
            "$ref": "#/parameters/ama-remote-jump-data"
          },
          {
            "$ref": "#/parameters/chainCode"
          },
          {
            "$ref": "#/parameters/createLinkReservation"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/linkReservationResponse"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "504": {
            "$ref": "#/responses/504"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/reservation/chains/{chainCode}/links/{linkId}": {
      "get": {
        "tags": [
          "Reservation Link"
        ],
        "operationId": "getRetrieveLinkReservation",
        "summary": "retrieve-link",
        "description": "This service returns the list of cfNumber of the linked reservation. The link reservations can be of two types Joint and Share. The type will be defined in the response body.",
        "parameters": [
          {
            "$ref": "#/parameters/ama-pos"
          },
          {
            "$ref": "#/parameters/ama-channel-identifiers"
          },
          {
            "$ref": "#/parameters/ama-remote-jump-data"
          },
          {
            "$ref": "#/parameters/chainCode"
          },
          {
            "$ref": "#/parameters/linkId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/linkReservationRetrieveResponse"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "504": {
            "$ref": "#/responses/504"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      },
      "patch": {
        "tags": [
          "Reservation Link"
        ],
        "operationId": "patchPartialModifyLinkReservation",
        "summary": "modify-link",
        "description": "This service gives the possibility to the API users to add or remove reservations from a link.",
        "parameters": [
          {
            "$ref": "#/parameters/ama-pos"
          },
          {
            "$ref": "#/parameters/ama-reservation-owner"
          },
          {
            "$ref": "#/parameters/ama-channel-identifiers"
          },
          {
            "$ref": "#/parameters/ama-remote-jump-data"
          },
          {
            "$ref": "#/parameters/ama-user-session-id"
          },
          {
            "$ref": "#/parameters/chainCode"
          },
          {
            "$ref": "#/parameters/linkId"
          },
          {
            "$ref": "#/parameters/partialModifyLinkReservation"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/linkReservationResponse"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "504": {
            "$ref": "#/responses/504"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/reservation/chains/{chainCode}/links/{linkId}/detailed": {
      "get": {
        "tags": [
          "Reservation Link"
        ],
        "operationId": "getSynchronizeShareReservation",
        "summary": "retrieve-link-share-detail",
        "description": "This service gives the possibility to synchronize share reservations between ACRS and PMS",
        "parameters": [
          {
            "$ref": "#/parameters/ama-pos"
          },
          {
            "$ref": "#/parameters/ama-channel-identifiers"
          },
          {
            "$ref": "#/parameters/ama-remote-jump-data"
          },
          {
            "$ref": "#/parameters/chainCode"
          },
          {
            "$ref": "#/parameters/linkId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/shareReservationSynchronizeResponse"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "504": {
            "$ref": "#/responses/504"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    }
  },
  "parameters": {
    "chainCode": {
      "name": "chainCode",
      "in": "path",
      "required": true,
      "description": "chain code identifier",
      "type": "string",
      "pattern": "^[A-Z0-9]{3}$",
      "minLength": 3,
      "maxLength": 3
    },
    "cfNumber": {
      "name": "cfNumber",
      "in": "path",
      "required": true,
      "description": "hotel Confirmation Number",
      "type": "string",
      "pattern": "^[A-Z0-9]{8,10}$",
      "minLength": 8,
      "maxLength": 10
    },
    "cxNumber": {
      "name": "cxNumber",
      "in": "path",
      "required": true,
      "description": "hotel cancellation number",
      "type": "string",
      "pattern": "^[A-Z0-9]{8,11}$",
      "minLength": 8,
      "maxLength": 11
    },
    "imageId": {
      "name": "imageId",
      "in": "path",
      "required": true,
      "description": "image Id of the reservation",
      "type": "integer",
      "format": "int32"
    },
    "committedSequenceNumber": {
      "name": "committedSequenceNumber",
      "in": "path",
      "required": true,
      "description": "committed Sequence Number of the reservation",
      "type": "integer",
      "format": "int32"
    },
    "linkId": {
      "name": "linkId",
      "in": "path",
      "required": true,
      "description": "link unique identifier",
      "type": "string",
      "pattern": "^[A-Z0-9]{8,10}$",
      "minLength": 8,
      "maxLength": 10
    },
    "history": {
      "name": "history",
      "in": "query",
      "required": false,
      "description": "parameter used to request retrieve history",
      "type": "boolean",
      "default": false
    },
    "creationDate": {
      "name": "creationDate",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "date of creation (UTC)",
      "format": "date"
    },
    "synchroNumber": {
      "name": "synchroNumber",
      "in": "query",
      "required": false,
      "description": "synchro Number to retrieve the reservation if the accommodation number corresponds to the last image or last committed image",
      "type": "integer",
      "format": "int32"
    },
    "baseImageId": {
      "name": "baseImageId",
      "in": "query",
      "required": false,
      "description": "image id of the reservation, on which the modification request is applied (present for future implementation)",
      "type": "integer",
      "format": "int32"
    },
    "segmentIds": {
      "name": "segmentIds",
      "in": "query",
      "required": false,
      "description": "list of segment ids corresponding to the segment(s) to be retrieved in the reservation image. Format: List of integers in [] separated by a comma (ie [1,2,3])",
      "type": "string",
      "pattern": "^\\[([0-9]+,)*[0-9]+\\]$"
    },
    "retrieveDelta": {
      "name": "retrieveDelta",
      "in": "query",
      "required": false,
      "description": "indicator used to send delta between current and previous committed image. If flag retrieveDelta is false, do not send difference between images. If retrieveDelta flag is true, send difference between images",
      "type": "boolean",
      "default": false
    },
    "sendUserNotif": {
      "name": "sendUserNotif",
      "in": "query",
      "required": false,
      "description": "indicator used to determine when a notification is sent to a user. If true, send user a notification. If false, do not send user a notification",
      "type": "boolean",
      "default": false
    },
    "createPendingReservation": {
      "name": "createPendingReservation",
      "in": "body",
      "schema": {
        "$ref": "#/definitions/ReservationPendingReq"
      }
    },
    "modifyPendingReservation": {
      "name": "modifyPendingReservation",
      "in": "body",
      "schema": {
        "$ref": "#/definitions/ReservationModifyPendingReq"
      }
    },
    "partialModifyReservation": {
      "name": "partialModifyReservation",
      "in": "body",
      "schema": {
        "$ref": "#/definitions/ReservationPartialModifyReq"
      }
    },
    "reinstateReservation": {
      "name": "reinstateReservation",
      "in": "body",
      "schema": {
        "$ref": "#/definitions/ReservationReinstateReq"
      }
    },
    "migrateReservation": {
      "name": "migrateReservation",
      "in": "body",
      "schema": {
        "$ref": "#/definitions/ReservationMigrateReq"
      }
    },
    "cancelReservation": {
      "name": "cancelReservation",
      "in": "body",
      "schema": {
        "$ref": "#/definitions/CancellationReq"
      }
    },
    "searchReservation": {
      "name": "searchReservation",
      "in": "body",
      "schema": {
        "$ref": "#/definitions/ReservationSearchReq"
      }
    },
    "createLinkReservation": {
      "name": "createReservation",
      "in": "body",
      "schema": {
        "$ref": "#/definitions/LinkReservationReq"
      }
    },
    "partialModifyLinkReservation": {
      "name": "modifyLinkReservation",
      "in": "body",
      "schema": {
        "$ref": "#/definitions/LinkReservationModifyReq"
      }
    },
    "retrieveReservation": {
      "name": "retrieveReservation",
      "in": "body",
      "schema": {
        "$ref": "#/definitions/MultiRetrieveReservationArchivedAndActiveReq"
      }
    },
    "ama-pos": {
      "name": "Ama-Pos",
      "in": "header",
      "required": false,
      "type": "string",
      "description": "schema must match with Ama-Pos definition"
    },
    "ama-reservation-owner": {
      "name": "Ama-Reservation-Owner",
      "in": "header",
      "required": false,
      "type": "string",
      "description": "schema must match with Ama-Reservation-Owner definition"
    },
    "ama-channel-identifiers": {
      "name": "Ama-Channel-Identifiers",
      "in": "header",
      "required": false,
      "type": "string",
      "description": "schema must match with Ama-Channel-Identifiers definition"
    },
    "ama-user-session-id": {
      "name": "Ama-User-Session-Id",
      "in": "header",
      "required": false,
      "type": "string",
      "pattern": "^[a-zA-Z0-9-]{1,64}$",
      "minLength": 1,
      "maxLength": 64,
      "description": "unique session identifier of the user (present for future implementation)"
    },
    "ama-remote-jump-data": {
      "name": "Ama-Remote-Jump-Data",
      "in": "header",
      "required": false,
      "type": "string",
      "description": "schema must match with Ama-Remote-Jump-Data definition"
    },
    "createReservation-reservationCreateReq": {
      "name": "createReservation",
      "in": "body",
      "schema": {
        "$ref": "#/definitions/ReservationReq-reservationCreateReq"
      }
    },
    "modifyReservation-reservationModifyReq": {
      "name": "modifyReservation",
      "in": "body",
      "schema": {
        "$ref": "#/definitions/ReservationModifyReq-reservationModifyReq"
      }
    },
    "multiRetrieveReservation-multiRetrieveRequest": {
      "name": "multiRetrieveReservation",
      "in": "body",
      "schema": {
        "$ref": "#/definitions/MultiRetrieveReservationReq-multiRetrieveRequest"
      }
    }
  },
  "definitions": {
    "propertyChainCode": {
      "description": "unique identifier of a Chain in the CRS",
      "type": "string",
      "maxLength": 3,
      "pattern": "^[A-Z0-9]{2,3}$",
      "example": "INT"
    },
    "brandCode": {
      "description": "unique identifier of a Brand in a Chain",
      "type": "string",
      "pattern": "^[A-Z0-9]{2,3}$",
      "example": "BRD"
    },
    "propertyName": {
      "description": "the name of the property",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 64
    },
    "cityCode": {
      "description": "the code of the city of the property",
      "type": "string",
      "pattern": "^[A-Za-z0-9]{3,5}$",
      "minLength": 3,
      "maxLength": 5
    },
    "regionCode": {
      "description": "the code of the region of the property",
      "type": "string",
      "pattern": "^[A-Za-z0-9]{1,3}$",
      "minLength": 1,
      "maxLength": 3,
      "example": "01"
    },
    "dow": {
      "description": "list of applicable days of weeks. 'MTWTFSS' for all days of weeks. A dash is present for any missing day. For instance, 'MT-----' for Monday and Tuesday only, '-T-T---' for Tuesday and Thursday only",
      "type": "string",
      "pattern": "^.*$"
    },
    "comment": {
      "type": "object",
      "title": "Comment",
      "required": [
        "type",
        "text"
      ],
      "properties": {
        "type": {
          "$ref": "#/definitions/typeOfComments"
        },
        "language": {
          "$ref": "#/definitions/language"
        },
        "text": {
          "type": "array",
          "items": {
            "description": "free flow text in the comment",
            "type": "string",
            "pattern": "^.*$",
            "minLength": 1,
            "maxLength": 1200
          },
          "title": "CommentText"
        },
        "isProcessed": {
          "description": "indicates if comment is processed",
          "type": "boolean"
        },
        "userName": {
          "description": "name of the user who processed the comment",
          "type": "string",
          "maxLength": 99
        },
        "processedDateTime": {
          "$ref": "#/definitions/processedDateTime"
        }
      }
    },
    "typeOfComments": {
      "description": "type of the comment, ['supplementary info' or 'confidential remark' or 'OriginatorChannelViewable']. [confidential remark] is not visible by the guest. [OriginatorChannelViewable] is only valid at reservation level (not segment)",
      "type": "string",
      "enum": [
        "supplementary info",
        "confidential remark",
        "OriginatorChannelViewable"
      ]
    },
    "language": {
      "description": "the ISO 639-1 code, like EN",
      "type": "string",
      "pattern": "^[A-Za-z]{2}$",
      "minLength": 2,
      "maxLength": 2
    },
    "processedDateTime": {
      "description": "date and Time of processed action in hotel local time",
      "type": "string",
      "pattern": "^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2]\\d|3[0-1])T([0-1]\\d|2[0-4]):([0-5]\\d):([0-5]\\d)$",
      "example": "2018-05-26T22:00:00"
    },
    "customData": {
      "description": "all data under customData are stored in the reservation and returned in the response and retrieve. Any valid Json object is accepted",
      "type": "object",
      "title": "CustomData"
    },
    "description": {
      "type": "object",
      "additionalProperties": {
        "description": "multi-line description text",
        "type": "array",
        "maxItems": 5,
        "items": {
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 1200,
          "minLength": 1
        },
        "title": "DescriptionProperty"
      },
      "example": {
        "en": [
          "line 1",
          "line 2",
          "line 3"
        ],
        "fr": [
          "ligne 1",
          "ligne 2",
          "ligne 3"
        ]
      },
      "title": "Description"
    },
    "DescriptionOfRatePlanAndInventoryType": {
      "type": "object",
      "additionalProperties": {
        "description": "multi-line description text",
        "type": "array",
        "maxItems": 28,
        "items": {
          "type": "string",
          "maxLength": 1200,
          "minLength": 1
        },
        "title": "DescriptionOfRatePlanAndInventoryTypeProperty"
      },
      "example": {
        "en": [
          "line 1",
          "line 2",
          "line 3"
        ],
        "fr": [
          "ligne 1",
          "ligne 2",
          "ligne 3"
        ]
      },
      "title": "DescriptionOfRatePlanAndInventoryType"
    },
    "externalProfileId": {
      "description": "corporate, agency & traveller profile ids from external system",
      "type": "object",
      "required": [
        "value",
        "type"
      ],
      "properties": {
        "value": {
          "description": "profile id received from external system",
          "type": "string",
          "maxLength": 50
        },
        "type": {
          "description": "source of the external id",
          "type": "string",
          "maxLength": 50
        }
      },
      "title": "ExternalProfileId"
    },
    "discrepancyFound": {
      "description": "this field is deprecated when used in request. Any value provided in input will be ignored. Indicates there are one or more discrepancies in the profile data received in the reservation request",
      "type": "boolean"
    },
    "discrepancyReason": {
      "description": "this field is deprecated when used in request. Any value provided in input will be ignored. Categories of information which has discrepancy",
      "type": "array",
      "maxItems": 50,
      "items": {
        "type": "string"
      },
      "title": "DiscrepancyReason"
    },
    "profileNotFound": {
      "description": "this field is deprecated when used in request. Any value provided in input will be ignored. Indicates the profile was not found in the profile system",
      "type": "boolean"
    },
    "pointOfSale": {
      "type": "object",
      "required": [
        "vendorCode",
        "channelCode"
      ],
      "properties": {
        "hotelSource": {
          "description": "the hotel code of creator of the reservation or the requestor of the last transaction",
          "$ref": "#/definitions/propertyCode"
        },
        "vendorCode": {
          "description": "the vendor code of the creator of the reservation or the requestor of the transaction",
          "$ref": "#/definitions/vendorCode"
        },
        "vendorName": {
          "description": "Name of the vendor",
          "$ref": "#/definitions/VendorName"
        },
        "vendorTypes": {
          "description": "the vendor type code [0 = Unknown, 1 = PMS, 2 = booking tool, 3 = brand website, 4 = GDS/3rd party website, 5 = mobile, 6 = alternate distribution system]",
          "type": "array",
          "items": {
            "type": "integer",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6
            ]
          },
          "title": "PointOfSaleVendorTypes"
        },
        "channelCode": {
          "description": "the channel code of the creator of the reservation or the requestor of the transaction",
          "$ref": "#/definitions/channelCode"
        },
        "channelSubCode": {
          "description": "sub-channel code as it has been provided by the creator of the reservation or the requestor of the transaction",
          "$ref": "#/definitions/channelCode"
        },
        "metricsCode": {
          "description": "the metrics code of the creator of the reservation or the requestor of the transaction, it is only optional for the retrieve of a group record and should always be returned for a standard reservation",
          "$ref": "#/definitions/metricsCode"
        },
        "metricsName": {
          "$ref": "#/definitions/metricsName"
        },
        "travelAgencyInfo": {
          "$ref": "#/definitions/travelAgencyInformation"
        },
        "origin": {
          "description": "Indicates the Expedia channel that was used for the reservation, if relevant",
          "type": "string"
        },
        "callCenterInformation": {
          "description": "List of call centers information",
          "type": "array",
          "maxItems": 2,
          "items": {
            "$ref": "#/definitions/callCenterInformation"
          },
          "title": "PointOfSaleCallCenterInformation"
        },
        "reportingData": {
          "$ref": "#/definitions/reportingData"
        }
      },
      "title": "PointOfSale"
    },
    "searchPointOfSale": {
      "type": "object",
      "properties": {
        "travelAgencyInfo": {
          "$ref": "#/definitions/searchTravelAgencyInformation"
        },
        "vendorCode": {
          "description": "the vendor code of the creator of the reservation or the requestor of the transaction",
          "$ref": "#/definitions/vendorCode"
        },
        "vendorName": {
          "description": "name of the vendor",
          "$ref": "#/definitions/VendorName"
        },
        "reportingData": {
          "$ref": "#/definitions/reportingData"
        },
        "metricsName": {
          "$ref": "#/definitions/metricsName"
        }
      },
      "title": "SearchPointOfSale"
    },
    "searchReservationOwner": {
      "type": "object",
      "required": [
        "agencyDetails"
      ],
      "properties": {
        "agencyDetails": {
          "$ref": "#/definitions/searchTravelAgencyInformation"
        }
      },
      "title": "SearchReservationOwner"
    },
    "historyPointOfSale": {
      "type": "object",
      "required": [
        "vendorCode",
        "channelCode"
      ],
      "properties": {
        "hotelSource": {
          "description": "hotel code of the originator of the request (used in case of booking tool or PMS)",
          "$ref": "#/definitions/propertyCode"
        },
        "vendorCode": {
          "description": "the vendor code of the originator of the request",
          "$ref": "#/definitions/vendorCode"
        },
        "vendorName": {
          "description": "name of the vendor",
          "$ref": "#/definitions/VendorName"
        },
        "channelCode": {
          "description": "the channel code as it has been provided by the originator of the request",
          "$ref": "#/definitions/channelCode"
        },
        "channelSubCode": {
          "description": "the sub-channel code as it has been provided by the originator of the request",
          "$ref": "#/definitions/channelCode"
        },
        "travelAgencyInfo": {
          "$ref": "#/definitions/historyTravelAgencyInformation"
        },
        "origin": {
          "description": "indicates the Expedia channel that was used for the transaction, if relevant",
          "type": "string"
        },
        "callCenterInformation": {
          "description": "list of call centers information",
          "type": "array",
          "maxItems": 2,
          "items": {
            "$ref": "#/definitions/callCenterInformation"
          },
          "title": "HistoryPointOfSaleCallCenterInformation"
        },
        "reportingData": {
          "$ref": "#/definitions/reportingData"
        }
      },
      "title": "HistoryPointOfSale"
    },
    "vendorCode": {
      "description": "vendor code",
      "type": "string",
      "pattern": "^[A-Z0-9]{5,5}$",
      "example": "ABCDE",
      "minLength": 5,
      "maxLength": 5
    },
    "VendorName": {
      "description": "name that identifies the Vendor profile",
      "minLength": 1,
      "maxLength": 25,
      "type": "string",
      "example": "vendor's name"
    },
    "channelCode": {
      "description": "channel code",
      "type": "string",
      "pattern": "^[A-Z0-9]{2,2}$",
      "example": "1A",
      "minLength": 2,
      "maxLength": 2
    },
    "metricsCode": {
      "description": "metrics code",
      "type": "string",
      "pattern": "^[A-Z0-9]{3,3}$",
      "example": "ABC",
      "minLength": 3,
      "maxLength": 3
    },
    "metricsName": {
      "description": "channel metrics name",
      "minLength": 1,
      "maxLength": 64,
      "type": "string",
      "pattern": "^.*$",
      "example": "Metrics name"
    },
    "travelAgencyInformation": {
      "description": "the travel agency details",
      "type": "object",
      "required": [
        "identifiers"
      ],
      "properties": {
        "identifiers": {
          "description": "list of identifiers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/agencyIdentifiers"
          },
          "title": "TravelAgencyInformationIdentifiers"
        },
        "agentInfo": {
          "$ref": "#/definitions/agentInformation"
        },
        "name": {
          "description": "name of the travel agency",
          "type": "string"
        },
        "agencyProfileId": {
          "$ref": "#/definitions/agencyProfileId"
        },
        "address": {
          "description": "address of the travel agency",
          "$ref": "#/definitions/addressWithoutIndex"
        },
        "telephone": {
          "description": "telephone of the travel agency",
          "$ref": "#/definitions/telephone"
        },
        "email": {
          "description": "email address of the travel agency",
          "$ref": "#/definitions/email"
        }
      },
      "title": "TravelAgencyInformation"
    },
    "searchTravelAgencyInformation": {
      "description": "the travel agency details",
      "type": "object",
      "properties": {
        "name": {
          "description": "name of the travel agency",
          "type": "string"
        },
        "agencyProfileStatus": {
          "$ref": "#/definitions/agencyProfileStatus"
        },
        "externalProfileIds": {
          "description": "agency profile id received from external system",
          "type": "array",
          "items": {
            "$ref": "#/definitions/externalProfileId"
          },
          "title": "SearchTravelAgencyInformationExternalProfileIds"
        },
        "agentInfo": {
          "$ref": "#/definitions/agentInformation"
        }
      },
      "title": "SearchTravelAgencyInformation"
    },
    "historyTravelAgencyInformation": {
      "description": "the travel agency details",
      "type": "object",
      "required": [
        "identifiers"
      ],
      "properties": {
        "identifiers": {
          "description": "list of identifiers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/agencyIdentifiers"
          },
          "title": "HistoryTravelAgencyInformationIdentifiers"
        },
        "agentInfo": {
          "$ref": "#/definitions/agentInformation"
        },
        "agentUserId": {
          "description": "user ID of the travel agent in the GDS used",
          "$ref": "#/definitions/userId"
        },
        "name": {
          "description": "name of the travel agency",
          "type": "string"
        },
        "agencyProfileId": {
          "$ref": "#/definitions/agencyProfileId"
        },
        "address": {
          "description": "address of the travel agency",
          "$ref": "#/definitions/addressWithoutIndex"
        },
        "telephone": {
          "description": "telephone of the travel agency",
          "$ref": "#/definitions/telephone"
        },
        "email": {
          "description": "email address of the travel agency",
          "$ref": "#/definitions/email"
        }
      },
      "title": "HistoryTravelAgencyInformation"
    },
    "agentInformation": {
      "type": "object",
      "properties": {
        "agentDutyCode": {
          "$ref": "#/definitions/agentDutyCode"
        },
        "agentInitials": {
          "$ref": "#/definitions/agentInitials"
        },
        "agentLocation": {
          "$ref": "#/definitions/agentLocation"
        },
        "agentSine": {
          "$ref": "#/definitions/agentSine"
        }
      },
      "title": "AgentInformation"
    },
    "agentDutyCode": {
      "description": "duty code of the travel agent",
      "type": "string",
      "pattern": "^.*$"
    },
    "agentInitials": {
      "description": "initials of the travel agent",
      "type": "string",
      "pattern": "^.*$"
    },
    "agentLocation": {
      "description": "location of the travel agent",
      "type": "string",
      "pattern": "^.*$"
    },
    "agentSine": {
      "description": "sign of the travel agent",
      "type": "string",
      "pattern": "^.*$"
    },
    "addressWithoutIndex": {
      "title": "AddressWithoutIndex",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/addressType"
        },
        "addressLines": {
          "$ref": "#/definitions/addressLines"
        },
        "cityName": {
          "$ref": "#/definitions/cityName"
        },
        "postalCode": {
          "$ref": "#/definitions/postalCode"
        },
        "county": {
          "$ref": "#/definitions/county"
        },
        "stateProv": {
          "$ref": "#/definitions/stateProv"
        },
        "countryName": {
          "$ref": "#/definitions/countryName"
        },
        "countryCode": {
          "$ref": "#/definitions/countryCode"
        },
        "companyName": {
          "$ref": "#/definitions/companyName"
        },
        "unstructuredAddress": {
          "$ref": "#/definitions/unstructuredAddress"
        }
      }
    },
    "callCenterInformation": {
      "type": "object",
      "required": [
        "type",
        "id"
      ],
      "properties": {
        "type": {
          "$ref": "#/definitions/callCenterType"
        },
        "id": {
          "$ref": "#/definitions/callCenterId"
        }
      },
      "title": "CallCenterInformation"
    },
    "callCenterType": {
      "description": "type of information",
      "type": "string",
      "enum": [
        "VDN",
        "ConnId"
      ]
    },
    "callCenterId": {
      "description": "information details",
      "type": "string",
      "pattern": "^.*$"
    },
    "reservationOwner": {
      "type": "object",
      "required": [
        "agencyDetails"
      ],
      "properties": {
        "agencyDetails": {
          "$ref": "#/definitions/agencyDetails"
        }
      },
      "title": "ReservationOwner"
    },
    "agencyDetails": {
      "type": "object",
      "required": [
        "identifiers"
      ],
      "properties": {
        "identifiers": {
          "description": "list of identifiers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/agencyIdentifiers"
          },
          "title": "AgencyDetailsIdentifiers"
        },
        "name": {
          "description": "the agency name",
          "type": "string"
        },
        "isValid": {
          "description": "indicates that the IATA code of the travel agency is valid",
          "type": "boolean"
        },
        "isTrusted": {
          "description": "indicates that the travel agency is trusted",
          "type": "boolean"
        },
        "address": {
          "description": "address of the travel agency",
          "$ref": "#/definitions/addressWithoutIndex"
        },
        "telephone": {
          "description": "telephone of the travel agency",
          "$ref": "#/definitions/telephone"
        },
        "email": {
          "description": "email address of the travel agency",
          "$ref": "#/definitions/email"
        },
        "agencyProfileId": {
          "$ref": "#/definitions/agencyProfileId"
        },
        "agencyProfileStatus": {
          "$ref": "#/definitions/agencyProfileStatus"
        },
        "profileNotFound": {
          "$ref": "#/definitions/profileNotFound"
        },
        "discrepancyFound": {
          "$ref": "#/definitions/discrepancyFound"
        },
        "discrepancyReason": {
          "$ref": "#/definitions/discrepancyReason",
          "description": "this field is deprecated when used in request. Any value provided in input will be ignored. List of fields separated by comma which has discrepancy"
        },
        "externalProfileIds": {
          "description": "agency profile id received from external system",
          "type": "array",
          "items": {
            "$ref": "#/definitions/externalProfileId"
          },
          "title": "AgencyDetailsExternalProfileIds"
        }
      },
      "title": "AgencyDetails"
    },
    "agencyIdentifiers": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "description": "identifier of the agency",
          "type": "string"
        },
        "type": {
          "description": "type of the agency identifier",
          "type": "string",
          "enum": [
            "IATA",
            "SGA",
            "ABTA",
            "CLIA",
            "ARC",
            "TRUE",
            "MARTAN"
          ]
        }
      },
      "title": "AgencyIdentifiers"
    },
    "agencyProfileId": {
      "description": "agency identifier on the profile system",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 50
    },
    "agencyProfileStatus": {
      "description": "this field is deprecated when used in request. Any value provided in input will be ignored. Status of the agency in the profile system",
      "type": "string",
      "enum": [
        "Active",
        "Inactive"
      ]
    },
    "responseError_400": {
      "type": "object",
      "required": [
        "error"
      ],
      "properties": {
        "error": {
          "$ref": "#/definitions/error"
        },
        "data": {
          "type": "object",
          "title": "ResponseError_400Data",
          "properties": {
            "denials": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/denial"
              },
              "title": "ResponseError_400DataDenials"
            }
          }
        }
      },
      "example": {
        "error": {
          "status": 400,
          "code": 110010,
          "title": "Missing Mandatory Data",
          "detail": "Missing mandatory data in the request. Please provide all the missing data.",
          "source": {
            "parameter": "startDate",
            "example": "2020-01-01T00:00:00.000Z"
          }
        }
      },
      "title": "ResponseError_400"
    },
    "responseError_401": {
      "type": "object",
      "required": [
        "error"
      ],
      "properties": {
        "error": {
          "$ref": "#/definitions/error"
        },
        "data": {
          "type": "object",
          "title": "ResponseError_401Data",
          "properties": {
            "denials": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/denial"
              },
              "title": "ResponseError_401DataDenials"
            }
          }
        }
      },
      "example": {
        "error": {
          "status": 401,
          "code": 71,
          "title": "Wrong authentication credentials"
        }
      },
      "title": "ResponseError_401"
    },
    "responseError_403": {
      "type": "object",
      "required": [
        "error"
      ],
      "properties": {
        "error": {
          "$ref": "#/definitions/error"
        },
        "data": {
          "type": "object",
          "title": "ResponseError_403Data",
          "properties": {
            "denials": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/denial"
              },
              "title": "ResponseError_403DataDenials"
            }
          }
        }
      },
      "example": {
        "error": {
          "status": 403,
          "code": 15344,
          "title": "Check-in date not compliant with closed to arrival setting at hotel level."
        },
        "data": {
          "denials": [
            {
              "identifier": 17,
              "date": "2020-06-06",
              "isHouseLevel": true,
              "priceGridCode": "BA",
              "ratePlanCode": "IRRPA",
              "reason": "House closed to arrival",
              "type": "HSP"
            }
          ]
        }
      },
      "title": "ResponseError_403"
    },
    "responseError_404": {
      "type": "object",
      "required": [
        "error"
      ],
      "properties": {
        "error": {
          "$ref": "#/definitions/error"
        },
        "data": {
          "type": "object",
          "title": "ResponseError_404Data",
          "properties": {
            "denials": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/denial"
              },
              "title": "ResponseError_404DataDenials"
            }
          }
        }
      },
      "example": {
        "error": {
          "status": 404,
          "code": 97,
          "title": "No reservation available for the input cancellation number"
        }
      },
      "title": "ResponseError_404"
    },
    "responseError_406": {
      "type": "object",
      "required": [
        "error"
      ],
      "properties": {
        "error": {
          "$ref": "#/definitions/error"
        },
        "data": {
          "type": "object",
          "title": "ResponseError_406Data",
          "properties": {
            "denials": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/denial"
              },
              "title": "ResponseError_406DataDenials"
            }
          }
        }
      },
      "example": {
        "error": {
          "status": 406,
          "code": 172,
          "title": "Requested version not supported [3.99]"
        }
      },
      "title": "ResponseError_406"
    },
    "responseError_429": {
      "type": "object",
      "required": [
        "error"
      ],
      "properties": {
        "error": {
          "$ref": "#/definitions/error"
        },
        "data": {
          "type": "object",
          "title": "ResponseError_429Data",
          "properties": {
            "denials": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/denial"
              },
              "title": "ResponseError_429DataDenials"
            }
          }
        }
      },
      "example": {
        "error": {
          "status": 429,
          "code": 38194,
          "title": "Too many requests"
        }
      },
      "title": "ResponseError_429"
    },
    "responseError_500": {
      "type": "object",
      "required": [
        "error"
      ],
      "properties": {
        "error": {
          "$ref": "#/definitions/error"
        },
        "data": {
          "type": "object",
          "title": "ResponseError_500Data",
          "properties": {
            "denials": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/denial"
              },
              "title": "ResponseError_500DataDenials"
            }
          }
        }
      },
      "example": {
        "error": {
          "status": 500,
          "code": 448,
          "title": "System error"
        }
      },
      "title": "ResponseError_500"
    },
    "responseError_504": {
      "type": "object",
      "required": [
        "error"
      ],
      "properties": {
        "error": {
          "$ref": "#/definitions/error"
        },
        "data": {
          "type": "object",
          "title": "ResponseError_504Data",
          "properties": {
            "denials": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/denial"
              },
              "title": "ResponseError_504DataDenials"
            }
          }
        }
      },
      "example": {
        "error": {
          "status": 504,
          "code": 15346,
          "title": "ESPINV Message too old"
        }
      },
      "title": "ResponseError_504"
    },
    "error": {
      "type": "object",
      "title": "Error",
      "properties": {
        "status": {
          "description": "the HTTP status code applicable to this error",
          "type": "integer",
          "example": 400
        },
        "code": {
          "description": "an application-specific error code",
          "type": "integer",
          "example": 14453
        },
        "title": {
          "description": "a short summary of the error",
          "type": "string"
        },
        "detail": {
          "description": "explanation of the error",
          "type": "string"
        },
        "source": {
          "type": "object",
          "title": "ErrorSource",
          "description": "an object containing references to the source of the error",
          "properties": {
            "pointer": {
              "description": "a JSON Pointer [RFC6901] to the associated entity in the request document",
              "type": "string"
            },
            "parameter": {
              "description": "a string indicating which URI query parameter caused the issue",
              "type": "string"
            },
            "example": {
              "type": "string",
              "description": "a sample input to guide the user when resolving this issue"
            }
          }
        }
      }
    },
    "responseWarning": {
      "type": "object",
      "properties": {
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/warning"
          },
          "title": "ResponseWarningWarnings"
        }
      },
      "title": "ResponseWarning"
    },
    "warning": {
      "type": "object",
      "title": "Warning",
      "properties": {
        "status": {
          "description": "the HTTP status code applicable to this warning",
          "type": "integer",
          "example": 200
        },
        "code": {
          "description": "an application-specific warning code",
          "type": "integer",
          "example": 14353
        },
        "id": {
          "description": "id of the warning, used to link the warning to a specific element in the response",
          "type": "integer"
        },
        "isPreventingCommit": {
          "description": "boolean to indicate if the warning will prevent the commit action",
          "type": "boolean"
        },
        "title": {
          "description": "a short summary of the warning",
          "type": "string",
          "pattern": "^.*$"
        },
        "detail": {
          "description": "explanation of the warning",
          "type": "string",
          "pattern": "^.*$"
        },
        "source": {
          "type": "object",
          "title": "WarningSource",
          "description": "an object containing references to the source of the warning",
          "minProperties": 1,
          "properties": {
            "pointer": {
              "description": "a JSON Pointer [RFC6901] to the associated entity in the request document",
              "type": "string",
              "pattern": "^.*$"
            },
            "parameter": {
              "description": "a string indicating which URI query parameter caused the warning",
              "type": "string",
              "pattern": "^.*$"
            },
            "example": {
              "type": "string",
              "pattern": "^.*$",
              "description": "a sample input to guide the user when resolving this warning"
            }
          }
        }
      }
    },
    "denial": {
      "type": "object",
      "required": [
        "identifier",
        "type",
        "reason",
        "date",
        "isHouseLevel"
      ],
      "properties": {
        "identifier": {
          "description": "unique identifier of the denial returned",
          "type": "integer"
        },
        "type": {
          "description": "the denial type",
          "type": "string",
          "example": "HSO"
        },
        "reason": {
          "description": "description of the denial reason",
          "type": "string",
          "example": "No Rates/Rooms Available"
        },
        "date": {
          "description": "represents the first date that caused the denial. For date-driven denials, it is either a date within the stay, or the check-in date. For non-date-driven denials, it is the transaction date",
          "type": "string",
          "format": "date"
        },
        "isHouseLevel": {
          "description": "set to true if the denial is of House Level type, false otherwise",
          "type": "boolean"
        },
        "ratePlanCode": {
          "description": "in case of Rate Category denials, represents the rate category causing the denial",
          "$ref": "#/definitions/ratePlanCode"
        },
        "priceGridCode": {
          "description": "in case of Rate Category/Price Grid denials. Represents the price grid causing the denial or the price grid linked to the rate category causing the denial",
          "$ref": "#/definitions/priceGridCode"
        },
        "sellStrategyCode": {
          "description": "represents the code of the Hotel Sell Strategy taken into account in the process",
          "type": "string",
          "pattern": "^[A-Za-z0-9]{1,7}$",
          "minLength": 1,
          "maxLength": 7
        }
      },
      "title": "Denial"
    },
    "HotelReservationRes": {
      "description": "Full representation of reservation record",
      "type": "object",
      "required": [
        "status",
        "imageStatus",
        "hotels",
        "creationDateTime",
        "lastUpdateDateTime",
        "reservationIds",
        "segments",
        "products"
      ],
      "properties": {
        "status": {
          "$ref": "#/definitions/resStatus"
        },
        "type": {
          "$ref": "#/definitions/reservationType"
        },
        "imageStatus": {
          "$ref": "#/definitions/imageStatus"
        },
        "creationDateTime": {
          "$ref": "#/definitions/createDateTime"
        },
        "lastUpdateDateTime": {
          "$ref": "#/definitions/lastUpdateDateTime"
        },
        "lastUpdateDateTimeHotelLocalTime": {
          "$ref": "#/definitions/lastUpdateDateTimeHotelLocalTime"
        },
        "cancellationDateTime": {
          "$ref": "#/definitions/cancellationDateTime"
        },
        "purgeDateTime": {
          "$ref": "#/definitions/purgeDateTime"
        },
        "authenticatedUser": {
          "description": "Authenticated user information",
          "$ref": "#/definitions/authenticatedUser"
        },
        "impersonatedUser": {
          "description": "Impersonated user information.It is the one who does the transaction on behalf of the authenticated user",
          "$ref": "#/definitions/authenticatedUser"
        },
        "reservationIds": {
          "$ref": "#/definitions/reservationIdsRes"
        },
        "emailNotification": {
          "$ref": "#/definitions/emailNotification"
        },
        "smsNotification": {
          "$ref": "#/definitions/smsNotification"
        },
        "hotels": {
          "description": "List of hotels",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hotelRes"
          },
          "title": "HotelReservationResHotels"
        },
        "products": {
          "description": "The list of products (base product + attribute(s)) returned",
          "type": "array",
          "items": {
            "$ref": "#/definitions/product"
          },
          "title": "HotelReservationResProducts"
        },
        "attributes": {
          "description": "The list of attributes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/attribute"
          },
          "title": "HotelReservationResAttributes"
        },
        "links": {
          "description": "Link reservation details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/reservationLinks"
          },
          "title": "HotelReservationResLinks"
        },
        "groupContracts": {
          "description": "List of groupContract",
          "type": "array",
          "maxItems": 99,
          "items": {
            "$ref": "#/definitions/groupContractRes"
          },
          "title": "HotelReservationResGroupContracts"
        },
        "installments": {
          "description": "Deposit rule details",
          "type": "array",
          "maxItems": 3,
          "items": {
            "$ref": "#/definitions/installment"
          },
          "title": "HotelReservationResInstallments"
        },
        "ratePlans": {
          "description": "List of rate plans used in the reservation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ratePlanRes"
          },
          "title": "HotelReservationResRatePlans"
        },
        "userProfiles": {
          "description": "List of user profiles, at least one is mandatory for a 1 step",
          "$ref": "#/definitions/guestsRes"
        },
        "segments": {
          "$ref": "#/definitions/segmentRes"
        },
        "totalReservation": {
          "description": "List of totals per currency",
          "type": "array",
          "items": {
            "$ref": "#/definitions/totalReservation"
          },
          "title": "HotelReservationResTotalReservation"
        },
        "totalOfActiveSegments": {
          "description": "List of totals per currency",
          "type": "array",
          "items": {
            "$ref": "#/definitions/totalOfActiveSegments"
          },
          "title": "HotelReservationResTotalOfActiveSegments"
        },
        "comments": {
          "description": "List the comments.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/comment"
          },
          "title": "HotelReservationResComments"
        },
        "customData": {
          "$ref": "#/definitions/customData"
        },
        "invoiceIds": {
          "type": "array",
          "description": "List of invoice Ids. Each Id is unique in the reservation.",
          "items": {
            "$ref": "#/definitions/invoiceId"
          },
          "title": "HotelReservationResInvoiceIds"
        },
        "printRate": {
          "$ref": "#/definitions/printRate"
        },
        "chargePrivilege": {
          "$ref": "#/definitions/chargePrivilege"
        },
        "businessSource": {
          "$ref": "#/definitions/businessSource"
        }
      },
      "title": "HotelReservationRes"
    },
    "HotelReservationRetrieveRes": {
      "description": "full representation of reservation record",
      "type": "object",
      "required": [
        "status",
        "imageStatus",
        "hotels",
        "creationDateTime",
        "lastUpdateDateTime",
        "reservationIds",
        "segments",
        "products"
      ],
      "properties": {
        "warningIds": {
          "description": "list of warning references",
          "type": "array",
          "items": {
            "$ref": "#/definitions/id"
          },
          "title": "HotelReservationRetrieveResWarningIds"
        },
        "status": {
          "$ref": "#/definitions/resStatus"
        },
        "type": {
          "$ref": "#/definitions/reservationType"
        },
        "imageStatus": {
          "$ref": "#/definitions/imageStatus"
        },
        "creationDateTime": {
          "$ref": "#/definitions/createDateTime"
        },
        "lastUpdateDateTime": {
          "$ref": "#/definitions/lastUpdateDateTime"
        },
        "lastUpdateDateTimeHotelLocalTime": {
          "$ref": "#/definitions/lastUpdateDateTimeHotelLocalTime"
        },
        "cancellationDateTime": {
          "$ref": "#/definitions/cancellationDateTime"
        },
        "purgeDateTime": {
          "$ref": "#/definitions/purgeDateTime"
        },
        "authenticatedUser": {
          "description": "authenticated user information",
          "$ref": "#/definitions/authenticatedUser"
        },
        "impersonatedUser": {
          "description": "impersonated user information",
          "$ref": "#/definitions/authenticatedUser"
        },
        "reservationIds": {
          "$ref": "#/definitions/reservationIdsRes"
        },
        "emailNotification": {
          "$ref": "#/definitions/emailNotification"
        },
        "smsNotification": {
          "$ref": "#/definitions/smsNotification"
        },
        "hotels": {
          "description": "list of hotels",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hotelRes"
          },
          "title": "HotelReservationRetrieveResHotels"
        },
        "products": {
          "description": "the list of products (base product + attribute(s)) returned",
          "type": "array",
          "items": {
            "$ref": "#/definitions/product"
          },
          "title": "HotelReservationRetrieveResProducts"
        },
        "attributes": {
          "description": "the list of attributes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/attribute"
          },
          "title": "HotelReservationRetrieveResAttributes"
        },
        "links": {
          "description": "link reservation details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/reservationLinks"
          },
          "title": "HotelReservationRetrieveResLinks"
        },
        "groupContracts": {
          "description": "list of groupContract",
          "type": "array",
          "maxItems": 99,
          "items": {
            "$ref": "#/definitions/groupContractRes"
          },
          "title": "HotelReservationRetrieveResGroupContracts"
        },
        "installments": {
          "description": "deposit rule details",
          "type": "array",
          "maxItems": 3,
          "items": {
            "$ref": "#/definitions/installment"
          },
          "title": "HotelReservationRetrieveResInstallments"
        },
        "ratePlans": {
          "description": "list of rate plans used in the reservation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ratePlanRes"
          },
          "title": "HotelReservationRetrieveResRatePlans"
        },
        "userProfiles": {
          "description": "list of user profiles, at least one is mandatory for a 1 step",
          "$ref": "#/definitions/guestsRes"
        },
        "segments": {
          "$ref": "#/definitions/segmentRes"
        },
        "totalReservation": {
          "description": "list of totals per currency",
          "type": "array",
          "items": {
            "$ref": "#/definitions/totalReservation"
          },
          "title": "HotelReservationRetrieveResTotalReservation"
        },
        "totalOfActiveSegments": {
          "description": "list of totals per currency",
          "type": "array",
          "items": {
            "$ref": "#/definitions/totalOfActiveSegments"
          },
          "title": "HotelReservationRetrieveResTotalOfActiveSegments"
        },
        "comments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/comment"
          },
          "title": "HotelReservationRetrieveResComments"
        },
        "customData": {
          "$ref": "#/definitions/customData"
        },
        "invoiceIds": {
          "type": "array",
          "description": "list of invoice Ids. Each Id is unique in the reservation",
          "items": {
            "$ref": "#/definitions/invoiceId"
          },
          "title": "HotelReservationRetrieveResInvoiceIds"
        },
        "sendUserNotification": {
          "type": "boolean",
          "description": "indicator used to determine when a notification is sent to a user, it is only responded if the retrieve_delta request parameter is set to true"
        },
        "printRate": {
          "$ref": "#/definitions/printRate"
        },
        "chargePrivilege": {
          "$ref": "#/definitions/chargePrivilege"
        },
        "businessSource": {
          "$ref": "#/definitions/businessSource"
        }
      },
      "title": "HotelReservationRetrieveRes"
    },
    "HotelReservationRetrieveArchivedRes": {
      "description": "full representation of reservation record",
      "type": "object",
      "required": [
        "status",
        "imageStatus",
        "hotels",
        "creationDateTime",
        "lastUpdateDateTime",
        "reservationIds",
        "segments",
        "products"
      ],
      "properties": {
        "status": {
          "$ref": "#/definitions/resStatus"
        },
        "type": {
          "$ref": "#/definitions/reservationType"
        },
        "imageStatus": {
          "$ref": "#/definitions/imageStatus"
        },
        "creationDateTime": {
          "$ref": "#/definitions/createDateTime"
        },
        "lastUpdateDateTime": {
          "$ref": "#/definitions/lastUpdateDateTime"
        },
        "lastUpdateDateTimeHotelLocalTime": {
          "$ref": "#/definitions/lastUpdateDateTimeHotelLocalTime"
        },
        "cancellationDateTime": {
          "$ref": "#/definitions/cancellationDateTime"
        },
        "purgeDateTime": {
          "$ref": "#/definitions/purgeDateTime"
        },
        "authenticatedUser": {
          "description": "authenticated user information",
          "$ref": "#/definitions/authenticatedUser"
        },
        "impersonatedUser": {
          "description": "impersonated user information",
          "$ref": "#/definitions/authenticatedUser"
        },
        "reservationIds": {
          "$ref": "#/definitions/reservationIdsRes"
        },
        "hotels": {
          "description": "list of hotels",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hotelRes"
          },
          "title": "HotelReservationRetrieveArchivedResHotels"
        },
        "products": {
          "description": "the list of products (base product + attribute(s)) returned",
          "type": "array",
          "items": {
            "$ref": "#/definitions/product"
          },
          "title": "HotelReservationRetrieveArchivedResProducts"
        },
        "attributes": {
          "description": "the list of attributes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/attribute"
          },
          "title": "HotelReservationRetrieveArchivedResAttributes"
        },
        "links": {
          "description": "link reservation details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/reservationLinks"
          },
          "title": "HotelReservationRetrieveArchivedResLinks"
        },
        "groupContracts": {
          "description": "list of groupContract",
          "type": "array",
          "maxItems": 99,
          "items": {
            "$ref": "#/definitions/groupContractRes"
          },
          "title": "HotelReservationRetrieveArchivedResGroupContracts"
        },
        "installments": {
          "description": "deposit rule details",
          "type": "array",
          "maxItems": 3,
          "items": {
            "$ref": "#/definitions/installment"
          },
          "title": "HotelReservationRetrieveArchivedResInstallments"
        },
        "ratePlans": {
          "description": "list of rate plans used in the reservation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ratePlanRes"
          },
          "title": "HotelReservationRetrieveArchivedResRatePlans"
        },
        "userProfiles": {
          "description": "list of user profiles, at least one is mandatory for a 1 step",
          "$ref": "#/definitions/guestsRes"
        },
        "segments": {
          "$ref": "#/definitions/segmentRes"
        },
        "totalReservation": {
          "description": "list of totals per currency",
          "type": "array",
          "items": {
            "$ref": "#/definitions/totalReservation"
          },
          "title": "HotelReservationRetrieveArchivedResTotalReservation"
        },
        "totalOfActiveSegments": {
          "description": "list of totals per currency",
          "type": "array",
          "items": {
            "$ref": "#/definitions/totalOfActiveSegments"
          },
          "title": "HotelReservationRetrieveArchivedResTotalOfActiveSegments"
        },
        "comments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/comment"
          },
          "title": "HotelReservationRetrieveArchivedResComments"
        },
        "customData": {
          "$ref": "#/definitions/customData"
        },
        "invoiceIds": {
          "type": "array",
          "description": "list of invoice Ids. Each Id is unique in the reservation.",
          "items": {
            "$ref": "#/definitions/invoiceId"
          },
          "title": "HotelReservationRetrieveArchivedResInvoiceIds"
        },
        "printRate": {
          "$ref": "#/definitions/printRate"
        },
        "chargePrivilege": {
          "$ref": "#/definitions/chargePrivilege"
        },
        "businessSource": {
          "$ref": "#/definitions/businessSource"
        }
      },
      "title": "HotelReservationRetrieveArchivedRes"
    },
    "HotelReservationPendingRes": {
      "description": "Full representation of reservation record",
      "type": "object",
      "required": [
        "status",
        "imageStatus",
        "hotels",
        "creationDateTime",
        "lastUpdateDateTime",
        "reservationIds",
        "segments",
        "products"
      ],
      "properties": {
        "status": {
          "$ref": "#/definitions/resStatus"
        },
        "type": {
          "$ref": "#/definitions/reservationType"
        },
        "imageStatus": {
          "$ref": "#/definitions/imageStatus"
        },
        "creationDateTime": {
          "$ref": "#/definitions/createDateTime"
        },
        "lastUpdateDateTime": {
          "$ref": "#/definitions/lastUpdateDateTime"
        },
        "lastUpdateDateTimeHotelLocalTime": {
          "$ref": "#/definitions/lastUpdateDateTimeHotelLocalTime"
        },
        "cancellationDateTime": {
          "$ref": "#/definitions/cancellationDateTime"
        },
        "purgeDateTime": {
          "$ref": "#/definitions/purgeDateTime"
        },
        "authenticatedUser": {
          "description": "Authenticated user information",
          "$ref": "#/definitions/authenticatedUser"
        },
        "impersonatedUser": {
          "description": "impersonated user information. It is the one who does the transaction on behalf of the authenticated user",
          "$ref": "#/definitions/authenticatedUser"
        },
        "reservationIds": {
          "$ref": "#/definitions/reservationIdsRes"
        },
        "emailNotification": {
          "$ref": "#/definitions/emailNotification"
        },
        "smsNotification": {
          "$ref": "#/definitions/smsNotification"
        },
        "hotels": {
          "description": "List of hotels",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hotelRes"
          },
          "title": "HotelReservationPendingResHotels"
        },
        "products": {
          "description": "The list of products (base product + attribute(s)) returned",
          "type": "array",
          "items": {
            "$ref": "#/definitions/product"
          },
          "title": "HotelReservationPendingResProducts"
        },
        "attributes": {
          "description": "The list of attributes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/attribute"
          },
          "title": "HotelReservationPendingResAttributes"
        },
        "links": {
          "description": "Link reservation details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/reservationLinks"
          },
          "title": "HotelReservationPendingResLinks"
        },
        "groupContracts": {
          "description": "List of groupContract",
          "type": "array",
          "maxItems": 99,
          "items": {
            "$ref": "#/definitions/groupContractRes"
          },
          "title": "HotelReservationPendingResGroupContracts"
        },
        "installments": {
          "description": "Deposit rule details",
          "type": "array",
          "maxItems": 3,
          "items": {
            "$ref": "#/definitions/installment"
          },
          "title": "HotelReservationPendingResInstallments"
        },
        "ratePlans": {
          "description": "List of rate plans used in the reservation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ratePlanRes"
          },
          "title": "HotelReservationPendingResRatePlans"
        },
        "userProfiles": {
          "description": "List of user profiles, at least one is mandatory for a 1 step",
          "$ref": "#/definitions/guestsPendingRes"
        },
        "segments": {
          "$ref": "#/definitions/segmentRes"
        },
        "totalReservation": {
          "description": "List of totals per currency",
          "type": "array",
          "items": {
            "$ref": "#/definitions/totalReservation"
          },
          "title": "HotelReservationPendingResTotalReservation"
        },
        "totalOfActiveSegments": {
          "description": "List of totals per currency",
          "type": "array",
          "items": {
            "$ref": "#/definitions/totalOfActiveSegments"
          },
          "title": "HotelReservationPendingResTotalOfActiveSegments"
        },
        "comments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/comment"
          },
          "title": "HotelReservationPendingResComments"
        },
        "customData": {
          "$ref": "#/definitions/customData"
        },
        "invoiceIds": {
          "type": "array",
          "description": "List of invoice Ids. Each Id is unique in the reservation.",
          "items": {
            "$ref": "#/definitions/invoiceId"
          },
          "title": "HotelReservationPendingResInvoiceIds"
        },
        "printRate": {
          "$ref": "#/definitions/printRate"
        },
        "chargePrivilege": {
          "$ref": "#/definitions/chargePrivilege"
        },
        "businessSource": {
          "$ref": "#/definitions/businessSource"
        }
      },
      "title": "HotelReservationPendingRes"
    },
    "HotelReservationRetrievePendingRes": {
      "description": "full representation of reservation record",
      "type": "object",
      "required": [
        "status",
        "imageStatus",
        "hotels",
        "creationDateTime",
        "lastUpdateDateTime",
        "reservationIds",
        "segments",
        "products"
      ],
      "properties": {
        "status": {
          "$ref": "#/definitions/resStatus"
        },
        "type": {
          "$ref": "#/definitions/reservationType"
        },
        "imageStatus": {
          "$ref": "#/definitions/imageStatus"
        },
        "creationDateTime": {
          "$ref": "#/definitions/createDateTime"
        },
        "lastUpdateDateTime": {
          "$ref": "#/definitions/lastUpdateDateTime"
        },
        "lastUpdateDateTimeHotelLocalTime": {
          "$ref": "#/definitions/lastUpdateDateTimeHotelLocalTime"
        },
        "cancellationDateTime": {
          "$ref": "#/definitions/cancellationDateTime"
        },
        "purgeDateTime": {
          "$ref": "#/definitions/purgeDateTime"
        },
        "authenticatedUser": {
          "description": "authenticated user information",
          "$ref": "#/definitions/authenticatedUser"
        },
        "impersonatedUser": {
          "description": "impersonated user information",
          "$ref": "#/definitions/authenticatedUser"
        },
        "reservationIds": {
          "$ref": "#/definitions/reservationIdsRes"
        },
        "hotels": {
          "description": "list of hotels",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hotelRes"
          },
          "title": "HotelReservationRetrievePendingResHotels"
        },
        "products": {
          "description": "the list of products (base product + attribute(s)) returned",
          "type": "array",
          "items": {
            "$ref": "#/definitions/product"
          },
          "title": "HotelReservationRetrievePendingResProducts"
        },
        "attributes": {
          "description": "the list of attributes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/attribute"
          },
          "title": "HotelReservationRetrievePendingResAttributes"
        },
        "links": {
          "description": "link reservation details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/reservationLinks"
          },
          "title": "HotelReservationRetrievePendingResLinks"
        },
        "groupContracts": {
          "description": "list of groupContract",
          "type": "array",
          "maxItems": 99,
          "items": {
            "$ref": "#/definitions/groupContractRes"
          },
          "title": "HotelReservationRetrievePendingResGroupContracts"
        },
        "installments": {
          "description": "deposit rule details",
          "type": "array",
          "maxItems": 3,
          "items": {
            "$ref": "#/definitions/installment"
          },
          "title": "HotelReservationRetrievePendingResInstallments"
        },
        "ratePlans": {
          "description": "list of rate plans used in the reservation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ratePlanRes"
          },
          "title": "HotelReservationRetrievePendingResRatePlans"
        },
        "userProfiles": {
          "description": "list of user profiles, at least one is mandatory for a 1 step",
          "$ref": "#/definitions/guestsPendingRes"
        },
        "segments": {
          "$ref": "#/definitions/segmentRes"
        },
        "totalReservation": {
          "description": "list of totals per currency",
          "type": "array",
          "items": {
            "$ref": "#/definitions/totalReservation"
          },
          "title": "HotelReservationRetrievePendingResTotalReservation"
        },
        "totalOfActiveSegments": {
          "description": "list of totals per currency",
          "type": "array",
          "items": {
            "$ref": "#/definitions/totalOfActiveSegments"
          },
          "title": "HotelReservationRetrievePendingResTotalOfActiveSegments"
        },
        "comments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/comment"
          },
          "title": "HotelReservationRetrievePendingResComments"
        },
        "customData": {
          "$ref": "#/definitions/customData"
        },
        "invoiceIds": {
          "type": "array",
          "description": "list of invoice Ids. Each Id is unique in the reservation.",
          "items": {
            "$ref": "#/definitions/invoiceId"
          },
          "title": "HotelReservationRetrievePendingResInvoiceIds"
        },
        "sendUserNotification": {
          "type": "boolean",
          "description": "indicator used to determine when a notification is sent to a user, it is only responded if the retrieve_delta request parameter is set to true."
        },
        "printRate": {
          "$ref": "#/definitions/printRate"
        },
        "businessSource": {
          "$ref": "#/definitions/businessSource"
        }
      },
      "title": "HotelReservationRetrievePendingRes"
    },
    "HotelLinkReservationRes": {
      "type": "object",
      "required": [
        "link"
      ],
      "properties": {
        "link": {
          "$ref": "#/definitions/reservationLinks"
        },
        "cfNumbers": {
          "description": "list of Hotel Confirmation Numbers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkCfNumber"
          },
          "title": "HotelLinkReservationResCfNumbers"
        },
        "sharePricingMethod": {
          "$ref": "#/definitions/sharePricingMethod"
        }
      },
      "title": "HotelLinkReservationRes"
    },
    "linkType": {
      "description": "type of link",
      "type": "string",
      "enum": [
        "Joint",
        "Share"
      ]
    },
    "creationDate": {
      "description": "date of creation (UTC)",
      "type": "string",
      "pattern": "^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2]\\d|3[0-1])$",
      "example": "2021-05-26"
    },
    "reservationLinks": {
      "type": "object",
      "description": "type of link and unique identifier",
      "required": [
        "id",
        "type"
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/reservationLinkId"
        },
        "type": {
          "$ref": "#/definitions/linkType"
        }
      },
      "title": "ReservationLinks"
    },
    "synchronizeShareSummary": {
      "type": "object",
      "description": "contains the details of the share",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/reservationLinkId"
        },
        "period": {
          "$ref": "#/definitions/period"
        },
        "inventoryTypeCode": {
          "$ref": "#/definitions/inventoryTypeCode"
        },
        "corporateMarketSegment": {
          "$ref": "#/definitions/corporateMarketSegment"
        },
        "reportingData": {
          "$ref": "#/definitions/reportingData"
        }
      },
      "title": "SynchronizeShareSummary"
    },
    "reservationLinkId": {
      "description": "unique link identifier",
      "type": "string",
      "pattern": "^[A-Z0-9]{8,10}$",
      "minLength": 8,
      "maxLength": 10
    },
    "sharePricingMethod": {
      "description": "method of calculating prices",
      "type": "string",
      "enum": [
        "Full",
        "Entire",
        "Split"
      ]
    },
    "ReservationRes": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/warning"
          },
          "title": "ReservationResWarnings"
        },
        "data": {
          "type": "object",
          "title": "ReservationResData",
          "properties": {
            "denials": {
              "description": "request denial details",
              "type": "array",
              "items": {
                "$ref": "#/definitions/denial"
              },
              "title": "ReservationResDataDenials"
            },
            "creator": {
              "description": "contains the details of the channel which created the reservation",
              "$ref": "#/definitions/pointOfSale"
            },
            "requestor": {
              "description": "contains the details of the channel which requested the transaction",
              "$ref": "#/definitions/pointOfSale"
            },
            "hotelReservation": {
              "$ref": "#/definitions/HotelReservationRes"
            }
          }
        }
      },
      "title": "ReservationRes"
    },
    "ReservationPendingRes": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/warning"
          },
          "title": "ReservationPendingResWarnings"
        },
        "data": {
          "type": "object",
          "title": "ReservationPendingResData",
          "properties": {
            "denials": {
              "description": "request denial details",
              "$ref": "#/definitions/denial"
            },
            "creator": {
              "description": "contains the details of the channel which created the reservation",
              "$ref": "#/definitions/pointOfSale"
            },
            "requestor": {
              "description": "contains the details of the channel which requested the transaction",
              "$ref": "#/definitions/pointOfSale"
            },
            "hotelReservation": {
              "$ref": "#/definitions/HotelReservationPendingRes"
            }
          }
        }
      },
      "title": "ReservationPendingRes"
    },
    "LinkReservationRes": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/warning"
          },
          "title": "LinkReservationResWarnings"
        },
        "data": {
          "type": "object",
          "title": "LinkReservationResData",
          "properties": {
            "hotelLinkReservation": {
              "description": "full representation of link reservation record",
              "$ref": "#/definitions/HotelLinkReservationRes"
            }
          }
        }
      },
      "title": "LinkReservationRes"
    },
    "HotelReservationPendingReq": {
      "type": "object",
      "required": [
        "hotelReservation"
      ],
      "properties": {
        "creator": {
          "description": "Contains the details of the channel which created the reservation. If provided in the payload, will be stored in the reservation. The channel headers must still be provided to perform the permissions check.",
          "$ref": "#/definitions/pointOfSale"
        },
        "hotelReservation": {
          "type": "object",
          "title": "HotelReservationPendingReqHotelReservation",
          "required": [
            "hotels",
            "segments"
          ],
          "properties": {
            "reservationIds": {
              "$ref": "#/definitions/reservationIdsReq"
            },
            "emailNotification": {
              "$ref": "#/definitions/emailNotification"
            },
            "smsNotification": {
              "$ref": "#/definitions/smsNotification"
            },
            "type": {
              "$ref": "#/definitions/reservationType"
            },
            "groupContracts": {
              "description": "List of groupContract",
              "type": "array",
              "maxItems": 99,
              "items": {
                "$ref": "#/definitions/groupContractReq"
              },
              "title": "HotelReservationPendingReqHotelReservationGroupContracts"
            },
            "installments": {
              "description": "Deposit rule details",
              "type": "array",
              "maxItems": 3,
              "items": {
                "$ref": "#/definitions/installment"
              },
              "title": "HotelReservationPendingReqHotelReservationInstallments"
            },
            "purgeDateTime": {
              "description": "Date and time when the confirmation number has to be released. Only sent in migration requests, in partial freeze mode",
              "$ref": "#/definitions/purgeDateTime"
            },
            "hotels": {
              "description": "List of hotels",
              "type": "array",
              "items": {
                "$ref": "#/definitions/hotelReq"
              },
              "title": "HotelReservationPendingReqHotelReservationHotels"
            },
            "userProfiles": {
              "$ref": "#/definitions/guestsPendingReq"
            },
            "segments": {
              "$ref": "#/definitions/segmentReq"
            },
            "comments": {
              "type": "array",
              "description": "comment details of the reservation. It describes the type, language and text of comments",
              "items": {
                "$ref": "#/definitions/comment"
              },
              "title": "HotelReservationPendingReqHotelReservationComments"
            },
            "chargePrivilege": {
              "$ref": "#/definitions/chargePrivilege"
            },
            "customData": {
              "$ref": "#/definitions/customData",
              "description": "All data under customData are stored in the reservation and returned in the response and retrieve. Any valid Json object is accepted"
            },
            "invoiceIds": {
              "type": "array",
              "description": "List of invoice Ids. Each Id is unique in the reservation.",
              "items": {
                "$ref": "#/definitions/invoiceId"
              },
              "title": "HotelReservationPendingReqHotelReservationInvoiceIds"
            },
            "businessSource": {
              "$ref": "#/definitions/businessSource"
            }
          }
        }
      },
      "title": "HotelReservationPendingReq"
    },
    "HotelReservationModifyPendingReq": {
      "description": "Full representation of reservation record",
      "type": "object",
      "required": [
        "hotelReservation"
      ],
      "properties": {
        "hotelReservation": {
          "type": "object",
          "title": "HotelReservationModifyPendingReqHotelReservation",
          "required": [
            "hotels",
            "segments"
          ],
          "properties": {
            "reservationIds": {
              "$ref": "#/definitions/reservationIdsReq"
            },
            "emailNotification": {
              "$ref": "#/definitions/emailNotification"
            },
            "smsNotification": {
              "$ref": "#/definitions/smsNotification"
            },
            "type": {
              "$ref": "#/definitions/reservationType"
            },
            "groupContracts": {
              "description": "List of groupContract",
              "type": "array",
              "maxItems": 99,
              "items": {
                "$ref": "#/definitions/groupContractReq"
              },
              "title": "HotelReservationModifyPendingReqHotelReservationGroupContracts"
            },
            "installments": {
              "description": "Deposit rule details",
              "type": "array",
              "maxItems": 3,
              "items": {
                "$ref": "#/definitions/installment"
              },
              "title": "HotelReservationModifyPendingReqHotelReservationInstallments"
            },
            "purgeDateTime": {
              "description": "Date and time when the confirmation number has to be released. Only sent in migration requests, in partial freeze mode",
              "$ref": "#/definitions/purgeDateTime"
            },
            "hotels": {
              "description": "List of hotels",
              "type": "array",
              "items": {
                "$ref": "#/definitions/hotelReq"
              },
              "title": "HotelReservationModifyPendingReqHotelReservationHotels"
            },
            "userProfiles": {
              "$ref": "#/definitions/guestsPendingReq"
            },
            "segments": {
              "$ref": "#/definitions/segmentModifyPendingReq"
            },
            "comments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/comment"
              },
              "title": "HotelReservationModifyPendingReqHotelReservationComments"
            },
            "customData": {
              "$ref": "#/definitions/customData"
            },
            "chargePrivilege": {
              "$ref": "#/definitions/chargePrivilege"
            },
            "invoiceIds": {
              "type": "array",
              "description": "List of invoice Ids. Each Id is unique in the reservation.",
              "items": {
                "$ref": "#/definitions/invoiceId"
              },
              "title": "HotelReservationModifyPendingReqHotelReservationInvoiceIds"
            },
            "businessSource": {
              "$ref": "#/definitions/businessSource"
            }
          }
        }
      },
      "title": "HotelReservationModifyPendingReq"
    },
    "HotelLinkReservationReq": {
      "description": "full representation of link reservation record",
      "type": "object",
      "title": "HotelLinkReservationReq",
      "required": [
        "cfNumbers",
        "type"
      ],
      "properties": {
        "cfNumbers": {
          "description": "list of Hotel Confirmation Numbers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/cfNumber"
          },
          "title": "HotelLinkReservationReqCfNumbers"
        },
        "type": {
          "$ref": "#/definitions/linkType"
        },
        "sharePricingMethod": {
          "$ref": "#/definitions/sharePricingMethod"
        }
      }
    },
    "ReservationPendingReq": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/HotelReservationPendingReq"
        }
      },
      "title": "ReservationPendingReq"
    },
    "ReservationModifyPendingReq": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/HotelReservationModifyPendingReq"
        }
      },
      "title": "ReservationModifyPendingReq"
    },
    "ReservationReinstateReq": {
      "description": "reservation to be reinstated",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "object",
          "title": "ReservationReinstateReqData",
          "properties": {
            "segments": {
              "description": "list of segments to be reinstated. If no segment id is specified, all the segments of the reservation are reinstated",
              "type": "array",
              "items": {
                "type": "object",
                "title": "ReservationReinstateReqDataSegmentsItem",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "identify the segment inside the reservation all along the reservation life"
                  }
                }
              },
              "title": "ReservationReinstateReqDataSegments"
            }
          }
        }
      },
      "title": "ReservationReinstateReq"
    },
    "LinkReservationReq": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "title": "LinkReservationReqData",
          "type": "object",
          "required": [
            "hotelLinkReservation"
          ],
          "properties": {
            "hotelLinkReservation": {
              "$ref": "#/definitions/HotelLinkReservationReq"
            }
          }
        }
      },
      "title": "LinkReservationReq"
    },
    "MultiRetrieveReservationArchivedAndActiveReq": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "object",
          "description": "multi retrieve reservation request",
          "title": "MultiRetrieveReservationArchivedAndActiveReqData",
          "properties": {
            "reservationIdentifiers": {
              "type": "array",
              "description": "list of cfNumbers and creation dates",
              "items": {
                "$ref": "#/definitions/reservationIdentifiers"
              },
              "title": "MultiRetrieveReservationArchivedAndActiveReqDataReservationIdentifiers"
            }
          }
        }
      },
      "title": "MultiRetrieveReservationArchivedAndActiveReq"
    },
    "MultiRetrieveReservationRes": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/warning"
          },
          "title": "MultiRetrieveReservationResWarnings"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "title": "MultiRetrieveReservationResDataItem",
            "properties": {
              "creator": {
                "description": "contains the details of the channel which created the reservation",
                "$ref": "#/definitions/pointOfSale"
              },
              "requestor": {
                "description": "contains the details of the channel which requested the transaction",
                "$ref": "#/definitions/pointOfSale"
              },
              "hotelReservation": {
                "$ref": "#/definitions/HotelReservationRetrieveRes"
              }
            }
          },
          "title": "MultiRetrieveReservationResData"
        }
      },
      "title": "MultiRetrieveReservationRes"
    },
    "ReservationRetrieveArchivedRes": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/warning"
          },
          "title": "ReservationRetrieveArchivedResWarnings"
        },
        "data": {
          "type": "object",
          "title": "ReservationRetrieveArchivedResData",
          "properties": {
            "creator": {
              "description": "contains the details of the channel which created the reservation",
              "$ref": "#/definitions/pointOfSale"
            },
            "requestor": {
              "description": "contains the details of the channel which requested the transaction",
              "$ref": "#/definitions/pointOfSale"
            },
            "hotelReservation": {
              "$ref": "#/definitions/HotelReservationRetrieveArchivedRes"
            },
            "history": {
              "$ref": "#/definitions/history"
            }
          }
        }
      },
      "title": "ReservationRetrieveArchivedRes"
    },
    "LinkReservationRetrieveRes": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/warning"
          },
          "title": "LinkReservationRetrieveResWarnings"
        },
        "data": {
          "type": "object",
          "title": "LinkReservationRetrieveResData",
          "properties": {
            "hotelLinkReservation": {
              "description": "full representation of link reservation record",
              "$ref": "#/definitions/HotelLinkReservationRes"
            }
          }
        }
      },
      "title": "LinkReservationRetrieveRes"
    },
    "ReservationRetrievePendingRes": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/warning"
          },
          "title": "ReservationRetrievePendingResWarnings"
        },
        "data": {
          "type": "object",
          "title": "ReservationRetrievePendingResData",
          "properties": {
            "creator": {
              "description": "contains the details of the channel which created the reservation",
              "$ref": "#/definitions/pointOfSale"
            },
            "requestor": {
              "description": "contains the details of the channel which requested the transaction",
              "$ref": "#/definitions/pointOfSale"
            },
            "hotelReservation": {
              "$ref": "#/definitions/HotelReservationRetrievePendingRes"
            },
            "history": {
              "$ref": "#/definitions/history"
            },
            "modificationChanges": {
              "$ref": "#/definitions/modificationChanges"
            }
          }
        }
      },
      "title": "ReservationRetrievePendingRes"
    },
    "ShareReservationSynchronizeRes": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/warning"
          },
          "title": "ShareReservationSynchronizeResWarnings"
        },
        "data": {
          "type": "object",
          "title": "ShareReservationSynchronizeResData",
          "required": [
            "shareSummary"
          ],
          "properties": {
            "shareSummary": {
              "$ref": "#/definitions/synchronizeShareSummary"
            },
            "reservationSummaries": {
              "description": "details about reservations which are part of share",
              "type": "array",
              "items": {
                "$ref": "#/definitions/synchronizeReservationSummary"
              },
              "title": "ShareReservationSynchronizeResDataReservationSummaries"
            },
            "propertyCode": {
              "$ref": "#/definitions/propertyCode"
            },
            "lastUpdateDateTime": {
              "$ref": "#/definitions/lastUpdateDateTime"
            }
          }
        }
      },
      "title": "ShareReservationSynchronizeRes"
    },
    "resStatus": {
      "description": "booked (BK) if all segments are in BK state, cancelled (CL) if all segments have been cancelled, (modified) MY otherwise",
      "type": "string",
      "enum": [
        "BK",
        "MY",
        "CL"
      ]
    },
    "reservationType": {
      "description": "type of the reservation, to identify if the reservation is a Group Master reservation or a individual reservation. An individual reservation can be  a picked up reservation or a transient one",
      "type": "string",
      "default": "Individual",
      "enum": [
        "GroupMaster",
        "Individual"
      ]
    },
    "imageStatus": {
      "description": "status of the image of the reservation. Pending - after a 2-steps create before the commit. Committed - after the commit in a 2-steps process or after a successful creation for a 1-step process",
      "type": "string",
      "enum": [
        "Pending",
        "Committed"
      ]
    },
    "createDateTime": {
      "description": "date and time of creation (UTC)",
      "type": "string",
      "pattern": "^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2]\\d|3[0-1])T([0-1]\\d|2[0-4]):([0-5]\\d):([0-5]\\d)$",
      "example": "2018-05-26T22:00:00"
    },
    "createDateTimeHotelLocalTime": {
      "description": "date and Time of creation, expressed in hotel local time",
      "type": "string",
      "pattern": "^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2]\\d|3[0-1])T([0-1]\\d|2[0-4]):([0-5]\\d):([0-5]\\d)$",
      "example": "2018-05-26T22:00:00"
    },
    "cancellationDateTime": {
      "description": "date and time of cancellation (UTC)",
      "type": "string",
      "pattern": "^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2]\\d|3[0-1])T([0-1]\\d|2[0-4]):([0-5]\\d):([0-5]\\d)$",
      "example": "2018-05-26T22:00:00"
    },
    "cancellationDateTimeHotelLocalTime": {
      "description": "date and time of cancellation, expressed in hotel local time",
      "type": "string",
      "pattern": "^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2]\\d|3[0-1])T([0-1]\\d|2[0-4]):([0-5]\\d):([0-5]\\d)$",
      "example": "2018-05-26T22:00:00"
    },
    "lastUpdateDateTime": {
      "description": "date and time of the last active image (last modification for history), expressed in UTC",
      "type": "string",
      "pattern": "^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2]\\d|3[0-1])T([0-1]\\d|2[0-4]):([0-5]\\d):([0-5]\\d)$",
      "example": "2018-05-26T22:00:00"
    },
    "lastUpdateDateTimeHotelLocalTime": {
      "description": "date and time of the last active image (last modification for history) expressed in hotel local time",
      "type": "string",
      "pattern": "^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2]\\d|3[0-1])T([0-1]\\d|2[0-4]):([0-5]\\d):([0-5]\\d)$",
      "example": "2018-05-26T22:00:00"
    },
    "purgeDateTime": {
      "description": "date and time when the confirmation number has to be released (UTC)",
      "type": "string",
      "pattern": "^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2]\\d|3[0-1])T([0-1]\\d|2[0-4]):([0-5]\\d):([0-5]\\d)$",
      "example": "2018-05-26T22:00:00"
    },
    "reservationIdsRes": {
      "description": "container for structured details of the guest name",
      "type": "object",
      "required": [
        "cfNumber",
        "imageId"
      ],
      "properties": {
        "cfNumber": {
          "$ref": "#/definitions/cfNumber"
        },
        "cxNumber": {
          "$ref": "#/definitions/cxNumber"
        },
        "imageId": {
          "$ref": "#/definitions/imageId"
        },
        "committedSequenceNumber": {
          "$ref": "#/definitions/committedSequenceNumber"
        },
        "pnr": {
          "$ref": "#/definitions/pnr"
        },
        "extCfNumber": {
          "$ref": "#/definitions/extCfNumber"
        },
        "extCxNumber": {
          "$ref": "#/definitions/extCxNumber"
        },
        "pmsCfNumber": {
          "$ref": "#/definitions/pmsCfNumber"
        },
        "pmsCxNumber": {
          "$ref": "#/definitions/pmsCxNumber"
        },
        "externalShareId": {
          "$ref": "#/definitions/externalShareId"
        },
        "unsolicitedCancelId": {
          "$ref": "#/definitions/unsolicitedCancelId"
        },
        "externalTravelWithId": {
          "$ref": "#/definitions/externalTravelWithId"
        }
      },
      "title": "ReservationIdsRes"
    },
    "emailNotification": {
      "description": "indicates if the reservation notification preference is through email",
      "type": "boolean"
    },
    "smsNotification": {
      "description": "indicates if the reservation notification preference is through sms",
      "type": "boolean"
    },
    "groupContractReq": {
      "type": "object",
      "required": [
        "name",
        "code"
      ],
      "properties": {
        "code": {
          "description": "the group contract code",
          "type": "string"
        },
        "name": {
          "description": "the group contract name",
          "$ref": "#/definitions/description"
        },
        "description": {
          "description": "the group contract description",
          "$ref": "#/definitions/description"
        },
        "bookingProcedures": {
          "description": "group Contract Booking Procedures, free text explaining how the group can be booked",
          "$ref": "#/definitions/description"
        },
        "industryType": {
          "description": "industry type tag",
          "type": "string"
        },
        "saleStatus": {
          "$ref": "#/definitions/saleStatus"
        },
        "businessSource": {
          "$ref": "#/definitions/businessSource"
        }
      },
      "title": "GroupContractReq"
    },
    "groupContractRes": {
      "type": "object",
      "required": [
        "name",
        "code"
      ],
      "properties": {
        "code": {
          "description": "the group contract code",
          "type": "string"
        },
        "name": {
          "description": "the group contract name",
          "$ref": "#/definitions/description"
        },
        "start": {
          "description": "start date",
          "type": "string",
          "format": "date"
        },
        "end": {
          "description": "end date",
          "type": "string",
          "format": "date"
        },
        "description": {
          "description": "the group contract description",
          "$ref": "#/definitions/description"
        },
        "referenceRatePlanCode": {
          "description": "reference rate plan code for group contract",
          "$ref": "#/definitions/ratePlanCode"
        },
        "bookingProcedures": {
          "description": "group Contract Booking Procedures, free text explaining how the group can be booked",
          "$ref": "#/definitions/description"
        },
        "isCommissionable": {
          "description": "indicates if this Group Contract is commissionable or not",
          "type": "boolean",
          "default": false
        },
        "areAmountsConfidential": {
          "description": "indicates if amounts defined in the Group Contract are confidential ones",
          "type": "boolean",
          "default": false
        },
        "updateByHotelierOnly": {
          "description": "indicates that the reservation can only be modified or cancelled by the hotelier or user with a specific permission",
          "type": "boolean",
          "default": false
        },
        "industryType": {
          "description": "industry type tag",
          "type": "string"
        },
        "saleStatus": {
          "$ref": "#/definitions/saleStatus"
        },
        "businessSource": {
          "$ref": "#/definitions/businessSource"
        },
        "externalIds": {
          "description": "collection of alternative IDs for the group, used by external systems only, ie. sales and catering, PMS linking tools etc",
          "type": "array",
          "items": {
            "$ref": "#/definitions/groupExternalIdItem"
          },
          "maxItems": 20,
          "title": "GroupContractResExternalIds"
        },
        "externalPmsId": {
          "description": "group code of external PMS, may be used to identify a Group along with Property and Group Code. Set on the PMS only and stored with the group",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 50
        },
        "groupCfNumber": {
          "description": "confirmation number of the group. This is the ACRS generated group Id",
          "$ref": "#/definitions/cfNumber"
        }
      },
      "title": "GroupContractRes"
    },
    "migGroupContract": {
      "type": "object",
      "required": [
        "name",
        "code"
      ],
      "properties": {
        "code": {
          "description": "the group contract code",
          "type": "string"
        },
        "name": {
          "description": "the group contract name",
          "$ref": "#/definitions/description"
        },
        "start": {
          "description": "start date",
          "type": "string",
          "format": "date"
        },
        "end": {
          "description": "end date",
          "type": "string",
          "format": "date"
        },
        "description": {
          "description": "the group contract description",
          "$ref": "#/definitions/description"
        },
        "referenceRatePlanCode": {
          "description": "reference rate plan code for group contract",
          "$ref": "#/definitions/ratePlanCode"
        },
        "bookingProcedures": {
          "description": "group Contract Booking Procedures, free text explaining how the group can be booked",
          "$ref": "#/definitions/description"
        },
        "isCommissionable": {
          "description": "indicates if this Group Contract is commissionable or not",
          "type": "boolean",
          "default": false
        },
        "areAmountsConfidential": {
          "description": "indicates if amounts defined in the Group Contract are confidential ones",
          "type": "boolean",
          "default": false
        },
        "updateByHotelierOnly": {
          "description": "indicates that the reservation can only be modified or cancelled by the hotelier or user with a specific permission",
          "type": "boolean",
          "default": false
        },
        "industryType": {
          "description": "industry type tag",
          "type": "string"
        },
        "saleStatus": {
          "$ref": "#/definitions/saleStatus"
        },
        "businessSource": {
          "$ref": "#/definitions/businessSource"
        }
      },
      "title": "MigGroupContract"
    },
    "installment": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "description": "id of the installment. Inside the string only an integer will be accepted",
          "type": "string",
          "minLength": 1,
          "maxLength": 10
        },
        "deadline": {
          "description": "number of days prior to arrival for which the installment is due",
          "type": "integer",
          "minimum": 0,
          "maximum": 1095
        },
        "amount": {
          "description": "due amount",
          "type": "string",
          "minLength": 1,
          "maxLength": 1000
        }
      },
      "title": "Installment"
    },
    "totalReservation": {
      "type": "object",
      "required": [
        "currency",
        "finalPriceAmt"
      ],
      "properties": {
        "currency": {
          "$ref": "#/definitions/currency"
        },
        "amtBfTx": {
          "$ref": "#/definitions/amountBeforeTax"
        },
        "bsAmt": {
          "$ref": "#/definitions/baseAmount"
        },
        "amtAfTx": {
          "$ref": "#/definitions/amountAfterTax"
        },
        "finalPriceAmt": {
          "$ref": "#/definitions/finalPriceAmt"
        },
        "totalTaxes": {
          "description": "total amount of all applicable taxes",
          "type": "string"
        },
        "payableTotalTaxes": {
          "$ref": "#/definitions/payableTotalTaxes"
        },
        "payHotelTotalTaxes": {
          "$ref": "#/definitions/payHotelTotalTaxes"
        },
        "payableAmtAfTx": {
          "description": "amount after all taxes except those payable at the hotel",
          "type": "string"
        }
      },
      "title": "TotalReservation"
    },
    "totalOfActiveSegments": {
      "type": "object",
      "required": [
        "currency",
        "bsAmt"
      ],
      "properties": {
        "currency": {
          "$ref": "#/definitions/currency"
        },
        "amtBfTx": {
          "$ref": "#/definitions/amountBeforeTax"
        },
        "bsAmt": {
          "$ref": "#/definitions/baseAmount"
        },
        "amtAfTx": {
          "$ref": "#/definitions/amountAfterTax"
        },
        "finalPriceAmt": {
          "$ref": "#/definitions/finalPriceAmtWithoutFees"
        },
        "totalTaxes": {
          "description": "total amount of all applicable taxes",
          "type": "string"
        },
        "payableTotalTaxes": {
          "$ref": "#/definitions/payableTotalTaxes"
        },
        "payHotelTotalTaxes": {
          "$ref": "#/definitions/payHotelTotalTaxes"
        },
        "payableAmtAfTx": {
          "description": "amount after all taxes except those payable at the hotel",
          "type": "string"
        }
      },
      "title": "TotalOfActiveSegments"
    },
    "printRate": {
      "description": "indicates whether rates are not confidential and can be printed",
      "type": "boolean"
    },
    "chargePrivilege": {
      "description": "indicates if the guests are allowed to have items posted in their folio",
      "type": "boolean"
    },
    "groupExternalIdItem": {
      "type": "object",
      "description": "defines an external group ID",
      "required": [
        "id",
        "type"
      ],
      "properties": {
        "id": {
          "description": "external ID (alternative group ID used by external systems)",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 50
        },
        "type": {
          "description": "defines the type of external ID",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 50
        }
      },
      "title": "GroupExternalIdItem"
    },
    "reservationIdsReq": {
      "description": "container for structured details of the guest name",
      "type": "object",
      "properties": {
        "cfNumber": {
          "$ref": "#/definitions/cfNumber"
        },
        "pnr": {
          "$ref": "#/definitions/pnr"
        },
        "extCfNumber": {
          "$ref": "#/definitions/extCfNumber"
        },
        "pmsCfNumber": {
          "$ref": "#/definitions/pmsCfNumber"
        },
        "pmsCxNumber": {
          "$ref": "#/definitions/pmsCxNumber"
        },
        "extCxNumber": {
          "$ref": "#/definitions/extCxNumber"
        },
        "externalShareId": {
          "$ref": "#/definitions/externalShareId"
        },
        "unsolicitedCancelId": {
          "$ref": "#/definitions/unsolicitedCancelId"
        },
        "externalTravelWithId": {
          "$ref": "#/definitions/externalTravelWithId"
        }
      },
      "title": "ReservationIdsReq"
    },
    "reservationIdsSearchRes": {
      "description": "container for structured details of the guest name",
      "type": "object",
      "required": [
        "cfNumber"
      ],
      "properties": {
        "cfNumber": {
          "$ref": "#/definitions/cfNumber"
        },
        "cxNumber": {
          "$ref": "#/definitions/cxNumber"
        },
        "imageId": {
          "$ref": "#/definitions/imageId"
        },
        "committedSequenceNumber": {
          "$ref": "#/definitions/committedSequenceNumber"
        },
        "extCfNumber": {
          "$ref": "#/definitions/extCfNumber"
        },
        "extCxNumber": {
          "$ref": "#/definitions/extCxNumber"
        },
        "pmsCfNumber": {
          "$ref": "#/definitions/pmsCfNumber"
        },
        "pmsCxNumber": {
          "$ref": "#/definitions/pmsCxNumber"
        },
        "externalShareId": {
          "$ref": "#/definitions/externalShareId"
        }
      },
      "title": "ReservationIdsSearchRes"
    },
    "cfNumber": {
      "description": "hotel Confirmation Number. It is a ACRS confirmation number",
      "type": "string",
      "pattern": "^[A-Z0-9]{8,10}$",
      "minLength": 8,
      "maxLength": 10,
      "example": "41771771"
    },
    "linkCfNumber": {
      "type": "object",
      "required": [
        "cfNumber",
        "creationDate"
      ],
      "properties": {
        "cfNumber": {
          "$ref": "#/definitions/cfNumber"
        },
        "creationDate": {
          "$ref": "#/definitions/creationDate"
        }
      },
      "title": "LinkCfNumber"
    },
    "synchronizeReservationSummary": {
      "type": "object",
      "required": [
        "cfNumber"
      ],
      "properties": {
        "cfNumber": {
          "$ref": "#/definitions/cfNumber"
        },
        "period": {
          "$ref": "#/definitions/period"
        },
        "pmsCfNumber": {
          "$ref": "#/definitions/pmsCfNumber"
        },
        "arrivalTime": {
          "$ref": "#/definitions/arrivalTime"
        },
        "departureTime": {
          "$ref": "#/definitions/departureTime"
        },
        "isPrimary": {
          "description": "set to true if a reservation is primary reservation. Otherwise set to false",
          "type": "boolean"
        }
      },
      "title": "SynchronizeReservationSummary"
    },
    "cxNumber": {
      "description": "hotel Cancellation Number. Mandatory if the action concerns a cancel",
      "type": "string",
      "pattern": "^[A-Z0-9]{8,10}$",
      "minLength": 8,
      "maxLength": 10,
      "example": "31771771"
    },
    "imageId": {
      "description": "image ID (unique per confirmation number)",
      "type": "integer"
    },
    "pnr": {
      "description": "the PNR container",
      "type": "object",
      "required": [
        "number"
      ],
      "properties": {
        "number": {
          "description": "the PNR number",
          "type": "string",
          "pattern": "^[A-Za-z0-9]{5,6}$",
          "minLength": 5,
          "maxLength": 6
        },
        "source": {
          "description": "source of the PNR number",
          "type": "string",
          "pattern": "^[A-Za-z0-9]{2}$",
          "minLength": 2,
          "maxLength": 2
        }
      },
      "title": "Pnr"
    },
    "extCfNumber": {
      "description": "container for External Confirmation Number",
      "type": "object",
      "required": [
        "number"
      ],
      "properties": {
        "number": {
          "description": "external Confirmation Number",
          "type": "string",
          "minLength": 1,
          "maxLength": 32
        },
        "source": {
          "description": "source of external Confirmation Number (ID of the originator Channel)",
          "type": "string",
          "minLength": 2,
          "maxLength": 2
        }
      },
      "title": "ExtCfNumber"
    },
    "extCxNumber": {
      "description": "external Cancellation Number",
      "type": "string",
      "minLength": 1,
      "maxLength": 32
    },
    "externalTravelWithId": {
      "description": "external identifier for multiple same room split reservations",
      "type": "string",
      "minLength": 1,
      "maxLength": 32,
      "pattern": "^.*$"
    },
    "pmsCfNumber": {
      "description": "the PMS confirmation number",
      "type": "string",
      "minLength": 1,
      "maxLength": 50
    },
    "pmsCxNumber": {
      "description": "the PMS cancellation number",
      "type": "string",
      "minLength": 1,
      "maxLength": 50
    },
    "unsolicitedCancelId": {
      "description": "unique Identifier of the reservation generated by GDS original vendor",
      "type": "string",
      "pattern": "^[A-Za-z0-9]{1,64}$",
      "minLength": 1,
      "maxLength": 64
    },
    "vendorBookingCode": {
      "description": "booking code as it is distributed on vendor channel",
      "type": "string",
      "maxLength": 16
    },
    "committedSequenceNumber": {
      "description": "sequence number of this image among all the committed images in the reservation",
      "type": "integer"
    },
    "externalShareId": {
      "description": "share ID of the external system",
      "type": "string",
      "minLength": 1,
      "maxLength": 60
    },
    "reservationIdentifiers": {
      "description": "parameters that identify the reservation to retrieve",
      "type": "object",
      "required": [
        "cfNumber"
      ],
      "properties": {
        "cfNumber": {
          "$ref": "#/definitions/cfNumber"
        },
        "creationDate": {
          "$ref": "#/definitions/creationDate"
        }
      },
      "title": "ReservationIdentifiers"
    },
    "reportingData": {
      "description": "contains information conveyed for Reporting use only",
      "type": "object",
      "properties": {
        "channelClass": {
          "$ref": "#/definitions/reportingChannelClass"
        },
        "channelType": {
          "$ref": "#/definitions/reportingChannelType"
        },
        "channel": {
          "$ref": "#/definitions/reportingChannel"
        },
        "subChannel": {
          "$ref": "#/definitions/reportingSubChannel"
        },
        "code": {
          "$ref": "#/definitions/reportingCode"
        }
      },
      "title": "ReportingData"
    },
    "reportingCode": {
      "description": "the reporting code is attached to a reservation record (including Group reservation) in order to track and provide reporting capabilities for customers in their own ecosystem(e.g. TIBKLND, TIEXLND)",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 20
    },
    "reportingChannelClass": {
      "description": "the channel class of the partner (e.g. Web, Mobile, GDS, Wholesaler, OTA)",
      "type": "string",
      "minLength": 1,
      "maxLength": 64
    },
    "reportingChannelType": {
      "description": "the channel type of the partner (e.g. Branded, DirectConnect, HBSI, DerbySoft)",
      "type": "string",
      "minLength": 1,
      "maxLength": 64
    },
    "reportingChannel": {
      "description": "the channel of the partner (e.g. WebIBE, MobileApp, Sabre, Amadeus)",
      "type": "string",
      "minLength": 1,
      "maxLength": 64
    },
    "reportingSubChannel": {
      "description": "the sub-channel of the partner (eg. website name, application name, Booking.com, Agoda)",
      "type": "string",
      "minLength": 1,
      "maxLength": 64
    },
    "ratePlanRes": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ratePlanCommon"
        },
        {
          "type": "object",
          "properties": {
            "packageDetails": {
              "$ref": "#/definitions/packageDetails"
            },
            "bookingMessage": {
              "description": "booking message linked to the rate plan",
              "$ref": "#/definitions/description"
            },
            "isCommissionable": {
              "description": "indicates if this rate is commissionable or not",
              "type": "boolean"
            },
            "priceGridCode": {
              "$ref": "#/definitions/priceGridCode"
            },
            "sellStrategyCode": {
              "$ref": "#/definitions/sellStrategyCode"
            },
            "bookingRestrictions": {
              "$ref": "#/definitions/bookingRestrictions"
            },
            "cdNumber": {
              "$ref": "#/definitions/cdNumber"
            },
            "agencyIdentifiers": {
              "description": "list of travel agency identifiers",
              "$ref": "#/definitions/agencyIdentifiers"
            },
            "isHouseUse": {
              "description": "indicates if this rateplan is house use. House use rate is given for hotel staff/employees",
              "type": "boolean"
            },
            "isComplimentary": {
              "description": "indicates if this rateplan is complimentary. Complimentary rate is given for external guests (for promotional or sales activities or as part of a contract)",
              "type": "boolean"
            },
            "gamingBucket": {
              "$ref": "#/definitions/gamingBucket"
            }
          },
          "title": "RatePlanRes1"
        }
      ],
      "title": "RatePlanRes"
    },
    "priceGridCode": {
      "description": "price grid code",
      "type": "string",
      "pattern": "^[A-Z0-9]{1,50}$",
      "minLength": 1,
      "maxLength": 50
    },
    "sellStrategyCode": {
      "description": "represents the code of the Hotel Sell Strategy taken into account in the process",
      "type": "string",
      "pattern": "^[A-Za-z0-9]{1,7}$",
      "minLength": 1,
      "maxLength": 7
    },
    "promotionRes": {
      "description": "list the promotion",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/promotion"
        },
        {
          "type": "object",
          "properties": {
            "priceGridCode": {
              "$ref": "#/definitions/priceGridCode"
            }
          },
          "title": "PromotionRes1"
        }
      ],
      "title": "PromotionRes"
    },
    "ratePlanCommon": {
      "type": "object",
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/ratePlanCode"
        },
        "types": {
          "description": "list of rate plan type (OTA codes as per RPT OTA list)",
          "$ref": "#/definitions/ratePlanTypes"
        },
        "name": {
          "description": "name of the rate plan",
          "$ref": "#/definitions/DescriptionOfRatePlanAndInventoryType"
        },
        "description": {
          "description": "short description of the rate plan",
          "$ref": "#/definitions/DescriptionOfRatePlanAndInventoryType"
        },
        "longDescription": {
          "description": "long description of the rate plan",
          "$ref": "#/definitions/description"
        },
        "isFreeNight": {
          "description": "indicates if the rate plan is a free night rate plan",
          "type": "boolean"
        },
        "activeDays": {
          "description": "days on which rate plan is active. If not present, the rate plan is active on all days of the week",
          "$ref": "#/definitions/dow"
        },
        "checkinDays": {
          "description": "days on which check-in may be done. If not present, the check-in is possible on all days of the week",
          "$ref": "#/definitions/dow"
        },
        "stayOverDays": {
          "description": "the stay must contain at least one of these days. If not present, there is no restriction on the days that must be contained in the stay",
          "$ref": "#/definitions/dow"
        },
        "advanceBooking": {
          "$ref": "#/definitions/advanceBooking"
        },
        "minLOS": {
          "description": "minimum length of stay applied when checking restrictions",
          "type": "integer"
        },
        "maxLOS": {
          "description": "maximum length of stay applied when checking restrictions",
          "type": "integer"
        },
        "isGroupRatePlan": {
          "description": "indicates if the rate plan requested is a group rate plan or not",
          "type": "boolean",
          "default": false
        },
        "areAmountsConfidential": {
          "description": "indicates if amounts defined in the rate plan are confidential",
          "type": "boolean"
        },
        "isTentativeAllowed": {
          "description": "indicates if a there is a courtesy hold time before booking of the rate. True if the hotel is courtesy hold enabled and the booking period is entirely in the courtesy hold period",
          "type": "boolean"
        },
        "isLoyaltyIdRequired": {
          "description": "indicates if a loyalty number is required",
          "type": "boolean"
        },
        "isPackage": {
          "description": "indicates if the rate plan is a package",
          "type": "boolean"
        },
        "isVoucherRequired": {
          "description": "indicates if a coupon voucher is required",
          "type": "boolean"
        },
        "isRewardEarned": {
          "description": "indicates if booking this rate gives reward points to the customer",
          "type": "boolean"
        },
        "isIdRequired": {
          "description": "indicates if an ID is required at check-in for this rate",
          "type": "boolean"
        },
        "isAwardAccepted": {
          "description": "indicates if payment for this rate can be done totally or partially using reward points",
          "type": "boolean"
        }
      },
      "title": "RatePlanCommon"
    },
    "ratePlanTypes": {
      "description": "list of rate plan type (OTA codes as per RPT OTA list)",
      "type": "array",
      "example": [
        "RPT4",
        "RPT9"
      ],
      "items": {
        "type": "string",
        "description": "rate plan type"
      },
      "title": "RatePlanTypes"
    },
    "promotion": {
      "type": "object",
      "required": [
        "buyNumber",
        "getNumber",
        "maxNumber"
      ],
      "properties": {
        "buyNumber": {
          "description": "buy X",
          "type": "integer"
        },
        "getNumber": {
          "description": "and get Y for free",
          "type": "integer"
        },
        "maxNumber": {
          "description": "with a maximum of Z",
          "type": "integer"
        },
        "amountOff": {
          "description": "flat amount discount (exclusive with percentOff)",
          "type": "string"
        },
        "percentOff": {
          "description": "percent discount (exclusive with amountOff)",
          "type": "string"
        }
      },
      "title": "Promotion"
    },
    "taxInclusionMode": {
      "description": "indicates the tax inclusion's mode defined at rate plan level",
      "type": "string",
      "enum": [
        "included",
        "excluded",
        "followHouse"
      ]
    },
    "advanceBooking": {
      "type": "object",
      "properties": {
        "isAdvancePurchase": {
          "description": "advance Purchase rate indicator",
          "type": "boolean",
          "default": false
        },
        "minDays": {
          "description": "minimum number of days required for advance booking",
          "type": "integer"
        },
        "maxDays": {
          "description": "maximum number of days required for advance booking",
          "type": "integer"
        }
      },
      "title": "AdvanceBooking"
    },
    "bookingRestrictions": {
      "description": "booking restrictions",
      "type": "object",
      "required": [
        "dowRestriction"
      ],
      "properties": {
        "start": {
          "description": "start date of booking restrictions",
          "type": "string",
          "format": "date"
        },
        "end": {
          "description": "end date of booking restrictions",
          "type": "string",
          "format": "date"
        },
        "dowRestriction": {
          "description": "specifies the booking restriction based on days of the week if any",
          "$ref": "#/definitions/dow"
        }
      },
      "title": "BookingRestrictions"
    },
    "packageDetails": {
      "description": "gives the details of the package",
      "type": "object",
      "properties": {
        "overview": {
          "$ref": "#/definitions/description"
        },
        "additionalDetails": {
          "$ref": "#/definitions/description"
        },
        "termsAndConditions": {
          "$ref": "#/definitions/description"
        },
        "themesAndElements": {
          "description": "list of themes and elements",
          "type": "array",
          "items": {
            "$ref": "#/definitions/themeAndElement"
          },
          "title": "PackageDetailsThemesAndElements"
        }
      },
      "title": "PackageDetails"
    },
    "themeAndElement": {
      "type": "object",
      "required": [
        "code",
        "type"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "description": "code of the theme or element"
        },
        "type": {
          "type": "string",
          "enum": [
            "Theme",
            "Element"
          ],
          "description": "specifies the type as Theme or Element"
        },
        "name": {
          "description": "name of the theme or element",
          "$ref": "#/definitions/description"
        },
        "description": {
          "description": "description of the theme/element",
          "$ref": "#/definitions/description"
        }
      },
      "title": "ThemeAndElement"
    },
    "tierMinLos": {
      "description": "at pricing time, if rate plan is using tiered rate, indicates the minimum length of stay of current tier",
      "type": "integer"
    },
    "gamingBucket": {
      "description": "indicates whether the rate plan is used for Comp or Cash flows",
      "type": "string",
      "enum": [
        "Comp",
        "Cash"
      ]
    },
    "hotelReq": {
      "description": "the property info provides the unique identification of the property",
      "type": "object",
      "required": [
        "propertyCode"
      ],
      "properties": {
        "propertyCode": {
          "$ref": "#/definitions/propertyCode"
        },
        "distribInfo": {
          "$ref": "#/definitions/distribInfo"
        }
      },
      "title": "HotelReq"
    },
    "hotelRes": {
      "description": "the property info provides the unique identification of the property",
      "type": "object",
      "required": [
        "propertyCode",
        "chainCode"
      ],
      "properties": {
        "chainCode": {
          "$ref": "#/definitions/propertyChainCode"
        },
        "brandCode": {
          "$ref": "#/definitions/brandCode"
        },
        "propertyCode": {
          "$ref": "#/definitions/propertyCode"
        },
        "isPseudoProperty": {
          "type": "boolean",
          "description": "indicates that the property code used by channel to create the reservation was a pseudo property code"
        },
        "propertyCurrency": {
          "$ref": "#/definitions/currency"
        },
        "propertyName": {
          "$ref": "#/definitions/propertyName"
        },
        "masterPropertyCode": {
          "$ref": "#/definitions/propertyCode",
          "description": "indicates the master property code. Visible only when the property code used by channel to create reservation is pseudo property code"
        },
        "masterPropertyName": {
          "$ref": "#/definitions/propertyName",
          "description": "name of the master property. Visible only when the property code used by channel to create reservation is pseudo property code"
        },
        "cityCode": {
          "$ref": "#/definitions/cityCode"
        },
        "countryCode": {
          "$ref": "#/definitions/countryCode"
        },
        "regionCode": {
          "$ref": "#/definitions/regionCode"
        },
        "marketingLines": {
          "description": "confirmation text returned at booking and modification time, only if the channel is authorized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/marketingLine"
          },
          "title": "HotelResMarketingLines"
        },
        "guestTypeDefinitions": {
          "description": "all applicable Property Guest Type set-up",
          "type": "array",
          "items": {
            "$ref": "#/definitions/guestTypeDefinition"
          },
          "title": "HotelResGuestTypeDefinitions"
        },
        "freeGuestsDefinitions": {
          "description": "list of free guests definitions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/freeGuestsDefinition"
          },
          "title": "HotelResFreeGuestsDefinitions"
        },
        "distribInfo": {
          "description": "distributed property information coming from vendor channel",
          "$ref": "#/definitions/distribInfo"
        },
        "salesLedgerArea": {
          "$ref": "#/definitions/salesLedgerArea"
        }
      },
      "title": "HotelRes"
    },
    "migHotel": {
      "description": "the property info provides the unique identification of the property",
      "type": "object",
      "required": [
        "propertyCode",
        "propertyCurrency"
      ],
      "properties": {
        "brandCode": {
          "$ref": "#/definitions/brandCode"
        },
        "isPseudoProperty": {
          "type": "boolean",
          "description": "indicates that the property code used by channel to create the reservation was a pseudo property code"
        },
        "propertyCode": {
          "$ref": "#/definitions/propertyCode"
        },
        "propertyCurrency": {
          "$ref": "#/definitions/currency"
        },
        "propertyName": {
          "$ref": "#/definitions/propertyName"
        },
        "masterPropertyCode": {
          "$ref": "#/definitions/propertyCode",
          "description": "indicates the master property code. Visible only when the property code used by channel to create reservation is pseudo property code"
        },
        "masterPropertyName": {
          "$ref": "#/definitions/propertyName",
          "description": "name of the master property. Visible only when the property code used by channel to create reservation is pseudo property code"
        },
        "cityCode": {
          "$ref": "#/definitions/cityCode"
        },
        "distribInfo": {
          "$ref": "#/definitions/distribInfo"
        },
        "guestTypeDefinitions": {
          "description": "all applicable Property Guest Type set-up",
          "type": "array",
          "items": {
            "$ref": "#/definitions/guestTypeDefinition"
          },
          "title": "MigHotelGuestTypeDefinitions"
        },
        "freeGuestsDefinitions": {
          "description": "list of free guests definitions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/freeGuestsDefinition"
          },
          "title": "MigHotelFreeGuestsDefinitions"
        }
      },
      "title": "MigHotel"
    },
    "hotelSearchRes": {
      "description": "the property info provides the unique identification of the property",
      "type": "object",
      "required": [
        "propertyCode",
        "chainCode"
      ],
      "properties": {
        "chainCode": {
          "$ref": "#/definitions/propertyChainCode"
        },
        "brandCode": {
          "$ref": "#/definitions/brandCode"
        },
        "isPseudoProperty": {
          "type": "boolean",
          "description": "indicates that the property code used by channel to create the reservation was a pseudo property code"
        },
        "propertyCode": {
          "$ref": "#/definitions/propertyCode"
        },
        "propertyCurrency": {
          "$ref": "#/definitions/currency"
        },
        "masterPropertyCode": {
          "$ref": "#/definitions/propertyCode",
          "description": "indicates the master property code. Visible only when the property code used by channel to create reservation is pseudo property code"
        },
        "masterPropertyName": {
          "$ref": "#/definitions/propertyName",
          "description": "name of the master property. Visible only when the property code used by channel to create reservation is pseudo property code"
        }
      },
      "title": "HotelSearchRes"
    },
    "propertyCode": {
      "description": "the property code",
      "type": "string",
      "pattern": "^[A-Z0-9]{1,10}$",
      "minLength": 1,
      "maxLength": 10
    },
    "distribInfo": {
      "description": "distributed property information coming from vendor channel",
      "type": "object",
      "properties": {
        "chainCode": {
          "description": "chain code of the property booked as it is distributed on vendor channel",
          "type": "string",
          "maxLength": 3
        },
        "cityCode": {
          "description": "city code of the property booked as it is distributed on vendor channel",
          "type": "string",
          "maxLength": 5
        },
        "propertyCode": {
          "description": "property code of the property booked as it is distributed on vendor channel",
          "type": "string",
          "maxLength": 10
        }
      },
      "title": "DistribInfo"
    },
    "marketingLine": {
      "description": "confirmation text returned at booking and modification time, only if the channel is authorized",
      "type": "object",
      "required": [
        "description"
      ],
      "properties": {
        "description": {
          "$ref": "#/definitions/description"
        }
      },
      "title": "MarketingLine"
    },
    "salesLedgerArea": {
      "description": "hotels sharing the same account line are considered to be of the same SalesLedgerArea. This is a location",
      "type": "string"
    },
    "guestTypeDefinition": {
      "description": "the applicable Property Guest Type set-up",
      "type": "object",
      "required": [
        "code",
        "startAge"
      ],
      "properties": {
        "code": {
          "type": "string",
          "description": "guest Type Code",
          "pattern": "^[A-Z0-9_]{2,8}$",
          "example": "ADULT"
        },
        "otaCodes": {
          "type": "array",
          "title": "GuestTypeDefinitionOtaCodes",
          "description": "the list of OTA AQC codes associated to the Guest Type. The same OTA AQC code cannot be used in more than one Guest Type",
          "example": [
            "AQC1",
            "AQC3",
            "AQC19"
          ],
          "items": {
            "type": "string",
            "enum": [
              "AQC1",
              "AQC2",
              "AQC3",
              "AQC4",
              "AQC5",
              "AQC6",
              "AQC7",
              "AQC8",
              "AQC9",
              "AQC10",
              "AQC11",
              "AQC12",
              "AQC13",
              "AQC14",
              "AQC15",
              "AQC16",
              "AQC17",
              "AQC18",
              "AQC19"
            ]
          }
        },
        "startAge": {
          "type": "integer",
          "description": "start age of the range",
          "example": 0
        },
        "endAge": {
          "type": "integer",
          "description": "end age of the range. If no end age is specified the age range is considered up to infinite",
          "example": 18
        },
        "description": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "description": "textual description of the Property Guest Type",
          "example": "Child guest type, covering age from 0 to 18"
        }
      },
      "title": "GuestTypeDefinition"
    },
    "freeGuestsDefinition": {
      "type": "object",
      "required": [
        "pricePlanCodes",
        "freeGuestsByType"
      ],
      "properties": {
        "pricePlanCodes": {
          "type": "array",
          "description": "price plan code(s) to which the free Guest Definition item apply",
          "items": {
            "$ref": "#/definitions/pricePlanCode"
          },
          "title": "FreeGuestsDefinitionPricePlanCodes"
        },
        "maxFreeGuests": {
          "type": "integer",
          "description": "indicates the overall maximum number of free guests"
        },
        "freeGuestsByType": {
          "description": "indicates the maximum number of free guests by type",
          "type": "array",
          "items": {
            "$ref": "#/definitions/guestsByType"
          },
          "title": "FreeGuestsDefinitionFreeGuestsByType"
        }
      },
      "title": "FreeGuestsDefinition"
    },
    "guestsByType": {
      "type": "object",
      "required": [
        "guestType",
        "count"
      ],
      "description": "count per guestType",
      "properties": {
        "guestType": {
          "type": "string",
          "description": "guest type code",
          "pattern": "^[A-Z0-9_]{2,8}$",
          "example": "CHILD"
        },
        "count": {
          "description": "number of guest",
          "type": "integer"
        }
      },
      "title": "GuestsByType"
    },
    "pricePlanCode": {
      "description": "price plan code",
      "type": "string",
      "pattern": "^[A-Z0-9]{2,50}$",
      "minLength": 2,
      "maxLength": 50
    },
    "product": {
      "description": "product details",
      "type": "object",
      "required": [
        "inventoryTypeCode",
        "inventoryTypeName",
        "productCode"
      ],
      "properties": {
        "inventoryTypeCode": {
          "$ref": "#/definitions/inventoryTypeCode"
        },
        "otaCode": {
          "$ref": "#/definitions/otaCode"
        },
        "inventoryTypeName": {
          "description": "name of the inventory Type (short description)",
          "$ref": "#/definitions/DescriptionOfRatePlanAndInventoryType"
        },
        "productClass": {
          "description": "product parent class both for sleeping room and non-room products",
          "type": "string",
          "minLength": 1,
          "maxLength": 64
        },
        "yieldClass": {
          "description": "the RMS yield class for sleeping room",
          "type": "string",
          "minLength": 1,
          "maxLength": 64
        },
        "maximumNumberParticipant": {
          "description": "maximum allowed number of participants for this inventory Item (extra participants included)",
          "type": "integer"
        },
        "extraPersonStart": {
          "$ref": "#/definitions/extraPersonStart"
        },
        "description": {
          "description": "description of the inventory Item",
          "$ref": "#/definitions/DescriptionOfRatePlanAndInventoryType"
        },
        "productCode": {
          "$ref": "#/definitions/productCode"
        },
        "pacCode": {
          "$ref": "#/definitions/pacCode"
        },
        "productName": {
          "description": "name of the product",
          "type": "string",
          "minLength": 1,
          "maxLength": 64
        },
        "attributeCodes": {
          "description": "list of attribute codes composing the requested product",
          "type": "array",
          "items": {
            "$ref": "#/definitions/attributeCode"
          },
          "title": "ProductAttributeCodes"
        }
      },
      "title": "Product"
    },
    "extraPersonStart": {
      "type": "integer",
      "description": "indicates when an extra person charge is applicable to the guest. For instance, if the value is set to 2 and a guest makes a reservation for 2 people then an extra charge will be applied for the second person",
      "minimum": 2
    },
    "otaCode": {
      "description": "community code of the product type [OTA]",
      "type": "string",
      "pattern": "^[A-Z0-9]{3,8}$",
      "minLength": 3,
      "maxLength": 8
    },
    "productCode": {
      "type": "string",
      "pattern": "^.*$",
      "description": "code defining the product (Sleeping room, meeting room or any service)",
      "example": "SR"
    },
    "attribute": {
      "type": "object",
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/attributeCode"
        },
        "name": {
          "description": "name of the attribute",
          "$ref": "#/definitions/description"
        },
        "description": {
          "description": "description of the attribute",
          "$ref": "#/definitions/description"
        }
      },
      "title": "Attribute"
    },
    "attributeCode": {
      "description": "code of the attribute",
      "type": "string",
      "pattern": "^[A-Z0-9]{1,8}$",
      "minLength": 1,
      "maxLength": 8,
      "example": "RVT25"
    },
    "guestsReq": {
      "description": "list of user profiles, at least one is mandatory for a 1 step",
      "type": "array",
      "maxItems": 300,
      "items": {
        "type": "object",
        "title": "GuestsReqItem",
        "required": [
          "personName"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "identifies a guest within the reservation. This id (unique for each guest) can be used to cross-referenced a guest from the segmentHolderId, bookerId or guestOccIds"
          },
          "age": {
            "$ref": "#/definitions/age"
          },
          "identificationInfo": {
            "$ref": "#/definitions/identificationInfo"
          },
          "personName": {
            "$ref": "#/definitions/personName"
          },
          "nativeInformation": {
            "$ref": "#/definitions/guestNativeInformation"
          },
          "guestProfileId": {
            "$ref": "#/definitions/guestProfileId"
          },
          "externalProfileIds": {
            "description": "guest profile id received from external system",
            "type": "array",
            "items": {
              "$ref": "#/definitions/externalProfileId"
            },
            "title": "GuestsReqItemExternalProfileIds"
          },
          "addresses": {
            "type": "array",
            "maxItems": 99,
            "description": "list of addresses",
            "items": {
              "$ref": "#/definitions/addressWithoutIndex"
            },
            "title": "GuestsReqItemAddresses"
          },
          "telephones": {
            "type": "array",
            "maxItems": 99,
            "description": "list of telephones and fax",
            "items": {
              "$ref": "#/definitions/telephone"
            },
            "title": "GuestsReqItemTelephones"
          },
          "emails": {
            "type": "array",
            "maxItems": 2,
            "description": "list of emails",
            "items": {
              "$ref": "#/definitions/email"
            },
            "title": "GuestsReqItemEmails"
          },
          "loyaltyProgram": {
            "$ref": "#/definitions/loyaltyProgram"
          },
          "frequentTraveller": {
            "$ref": "#/definitions/frequentTraveller"
          },
          "nextDestination": {
            "$ref": "#/definitions/nextDestination"
          },
          "customData": {
            "$ref": "#/definitions/customData",
            "description": "all data under customData are stored in the reservation and returned in the response and retrieve. Any valid Json object is accepted"
          },
          "nationalities": {
            "description": "indicates the guest nationality using the ISO 3166-1 alpha-3 standard code for countries, territories or areas",
            "type": "array",
            "items": {
              "$ref": "#/definitions/nationality"
            },
            "title": "GuestsReqItemNationalities"
          },
          "contactPerson": {
            "$ref": "#/definitions/contactPerson",
            "description": "container for guest contact person information. It consists the details of the person related to the guest"
          },
          "isVip": {
            "$ref": "#/definitions/isVip"
          },
          "additionalMembershipPrograms": {
            "description": "list of additional membership programs of the guest",
            "type": "array",
            "minItems": 1,
            "maxItems": 30,
            "items": {
              "$ref": "#/definitions/additionalMembershipProgram"
            },
            "title": "GuestsReqItemAdditionalMembershipPrograms"
          }
        }
      },
      "title": "GuestsReq"
    },
    "contactPerson": {
      "description": "container for guest contact person information",
      "type": "object",
      "required": [
        "relation",
        "personName"
      ],
      "properties": {
        "relation": {
          "description": "define the relation between the guest and its contact name (business or personal contact)",
          "example": "Parent",
          "type": "string",
          "pattern": "^.*$",
          "minLength": 1,
          "maxLength": 32
        },
        "personName": {
          "$ref": "#/definitions/contactPersonName"
        }
      },
      "title": "ContactPerson"
    },
    "contactPersonName": {
      "description": "container for guest person name details",
      "type": "object",
      "required": [
        "surname"
      ],
      "properties": {
        "namePrefix": {
          "$ref": "#/definitions/contactNamePrefix"
        },
        "givenName": {
          "$ref": "#/definitions/contactGivenName"
        },
        "surname": {
          "$ref": "#/definitions/contactSurname"
        }
      },
      "title": "ContactPersonName"
    },
    "contactNamePrefix": {
      "description": "name prefix",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 16
    },
    "contactGivenName": {
      "description": "first name",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 64
    },
    "contactSurname": {
      "description": "last name",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 64
    },
    "guestsPendingReq": {
      "description": "List of user profiles, at least one is mandatory for a 1 step",
      "type": "array",
      "maxItems": 300,
      "items": {
        "type": "object",
        "title": "GuestsPendingReqItem",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Identifies a guest within the reservation. This id (unique for each guest) can be used to cross-referenced a guest from the segmentHolderId, bookerId or guestOccIds."
          },
          "age": {
            "$ref": "#/definitions/age"
          },
          "identificationInfo": {
            "$ref": "#/definitions/identificationInfo"
          },
          "personName": {
            "$ref": "#/definitions/personNamePending"
          },
          "nativeInformation": {
            "$ref": "#/definitions/guestNativeInformation"
          },
          "guestProfileId": {
            "$ref": "#/definitions/guestProfileId"
          },
          "externalProfileIds": {
            "description": "Guest profile id received from external system",
            "type": "array",
            "items": {
              "$ref": "#/definitions/externalProfileId"
            },
            "title": "GuestsPendingReqItemExternalProfileIds"
          },
          "addresses": {
            "type": "array",
            "maxItems": 99,
            "description": "List of addresses",
            "items": {
              "$ref": "#/definitions/addressWithoutIndex"
            },
            "title": "GuestsPendingReqItemAddresses"
          },
          "telephones": {
            "type": "array",
            "maxItems": 99,
            "description": "List of telephones and fax",
            "items": {
              "$ref": "#/definitions/telephone"
            },
            "title": "GuestsPendingReqItemTelephones"
          },
          "emails": {
            "type": "array",
            "maxItems": 2,
            "description": "List of emails",
            "items": {
              "$ref": "#/definitions/email"
            },
            "title": "GuestsPendingReqItemEmails"
          },
          "loyaltyProgram": {
            "$ref": "#/definitions/loyaltyProgram"
          },
          "frequentTraveller": {
            "$ref": "#/definitions/frequentTraveller"
          },
          "nextDestination": {
            "$ref": "#/definitions/nextDestination"
          },
          "customData": {
            "$ref": "#/definitions/customData"
          },
          "nationalities": {
            "description": "indicates the guest nationality using the ISO 3166-1 alpha-3 standard code for countries, territories or areas",
            "type": "array",
            "items": {
              "$ref": "#/definitions/nationality"
            },
            "title": "GuestsPendingReqItemNationalities"
          },
          "contactPerson": {
            "$ref": "#/definitions/contactPerson"
          },
          "isVip": {
            "$ref": "#/definitions/isVip"
          },
          "additionalMembershipPrograms": {
            "description": "list of additional membership programs of the guest",
            "type": "array",
            "minItems": 1,
            "maxItems": 30,
            "items": {
              "$ref": "#/definitions/additionalMembershipProgram"
            },
            "title": "GuestsPendingReqItemAdditionalMembershipPrograms"
          }
        }
      },
      "title": "GuestsPendingReq"
    },
    "guestsRes": {
      "description": "list of user profiles, at least one is mandatory for a 1 step",
      "type": "array",
      "items": {
        "type": "object",
        "title": "GuestsResItem",
        "required": [
          "id",
          "personName"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "identifies a guest within the reservation. This id (unique for each guest) can be used to cross-referenced a guest from the segmentHolderId, bookerId or guestOccIds."
          },
          "age": {
            "$ref": "#/definitions/age"
          },
          "identificationInfo": {
            "$ref": "#/definitions/identificationInfo"
          },
          "personName": {
            "$ref": "#/definitions/personName"
          },
          "nativeInformation": {
            "$ref": "#/definitions/guestNativeInformation"
          },
          "guestProfileId": {
            "$ref": "#/definitions/guestProfileId"
          },
          "externalProfileIds": {
            "description": "guest profile id received from external system",
            "type": "array",
            "items": {
              "$ref": "#/definitions/externalProfileId"
            },
            "title": "GuestsResItemExternalProfileIds"
          },
          "addresses": {
            "type": "array",
            "description": "list of addresses",
            "items": {
              "$ref": "#/definitions/addressWithoutIndex"
            },
            "title": "GuestsResItemAddresses"
          },
          "telephones": {
            "type": "array",
            "description": "list of telephones and fax",
            "items": {
              "$ref": "#/definitions/telephone"
            },
            "title": "GuestsResItemTelephones"
          },
          "emails": {
            "type": "array",
            "maxItems": 2,
            "description": "list of emails",
            "items": {
              "$ref": "#/definitions/email"
            },
            "title": "GuestsResItemEmails"
          },
          "loyaltyProgram": {
            "description": "loyalty program of the guests with hotel provider",
            "$ref": "#/definitions/loyaltyProgram"
          },
          "frequentTraveller": {
            "description": "loyalty program of the guests with an airline",
            "$ref": "#/definitions/frequentTraveller"
          },
          "nextDestination": {
            "$ref": "#/definitions/nextDestination"
          },
          "customData": {
            "$ref": "#/definitions/customData",
            "description": "all data under customData are stored in the reservation and returned in the response and retrieve. Any valid Json object is accepted"
          },
          "nationalities": {
            "description": "indicates the guest nationality using the ISO 3166-1 alpha-3 standard code for countries, territories or areas",
            "type": "array",
            "items": {
              "$ref": "#/definitions/nationality"
            },
            "title": "GuestsResItemNationalities"
          },
          "contactPerson": {
            "$ref": "#/definitions/contactPerson",
            "description": "container for guest contact person information. It consists the details of the person related to the guest"
          },
          "isSelfLimiting": {
            "$ref": "#/definitions/isSelfLimiting"
          },
          "guestProfileStatus": {
            "$ref": "#/definitions/guestProfileStatus"
          },
          "profileNotFound": {
            "$ref": "#/definitions/profileNotFound"
          },
          "discrepancyFound": {
            "$ref": "#/definitions/discrepancyFound"
          },
          "discrepancyReason": {
            "$ref": "#/definitions/discrepancyReason",
            "description": "list of fields separated by comma which has discrepancy"
          },
          "isVip": {
            "$ref": "#/definitions/isVip"
          },
          "additionalMembershipPrograms": {
            "description": "list of additional membership programs of the guest",
            "type": "array",
            "minItems": 1,
            "maxItems": 30,
            "items": {
              "$ref": "#/definitions/additionalMembershipProgram"
            },
            "title": "GuestsResItemAdditionalMembershipPrograms"
          }
        }
      },
      "title": "GuestsRes"
    },
    "guestsPendingRes": {
      "description": "List of user profiles, at least one is mandatory for a 1 step",
      "type": "array",
      "items": {
        "type": "object",
        "title": "GuestsPendingResItem",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Identifies a guest within the reservation. This id (unique for each guest) can be used to cross-referenced a guest from the segmentHolderId, bookerId or guestOccIds."
          },
          "age": {
            "$ref": "#/definitions/age"
          },
          "identificationInfo": {
            "$ref": "#/definitions/identificationInfo"
          },
          "personName": {
            "$ref": "#/definitions/personNamePending"
          },
          "nativeInformation": {
            "$ref": "#/definitions/guestNativeInformation"
          },
          "guestProfileId": {
            "$ref": "#/definitions/guestProfileId"
          },
          "externalProfileIds": {
            "description": "Guest profile id received from external system",
            "type": "array",
            "items": {
              "$ref": "#/definitions/externalProfileId"
            },
            "title": "GuestsPendingResItemExternalProfileIds"
          },
          "addresses": {
            "type": "array",
            "description": "List of addresses",
            "items": {
              "$ref": "#/definitions/addressWithoutIndex"
            },
            "title": "GuestsPendingResItemAddresses"
          },
          "telephones": {
            "type": "array",
            "description": "List of telephones and fax",
            "items": {
              "$ref": "#/definitions/telephone"
            },
            "title": "GuestsPendingResItemTelephones"
          },
          "emails": {
            "type": "array",
            "maxItems": 2,
            "description": "List of emails",
            "items": {
              "$ref": "#/definitions/email"
            },
            "title": "GuestsPendingResItemEmails"
          },
          "loyaltyProgram": {
            "description": "Loyalty program of the guests with hotel provider",
            "$ref": "#/definitions/loyaltyProgram"
          },
          "frequentTraveller": {
            "description": "Loyalty program of the guests with an airline",
            "$ref": "#/definitions/frequentTraveller"
          },
          "nextDestination": {
            "$ref": "#/definitions/nextDestination"
          },
          "customData": {
            "$ref": "#/definitions/customData"
          },
          "nationalities": {
            "description": "indicates the guest nationality using the ISO 3166-1 alpha-3 standard code for countries, territories or areas",
            "type": "array",
            "items": {
              "$ref": "#/definitions/nationality"
            },
            "title": "GuestsPendingResItemNationalities"
          },
          "contactPerson": {
            "$ref": "#/definitions/contactPerson"
          },
          "isVip": {
            "$ref": "#/definitions/isVip"
          },
          "additionalMembershipPrograms": {
            "description": "list of additional membership programs of the guest",
            "type": "array",
            "minItems": 1,
            "maxItems": 30,
            "items": {
              "$ref": "#/definitions/additionalMembershipProgram"
            },
            "title": "GuestsPendingResItemAdditionalMembershipPrograms"
          }
        }
      },
      "title": "GuestsPendingRes"
    },
    "guestsHistoryRes": {
      "description": "List of user profiles, at least one is mandatory for a 1 step",
      "type": "array",
      "items": {
        "type": "object",
        "title": "GuestsHistoryResItem",
        "required": [
          "id",
          "personName"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Identifies a guest within the reservation. This id (unique for each guest) can be used to cross-referenced a guest from the segmentHolderId, bookerId or guestOccIds."
          },
          "age": {
            "$ref": "#/definitions/age"
          },
          "personName": {
            "$ref": "#/definitions/personName"
          },
          "guestProfileId": {
            "$ref": "#/definitions/guestProfileId"
          },
          "addresses": {
            "type": "array",
            "description": "List of addresses",
            "items": {
              "$ref": "#/definitions/addressWithoutIndex"
            },
            "title": "GuestsHistoryResItemAddresses"
          },
          "telephones": {
            "type": "array",
            "description": "List of telephones and fax",
            "items": {
              "$ref": "#/definitions/telephone"
            },
            "title": "GuestsHistoryResItemTelephones"
          },
          "emails": {
            "type": "array",
            "maxItems": 2,
            "description": "List of emails",
            "items": {
              "$ref": "#/definitions/email"
            },
            "title": "GuestsHistoryResItemEmails"
          },
          "loyaltyProgram": {
            "$ref": "#/definitions/loyaltyProgram"
          },
          "externalProfileIds": {
            "description": "Guest profile id received from external system",
            "type": "array",
            "items": {
              "$ref": "#/definitions/externalProfileId"
            },
            "title": "GuestsHistoryResItemExternalProfileIds"
          },
          "isSelfLimiting": {
            "$ref": "#/definitions/isSelfLimiting"
          },
          "guestProfileStatus": {
            "$ref": "#/definitions/guestProfileStatus"
          },
          "profileNotFound": {
            "$ref": "#/definitions/profileNotFound"
          },
          "discrepancyFound": {
            "$ref": "#/definitions/discrepancyFound"
          },
          "discrepancyReason": {
            "$ref": "#/definitions/discrepancyReason",
            "description": "List of fields separated by comma which has discrepancy"
          },
          "isVip": {
            "$ref": "#/definitions/isVip"
          },
          "additionalMembershipPrograms": {
            "description": "list of additional membership programs of the guest",
            "type": "array",
            "minItems": 1,
            "maxItems": 30,
            "items": {
              "$ref": "#/definitions/additionalMembershipProgram"
            },
            "title": "GuestsHistoryResItemAdditionalMembershipPrograms"
          }
        }
      },
      "title": "GuestsHistoryRes"
    },
    "guestsSearchRes": {
      "description": "list of user profiles, at least one is mandatory for a 1 step",
      "type": "array",
      "items": {
        "type": "object",
        "title": "GuestsSearchResItem",
        "required": [
          "id",
          "personName"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "identifies a guest within the reservation. This id (unique for each guest) can be used to cross-referenced a guest from the segmentHolderId, bookerId or guestOccIds"
          },
          "age": {
            "$ref": "#/definitions/age"
          },
          "personName": {
            "$ref": "#/definitions/personName"
          },
          "nativeInformation": {
            "$ref": "#/definitions/guestNativeInformationSearch"
          },
          "guestProfileId": {
            "$ref": "#/definitions/guestProfileId"
          },
          "externalProfileIds": {
            "description": "guest profile id received from external system",
            "type": "array",
            "items": {
              "$ref": "#/definitions/externalProfileId"
            },
            "title": "GuestsSearchResItemExternalProfileIds"
          },
          "emails": {
            "type": "array",
            "maxItems": 2,
            "description": "list of email addresses of the guest or the booker",
            "items": {
              "$ref": "#/definitions/email"
            },
            "title": "GuestsSearchResItemEmails"
          },
          "loyaltyProgram": {
            "description": "loyalty program of the guests with hotel provider",
            "$ref": "#/definitions/loyaltyProgram"
          },
          "isSelfLimiting": {
            "$ref": "#/definitions/isSelfLimiting"
          },
          "guestProfileStatus": {
            "$ref": "#/definitions/guestProfileStatus"
          },
          "isVip": {
            "$ref": "#/definitions/isVip"
          },
          "additionalMembershipPrograms": {
            "description": "list of additional membership programs of the guest",
            "type": "array",
            "minItems": 1,
            "maxItems": 30,
            "items": {
              "$ref": "#/definitions/additionalMembershipProgram"
            },
            "title": "GuestsSearchResItemAdditionalMembershipPrograms"
          }
        }
      },
      "title": "GuestsSearchRes"
    },
    "guestProfileId": {
      "description": "guest identifier on the profile system",
      "type": "string",
      "pattern": "^.*$",
      "maxLength": 36
    },
    "guestNativeInformationSearch": {
      "description": "contains the information of the guest in native language (non-ASCII characters allowed)",
      "type": "object",
      "required": [
        "language"
      ],
      "properties": {
        "language": {
          "$ref": "#/definitions/language"
        },
        "personName": {
          "description": "container for structured details of the guest name in native language (non-ASCII characters allowed)",
          "$ref": "#/definitions/personName"
        }
      },
      "title": "GuestNativeInformationSearch"
    },
    "guestNativeInformation": {
      "description": "contains the information of the guest in native language (non-ASCII characters allowed)",
      "type": "object",
      "required": [
        "language"
      ],
      "properties": {
        "language": {
          "$ref": "#/definitions/language"
        },
        "addresses": {
          "type": "array",
          "maxItems": 99,
          "description": "list of addresses in native language (non-ASCII characters allowed)",
          "items": {
            "$ref": "#/definitions/addressWithoutIndex"
          },
          "title": "GuestNativeInformationAddresses"
        },
        "personName": {
          "description": "container for structured details of the guest name in native language (non-ASCII characters allowed)",
          "title": "personName",
          "$ref": "#/definitions/personName"
        }
      },
      "title": "GuestNativeInformation"
    },
    "age": {
      "description": "identifies the age of the user within the reservation",
      "type": "integer"
    },
    "identificationInfo": {
      "description": "container for structured details of identification information",
      "type": "array",
      "maxItems": 20,
      "items": {
        "type": "object",
        "title": "IdentificationInfoItem",
        "properties": {
          "type": {
            "description": "type of identity document",
            "enum": [
              "PASSPORT",
              "DRIVER_LICENSE",
              "IDENTITY_CARD",
              "POLICE_WARRANT_CARD"
            ],
            "example": "PASSPORT",
            "type": "string"
          },
          "number": {
            "type": "string",
            "example": "QFU514563221J",
            "pattern": "^[a-zA-Z0-9]{1,50}$",
            "description": "number of the identity document"
          },
          "issuanceLocation": {
            "type": "string",
            "description": "a more precise information concerning the place where the document has been issued such as state, department or a city name (e.g. New-York)",
            "minLength": 2,
            "maxLength": 50,
            "example": "New-York"
          },
          "issuanceCountry": {
            "type": "string",
            "description": "country code using ISO 3166-1 standard",
            "pattern": "^[a-zA-Z]{2}$",
            "minLength": 2,
            "maxLength": 2,
            "example": "BR"
          }
        }
      },
      "title": "IdentificationInfo"
    },
    "personName": {
      "description": "container for structured details of the guest name",
      "type": "object",
      "required": [
        "givenName",
        "surname"
      ],
      "properties": {
        "namePrefix": {
          "$ref": "#/definitions/namePrefix"
        },
        "givenName": {
          "$ref": "#/definitions/givenName"
        },
        "surname": {
          "$ref": "#/definitions/surname"
        },
        "middleName": {
          "$ref": "#/definitions/middleName"
        },
        "nameSuffix": {
          "$ref": "#/definitions/nameSuffix"
        },
        "title": {
          "$ref": "#/definitions/title"
        }
      },
      "title": "PersonName"
    },
    "personNamePending": {
      "description": "container for structured details of the guest name",
      "type": "object",
      "properties": {
        "namePrefix": {
          "$ref": "#/definitions/namePrefix"
        },
        "givenName": {
          "$ref": "#/definitions/givenName"
        },
        "surname": {
          "$ref": "#/definitions/surname"
        },
        "middleName": {
          "$ref": "#/definitions/middleName"
        },
        "nameSuffix": {
          "$ref": "#/definitions/nameSuffix"
        },
        "title": {
          "$ref": "#/definitions/title"
        }
      },
      "title": "PersonNamePending"
    },
    "nextDestination": {
      "description": "next destination of the guest",
      "type": "string",
      "maxLength": 100
    },
    "namePrefix": {
      "description": "name prefix",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 9
    },
    "nameSuffix": {
      "description": "name suffix",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 9
    },
    "givenName": {
      "description": "first name",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 56
    },
    "surname": {
      "description": "last name",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 57
    },
    "middleName": {
      "description": "middle name",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 56
    },
    "title": {
      "description": "title. It is a free text and can take any value",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 20
    },
    "nationality": {
      "description": "indicates the guest nationality using the ISO 3166-1 alpha-3 standard code for countries, territories or areas",
      "type": "string",
      "pattern": "^[A-Za-z]{2,3}$",
      "minLength": 2,
      "maxLength": 3,
      "example": "BR"
    },
    "isSelfLimiting": {
      "description": "indicates the guest has opted to self limit",
      "type": "boolean"
    },
    "guestProfileStatus": {
      "description": "status of the guest in the profile system",
      "type": "string",
      "enum": [
        "Active",
        "Inactive"
      ]
    },
    "isVip": {
      "description": "indicates if a guest is a VIP",
      "type": "boolean"
    },
    "segmentReq": {
      "description": "List of segments",
      "type": "array",
      "items": {
        "type": "object",
        "title": "SegmentReqItem",
        "required": [
          "propertyCode",
          "offer"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Identify the segment inside the reservation all along the reservation life."
          },
          "synchroNumber": {
            "$ref": "#/definitions/synchroNumber"
          },
          "externalSegmentId": {
            "type": "integer",
            "description": "Used to identify a segment on external booking engines/GDS side."
          },
          "segmentStatus": {
            "$ref": "#/definitions/segmentStatus"
          },
          "segmentPmsStatus": {
            "$ref": "#/definitions/segmentPmsStatusReq"
          },
          "segmentHolderId": {
            "$ref": "#/definitions/segmentHolderId"
          },
          "bookerId": {
            "$ref": "#/definitions/bookerId"
          },
          "parentId": {
            "$ref": "#/definitions/parentId"
          },
          "indicators": {
            "$ref": "#/definitions/indicatorsReq"
          },
          "option": {
            "$ref": "#/definitions/option"
          },
          "propertyCode": {
            "$ref": "#/definitions/propertyCode"
          },
          "creator": {
            "description": "Contains the details of the channel which created the reservation. If provided in the payload, will be stored in the reservation. The channel headers must still be provided to perform the permissions check.",
            "$ref": "#/definitions/pointOfSale"
          },
          "owner": {
            "description": "Agency which owns the segment. This is the agency whose IATA number is used for guarantee, and also the agency who is commissioned for the segment. If provided in the payload, will be stored in the reservation instead of the information from the Ama-Reservation-Owner header.",
            "$ref": "#/definitions/reservationOwner"
          },
          "corporateAccountInfo": {
            "$ref": "#/definitions/corporateAccountInfoReq"
          },
          "offer": {
            "$ref": "#/definitions/offerReq"
          },
          "formOfPayment": {
            "$ref": "#/definitions/formOfPaymentReq"
          },
          "specialRequests": {
            "type": "array",
            "description": "List the special requests",
            "maxItems": 100,
            "items": {
              "$ref": "#/definitions/specialRequestsReq"
            },
            "title": "SegmentReqItemSpecialRequests"
          },
          "serviceRequests": {
            "type": "array",
            "description": "List the service requests",
            "maxItems": 25,
            "items": {
              "$ref": "#/definitions/serviceRequests"
            },
            "title": "SegmentReqItemServiceRequests"
          },
          "traces": {
            "type": "array",
            "description": "Traces allow to generate tasks that require fulfillment, which can be associated to a particular department. e.g. \"Review deposits\"",
            "minItems": 1,
            "maxItems": 100,
            "items": {
              "$ref": "#/definitions/traces"
            },
            "title": "SegmentReqItemTraces"
          },
          "alerts": {
            "type": "array",
            "description": "Alerts are PMS functionality which can be pre-configured. They include screen and printer notification. e.g. \"VIP guest\"",
            "minItems": 1,
            "maxItems": 100,
            "items": {
              "$ref": "#/definitions/alerts"
            },
            "title": "SegmentReqItemAlerts"
          },
          "arrivalTime": {
            "$ref": "#/definitions/arrivalTime"
          },
          "departureTime": {
            "$ref": "#/definitions/departureTime"
          },
          "arrivalTransport": {
            "$ref": "#/definitions/transportation"
          },
          "departureTransport": {
            "$ref": "#/definitions/transportation"
          },
          "language": {
            "$ref": "#/definitions/language"
          },
          "comments": {
            "type": "array",
            "description": "comment details of corresponding segment. It describes the type, language and text of comments",
            "items": {
              "$ref": "#/definitions/comment"
            },
            "title": "SegmentReqItemComments"
          },
          "customData": {
            "$ref": "#/definitions/customData"
          },
          "travelPurpose": {
            "$ref": "#/definitions/travelPurpose"
          },
          "arrivalAmenities": {
            "type": "array",
            "description": "List of loyalty arrival amenity codes selected by the loyalty guest",
            "maxItems": 50,
            "items": {
              "$ref": "#/definitions/ArrivalAmenity"
            },
            "title": "SegmentReqItemArrivalAmenities"
          },
          "cancellationReasons": {
            "type": "array",
            "maxItems": 10,
            "items": {
              "$ref": "#/definitions/cancellationReason"
            },
            "title": "SegmentReqItemCancellationReasons"
          },
          "invoiceIds": {
            "type": "array",
            "description": "List of invoice Ids used in the segment",
            "maxItems": 100,
            "items": {
              "$ref": "#/definitions/invoiceId"
            },
            "title": "SegmentReqItemInvoiceIds"
          },
          "chargeRoutings": {
            "type": "array",
            "maxItems": 20,
            "items": {
              "$ref": "#/definitions/chargeRouting"
            },
            "title": "SegmentReqItemChargeRoutings"
          },
          "customerOwnReference": {
            "$ref": "#/definitions/customerOwnReference"
          },
          "purchaseOrderReference": {
            "$ref": "#/definitions/purchaseOrderReference"
          },
          "policyProcessStatus": {
            "$ref": "#/definitions/policyProcessStatus"
          },
          "assignedRooms": {
            "description": "this is a deprecated field. It can be used at ProductUses level (assignedRoom)",
            "type": "array",
            "items": {
              "$ref": "#/definitions/allocatedRoom"
            },
            "title": "SegmentReqItemAssignedRooms"
          },
          "isAssignedRoomLocked": {
            "description": "indicates if assigned room can be updated. If set to true, assigned room cannot be updated",
            "type": "boolean"
          },
          "rateOverrideReason": {
            "$ref": "#/definitions/rateOverrideReason"
          }
        }
      },
      "title": "SegmentReq"
    },
    "segmentModifyPendingReq": {
      "description": "List of segments",
      "type": "array",
      "items": {
        "type": "object",
        "title": "SegmentModifyPendingReqItem",
        "required": [
          "propertyCode",
          "offer"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Identify the segment inside the reservation all along the reservation life."
          },
          "synchroNumber": {
            "$ref": "#/definitions/synchroNumber"
          },
          "externalSegmentId": {
            "type": "integer",
            "description": "Used to identify a segment on external booking engines/GDS side."
          },
          "segmentStatus": {
            "$ref": "#/definitions/segmentStatus"
          },
          "segmentPmsStatus": {
            "$ref": "#/definitions/segmentPmsStatusReq"
          },
          "segmentHolderId": {
            "$ref": "#/definitions/segmentHolderId"
          },
          "bookerId": {
            "$ref": "#/definitions/bookerId"
          },
          "parentId": {
            "$ref": "#/definitions/parentId"
          },
          "indicators": {
            "$ref": "#/definitions/indicatorsReq"
          },
          "option": {
            "$ref": "#/definitions/option"
          },
          "propertyCode": {
            "$ref": "#/definitions/propertyCode"
          },
          "corporateAccountInfo": {
            "$ref": "#/definitions/corporateAccountInfoReq"
          },
          "offer": {
            "$ref": "#/definitions/offerReq"
          },
          "formOfPayment": {
            "$ref": "#/definitions/formOfPaymentReq"
          },
          "specialRequests": {
            "type": "array",
            "description": "List the special requests",
            "maxItems": 100,
            "items": {
              "$ref": "#/definitions/specialRequestsReq"
            },
            "title": "SegmentModifyPendingReqItemSpecialRequests"
          },
          "serviceRequests": {
            "type": "array",
            "description": "List the service requests",
            "maxItems": 25,
            "items": {
              "$ref": "#/definitions/serviceRequests"
            },
            "title": "SegmentModifyPendingReqItemServiceRequests"
          },
          "arrivalTime": {
            "$ref": "#/definitions/arrivalTime"
          },
          "departureTime": {
            "$ref": "#/definitions/departureTime"
          },
          "arrivalTransport": {
            "$ref": "#/definitions/transportation"
          },
          "departureTransport": {
            "$ref": "#/definitions/transportation"
          },
          "language": {
            "$ref": "#/definitions/language"
          },
          "comments": {
            "type": "array",
            "description": "comment details of corresponding segment. It describes the type, language and text of comments",
            "items": {
              "$ref": "#/definitions/comment"
            },
            "title": "SegmentModifyPendingReqItemComments"
          },
          "customData": {
            "$ref": "#/definitions/customData"
          },
          "travelPurpose": {
            "$ref": "#/definitions/travelPurpose"
          },
          "arrivalAmenities": {
            "type": "array",
            "description": "List of loyalty arrival amenity codes selected by the loyalty guest",
            "maxItems": 50,
            "items": {
              "$ref": "#/definitions/ArrivalAmenity"
            },
            "title": "SegmentModifyPendingReqItemArrivalAmenities"
          },
          "cancellationReasons": {
            "type": "array",
            "maxItems": 10,
            "items": {
              "$ref": "#/definitions/cancellationReason"
            },
            "title": "SegmentModifyPendingReqItemCancellationReasons"
          },
          "forceRepricing": {
            "type": "boolean",
            "description": "Used to force the repricing of the segment."
          },
          "invoiceIds": {
            "type": "array",
            "description": "List of invoice Ids used in the segment",
            "maxItems": 100,
            "items": {
              "$ref": "#/definitions/invoiceId"
            },
            "title": "SegmentModifyPendingReqItemInvoiceIds"
          },
          "chargeRoutings": {
            "type": "array",
            "maxItems": 20,
            "items": {
              "$ref": "#/definitions/chargeRouting"
            },
            "title": "SegmentModifyPendingReqItemChargeRoutings"
          },
          "customerOwnReference": {
            "$ref": "#/definitions/customerOwnReference"
          },
          "purchaseOrderReference": {
            "$ref": "#/definitions/purchaseOrderReference"
          },
          "policyProcessStatus": {
            "$ref": "#/definitions/policyProcessStatus"
          },
          "assignedRooms": {
            "description": "this is a deprecated field. It can be used at ProductUses level (assignedRoom)",
            "type": "array",
            "items": {
              "$ref": "#/definitions/allocatedRoom"
            },
            "title": "SegmentModifyPendingReqItemAssignedRooms"
          },
          "isAssignedRoomLocked": {
            "description": "indicates if assigned room can be updated. If set to true, assigned room cannot be updated",
            "type": "boolean"
          },
          "rateOverrideReason": {
            "$ref": "#/definitions/rateOverrideReason"
          }
        }
      },
      "title": "SegmentModifyPendingReq"
    },
    "segmentRes": {
      "description": "List of segments",
      "type": "array",
      "items": {
        "type": "object",
        "title": "SegmentResItem",
        "required": [
          "id",
          "segmentStatus",
          "actionStatus",
          "start",
          "end",
          "creationDateTime",
          "synchroNumber",
          "consolidatedSegmentStatus",
          "channelPreferredRate",
          "propertyCode",
          "creator",
          "requestor",
          "lastUpdateDateTime",
          "offer"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "identify the segment inside the reservation all along the reservation life"
          },
          "warningIds": {
            "description": "list of warning references",
            "type": "array",
            "items": {
              "$ref": "#/definitions/id"
            },
            "title": "SegmentResItemWarningIds"
          },
          "start": {
            "description": "start date",
            "type": "string",
            "format": "date"
          },
          "end": {
            "description": "end date",
            "type": "string",
            "format": "date"
          },
          "synchroNumber": {
            "$ref": "#/definitions/synchroNumber"
          },
          "externalSegmentId": {
            "type": "integer",
            "description": "used to identify a segment on external booking engines/GDS side"
          },
          "segmentStatus": {
            "$ref": "#/definitions/segmentStatus"
          },
          "consolidatedSegmentStatus": {
            "$ref": "#/definitions/consolidatedSegmentStatus"
          },
          "actionStatus": {
            "$ref": "#/definitions/actionStatus"
          },
          "segmentPmsStatus": {
            "$ref": "#/definitions/segmentPmsStatus"
          },
          "segmentHolderId": {
            "$ref": "#/definitions/segmentHolderId"
          },
          "isSegmentHolderNameModified": {
            "type": "boolean",
            "description": "indicates that the segment holder name of the current image is different from the one the previous committed image"
          },
          "bookerId": {
            "$ref": "#/definitions/bookerId"
          },
          "hasAddOns": {
            "$ref": "#/definitions/hasAddOns"
          },
          "parentId": {
            "$ref": "#/definitions/parentId"
          },
          "creationDateTime": {
            "$ref": "#/definitions/createDateTime"
          },
          "creationDateTimeHotelLocalTime": {
            "$ref": "#/definitions/createDateTimeHotelLocalTime"
          },
          "lastUpdateDateTime": {
            "$ref": "#/definitions/lastUpdateDateTime"
          },
          "lastUpdateDateTimeHotelLocalTime": {
            "$ref": "#/definitions/lastUpdateDateTimeHotelLocalTime"
          },
          "cancellationDateTime": {
            "$ref": "#/definitions/cancellationDateTime"
          },
          "cancellationDateTimeHotelLocalTime": {
            "$ref": "#/definitions/cancellationDateTimeHotelLocalTime"
          },
          "indicators": {
            "description": "how the segment was booked. Example by Force Sell, Rate Override, was repriced...",
            "$ref": "#/definitions/indicatorsRes"
          },
          "option": {
            "description": "present only for tentative or waitlisted booking",
            "$ref": "#/definitions/option"
          },
          "propertyCode": {
            "$ref": "#/definitions/propertyCode"
          },
          "factLines": {
            "description": "list of free text containing some info about the hotel",
            "$ref": "#/definitions/description"
          },
          "creator": {
            "description": "contains the details of the channel which created the segment",
            "$ref": "#/definitions/pointOfSale"
          },
          "requestor": {
            "description": "contains the details of the channel which requested the transaction",
            "$ref": "#/definitions/pointOfSale"
          },
          "owner": {
            "description": "agency which owns the segment. This is the agency whose IATA number is used for guarantee, and also the agency who is commissioned for the segment",
            "$ref": "#/definitions/reservationOwner"
          },
          "isCrossChannelCancel": {
            "$ref": "#/definitions/isCrossChannelCancel"
          },
          "channelPreferredRate": {
            "$ref": "#/definitions/channelPreferredRate"
          },
          "channelExtraPersonChargeIncluded": {
            "$ref": "#/definitions/channelExtraPersonChargeIncluded"
          },
          "cancelByHotelOnly": {
            "$ref": "#/definitions/cancelByHotelOnly"
          },
          "lateArrivalTime": {
            "$ref": "#/definitions/lateArrivalTime"
          },
          "corporateAccountInfo": {
            "$ref": "#/definitions/corporateAccountInfoRes"
          },
          "offer": {
            "$ref": "#/definitions/offerRes"
          },
          "totalSegment": {
            "$ref": "#/definitions/totalSegment"
          },
          "formOfPayment": {
            "$ref": "#/definitions/formOfPaymentRes"
          },
          "taxDefinitions": {
            "type": "array",
            "description": "the applicable rules of taxes for each tax change of the segment",
            "items": {
              "$ref": "#/definitions/taxDefinition"
            },
            "title": "SegmentResItemTaxDefinitions"
          },
          "specialEvent": {
            "$ref": "#/definitions/specialEvent"
          },
          "specialRequests": {
            "type": "array",
            "description": "list the special requests",
            "items": {
              "$ref": "#/definitions/specialRequests"
            },
            "title": "SegmentResItemSpecialRequests"
          },
          "serviceRequests": {
            "type": "array",
            "description": "list the service requests",
            "items": {
              "$ref": "#/definitions/serviceRequests"
            },
            "title": "SegmentResItemServiceRequests"
          },
          "traces": {
            "type": "array",
            "description": "traces allow to generate tasks that require fulfillment, which can be associated to a particular department. e.g. \"Review deposits\"",
            "minItems": 1,
            "maxItems": 100,
            "items": {
              "$ref": "#/definitions/traces"
            },
            "title": "SegmentResItemTraces"
          },
          "alerts": {
            "type": "array",
            "description": "alerts are PMS functionality which can be pre-configured. They include screen and printer notification. e.g. \"VIP guest\"",
            "minItems": 1,
            "maxItems": 100,
            "items": {
              "$ref": "#/definitions/alerts"
            },
            "title": "SegmentResItemAlerts"
          },
          "arrivalTime": {
            "$ref": "#/definitions/arrivalTime"
          },
          "departureTime": {
            "$ref": "#/definitions/departureTime"
          },
          "checkInDateTime": {
            "$ref": "#/definitions/checkInDateTime"
          },
          "checkOutDateTime": {
            "$ref": "#/definitions/checkOutDateTime"
          },
          "arrivalTransport": {
            "description": "details of the mean of transport used by the guests to reach the hotel (or the area)",
            "$ref": "#/definitions/transportation"
          },
          "departureTransport": {
            "description": "details of the mean of transport used by the guests to reach the hotel (or the area)",
            "$ref": "#/definitions/transportation"
          },
          "language": {
            "$ref": "#/definitions/language"
          },
          "comments": {
            "type": "array",
            "description": "comment details of corresponding segment. It describes the type, language and text of comments",
            "items": {
              "$ref": "#/definitions/comment"
            },
            "title": "SegmentResItemComments"
          },
          "customData": {
            "description": "all data under customData are stored in the reservation and returned in the response and retrieve. Any valid Json object is accepted",
            "$ref": "#/definitions/customData"
          },
          "travelPurpose": {
            "$ref": "#/definitions/travelPurpose"
          },
          "arrivalAmenities": {
            "type": "array",
            "description": "list of loyalty arrival amenity codes selected by the loyalty guest",
            "maxItems": 50,
            "items": {
              "$ref": "#/definitions/ArrivalAmenity"
            },
            "title": "SegmentResItemArrivalAmenities"
          },
          "cancellationReasons": {
            "description": "details about cancellation reasons",
            "type": "array",
            "items": {
              "$ref": "#/definitions/cancellationReason"
            },
            "title": "SegmentResItemCancellationReasons"
          },
          "segmentFolio": {
            "description": "describes payment details such as chargeable amount, paid amount and balance related to the segment. The object is replied only in case of centralized payment",
            "$ref": "#/definitions/segmentFolio"
          },
          "rmsData": {
            "$ref": "#/definitions/rmsData"
          },
          "invoiceIds": {
            "type": "array",
            "description": "list of invoice Ids used in the segment",
            "items": {
              "$ref": "#/definitions/invoiceId"
            },
            "title": "SegmentResItemInvoiceIds"
          },
          "chargeRoutings": {
            "description": "charge routing is used to charge payment in the correct folio",
            "type": "array",
            "items": {
              "$ref": "#/definitions/chargeRouting"
            },
            "title": "SegmentResItemChargeRoutings"
          },
          "customerOwnReference": {
            "$ref": "#/definitions/customerOwnReference"
          },
          "purchaseOrderReference": {
            "$ref": "#/definitions/purchaseOrderReference"
          },
          "policyProcessStatus": {
            "$ref": "#/definitions/policyProcessStatus"
          },
          "assignedRooms": {
            "description": "this is a deprecated field. It can be used at ProductUses level (assignedRoom)",
            "type": "array",
            "items": {
              "$ref": "#/definitions/allocatedRoom"
            },
            "title": "SegmentResItemAssignedRooms"
          },
          "isAssignedRoomLocked": {
            "description": "indicates if assigned room can be updated. If set to true, assigned room cannot be updated",
            "type": "boolean"
          },
          "rateOverrideReason": {
            "description": "reason of the rate override",
            "$ref": "#/definitions/rateOverrideReason"
          }
        }
      },
      "title": "SegmentRes"
    },
    "migSegmentReq": {
      "description": "List of segments",
      "type": "array",
      "items": {
        "type": "object",
        "title": "MigSegmentReqItem",
        "required": [
          "segmentStatus",
          "actionStatus",
          "start",
          "end",
          "creationDateTime",
          "propertyCode",
          "creator",
          "requestor",
          "lastUpdateDateTime",
          "offer"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Identify the segment inside the reservation all along the reservation life."
          },
          "start": {
            "description": "Start date",
            "type": "string",
            "format": "date"
          },
          "end": {
            "description": "End date",
            "type": "string",
            "format": "date"
          },
          "synchroNumber": {
            "$ref": "#/definitions/synchroNumber"
          },
          "externalSegmentId": {
            "type": "integer",
            "description": "Used to identify a segment on external booking engines/GDS side."
          },
          "segmentStatus": {
            "$ref": "#/definitions/segmentStatus"
          },
          "actionStatus": {
            "$ref": "#/definitions/actionStatus"
          },
          "segmentPmsStatus": {
            "$ref": "#/definitions/segmentPmsStatusReq"
          },
          "segmentHolderId": {
            "$ref": "#/definitions/segmentHolderId"
          },
          "bookerId": {
            "$ref": "#/definitions/bookerId"
          },
          "parentId": {
            "$ref": "#/definitions/parentId"
          },
          "creationDateTime": {
            "$ref": "#/definitions/createDateTime"
          },
          "lastUpdateDateTime": {
            "$ref": "#/definitions/lastUpdateDateTime"
          },
          "cancellationDateTime": {
            "$ref": "#/definitions/cancellationDateTime"
          },
          "indicators": {
            "$ref": "#/definitions/indicatorsMigReq"
          },
          "option": {
            "$ref": "#/definitions/option"
          },
          "propertyCode": {
            "$ref": "#/definitions/propertyCode"
          },
          "creator": {
            "description": "Contains the details of the channel which created the segment",
            "$ref": "#/definitions/pointOfSale"
          },
          "requestor": {
            "description": "Contains the details of the channel which requested the transaction",
            "$ref": "#/definitions/pointOfSale"
          },
          "owner": {
            "description": "Agency which owns the segment. This is the agency whose IATA number is used for guarantee, and also the agency who is commissioned for the segment.",
            "$ref": "#/definitions/reservationOwner"
          },
          "lateArrivalTime": {
            "$ref": "#/definitions/lateArrivalTime"
          },
          "corporateAccountInfo": {
            "$ref": "#/definitions/corporateAccountInfoRes"
          },
          "offer": {
            "$ref": "#/definitions/migOfferReq"
          },
          "formOfPayment": {
            "$ref": "#/definitions/formOfPaymentRes"
          },
          "taxDefinitions": {
            "type": "array",
            "description": "The applicable rules of taxes for each tax change of the segment",
            "items": {
              "$ref": "#/definitions/taxDefinition"
            },
            "title": "MigSegmentReqItemTaxDefinitions"
          },
          "specialEvent": {
            "$ref": "#/definitions/specialEvent"
          },
          "specialRequests": {
            "type": "array",
            "description": "List the special requests",
            "items": {
              "$ref": "#/definitions/specialRequests"
            },
            "title": "MigSegmentReqItemSpecialRequests"
          },
          "serviceRequests": {
            "type": "array",
            "description": "List the service requests",
            "items": {
              "$ref": "#/definitions/serviceRequests"
            },
            "title": "MigSegmentReqItemServiceRequests"
          },
          "traces": {
            "type": "array",
            "description": "Traces allow to generate tasks that require fulfillment, which can be associated to a particular department. e.g. \"Review deposits\"",
            "minItems": 1,
            "maxItems": 100,
            "items": {
              "$ref": "#/definitions/traces"
            },
            "title": "MigSegmentReqItemTraces"
          },
          "alerts": {
            "type": "array",
            "description": "Alerts are PMS functionality which can be pre-configured. They include screen and printer notification. e.g. \"VIP guest\"",
            "minItems": 1,
            "maxItems": 100,
            "items": {
              "$ref": "#/definitions/alerts"
            },
            "title": "MigSegmentReqItemAlerts"
          },
          "arrivalTime": {
            "$ref": "#/definitions/arrivalTime"
          },
          "departureTime": {
            "$ref": "#/definitions/departureTime"
          },
          "checkInDateTime": {
            "$ref": "#/definitions/checkInDateTime"
          },
          "checkOutDateTime": {
            "$ref": "#/definitions/checkOutDateTime"
          },
          "arrivalTransport": {
            "$ref": "#/definitions/transportation"
          },
          "departureTransport": {
            "$ref": "#/definitions/transportation"
          },
          "language": {
            "$ref": "#/definitions/language"
          },
          "comments": {
            "type": "array",
            "description": "comment details of corresponding segment. It describes the type, language and text of comments",
            "items": {
              "$ref": "#/definitions/comment"
            },
            "title": "MigSegmentReqItemComments"
          },
          "customData": {
            "$ref": "#/definitions/customData"
          },
          "travelPurpose": {
            "$ref": "#/definitions/travelPurpose"
          },
          "arrivalAmenities": {
            "type": "array",
            "description": "List of loyalty arrival amenity codes selected by the loyalty guest",
            "maxItems": 50,
            "items": {
              "$ref": "#/definitions/ArrivalAmenity"
            },
            "title": "MigSegmentReqItemArrivalAmenities"
          },
          "cancellationReasons": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/cancellationReason"
            },
            "title": "MigSegmentReqItemCancellationReasons"
          },
          "channelSettings": {
            "$ref": "#/definitions/migChannelSettings"
          },
          "rmsData": {
            "$ref": "#/definitions/rmsData"
          },
          "invoiceIds": {
            "type": "array",
            "description": "List of invoice Ids used in the segment",
            "items": {
              "$ref": "#/definitions/invoiceId"
            },
            "title": "MigSegmentReqItemInvoiceIds"
          },
          "chargeRoutings": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/chargeRouting"
            },
            "title": "MigSegmentReqItemChargeRoutings"
          },
          "customerOwnReference": {
            "$ref": "#/definitions/customerOwnReference"
          },
          "purchaseOrderReference": {
            "$ref": "#/definitions/purchaseOrderReference"
          },
          "policyProcessStatus": {
            "$ref": "#/definitions/policyProcessStatus"
          },
          "assignedRooms": {
            "description": "this is a deprecated field. It can be used at ProductUses level (assignedRoom)",
            "type": "array",
            "items": {
              "$ref": "#/definitions/allocatedRoom"
            },
            "title": "MigSegmentReqItemAssignedRooms"
          },
          "isAssignedRoomLocked": {
            "description": "indicates if assigned room can be updated. If set to true, assigned room cannot be updated",
            "type": "boolean"
          },
          "rateOverrideReason": {
            "$ref": "#/definitions/rateOverrideReason"
          }
        }
      },
      "title": "MigSegmentReq"
    },
    "segmentStatus": {
      "description": "booked (BK) if the segment has just been created, modified (MY) if it has been modified, cancelled (CL) if it has been cancelled. Used in the modification request for cancelling a segment",
      "type": "string",
      "enum": [
        "BK",
        "MY",
        "CL"
      ]
    },
    "actionStatus": {
      "description": "action status set to NS by default. NS - Normal Sell; NO - No-Show; FS - Forced-Sell; FO - Forced-Override; FH - Forced-Hurdle; ES - External Forced-Sell; EO - External Rate-Overridden; WL - Waitlist; NR - NoRecord Reservation",
      "type": "string",
      "enum": [
        "NS",
        "NO",
        "FS",
        "FO",
        "FH",
        "ES",
        "EO",
        "WL",
        "NR"
      ]
    },
    "synchroNumber": {
      "description": "accommodation sequence number used to warranty synchronization with PMS. It is increased when a the product information is modified",
      "type": "integer"
    },
    "consolidatedSegmentStatus": {
      "description": "consolidated status of the segment",
      "type": "string",
      "enum": [
        "Guaranteed",
        "Tentative",
        "NonGuaranteedHold",
        "Waitlisted",
        "Cancelled",
        "MissingPayment"
      ]
    },
    "segmentPmsStatus": {
      "description": "Segment status on PMS side",
      "type": "string",
      "enum": [
        "In-house",
        "Checked out",
        "No-show",
        "Waitlisted",
        "Pre-Checkin",
        "NoShowToBeProcessed"
      ]
    },
    "segmentPmsStatusReq": {
      "description": "Segment status on PMS side",
      "type": "string",
      "enum": [
        "In-house",
        "Checked out",
        "No-show",
        "Pre-Checkin",
        "NoShowToBeProcessed"
      ]
    },
    "segmentHolderId": {
      "description": "determine the segment holder. It references a guest id",
      "type": "integer"
    },
    "bookerId": {
      "description": "determine the person who booked on behalf of the segment holder. It references a guest id",
      "type": "integer"
    },
    "specialRequestsReq": {
      "type": "object",
      "required": [
        "requestCode"
      ],
      "properties": {
        "requestCode": {
          "description": "code of the special request",
          "type": "string",
          "minLength": 1,
          "maxLength": 20
        },
        "quantity": {
          "$ref": "#/definitions/quantity"
        },
        "dateTime": {
          "$ref": "#/definitions/dateTime"
        }
      },
      "title": "SpecialRequestsReq"
    },
    "specialRequests": {
      "type": "object",
      "required": [
        "requestCode"
      ],
      "properties": {
        "requestCode": {
          "description": "code of the special request",
          "type": "string",
          "minLength": 1,
          "maxLength": 20
        },
        "description": {
          "description": "description associated to the special request",
          "$ref": "#/definitions/description"
        },
        "quantity": {
          "$ref": "#/definitions/quantity"
        },
        "dateTime": {
          "$ref": "#/definitions/dateTime"
        }
      },
      "title": "SpecialRequests"
    },
    "serviceRequests": {
      "type": "object",
      "required": [
        "code",
        "description"
      ],
      "properties": {
        "code": {
          "description": "code of the service request",
          "type": "string",
          "minLength": 1,
          "maxLength": 20,
          "example": "MEAL"
        },
        "quantity": {
          "$ref": "#/definitions/quantity"
        },
        "description": {
          "description": "description associated to the service request",
          "$ref": "#/definitions/description"
        },
        "type": {
          "description": "type of the service request",
          "type": "string",
          "minLength": 1,
          "maxLength": 10,
          "example": "SPE"
        }
      },
      "title": "ServiceRequests"
    },
    "traces": {
      "type": "object",
      "required": [
        "departmentCode"
      ],
      "properties": {
        "departmentCode": {
          "description": "department code of the trace",
          "type": "string",
          "minLength": 1,
          "maxLength": 5
        },
        "description": {
          "$ref": "#/definitions/description"
        },
        "date": {
          "$ref": "#/definitions/dateTime"
        },
        "resolvedUser": {
          "description": "name of the user who resolved the trace",
          "type": "string",
          "minLength": 1,
          "maxLength": 40
        },
        "resolvedDate": {
          "$ref": "#/definitions/dateTime"
        }
      },
      "title": "Traces"
    },
    "alerts": {
      "type": "object",
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "description": "alert code",
          "type": "string",
          "minLength": 1,
          "maxLength": 20
        },
        "description": {
          "$ref": "#/definitions/description"
        },
        "area": {
          "description": "alert area",
          "type": "string",
          "minLength": 1,
          "maxLength": 20
        },
        "propertyCode": {
          "$ref": "#/definitions/propertyCode"
        }
      },
      "title": "Alerts"
    },
    "arrivalTime": {
      "description": "local hotel time when guests plan to arrive at the hotel, i.e. 22:00",
      "type": "string",
      "pattern": "^.*$",
      "format": "time-hour:time-minute"
    },
    "departureTime": {
      "description": "local hotel time when guests plan to leave the hotel, i.e. 10:00",
      "type": "string",
      "pattern": "^.*$",
      "format": "time-hour:time-minute"
    },
    "transportation": {
      "description": "details of the mean of transport used by the guests to reach the hotel (or the area)",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "description": "type of transportation, based on OTA Code Type TRP (2-Boat, 3-Bus, 5-Car, 8-Helicopter, 9-Limousine, 14-Plane, 17-Shuttle, 18-Subway, 20-Taxi, 21-Train, 26-Other)",
          "type": "integer",
          "enum": [
            2,
            3,
            5,
            8,
            9,
            14,
            17,
            18,
            20,
            21,
            26
          ]
        },
        "id": {
          "description": "identifier of the transportation method (i.e flight Number for air, train Number for rail, â¦). If transportation type is 14, this field must be the concatenation Carrier Code and '-' Flight NumberID ('AF-1234')",
          "type": "string",
          "minLength": 1,
          "maxLength": 32
        },
        "locationCode": {
          "description": "code IATA of the destination",
          "type": "string",
          "format": "alpha",
          "minLength": 3,
          "maxLength": 3
        },
        "time": {
          "description": "arrival time at destination or time of departure (concatenation of date and time)",
          "type": "string",
          "pattern": "^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2]\\d|3[0-1])T([0-1]\\d|2[0-4]):([0-5]\\d):([0-5]\\d)$",
          "example": "2018-05-01T18:25:00"
        },
        "locationDescription": {
          "description": "textual identifier of the transportation departure/arrival (i.e train station, bus station, airport terminal)",
          "type": "string",
          "minLength": 1,
          "maxLength": 64
        },
        "terminal": {
          "description": "terminal of the departure/arrival transportation",
          "type": "string",
          "format": "alphanumeric",
          "minLength": 2,
          "maxLength": 2
        },
        "remoteLocation": {
          "description": "code IATA of departure (ONLY used for arrival transport - as locationCode concerns arrival) (used only for ARR option in GDS)",
          "type": "string",
          "format": "alpha",
          "minLength": 3,
          "maxLength": 3
        }
      },
      "type": "object",
      "title": "Transportation"
    },
    "loyaltyProgram": {
      "description": "loyalty program of the guests with hotel provider",
      "type": "object",
      "required": [
        "loyaltyId"
      ],
      "properties": {
        "loyaltyId": {
          "description": "identifier of the guest in the loyalty system",
          "type": "string",
          "pattern": "^[A-Za-z0-9]{1,28}$",
          "minLength": 1,
          "maxLength": 28
        },
        "programs": {
          "description": "list of the associated programs",
          "type": "array",
          "maxItems": 20,
          "items": {
            "type": "object",
            "title": "LoyaltyProgramProgramsItem",
            "properties": {
              "programName": {
                "description": "name of the program",
                "type": "string",
                "pattern": "^.*$",
                "minLength": 1,
                "maxLength": 5
              },
              "tierLevel": {
                "description": "level within the program",
                "type": "string",
                "pattern": "^.*$",
                "minLength": 1,
                "maxLength": 5
              }
            }
          },
          "title": "LoyaltyProgramPrograms"
        },
        "qualifier": {
          "$ref": "#/definitions/loyaltyProgramQualifier"
        }
      },
      "title": "LoyaltyProgram"
    },
    "loyaltyProgramQualifier": {
      "description": "qualifier details of the guest",
      "type": "object",
      "properties": {
        "dominance": {
          "description": "a dominant behavior or interest exhibited by the guest",
          "type": "string",
          "pattern": "^.*$",
          "minLength": 1,
          "maxLength": 50
        },
        "tier": {
          "description": "the tier the guest is associated to",
          "type": "string",
          "pattern": "^.*$",
          "minLength": 1,
          "maxLength": 20
        }
      },
      "title": "LoyaltyProgramQualifier"
    },
    "frequentTraveller": {
      "description": "loyalty program of the guests with an airline",
      "type": "object",
      "required": [
        "membershipId"
      ],
      "properties": {
        "membershipId": {
          "description": "unique identifier of the member. Examples - 1234567890 or AF1234567890 (in this case programId is not mandatory)",
          "type": "string",
          "pattern": "^.*$",
          "format": "alphanumeric",
          "minLength": 1,
          "maxLength": 28
        },
        "programId": {
          "description": "loyalty program ownerâs code (for instance âAFâ for Air France). May be absent in case it is unknown",
          "type": "string",
          "pattern": "^.*$",
          "format": "alphanumeric",
          "minLength": 2,
          "maxLength": 3
        }
      },
      "title": "FrequentTraveller"
    },
    "ArrivalAmenity": {
      "description": "it is a Code of loyalty arrival amenity selected by the loyalty guest",
      "type": "string",
      "minLength": 1,
      "maxLength": 15,
      "example": "Welcome Gift"
    },
    "specialEvent": {
      "description": "if an event or a special requirement occurs during the stay, the GRS applies automatically the restrictions configured for this event and send back the related information",
      "type": "object",
      "required": [
        "start",
        "minLOS"
      ],
      "properties": {
        "description": {
          "$ref": "#/definitions/description"
        },
        "start": {
          "description": "the special event start date",
          "type": "string",
          "format": "date"
        },
        "minLOS": {
          "description": "minimum length of stay required",
          "type": "integer"
        }
      },
      "title": "SpecialEvent"
    },
    "travelPurpose": {
      "description": "travel purpose of the segment",
      "type": "string",
      "enum": [
        "Business",
        "Leisure"
      ]
    },
    "segmentFolio": {
      "description": "detail of the payment amounts",
      "type": "object",
      "properties": {
        "chargeableAmount": {
          "description": "amount needed to respect the deposit policy",
          "type": "string"
        },
        "paidAmount": {
          "description": "amount paid for this segment",
          "type": "string"
        },
        "balance": {
          "description": "balance of the segment in the folio",
          "type": "string"
        },
        "refund": {
          "description": "amount that will be refunded for the transaction",
          "type": "string"
        }
      },
      "title": "SegmentFolio"
    },
    "chargeRouting": {
      "description": "definition of the charge routing settings",
      "type": "object",
      "required": [
        "scope",
        "destination"
      ],
      "properties": {
        "scope": {
          "$ref": "#/definitions/scope"
        },
        "destination": {
          "$ref": "#/definitions/destination"
        },
        "isAllowance": {
          "type": "boolean",
          "description": "allowance indicator. If it is set to true the charge routing are considered as allowances. If it is set to false the charge routing are not considered as allowances. By default this indicator is set to false"
        }
      },
      "title": "ChargeRouting"
    },
    "scope": {
      "description": "define the charge routing scope",
      "type": "object",
      "properties": {
        "inventoryTypeCodes": {
          "type": "array",
          "maxItems": 1000,
          "items": {
            "$ref": "#/definitions/inventoryTypeCode"
          },
          "title": "ScopeInventoryTypeCodes"
        },
        "allowanceGroups": {
          "type": "array",
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/allowanceGroup"
          },
          "title": "ScopeAllowanceGroups"
        }
      },
      "title": "Scope"
    },
    "allowanceGroup": {
      "description": "define the charge routing scope",
      "type": "object",
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/code"
        },
        "amount": {
          "type": "string",
          "description": "amount set for the allowance group"
        },
        "currency": {
          "$ref": "#/definitions/currency"
        }
      },
      "title": "AllowanceGroup"
    },
    "destination": {
      "description": "define the charge routing destination",
      "type": "object",
      "required": [
        "level",
        "type"
      ],
      "properties": {
        "level": {
          "type": "string",
          "description": "level of the folio, can be \"Segment\" or \"Reservation\"",
          "enum": [
            "Segment",
            "Reservation"
          ]
        },
        "userProfileId": {
          "type": "integer",
          "description": "identifies a unique guest within the reservation. This is only used when the charge routing destination type is equal to \"Guest\""
        },
        "type": {
          "type": "string",
          "description": "type of the destination, can be \"Guest\" or \"CorporateAccount\"",
          "enum": [
            "Guest",
            "CorporateAccount"
          ]
        }
      },
      "title": "Destination"
    },
    "customerOwnReference": {
      "description": "it is used to store reference of the customer. It is used in relation to any form of payment",
      "type": "string",
      "maxLength": 24
    },
    "purchaseOrderReference": {
      "description": "it is used to store reference of the purchase order. It is used in relation to any form of payment",
      "type": "string",
      "maxLength": 24
    },
    "policyProcessStatus": {
      "description": "the status of the policy processed. This is applicable to cancellation and no-show fee only",
      "type": "string",
      "enum": [
        "ToProcess",
        "Enforced",
        "Waived"
      ]
    },
    "allocatedRoom": {
      "type": "object",
      "required": [
        "allocatedRoom"
      ],
      "properties": {
        "allocatedRoom": {
          "description": "room allocated to guests",
          "type": "string",
          "maxLength": 50
        },
        "period": {
          "description": "the period of stay. If not provided, the period of segment is considered",
          "$ref": "#/definitions/period"
        }
      },
      "title": "AllocatedRoom"
    },
    "checkInDateTime": {
      "description": "date and Time of check-in in hotel local time",
      "type": "string",
      "pattern": "^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2]\\d|3[0-1])T([0-1]\\d|2[0-4]):([0-5]\\d):([0-5]\\d)$",
      "example": "2018-05-26T22:00:00"
    },
    "checkOutDateTime": {
      "description": "date and Time of check-out in hotel local time",
      "type": "string",
      "pattern": "^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2]\\d|3[0-1])T([0-1]\\d|2[0-4]):([0-5]\\d):([0-5]\\d)$",
      "example": "2018-05-26T22:00:00"
    },
    "rateOverrideReason": {
      "type": "object",
      "description": "reason of the rate override",
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "description": "code of the override reason",
          "type": "string",
          "pattern": "^[A-Z0-9]{1,15}$",
          "minLength": 1,
          "maxLength": 15
        },
        "description": {
          "description": "description of the override reason",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 50
        },
        "otherReason": {
          "description": "exceptional override reason",
          "type": "string",
          "pattern": "^.*$",
          "minLength": 1,
          "maxLength": 50
        }
      },
      "title": "RateOverrideReason"
    },
    "channelPreferredRate": {
      "description": "indicates the preferred rate to be returned to the requestor channel",
      "type": "string",
      "enum": [
        "Check-in",
        "Highest"
      ]
    },
    "channelExtraPersonChargeIncluded": {
      "description": "indicates if the extra person charges are included in the base amount of the rates",
      "type": "boolean"
    },
    "cancelByHotelOnly": {
      "description": "cancel can be only allowed by PMS. It is set to false, if no RLP exists for the rate",
      "type": "boolean"
    },
    "lateArrivalTime": {
      "description": "the late arrival time",
      "type": "string"
    },
    "fees": {
      "description": "fee",
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "description": "type or origin of the fee",
          "type": "string",
          "enum": [
            "Cancellation",
            "No-show"
          ]
        },
        "amount": {
          "description": "fee amount",
          "type": "string"
        },
        "optionalServicesIncluded": {
          "description": "if yes, penalty fees include rooms and all services (optional and included). If no, penalty fees include rooms and included services only. Returned only if the penalty rule is a full stay percentage",
          "type": "boolean"
        },
        "numberOfNights": {
          "description": "number of nights charged in case of cancellation",
          "type": "integer"
        },
        "description": {
          "description": "penalties description",
          "$ref": "#/definitions/description"
        }
      },
      "title": "Fees"
    },
    "commission": {
      "description": "commission",
      "type": "object",
      "properties": {
        "percent": {
          "description": "percentage of the commission",
          "type": "string"
        },
        "amount": {
          "description": "flat amount of the commission",
          "type": "string"
        }
      },
      "title": "Commission"
    },
    "ratesDefinition": {
      "type": "object",
      "title": "RatesDefinition",
      "required": [
        "rateChanges"
      ],
      "properties": {
        "rateChanges": {
          "description": "the applicable rate changes of the stay. Gives the definition of rate set in the GRS",
          "type": "array",
          "items": {
            "$ref": "#/definitions/rateDefinition"
          },
          "title": "RatesDefinitionRateChanges"
        },
        "dailyExtraPersonCharge": {
          "description": "daily amount for 1 extra participant for non-service. Returned depending on channel profile and setting",
          "type": "string",
          "pattern": "^.*$"
        },
        "average": {
          "description": "the average rate",
          "type": "string",
          "pattern": "^.*$"
        },
        "checkin": {
          "description": "the checkin rate depending on channel setting",
          "type": "string",
          "pattern": "^.*$"
        },
        "highest": {
          "description": "the highest rate depending on channel setting",
          "type": "string",
          "pattern": "^.*$"
        }
      }
    },
    "rateDefinition": {
      "description": "the applicable rate changes of the stay. Gives the definition of rate set in the GRS",
      "type": "object",
      "required": [
        "id",
        "start",
        "end",
        "amount"
      ],
      "properties": {
        "id": {
          "description": "id of the RateDefinition element",
          "type": "integer"
        },
        "start": {
          "description": "first date on which the rate amount applies (for the requested stay)",
          "type": "string",
          "pattern": "^.*$",
          "format": "date"
        },
        "end": {
          "description": "last date on which the rate amount applies (for the requested stay)",
          "type": "string",
          "pattern": "^.*$",
          "format": "date"
        },
        "amount": {
          "description": "the base daily amount configured in the GRS which can include extra person charges depending on channel setting. In case of Package, it includes the price of all the products",
          "type": "string",
          "pattern": "^.*$"
        }
      },
      "title": "RateDefinition"
    },
    "taxDefinition": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/taxDefinitionCommon"
        },
        {
          "type": "object",
          "properties": {
            "description": {
              "$ref": "#/definitions/description"
            },
            "longDescription": {
              "$ref": "#/definitions/description"
            },
            "overrideInd": {
              "$ref": "#/definitions/overrideInd",
              "description": "flag to indicate the tax was overridden"
            }
          },
          "title": "TaxDefinition1"
        }
      ],
      "title": "TaxDefinition"
    },
    "taxDefinitionCommon": {
      "description": "the applicable rules of taxes over the stay",
      "type": "object",
      "required": [
        "id",
        "chargeFrequency",
        "chargeUnit",
        "values",
        "computationType",
        "isIncluded",
        "start",
        "end"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "a unique ID for this tax definition item. Referenced in rates tax breakdown"
        },
        "code": {
          "type": "string",
          "maxLength": 5,
          "description": "user defined code"
        },
        "taxTypeCode": {
          "type": "string",
          "description": "the OTA fee tax type code"
        },
        "name": {
          "type": "string",
          "description": "name of the tax of fee",
          "maxLength": 64
        },
        "isIncluded": {
          "type": "boolean",
          "description": "indicates if the tax is included or excluded"
        },
        "currency": {
          "$ref": "#/definitions/currency"
        },
        "computationType": {
          "type": "string",
          "description": "type of computation, either Flat or Percentage",
          "enum": [
            "Flat",
            "Percentage"
          ]
        },
        "computationMode": {
          "type": "string",
          "description": "which base amount to consider. Possible values are TaxOnTax (tax on another tax), TaxOnNet (tax on amount before taxes) or TaxOnRate(tax on amount including included taxes and excluding excluded taxes)",
          "enum": [
            "TaxOnRate",
            "TaxOnNet",
            "TaxOnTax"
          ]
        },
        "chargeUnit": {
          "$ref": "#/definitions/chargeUnit"
        },
        "chargeFrequency": {
          "type": "string",
          "description": "how the tax is computed, once or repeated each day",
          "enum": [
            "PerDay",
            "PerStay"
          ]
        },
        "productCodes": {
          "type": "array",
          "description": "product code(s) to which the tax apply",
          "items": {
            "$ref": "#/definitions/productCode"
          },
          "title": "TaxDefinitionCommonProductCodes"
        },
        "start": {
          "description": "first date on which the tax definition item applies (for the requested stay)",
          "type": "string",
          "format": "date"
        },
        "end": {
          "description": "last date on which the tax applies (for the requested stay)",
          "type": "string",
          "format": "date"
        },
        "dow": {
          "description": "list of applicable days of weeks. 'MTWTFSS' for all days of weeks. A dash is present for any missing day. For instance, 'MT-----' for Monday and Tuesday only, '-T-T---' for Tuesday and Thursday only",
          "type": "string",
          "pattern": "^[M-][T-][W-][T-][F-][S-][S-]$"
        },
        "values": {
          "type": "array",
          "description": "values per criteria",
          "items": {
            "$ref": "#/definitions/taxValue"
          },
          "title": "TaxDefinitionCommonValues"
        },
        "isPaidAtHotel": {
          "$ref": "#/definitions/isPaidAtHotel"
        },
        "relatedTaxIds": {
          "type": "array",
          "maxItems": 999,
          "description": "list of associated parent tax ids on which the tax on tax is applied",
          "items": {
            "$ref": "#/definitions/RelatedTaxId"
          },
          "title": "TaxDefinitionCommonRelatedTaxIds"
        }
      },
      "title": "TaxDefinitionCommon"
    },
    "taxValue": {
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "pattern": "^-?[0-9]+(\\.[0-9]+)?$",
          "description": "percentage or flat amount of the tax",
          "example": "9.12"
        },
        "guestTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^.*$"
          },
          "title": "TaxValueGuestTypes"
        },
        "startAge": {
          "type": "integer",
          "description": "start age of the range",
          "example": 0
        },
        "endAge": {
          "type": "integer",
          "description": "end age of the range. If no end age is specified the age range is considered up to infinite",
          "example": 18
        }
      },
      "type": "object",
      "title": "TaxValue"
    },
    "chargeUnit": {
      "description": "unit for which the charge applies. Note that the PerUse charge unit is deprecated",
      "type": "string",
      "enum": [
        "PerPerson",
        "PerProduct",
        "PerUse"
      ]
    },
    "hasAddOns": {
      "description": "indicates if the segment is the parent of one or several add-on segment(s)",
      "type": "boolean"
    },
    "parentId": {
      "description": "reference to the parent segment by its id. Filled when the current segment is an add-on",
      "type": "integer"
    },
    "rmsData": {
      "description": "the RMS data associated to the current rate plan/product combination",
      "type": "object",
      "properties": {
        "calculationMethod": {
          "description": "computation mode/Calculation type associated to the current rate plan/product combination for the corresponding dates, indicating how the amount is computed. It is currently used for flat amounts but it might be extended to other types of amounts as well",
          "type": "string"
        },
        "barLevels": {
          "description": "list of barLevels",
          "type": "array",
          "items": {
            "$ref": "#/definitions/barLevel"
          },
          "title": "RmsDataBarLevels"
        }
      },
      "title": "RmsData"
    },
    "barLevel": {
      "type": "object",
      "required": [
        "barLevel",
        "start",
        "end"
      ],
      "properties": {
        "barLevel": {
          "description": "level associated to the current rate plan/product combination for the corresponding dates. It is used as a comment to differentiate between two similar price grids",
          "type": "string"
        },
        "start": {
          "description": "period start date",
          "type": "string",
          "format": "date"
        },
        "end": {
          "description": "period end date",
          "type": "string",
          "format": "date"
        }
      },
      "title": "BarLevel"
    },
    "invoiceId": {
      "description": "invoice identifier",
      "type": "string",
      "pattern": "^.*$",
      "maxLength": 36
    },
    "indicatorsReq": {
      "description": "how the segment was booked. Example by Force Sell, Rate Override, was repriced, etc",
      "type": "object",
      "properties": {
        "isForcedSell": {
          "$ref": "#/definitions/isForcedSell"
        },
        "isForcedOverbook": {
          "$ref": "#/definitions/isForcedOverbook"
        },
        "isNonRoomProductIgnored": {
          "$ref": "#/definitions/isNonRoomProductIgnored"
        },
        "isOverrideTaxIgnored": {
          "$ref": "#/definitions/isOverrideTaxIgnored"
        }
      },
      "title": "IndicatorsReq"
    },
    "indicatorsRes": {
      "description": "how the segment was booked. Example by Force Sell, Rate Override, was repriced, etc",
      "type": "object",
      "required": [
        "isConfirmed"
      ],
      "properties": {
        "isForcedSell": {
          "$ref": "#/definitions/isForcedSell"
        },
        "isForcedOverbook": {
          "$ref": "#/definitions/isForcedOverbook"
        },
        "isConfirmed": {
          "$ref": "#/definitions/isConfirmed"
        },
        "isPaidByPoints": {
          "$ref": "#/definitions/isPaidByPoints"
        },
        "isRepriced": {
          "$ref": "#/definitions/isRepriced"
        },
        "isAutoCancelled": {
          "$ref": "#/definitions/isAutoCancelled"
        },
        "isMigrated": {
          "$ref": "#/definitions/isMigrated"
        },
        "isCancelledAfterDeadline": {
          "$ref": "#/definitions/isCancelledAfterDeadline"
        },
        "hasRateOverride": {
          "$ref": "#/definitions/hasRateOverride"
        },
        "isRateOverrideWithinThreshold": {
          "$ref": "#/definitions/isRateOverrideWithinThreshold"
        },
        "hasForcedInventoryAvailability": {
          "$ref": "#/definitions/hasForcedInventoryAvailability"
        },
        "hasForcedRestrictions": {
          "$ref": "#/definitions/hasForcedRestrictions"
        },
        "isNonRoomProductIgnored": {
          "$ref": "#/definitions/isNonRoomProductIgnored"
        },
        "isOverrideTaxIgnored": {
          "$ref": "#/definitions/isOverrideTaxIgnored"
        }
      },
      "title": "IndicatorsRes"
    },
    "indicatorsMigReq": {
      "description": "how the segment was booked. Example by Force Sell",
      "type": "object",
      "properties": {
        "isForcedSell": {
          "$ref": "#/definitions/isForcedSell"
        },
        "isCancelledAfterDeadline": {
          "$ref": "#/definitions/isCancelledAfterDeadline"
        },
        "hasRateOverride": {
          "$ref": "#/definitions/hasRateOverride"
        },
        "isRateOverrideWithinThreshold": {
          "$ref": "#/definitions/isRateOverrideWithinThreshold"
        },
        "hasForcedInventoryAvailability": {
          "$ref": "#/definitions/hasForcedInventoryAvailability"
        },
        "hasForcedRestrictions": {
          "$ref": "#/definitions/hasForcedRestrictions"
        },
        "isNonRoomProductIgnored": {
          "$ref": "#/definitions/isNonRoomProductIgnored"
        },
        "isOverrideTaxIgnored": {
          "$ref": "#/definitions/isOverrideTaxIgnored"
        }
      },
      "title": "IndicatorsMigReq"
    },
    "indicatorsSearchRes": {
      "description": "how the segment was booked. Example by Force Sell, Rate Override, etc",
      "type": "object",
      "properties": {
        "isCancelledAfterDeadline": {
          "$ref": "#/definitions/isCancelledAfterDeadline"
        },
        "hasRateOverride": {
          "$ref": "#/definitions/hasRateOverride"
        },
        "isRateOverrideWithinThreshold": {
          "$ref": "#/definitions/isRateOverrideWithinThreshold"
        },
        "hasForcedInventoryAvailability": {
          "$ref": "#/definitions/hasForcedInventoryAvailability"
        },
        "hasForcedRestrictions": {
          "$ref": "#/definitions/hasForcedRestrictions"
        }
      },
      "title": "IndicatorsSearchRes"
    },
    "isForcedSell": {
      "description": "indicates that the segment is forced",
      "type": "boolean"
    },
    "isForcedOverbook": {
      "description": "indicates if the reservation request is an overbooking request",
      "type": "boolean"
    },
    "isConfirmed": {
      "description": "if false, the 'option' element at segment level is filled",
      "type": "boolean"
    },
    "isPaidByPoints": {
      "description": "indicates that the segment is paid by point. Default value is false",
      "type": "boolean"
    },
    "isAutoCancelled": {
      "description": "indicates that the segment has been auto-cancelled. Default value is false",
      "type": "boolean"
    },
    "isRepriced": {
      "description": "indicates that the segment was repriced during the last modification (Only applies for Modify, Retrieve and Cancel responses)",
      "type": "boolean"
    },
    "isCrossChannelCancel": {
      "description": "indicates that the reservation was cancelled by another channel. This is only returned if the flag CHL_UnsolicitedSupported of the booking originator channel is true",
      "type": "boolean"
    },
    "isWaitlist": {
      "description": "indicates that the segment is waitlisted",
      "type": "boolean"
    },
    "isTentative": {
      "description": "indicates that the segment is tentative",
      "type": "boolean"
    },
    "isMigrated": {
      "description": "indicates that the reservation was migrated. Default value is false",
      "type": "boolean"
    },
    "hasForcedInventoryAvailability": {
      "description": "flag to indicate the inventory availability was bypassed",
      "type": "boolean"
    },
    "hasForcedRestrictions": {
      "description": "flag to indicate that pricing restrictions were bypassed",
      "type": "boolean"
    },
    "isCancelledAfterDeadline": {
      "description": "flag to indicate that cancellation was done after cancellation deadline",
      "type": "boolean"
    },
    "isRateOverrideWithinThreshold": {
      "description": "flag to indicate the rate was overridden within the set threshold",
      "type": "boolean"
    },
    "hasRateOverride": {
      "description": "flag to indicate the rate was overridden",
      "type": "boolean"
    },
    "isNonRoomProductIgnored": {
      "description": "indicates if non room products are ignored",
      "type": "boolean"
    },
    "isOverrideTaxIgnored": {
      "description": "indicates if the override tax is ignored",
      "type": "boolean"
    },
    "option": {
      "description": "present only for tentative or waitlisted booking",
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "$ref": "#/definitions/optionType"
        },
        "deadline": {
          "$ref": "#/definitions/optionDeadline"
        }
      },
      "title": "Option"
    },
    "optionType": {
      "description": "type of the option",
      "type": "string",
      "enum": [
        "Tentative",
        "Waitlist"
      ]
    },
    "optionDeadline": {
      "description": "option date and GMT time before which the Option booking should be confirmed. If not informed with âtypeâ=Tentative, the segment will be cancelled automatically 24h hours later",
      "type": "string",
      "example": "2018-05-26T22:00:00"
    },
    "address": {
      "type": "object",
      "properties": {
        "index": {
          "$ref": "#/definitions/addressIndex"
        },
        "type": {
          "$ref": "#/definitions/addressType"
        },
        "addressLines": {
          "$ref": "#/definitions/addressLines"
        },
        "cityName": {
          "$ref": "#/definitions/cityName"
        },
        "postalCode": {
          "$ref": "#/definitions/postalCode"
        },
        "county": {
          "$ref": "#/definitions/county"
        },
        "stateProv": {
          "$ref": "#/definitions/stateProv"
        },
        "countryName": {
          "$ref": "#/definitions/countryName"
        },
        "countryCode": {
          "$ref": "#/definitions/countryCode"
        },
        "companyName": {
          "$ref": "#/definitions/companyName"
        },
        "unstructuredAddress": {
          "$ref": "#/definitions/unstructuredAddress"
        }
      },
      "title": "Address"
    },
    "addressIndex": {
      "description": "address index. Will identify the address inside the reservation all along the reservation life",
      "type": "integer"
    },
    "cityName": {
      "description": "city name",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 30
    },
    "companyName": {
      "description": "company name, makes sense if type is business address",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 100
    },
    "countryCode": {
      "description": "country code defined by the ISO 3166 norm",
      "type": "string",
      "pattern": "^[A-Za-z]{2,2}$",
      "minLength": 2,
      "maxLength": 2
    },
    "countryName": {
      "description": "country name",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 64
    },
    "county": {
      "description": "county name",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 32
    },
    "postalCode": {
      "description": "postal or ZIP code",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 16
    },
    "stateProv": {
      "description": "abbreviated state name",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 25
    },
    "addressType": {
      "description": "defines if the address is personal (1) or business (2), based on OTA_CodeType CLT",
      "type": "integer",
      "enum": [
        1,
        2
      ]
    },
    "addressLines": {
      "description": "list of address lines",
      "type": "array",
      "maxItems": 5,
      "items": {
        "description": "address line",
        "type": "string",
        "pattern": "^.*$",
        "minLength": 1,
        "maxLength": 150
      },
      "title": "AddressLines"
    },
    "unstructuredAddress": {
      "description": "list of unstructured address lines",
      "type": "array",
      "maxItems": 10,
      "items": {
        "type": "string",
        "pattern": "^.*$",
        "minLength": 1,
        "maxLength": 150,
        "description": "address without any structure"
      },
      "title": "UnstructuredAddress"
    },
    "telephone": {
      "type": "object",
      "required": [
        "number"
      ],
      "properties": {
        "locationType": {
          "$ref": "#/definitions/phoneLocationType"
        },
        "deviceType": {
          "$ref": "#/definitions/phoneDeviceType"
        },
        "countryCode": {
          "$ref": "#/definitions/phoneCountryCode"
        },
        "areaCode": {
          "$ref": "#/definitions/phoneAreaCode"
        },
        "extension": {
          "$ref": "#/definitions/phoneExtension"
        },
        "number": {
          "$ref": "#/definitions/phoneNumber"
        }
      },
      "title": "Telephone"
    },
    "phoneLocationType": {
      "description": "defines if the given phone/fax Number is business (7) or home (6), based on OTA_CodeType PLT",
      "type": "integer",
      "enum": [
        6,
        7
      ]
    },
    "phoneDeviceType": {
      "description": "the technology associated to the Number, based on OTA_CodeType PTT (1-Phone, 3-Fax, 5-Mobile)",
      "type": "integer",
      "enum": [
        1,
        3,
        5
      ]
    },
    "phoneCountryCode": {
      "description": "the country code associated to the phone number",
      "type": "string",
      "pattern": "^.*$",
      "format": "numeric",
      "minLength": 1,
      "maxLength": 3
    },
    "phoneAreaCode": {
      "description": "the area code associated to the phone number",
      "type": "string",
      "pattern": "^.*$",
      "format": "numeric",
      "minLength": 1,
      "maxLength": 8
    },
    "phoneExtension": {
      "description": "the extension associated to the phone number",
      "type": "string",
      "pattern": "^.*$",
      "format": "numeric",
      "minLength": 1,
      "maxLength": 5
    },
    "phoneNumber": {
      "description": "phone / fax number",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 57
    },
    "email": {
      "type": "object",
      "required": [
        "address"
      ],
      "properties": {
        "type": {
          "$ref": "#/definitions/emailType"
        },
        "language": {
          "$ref": "#/definitions/emailLanguage"
        },
        "address": {
          "$ref": "#/definitions/emailField"
        }
      },
      "title": "Email"
    },
    "emailType": {
      "description": "defines if the given Email Number is business (2) or home (1), based on OTA_CodeType EAT",
      "type": "integer",
      "enum": [
        1,
        2
      ]
    },
    "emailField": {
      "description": "email",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 90
    },
    "emailLanguage": {
      "description": "preferred language to be used for the email content. Format ISO 639-1 code, like 'en'",
      "type": "string",
      "pattern": "^[A-Za-z]{2}$",
      "minLength": 2,
      "maxLength": 2
    },
    "formOfPaymentReq": {
      "description": "information concerning form of payment (guarantee, deposit, paid by point,...)",
      "type": "object",
      "properties": {
        "paymentInfo": {
          "$ref": "#/definitions/paymentInfoReq"
        },
        "depositPayments": {
          "description": "list of the payments done for deposits",
          "type": "array",
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/paymentTransactionReq"
          },
          "title": "FormOfPaymentReqDepositPayments"
        },
        "paymentByPoints": {
          "description": "list of payments made by points",
          "type": "array",
          "maxItems": 50,
          "items": {
            "$ref": "#/definitions/paymentByPoints"
          },
          "title": "FormOfPaymentReqPaymentByPoints"
        }
      },
      "title": "FormOfPaymentReq"
    },
    "formOfPaymentRes": {
      "description": "information concerning form of payment (guarantee, deposit, paid by point,...)",
      "type": "object",
      "properties": {
        "paymentInfo": {
          "$ref": "#/definitions/paymentInfoRes"
        },
        "depositPayments": {
          "description": "list of the payments done for deposits (payment by points excluded)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/paymentTransactionRes"
          },
          "title": "FormOfPaymentResDepositPayments"
        },
        "paymentByPoints": {
          "description": "list of payments made by points",
          "type": "array",
          "items": {
            "$ref": "#/definitions/paymentByPoints"
          },
          "title": "FormOfPaymentResPaymentByPoints"
        },
        "transactionIdsForRefundPoints": {
          "description": "list of transaction ids when refund points is needed after a modify",
          "type": "array",
          "items": {
            "$ref": "#/definitions/refundPoints"
          },
          "title": "FormOfPaymentResTransactionIdsForRefundPoints"
        }
      },
      "title": "FormOfPaymentRes"
    },
    "formOfPaymentSearchRes": {
      "description": "information concerning form of payment",
      "type": "object",
      "properties": {
        "paymentInfo": {
          "$ref": "#/definitions/paymentInfoSearchRes"
        }
      },
      "title": "FormOfPaymentSearchRes"
    },
    "refundPoints": {
      "description": "transaction identifier of the payment to be refunded",
      "type": "string",
      "pattern": "^.*$"
    },
    "paymentByPoints": {
      "description": "payment made with points",
      "type": "object",
      "properties": {
        "transactionId": {
          "$ref": "#/definitions/transactionId"
        },
        "dailyPoints": {
          "$ref": "#/definitions/dailyPoints"
        },
        "totalPoints": {
          "$ref": "#/definitions/totalPoints"
        }
      },
      "title": "PaymentByPoints"
    },
    "transactionId": {
      "description": "transaction identifier for the payment",
      "type": "string",
      "pattern": "^[A-Za-z0-9]{2,9}$",
      "minLength": 2,
      "maxLength": 9
    },
    "dailyPoints": {
      "description": "daily points cost",
      "type": "integer"
    },
    "totalPoints": {
      "description": "total points cost",
      "type": "integer"
    },
    "paymentTransactionReq": {
      "description": "information concerning payment amount, payment source, form of payment",
      "type": "object",
      "properties": {
        "id": {
          "description": "identifies a payment within the segment. This id is unique for each payment object at segment level",
          "type": "integer"
        },
        "amount": {
          "$ref": "#/definitions/paymentInfoAmount"
        },
        "paymentSource": {
          "$ref": "#/definitions/paymentSource"
        },
        "paymentStatus": {
          "$ref": "#/definitions/paymentStatus"
        },
        "paymentType": {
          "$ref": "#/definitions/paymentType"
        },
        "paymentCard": {
          "$ref": "#/definitions/paymentCard"
        },
        "guaranteePaymentId": {
          "$ref": "#/definitions/guaranteePaymentId"
        },
        "paymentIntent": {
          "$ref": "#/definitions/paymentIntent"
        },
        "fraudRecordId": {
          "description": "fraud record Id returned by the payment provider",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 99
        },
        "paymentRecordId": {
          "description": "payment record Id returned by the payment provider",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 99
        },
        "transactionDate": {
          "description": "date and time of the payment transaction",
          "type": "string",
          "pattern": "^.*$",
          "example": "2018-05-26T22:00:00"
        },
        "pares": {
          "description": "technical identifier of the 3D Secure check, binary value",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 99
        },
        "invoiceId": {
          "$ref": "#/definitions/invoiceId"
        },
        "xid": {
          "description": "technical identifier of the 3D Secure check, binary value",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 99
        },
        "veresCode": {
          "description": "technical identifier of the 3D Secure check",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 1
        },
        "creditCardCompany": {
          "description": "company used in the 3DSecure process",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 4
        },
        "payer": {
          "$ref": "#/definitions/payerInformation"
        },
        "multiFactorInfo": {
          "$ref": "#/definitions/multiFactorInfo"
        }
      },
      "title": "PaymentTransactionReq"
    },
    "paymentTransactionRes": {
      "description": "information concerning payment amount, payment source, payment informer, form of payment",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "description": "identifies a payment within the segment. This id is unique for each payment object at segment level",
          "type": "integer"
        },
        "amount": {
          "$ref": "#/definitions/paymentInfoAmount"
        },
        "paymentSource": {
          "$ref": "#/definitions/paymentSource"
        },
        "paymentStatus": {
          "$ref": "#/definitions/paymentStatus"
        },
        "paymentType": {
          "$ref": "#/definitions/paymentType"
        },
        "paymentCard": {
          "$ref": "#/definitions/paymentCardRes"
        },
        "guaranteePaymentId": {
          "$ref": "#/definitions/guaranteePaymentId"
        },
        "paymentIntent": {
          "$ref": "#/definitions/paymentIntent"
        },
        "informerVendorCode": {
          "description": "vendorCode of the channel doing the payment transaction",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 5
        },
        "channelSubUser": {
          "description": "subUser of the channel doing the payment transaction",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 8
        },
        "fraudRecordId": {
          "description": "fraud record Id returned by the payment provider",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 99
        },
        "paymentRecordId": {
          "description": "payment record Id returned by the payment provider",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 99
        },
        "transactionDate": {
          "description": "date and time of the payment transaction",
          "type": "string",
          "pattern": "^.*$",
          "example": "2018-05-26T22:00:00"
        },
        "pares": {
          "description": "technical identifier of the 3D Secure check, binary value",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 99
        },
        "invoiceId": {
          "$ref": "#/definitions/invoiceId"
        },
        "xid": {
          "description": "technical identifier of the 3D Secure check, binary value",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 99
        },
        "veresCode": {
          "description": "technical identifier of the 3D Secure check",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 1
        },
        "creditCardCompany": {
          "description": "company used in the 3DSecure process",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 4
        },
        "payer": {
          "$ref": "#/definitions/payerInformation"
        },
        "multiFactorInfo": {
          "$ref": "#/definitions/multiFactorInfo"
        }
      },
      "title": "PaymentTransactionRes"
    },
    "paymentInfoReq": {
      "description": "information concerning payment amount, payment source, payment informer, form of payment",
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/paymentInfoAmount"
        },
        "paymentSource": {
          "$ref": "#/definitions/paymentSource"
        },
        "paymentStatus": {
          "$ref": "#/definitions/paymentStatus"
        },
        "paymentType": {
          "$ref": "#/definitions/paymentType"
        },
        "paymentCard": {
          "$ref": "#/definitions/paymentCard"
        },
        "guaranteePaymentId": {
          "$ref": "#/definitions/guaranteePaymentId"
        },
        "paymentIntent": {
          "$ref": "#/definitions/paymentIntent"
        },
        "fraudRecordId": {
          "description": "fraud record Id returned by the payment provider",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 99
        },
        "paymentRecordId": {
          "description": "payment record Id returned by the payment provider",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 99
        },
        "transactionDate": {
          "description": "date and time of the payment transaction",
          "type": "string",
          "pattern": "^.*$",
          "example": "2018-05-26T22:00:00"
        },
        "pares": {
          "description": "technical identifier of the 3D Secure check, binary value",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 99
        },
        "invoiceId": {
          "$ref": "#/definitions/invoiceId"
        },
        "xid": {
          "description": "technical identifier of the 3D Secure check, binary value",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 99
        },
        "veresCode": {
          "description": "technical identifier of the 3D Secure check",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 1
        },
        "creditCardCompany": {
          "description": "company used in the 3DSecure process",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 4
        },
        "payer": {
          "$ref": "#/definitions/payerInformation"
        },
        "multiFactorInfo": {
          "$ref": "#/definitions/multiFactorInfo"
        }
      },
      "title": "PaymentInfoReq"
    },
    "paymentInfoRes": {
      "description": "information concerning payment amount, payment source, payment informer, form of payment",
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/paymentInfoAmount"
        },
        "paymentSource": {
          "$ref": "#/definitions/paymentSource"
        },
        "paymentStatus": {
          "$ref": "#/definitions/paymentStatus"
        },
        "paymentType": {
          "$ref": "#/definitions/paymentType"
        },
        "paymentCard": {
          "$ref": "#/definitions/paymentCardRes"
        },
        "guaranteePaymentId": {
          "$ref": "#/definitions/guaranteePaymentId"
        },
        "paymentIntent": {
          "$ref": "#/definitions/paymentIntent"
        },
        "informerVendorCode": {
          "$ref": "#/definitions/informerVendorCode"
        },
        "fraudRecordId": {
          "description": "fraud record Id returned by the payment provider",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 99
        },
        "paymentRecordId": {
          "description": "payment record Id returned by the payment provider",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 99
        },
        "transactionDate": {
          "description": "date and time of the payment transaction",
          "type": "string",
          "pattern": "^.*$",
          "example": "2018-05-26T22:00:00"
        },
        "pares": {
          "description": "technical identifier of the 3D Secure check, binary value",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 99
        },
        "invoiceId": {
          "$ref": "#/definitions/invoiceId"
        },
        "xid": {
          "description": "technical identifier of the 3D Secure check, binary value",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 99
        },
        "veresCode": {
          "description": "technical identifier of the 3D Secure check",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 1
        },
        "creditCardCompany": {
          "description": "company used in the 3DSecure process",
          "type": "string",
          "pattern": "^.*$",
          "maxLength": 4
        },
        "payer": {
          "$ref": "#/definitions/payerInformation"
        },
        "multiFactorInfo": {
          "$ref": "#/definitions/multiFactorInfo"
        }
      },
      "title": "PaymentInfoRes"
    },
    "paymentInfoSearchRes": {
      "description": "information concerning payment amount, payment source, payment informer, form of payment",
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/paymentInfoAmount"
        },
        "paymentStatus": {
          "$ref": "#/definitions/paymentStatus"
        },
        "paymentType": {
          "$ref": "#/definitions/paymentType"
        },
        "paymentCard": {
          "$ref": "#/definitions/paymentCardSearch"
        },
        "guaranteePaymentId": {
          "$ref": "#/definitions/guaranteePaymentId"
        },
        "paymentIntent": {
          "$ref": "#/definitions/paymentIntent"
        }
      },
      "title": "PaymentInfoSearchRes"
    },
    "payerInformation": {
      "description": "describe the payer of the payment object",
      "type": "object",
      "required": [
        "payerType"
      ],
      "properties": {
        "payerId": {
          "type": "integer",
          "description": "identifies a guest within the reservation which will be the payer of this payment object. This id cross reference a userProfile. It is only set when payerType is set to Guest"
        },
        "payerType": {
          "type": "string",
          "enum": [
            "Guest",
            "CorporateAccount"
          ],
          "description": "identifies the type of the payer. It is either \"Guest\" or \"CorporateAccount\""
        }
      },
      "title": "PayerInformation"
    },
    "paymentInfoAmount": {
      "description": "the amount paid/to be paid. Mandatory if the paymentStatus is provided",
      "type": "string",
      "pattern": "^.*$"
    },
    "paymentSource": {
      "description": "payment source",
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/paymentSourceCode"
        },
        "text": {
          "$ref": "#/definitions/paymentSourceText"
        }
      },
      "title": "PaymentSource"
    },
    "paymentStatus": {
      "description": "indicates if the payment has already been received or not, could be [Payment received or Waiting payment]",
      "type": "string",
      "enum": [
        "Payment received",
        "Waiting payment"
      ]
    },
    "paymentType": {
      "description": "payment type based on OTA_CodeList PMT. (1-Cash, 2-Direct Bill, 3-Voucher, 5-Credit Card, 7-Check, 19-IATA Number, 30-Corporate Discount Number, 44-Guarantee to Property, 46-Online Payment, 47-Pay by Points, 48-Pay by EFT Electronic Funds Transfer)",
      "type": "integer",
      "enum": [
        1,
        2,
        3,
        5,
        7,
        19,
        30,
        44,
        46,
        47,
        48
      ]
    },
    "paymentCard": {
      "description": "used in case of guarantee per credit card (guaranteeTypeCode 5). Details of a credit card if the chosen means of payment is a credit card",
      "type": "object",
      "required": [
        "cardCode",
        "expireDate",
        "cardNumber"
      ],
      "properties": {
        "cardCode": {
          "$ref": "#/definitions/cardCode"
        },
        "expireDate": {
          "$ref": "#/definitions/expireDate"
        },
        "cardNumber": {
          "$ref": "#/definitions/cardNumberReq"
        },
        "cardHolderName": {
          "$ref": "#/definitions/cardHolderName"
        },
        "fraudRiskScore": {
          "$ref": "#/definitions/fraudRiskScore"
        },
        "fraudRiskFlag": {
          "$ref": "#/definitions/fraudRiskFlag"
        },
        "cvvNumber": {
          "$ref": "#/definitions/cvvNumber"
        },
        "issuanceCountry": {
          "$ref": "#/definitions/issuanceCountry"
        },
        "isCNP": {
          "$ref": "#/definitions/isCNP"
        },
        "billingAddress": {
          "description": "billing address, potentially different from the payer address",
          "$ref": "#/definitions/addressWithoutIndex"
        }
      },
      "title": "PaymentCard"
    },
    "paymentCardRes": {
      "description": "used in case of guarantee per credit card (guaranteeTypeCode 5). Details of a credit card if the chosen means of payment is a credit card",
      "type": "object",
      "required": [
        "cardCode",
        "expireDate",
        "cardNumber"
      ],
      "properties": {
        "cardCode": {
          "$ref": "#/definitions/cardCode"
        },
        "expireDate": {
          "$ref": "#/definitions/expireDate"
        },
        "cardNumber": {
          "$ref": "#/definitions/cardNumber"
        },
        "cardHolderName": {
          "$ref": "#/definitions/cardHolderName"
        },
        "fraudRiskScore": {
          "$ref": "#/definitions/fraudRiskScore"
        },
        "fraudRiskFlag": {
          "$ref": "#/definitions/fraudRiskFlag"
        },
        "issuanceCountry": {
          "$ref": "#/definitions/issuanceCountry"
        },
        "isCNP": {
          "$ref": "#/definitions/isCNP"
        },
        "billingAddress": {
          "description": "billing address, potentially different from the payer address",
          "$ref": "#/definitions/addressWithoutIndex"
        }
      },
      "title": "PaymentCardRes"
    },
    "paymentCardSearch": {
      "description": "used in case of guarantee per credit card (guaranteeTypeCode 5). Details of a credit card if the chosen means of payment is a credit card",
      "type": "object",
      "required": [
        "cardCode",
        "expireDate",
        "cardNumber"
      ],
      "properties": {
        "cardCode": {
          "$ref": "#/definitions/cardCode"
        },
        "expireDate": {
          "$ref": "#/definitions/expireDate"
        },
        "cardNumber": {
          "$ref": "#/definitions/cardNumber"
        }
      },
      "title": "PaymentCardSearch"
    },
    "guaranteePaymentId": {
      "description": "guarantee identifier used in case of guarantee per Booking source or CD Number (paymentType 19 or 30)",
      "type": "string",
      "pattern": "^[A-Za-z0-9]{1,20}$",
      "minLength": 1,
      "maxLength": 20
    },
    "paymentIntent": {
      "description": "specifies if the payment is for a deposit, guarantee or refund",
      "type": "string",
      "enum": [
        "Deposit",
        "Guarantee",
        "Refund"
      ]
    },
    "informerVendorCode": {
      "description": "vendor code which set the paymentStatus to 'Payment received'",
      "type": "string",
      "pattern": "^.*$",
      "maxLength": 5
    },
    "multiFactorInfo": {
      "description": "payment transaction information",
      "type": "object",
      "properties": {
        "agreedMandate": {
          "type": "string",
          "description": "describes the agreed mandate between the cardholder and the agent/third party. [NA=No agreement for future MIT, NS=Agreement for future No show/Cancellation Fee, BP=Agreement for prepayment/balance payment,FR=Agreement for recurring payment (fixed date), UR=Agreement for recurring payment (usage based non fixed date)]",
          "maxLength": 2
        },
        "authenticationDidNotComplete": {
          "type": "string",
          "description": "this value is required to communicate to the authorizing party that authentication could not be completed in certain circumstances",
          "maxLength": 2
        },
        "bookingChannel": {
          "type": "string",
          "description": "indicates in which channel the transaction was initiated. [MO=Mail order, TO=Telephone order, EC=Ecomm, FA=Face-To-Face]",
          "maxLength": 2
        },
        "cardNumberCollection": {
          "type": "string",
          "description": "determines how the card number was collected for the transaction. [K=Keyed in, S=Card On File]",
          "maxLength": 1
        },
        "cavv": {
          "type": "string",
          "description": "cardholder Authentication Verification Value. The value should be appended to the authorization message signifying that the transaction has been successfully authenticated. Required only for MasterCard",
          "maxLength": 48
        },
        "dsTransactionId": {
          "type": "string",
          "description": "unique transaction identifier assigned by the Directory Server (DS) to identify a single transaction",
          "maxLength": 36
        },
        "eci": {
          "type": "string",
          "description": "electronic Commerce Indicator. The ECI value is part of the 2 data elements that indicate the transaction was processed electronically. This should be passed on the authorization transaction to the gateway/processor",
          "maxLength": 40
        },
        "exemptionUsed": {
          "type": "string",
          "description": "determines which exemption was used. Before using any exemption or Delegated authentication, a Booking Agent must ensure the acquirer of the merchant is allowing use of this exemption. [TR=Transaction Risk Analysis Exemption, TV=Trusted Beneficiary Exemption, LV=Low Value Exemption, SC=Secure Corporate Exemption, DA=Delegated Authentication]",
          "maxLength": 2
        },
        "identifierOfAuthorization": {
          "type": "string",
          "description": "describes the Transaction ID/Trace ID of the authorization request when performed by the Booking Agent",
          "maxLength": 16
        },
        "merchantName": {
          "type": "string",
          "description": "used by authenticator in authentication request",
          "maxLength": 40
        },
        "tavv": {
          "type": "string",
          "description": "token Authentication Verification Value. Required only for Visa card",
          "maxLength": 40
        },
        "threeDsAuthenticationValue": {
          "type": "string",
          "description": "3D Secure Authentication value",
          "maxLength": 40
        },
        "threeDsVersion": {
          "type": "string",
          "description": "version of 3D Secure used",
          "maxLength": 10
        },
        "transactionXid": {
          "type": "string",
          "description": "transaction identifier resulting from authentication processing",
          "maxLength": 40
        }
      },
      "title": "MultiFactorInfo"
    },
    "paymentSourceCode": {
      "description": "the code designating the payment source, e.g. P for PayPal",
      "type": "string",
      "pattern": "^.*$",
      "maxLength": 20
    },
    "paymentSourceText": {
      "description": "free-form text to describe or name the payment source, e.g. PayPal",
      "type": "string",
      "pattern": "^.*$",
      "maxLength": 100
    },
    "cardCode": {
      "description": "the code of the credit card provider",
      "type": "string",
      "pattern": "^[A-Z0-9]{2,2}$",
      "minLength": 2,
      "maxLength": 2
    },
    "expireDate": {
      "description": "expire date",
      "type": "string",
      "pattern": "^.*$"
    },
    "cardNumber": {
      "description": "card number",
      "type": "object",
      "required": [
        "token"
      ],
      "properties": {
        "token": {
          "$ref": "#/definitions/token"
        },
        "longToken": {
          "$ref": "#/definitions/longToken"
        },
        "tokenProviderName": {
          "$ref": "#/definitions/tokenProviderName"
        }
      },
      "title": "CardNumber"
    },
    "cardNumberReq": {
      "description": "card number",
      "type": "object",
      "required": [
        "token"
      ],
      "properties": {
        "token": {
          "$ref": "#/definitions/cardToken"
        },
        "longToken": {
          "$ref": "#/definitions/longToken"
        },
        "tokenProviderName": {
          "$ref": "#/definitions/tokenProviderName"
        }
      },
      "title": "CardNumberReq"
    },
    "cvvNumber": {
      "description": "the CVV number",
      "type": "object",
      "required": [
        "token"
      ],
      "properties": {
        "token": {
          "$ref": "#/definitions/token"
        }
      },
      "title": "CvvNumber"
    },
    "issuanceCountry": {
      "description": "issuance country of the card using the ISO 3166-1 standard code for countries, territories or areas",
      "type": "string",
      "pattern": "^[a-zA-Z]{2}$",
      "minLength": 2,
      "maxLength": 2,
      "example": "BR"
    },
    "cardHolderName": {
      "description": "name of the credit card holder. The name should be as written on the credit card",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 64
    },
    "fraudRiskFlag": {
      "description": "indicates the fraud flag value for the transaction",
      "type": "boolean"
    },
    "fraudRiskScore": {
      "description": "indicates the fraud score for the transaction",
      "type": "string",
      "pattern": "^.*$"
    },
    "token": {
      "description": "token provided by the requestor",
      "type": "string",
      "pattern": "^[A-Za-z0-9]{1,19}$",
      "minLength": 1,
      "maxLength": 19
    },
    "cardToken": {
      "description": "token provided by the requestor",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 50
    },
    "longToken": {
      "description": "long format token provided by the requestor",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 50,
      "example": "jtg89kl-@56_fthlmpmn896354kfhg698_8517-kf"
    },
    "tokenProviderName": {
      "description": "name of the token provider",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 100,
      "example": "FreedomPay"
    },
    "isCNP": {
      "description": "card not present indicator. If it is set to true the card can not be present at check-in time. If it is set to false the card needs to be physically present at check-in time. Default value false",
      "type": "boolean"
    },
    "policiesRes": {
      "description": "element containing all the policies regarding guarantee, deposit, cancellation, no-show and early check-out",
      "type": "object",
      "properties": {
        "isPrepaid": {
          "description": "true when deposit is 100% of the stay",
          "type": "boolean"
        },
        "guarantee": {
          "description": "payment policies for the guarantee",
          "$ref": "#/definitions/guaranteeRes"
        },
        "deposit": {
          "description": "payment policies for the deposit",
          "$ref": "#/definitions/depositRes"
        },
        "cancellation": {
          "description": "the cancellation policy information applicable to the rate plan for the requested period",
          "$ref": "#/definitions/cancellationRes"
        },
        "cancellationNoShow": {
          "description": "the no-show policy information applicable to the rate plan for the requested period, if present",
          "$ref": "#/definitions/cancellationNoShowRes"
        },
        "earlyDeparture": {
          "description": "the early departure policy information applicable to the rate plan for the requested period, if present. Returned only for rate plans having Sleeping room product",
          "$ref": "#/definitions/earlyDepartureRes"
        },
        "checkinTime": {
          "description": "the check-in time",
          "type": "string"
        },
        "checkoutTime": {
          "description": "the check-out time",
          "type": "string"
        }
      },
      "title": "PoliciesRes"
    },
    "migPoliciesRes": {
      "description": "element containing all the policies regarding guarantee, deposit, cancellation, no-show and early check-out",
      "type": "object",
      "properties": {
        "guarantee": {
          "description": "payment policies for the guarantee",
          "$ref": "#/definitions/guaranteeRes"
        },
        "deposit": {
          "description": "payment policies for the deposit",
          "$ref": "#/definitions/depositRes"
        },
        "cancellation": {
          "description": "the cancellation policy information applicable to the rate plan for the requested period",
          "$ref": "#/definitions/migCancellationRes"
        },
        "cancellationNoShow": {
          "description": "the no-show policy information applicable to the rate plan for the requested period, if present",
          "$ref": "#/definitions/migCancellationNoShowRes"
        },
        "earlyDeparture": {
          "description": "the early departure policy information applicable to the rate plan for the requested period, if present. Returned only for rate plans having Sleeping room product",
          "$ref": "#/definitions/earlyDepartureRes"
        },
        "checkinTime": {
          "description": "the check-in time",
          "type": "string"
        },
        "checkoutTime": {
          "description": "the check-out time",
          "type": "string"
        }
      },
      "title": "MigPoliciesRes"
    },
    "guaranteeRes": {
      "description": "payment policies for the guarantee",
      "type": "object",
      "required": [
        "isRequired"
      ],
      "properties": {
        "isRequired": {
          "$ref": "#/definitions/isRequired"
        },
        "time": {
          "$ref": "#/definitions/time"
        },
        "description": {
          "$ref": "#/definitions/description"
        },
        "acceptedGuarantees": {
          "description": "indicate the list of accepted forms of guarantee and credit cards",
          "$ref": "#/definitions/acceptedGuarantees"
        }
      },
      "title": "GuaranteeRes"
    },
    "depositRes": {
      "description": "payment policies for the deposit",
      "type": "object",
      "required": [
        "isRequired",
        "amount"
      ],
      "properties": {
        "isRequired": {
          "$ref": "#/definitions/isRequired"
        },
        "feeType": {
          "$ref": "#/definitions/policyFeeType"
        },
        "feeValue": {
          "description": "flat amount, flat amount per night, number of nights or percentage fee defined in deposit policy",
          "type": "string"
        },
        "amount": {
          "description": "computed amount for deposit due",
          "type": "string"
        },
        "description": {
          "$ref": "#/definitions/description"
        },
        "deadline": {
          "$ref": "#/definitions/deadline"
        },
        "acceptedDeposits": {
          "description": "indicate the list of accepted forms of deposit and credit cards",
          "$ref": "#/definitions/acceptedDeposits"
        }
      },
      "title": "DepositRes"
    },
    "cancellationRes": {
      "description": "the cancellation policy information applicable to the rate plan for the requested period",
      "type": "object",
      "required": [
        "feeType",
        "amount",
        "isGracePeriod"
      ],
      "properties": {
        "feeType": {
          "$ref": "#/definitions/policyFeeType"
        },
        "feeValue": {
          "description": "flat amount, flat amount per night, number of nights or percentage fee defined in cancellation policy",
          "type": "string"
        },
        "amount": {
          "description": "computed amount for cancellation due",
          "type": "string"
        },
        "deadline": {
          "$ref": "#/definitions/deadline"
        },
        "isGracePeriod": {
          "description": "is set to true if policy is not applied",
          "type": "boolean"
        },
        "isApplied": {
          "description": "if true, indicates that this cancellation penalty was used in the fee calculation",
          "type": "boolean"
        }
      },
      "title": "CancellationRes"
    },
    "migCancellationRes": {
      "description": "the cancellation policy information applicable to the rate plan for the requested period",
      "type": "object",
      "required": [
        "feeType",
        "amount"
      ],
      "properties": {
        "feeType": {
          "$ref": "#/definitions/policyFeeType"
        },
        "feeValue": {
          "description": "flat amount, flat amount per night, number of nights or percentage fee defined in cancellation policy",
          "type": "string"
        },
        "amount": {
          "description": "computed amount for cancellation due",
          "type": "string"
        },
        "deadline": {
          "$ref": "#/definitions/deadline"
        },
        "isApplied": {
          "description": "if true, indicates that this cancellation penalty was used in the fee calculation",
          "type": "boolean"
        }
      },
      "title": "MigCancellationRes"
    },
    "cancellationNoShowRes": {
      "description": "the no-show policy information applicable to the rate plan for the requested period, if present",
      "type": "object",
      "required": [
        "feeType",
        "amount",
        "deadline",
        "isGracePeriod"
      ],
      "properties": {
        "feeType": {
          "$ref": "#/definitions/policyFeeType"
        },
        "feeValue": {
          "description": "flat amount, flat amount per night, number of nights or percentage fee defined in cancellation no show policy",
          "type": "string"
        },
        "amount": {
          "description": "computed amount due for cancellation-noshow policy",
          "type": "string"
        },
        "deadline": {
          "$ref": "#/definitions/deadline"
        },
        "refundPercentage": {
          "description": "the refund percentage corresponds to the percentage out of the penalty that the guest will receive in case of cancellation",
          "type": "string"
        },
        "isGracePeriod": {
          "description": "is set to true if policy is not applied",
          "type": "boolean"
        },
        "isApplied": {
          "description": "if true, indicates that this cancellation no show penalty was used in the fee calculation",
          "type": "boolean"
        }
      },
      "title": "CancellationNoShowRes"
    },
    "migCancellationNoShowRes": {
      "description": "the no-show policy information applicable to the rate plan for the requested period, if present",
      "type": "object",
      "required": [
        "feeType",
        "amount",
        "deadline"
      ],
      "properties": {
        "feeType": {
          "$ref": "#/definitions/policyFeeType"
        },
        "feeValue": {
          "description": "flat amount, flat amount per night, number of nights or percentage fee defined in cancellation no show policy",
          "type": "string"
        },
        "amount": {
          "description": "computed amount due for cancellation-noshow policy",
          "type": "string"
        },
        "deadline": {
          "$ref": "#/definitions/deadline"
        },
        "refundPercentage": {
          "description": "the refund percentage corresponds to the percentage out of the penalty that the guest will receive in case of cancellation",
          "type": "string"
        },
        "isApplied": {
          "description": "if true, indicates that this cancellation no show penalty was used in the fee calculation",
          "type": "boolean"
        }
      },
      "title": "MigCancellationNoShowRes"
    },
    "earlyDepartureRes": {
      "description": "the early departure policy information applicable to the rate plan for the requested period, if present. Returned only for rate plans having Sleeping room product",
      "type": "object",
      "required": [
        "feeType",
        "amount"
      ],
      "properties": {
        "feeType": {
          "$ref": "#/definitions/policyFeeType"
        },
        "feeValue": {
          "description": "flat amount, flat amount per night, number of nights or percentage fee defined in early departure policy",
          "type": "string"
        },
        "amount": {
          "description": "computed amount for early check-out due",
          "type": "string"
        },
        "isApplied": {
          "description": "if true, indicates that this early Departure penalty was used in the fee calculation",
          "type": "boolean"
        }
      },
      "title": "EarlyDepartureRes"
    },
    "isRequired": {
      "description": "indicates whether the guarantee/deposit is mandatory",
      "type": "boolean"
    },
    "time": {
      "description": "cancellation time of default cancellation no show policy",
      "type": "string"
    },
    "policyFeeType": {
      "description": "the due amount type of the policy",
      "type": "string",
      "enum": [
        "Flat",
        "FlatPerNight",
        "Nights",
        "StayPercent",
        "FirstNight",
        "LastNight",
        "FirstLast",
        "FullStay"
      ]
    },
    "amount": {
      "description": "amount defined in the CRS which includes included taxes/service charges and excludes excluded taxes/service charges",
      "type": "string",
      "pattern": "^.*$"
    },
    "deadline": {
      "type": "object",
      "required": [
        "dateTime",
        "deadlineType"
      ],
      "properties": {
        "dateTime": {
          "description": "the deadline date/time, expressed in UTC",
          "type": "string",
          "example": "2014-05-26T22:00:00"
        },
        "deadlineType": {
          "description": "the deadline type",
          "type": "string",
          "enum": [
            "atBooking",
            "numberOfDaysAfterBooking",
            "numberOfDaysBeforeCheckin"
          ]
        },
        "deadlineValue": {
          "description": "value of the deadline type. Not returned if deadlineType is atBooking",
          "type": "integer"
        }
      },
      "title": "Deadline"
    },
    "acceptedFop": {
      "type": "string",
      "enum": [
        "cash",
        "directBill",
        "voucher",
        "paymentCard",
        "check",
        "businessAccount",
        "miscChargeOrder",
        "travelAgencyIata",
        "frequentGuestNumber",
        "wirePayment",
        "corporateNumber",
        "paymentManager",
        "advancedDeposit",
        "crqCheck",
        "hotelGuestId"
      ]
    },
    "acceptedGuarantees": {
      "$ref": "#/definitions/acceptedDeposits"
    },
    "acceptedDeposits": {
      "type": "object",
      "description": "accepted forms of payment and credit cards",
      "properties": {
        "acceptedFops": {
          "description": "accepted forms of payment",
          "type": "array",
          "items": {
            "$ref": "#/definitions/acceptedFop"
          },
          "title": "AcceptedDepositsAcceptedFops"
        },
        "creditCards": {
          "description": "list of accepted credit cards",
          "type": "array",
          "items": {
            "$ref": "#/definitions/creditCard"
          },
          "title": "AcceptedDepositsCreditCards"
        }
      },
      "title": "AcceptedDeposits"
    },
    "creditCard": {
      "description": "credit card code",
      "type": "string",
      "minLength": 2,
      "maxLength": 2
    },
    "corporateAccountInfoReq": {
      "description": "list of corporate accounts (up to 2 from different sources)",
      "type": "array",
      "maxItems": 2,
      "items": {
        "type": "object",
        "title": "CorporateAccountInfoReqItem",
        "properties": {
          "accountName": {
            "$ref": "#/definitions/accountName"
          },
          "cdNumber": {
            "$ref": "#/definitions/cdNumber"
          },
          "isCdAutoAppended": {
            "$ref": "#/definitions/isCdAutoAppended"
          },
          "accountSource": {
            "$ref": "#/definitions/accountSource"
          },
          "address": {
            "$ref": "#/definitions/address"
          },
          "telephone": {
            "$ref": "#/definitions/telephone"
          },
          "email": {
            "$ref": "#/definitions/email"
          },
          "companyProfileId": {
            "$ref": "#/definitions/companyProfileId"
          },
          "nativeInformation": {
            "$ref": "#/definitions/companyNativeInformation"
          },
          "externalProfileIds": {
            "description": "corporate profile id received from external system",
            "type": "array",
            "items": {
              "$ref": "#/definitions/externalProfileId"
            },
            "title": "CorporateAccountInfoReqItemExternalProfileIds"
          }
        }
      },
      "title": "CorporateAccountInfoReq"
    },
    "corporateAccountInfoRes": {
      "description": "list of corporate accounts (up to 2 from different sources)",
      "type": "array",
      "maxItems": 2,
      "items": {
        "type": "object",
        "title": "CorporateAccountInfoResItem",
        "properties": {
          "accountName": {
            "$ref": "#/definitions/accountName"
          },
          "cdNumber": {
            "$ref": "#/definitions/cdNumber"
          },
          "isCdAutoAppended": {
            "$ref": "#/definitions/isCdAutoAppended"
          },
          "accountSource": {
            "$ref": "#/definitions/accountSource"
          },
          "address": {
            "$ref": "#/definitions/address"
          },
          "telephone": {
            "$ref": "#/definitions/telephone"
          },
          "email": {
            "$ref": "#/definitions/email"
          },
          "isMainCorporateAccount": {
            "$ref": "#/definitions/isMainCorporateAccount"
          },
          "companyProfileId": {
            "$ref": "#/definitions/companyProfileId"
          },
          "companyProfileStatus": {
            "$ref": "#/definitions/companyProfileStatus"
          },
          "profileNotFound": {
            "$ref": "#/definitions/profileNotFound"
          },
          "discrepancyFound": {
            "$ref": "#/definitions/discrepancyFound"
          },
          "discrepancyReason": {
            "$ref": "#/definitions/discrepancyReason",
            "description": "list of fields separated by comma which has discrepancy"
          },
          "nativeInformation": {
            "$ref": "#/definitions/companyNativeInformation"
          },
          "externalProfileIds": {
            "description": "corporate profile id received from external system",
            "type": "array",
            "items": {
              "$ref": "#/definitions/externalProfileId"
            },
            "title": "CorporateAccountInfoResItemExternalProfileIds"
          }
        }
      },
      "title": "CorporateAccountInfoRes"
    },
    "corporateAccountInfoSearchRes": {
      "type": "object",
      "properties": {
        "accountName": {
          "$ref": "#/definitions/accountName"
        },
        "cdNumber": {
          "$ref": "#/definitions/cdNumber"
        },
        "companyProfileStatus": {
          "$ref": "#/definitions/companyProfileStatus"
        },
        "nativeInformation": {
          "$ref": "#/definitions/companyNativeInformationSearch"
        },
        "externalProfileIds": {
          "description": "corporate profile id received from external system",
          "type": "array",
          "items": {
            "$ref": "#/definitions/externalProfileId"
          },
          "title": "CorporateAccountInfoSearchResExternalProfileIds"
        }
      },
      "title": "CorporateAccountInfoSearchRes"
    },
    "accountName": {
      "description": "corporate account name",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 35
    },
    "cdNumber": {
      "description": "corporate discount number",
      "type": "string",
      "pattern": "^[A-Za-z0-9]{1,20}$",
      "minLength": 1,
      "maxLength": 20
    },
    "isCdAutoAppended": {
      "description": "if true, it means the cd number has not been filled explicitly by the requestor",
      "type": "boolean"
    },
    "isMainCorporateAccount": {
      "description": "set to true if the corporate account information is the one that is taken into account in the reservation",
      "type": "boolean"
    },
    "accountSource": {
      "description": "source of the corporate account information (loyalty account or corporate account)",
      "type": "string",
      "enum": [
        "loyalty",
        "corporate"
      ]
    },
    "companyProfileId": {
      "description": "company identifier on the profile system",
      "type": "string",
      "pattern": "^.*$",
      "maxLength": 36
    },
    "companyProfileStatus": {
      "description": "status of the company in the profile system",
      "type": "string",
      "enum": [
        "Active",
        "Inactive"
      ]
    },
    "companyNativeInformationSearch": {
      "description": "contains the information of the company in native language (non-ASCII characters allowed)",
      "type": "object",
      "required": [
        "language"
      ],
      "properties": {
        "language": {
          "description": "the ISO 639-1 code, like ZH",
          "$ref": "#/definitions/language"
        },
        "accountName": {
          "description": "corporate account name in native language (non-ASCII characters allowed)",
          "$ref": "#/definitions/accountName"
        }
      },
      "title": "CompanyNativeInformationSearch"
    },
    "companyNativeInformation": {
      "description": "contains the information of the company in native language (non-ASCII characters allowed)",
      "type": "object",
      "required": [
        "language"
      ],
      "properties": {
        "language": {
          "description": "the ISO 639-1 code, like ZH",
          "$ref": "#/definitions/language"
        },
        "accountName": {
          "description": "corporate account name in native language (non-ASCII characters allowed)",
          "$ref": "#/definitions/accountName"
        },
        "address": {
          "description": "address in native language (non-ASCII characters allowed)",
          "title": "address",
          "$ref": "#/definitions/address"
        }
      },
      "title": "CompanyNativeInformation"
    },
    "offerReq": {
      "type": "object",
      "description": "offer",
      "required": [
        "productUses"
      ],
      "properties": {
        "groupCode": {
          "$ref": "#/definitions/groupCode"
        },
        "vendorBookingCode": {
          "$ref": "#/definitions/vendorBookingCode"
        },
        "productUses": {
          "$ref": "#/definitions/productUseReq"
        },
        "propertyMarketSegment": {
          "$ref": "#/definitions/propertyMarketSegment"
        },
        "nightlyCorpMarketSegments": {
          "description": "list of corporate market segments applicable for each night of the stay",
          "type": "array",
          "items": {
            "$ref": "#/definitions/nightlyCorporateMarketSegment"
          },
          "title": "OfferReqNightlyCorpMarketSegments"
        },
        "policyTypeCode": {
          "$ref": "#/definitions/policyTypeCode"
        },
        "promoCode": {
          "$ref": "#/definitions/promoCode"
        },
        "isPerpetualOffer": {
          "$ref": "#/definitions/isPerpetualOffer"
        },
        "isOneOffOffer": {
          "$ref": "#/definitions/isOneOffOffer"
        },
        "rateAccessCode": {
          "$ref": "#/definitions/rateAccessCode"
        }
      },
      "title": "OfferReq"
    },
    "offerRes": {
      "type": "object",
      "description": "offer",
      "required": [
        "productUses"
      ],
      "properties": {
        "groupCode": {
          "$ref": "#/definitions/groupCode"
        },
        "vendorBookingCode": {
          "$ref": "#/definitions/vendorBookingCode"
        },
        "policies": {
          "$ref": "#/definitions/policiesRes"
        },
        "productUses": {
          "$ref": "#/definitions/productUseRes"
        },
        "totalRate": {
          "description": "total amount of a segment with extra person",
          "$ref": "#/definitions/reservationTotalRateDetails"
        },
        "totalBaseOccRate": {
          "description": "total amount of a segment without extra person",
          "$ref": "#/definitions/totalRateDetails"
        },
        "totalExtraOccRate": {
          "description": "total amount of extra person in a segment",
          "$ref": "#/definitions/totalRateDetails"
        },
        "fees": {
          "description": "list of fees only used for modify and cancel actions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/fees"
          },
          "title": "OfferResFees"
        },
        "isRateAccepted": {
          "description": "flag returned in case an external rate override has been requested. It is set to true if the rate override has been accepted, false otherwise",
          "type": "boolean"
        },
        "commission": {
          "description": "commission",
          "$ref": "#/definitions/commission"
        },
        "groupId": {
          "$ref": "#/definitions/groupId"
        },
        "propertyMarketSegment": {
          "$ref": "#/definitions/propertyMarketSegment"
        },
        "nightlyCorpMarketSegments": {
          "description": "list of corporate market segments applicable for each night of the stay",
          "type": "array",
          "items": {
            "$ref": "#/definitions/nightlyCorporateMarketSegment"
          },
          "title": "OfferResNightlyCorpMarketSegments"
        },
        "corpMarketSegment": {
          "$ref": "#/definitions/corporateMarketSegment"
        },
        "policyTypeCode": {
          "$ref": "#/definitions/policyTypeCode"
        },
        "promoCode": {
          "$ref": "#/definitions/promoCode"
        },
        "promoGroupCode": {
          "$ref": "#/definitions/promoGroupCode"
        },
        "isPerpetualOffer": {
          "$ref": "#/definitions/isPerpetualOffer"
        },
        "isOneOffOffer": {
          "$ref": "#/definitions/isOneOffOffer"
        },
        "rateAccessCode": {
          "$ref": "#/definitions/rateAccessCode"
        }
      },
      "title": "OfferRes"
    },
    "migOfferReq": {
      "type": "object",
      "description": "offer",
      "required": [
        "totalRate"
      ],
      "properties": {
        "groupCode": {
          "$ref": "#/definitions/groupCode"
        },
        "vendorBookingCode": {
          "$ref": "#/definitions/vendorBookingCode"
        },
        "policies": {
          "$ref": "#/definitions/migPoliciesRes"
        },
        "productUses": {
          "$ref": "#/definitions/migProductUseReq"
        },
        "totalRate": {
          "description": "total amount of a segment with extra person",
          "$ref": "#/definitions/totalRateDetails"
        },
        "totalBaseOccRate": {
          "description": "total amount of a segment without extra person",
          "$ref": "#/definitions/totalRateDetails"
        },
        "totalExtraOccRate": {
          "description": "total amount of extra person in a segment",
          "$ref": "#/definitions/totalRateDetails"
        },
        "fees": {
          "description": "list of fees only used for modify and cancel actions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/fees"
          },
          "title": "MigOfferReqFees"
        },
        "groupId": {
          "$ref": "#/definitions/groupId"
        },
        "period": {
          "description": "period of the group contract",
          "$ref": "#/definitions/period"
        },
        "commission": {
          "description": "commission",
          "$ref": "#/definitions/commission"
        },
        "propertyMarketSegment": {
          "$ref": "#/definitions/propertyMarketSegment"
        },
        "nightlyCorpMarketSegments": {
          "description": "list of corporate market segments applicable for each night of the stay",
          "type": "array",
          "items": {
            "$ref": "#/definitions/nightlyCorporateMarketSegment"
          },
          "title": "MigOfferReqNightlyCorpMarketSegments"
        },
        "policyTypeCode": {
          "$ref": "#/definitions/policyTypeCode"
        },
        "promoCode": {
          "$ref": "#/definitions/promoCode"
        },
        "promoGroupCode": {
          "$ref": "#/definitions/promoGroupCode"
        },
        "isPerpetualOffer": {
          "$ref": "#/definitions/isPerpetualOffer"
        },
        "isOneOffOffer": {
          "$ref": "#/definitions/isOneOffOffer"
        },
        "rateAccessCode": {
          "$ref": "#/definitions/rateAccessCode"
        }
      },
      "title": "MigOfferReq"
    },
    "isPerpetualOffer": {
      "description": "indicates if the offer is considered as a perpetual one",
      "type": "boolean",
      "default": false
    },
    "isOneOffOffer": {
      "description": "indicates if the offer is considered as a one-off offer (one-off offers are promotional offers targeted to a subset of loyalty guest, accessible via a promocode)",
      "type": "boolean",
      "default": false
    },
    "quantity": {
      "description": "number of identical offers requested. Default value is 1",
      "type": "integer"
    },
    "inventoryTypeCode": {
      "description": "business code representing an inventory type",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 1,
      "maxLength": 50
    },
    "upgradedInventoryTypeCode": {
      "description": "upgraded Inventory Type code (Hotelier want to upgrade a guest, pricing is still based on the original inventory type, inventory is taken on the upgraded inventory type)",
      "type": "string",
      "minLength": 1,
      "maxLength": 50
    },
    "pacCode": {
      "description": "unique combination code of product, attributes and occupancy",
      "type": "string",
      "pattern": "^[A-Z0-9]{2,8}$"
    },
    "period": {
      "title": "Period",
      "type": "object",
      "required": [
        "start",
        "end"
      ],
      "properties": {
        "start": {
          "description": "period start date",
          "type": "string",
          "pattern": "^.*$",
          "format": "date"
        },
        "end": {
          "description": "period end date",
          "type": "string",
          "pattern": "^.*$",
          "format": "date"
        }
      }
    },
    "searchPeriod": {
      "type": "object",
      "required": [
        "start"
      ],
      "properties": {
        "start": {
          "description": "search period start date",
          "type": "string",
          "pattern": "^.*$",
          "format": "date"
        },
        "end": {
          "description": "search period end date",
          "type": "string",
          "pattern": "^.*$",
          "format": "date"
        }
      },
      "title": "SearchPeriod"
    },
    "groupCode": {
      "description": "group code, identifies the product in case the reservation is for a group. Group code and rate plan code are mutually exclusive",
      "type": "string",
      "pattern": "^.*$",
      "minLength": 3,
      "maxLength": 50
    },
    "specialRateInd": {
      "description": "special rate indicator, computed for each reservation response and retrieval. It is set to âSâ if the last requestor is PMS, âFâ if the reservation was force-overridden, âGâ if the last operation was a shortening of the stay or if the reservation is a noRecord, and âRâ by default if none of these condition applies",
      "type": "string",
      "enum": [
        "S",
        "F",
        "G",
        "R"
      ]
    },
    "groupId": {
      "description": "internal identifier of the Group Contract",
      "type": "string"
    },
    "saleStatus": {
      "description": "sale status of the group contract",
      "type": "string",
      "enum": [
        "prospect",
        "definite",
        "tentative"
      ]
    },
    "businessSource": {
      "description": "business source",
      "type": "string",
      "minLength": 1,
      "maxLength": 100
    },
    "propertyMarketSegment": {
      "description": "property market segment applicable for the reservation, e.g. wedding, sport group, company annual party etc",
      "type": "string"
    },
    "corporateMarketSegment": {
      "description": "corporate market segment applicable for the next night to be consumed, e.g. GOVERNMENT, CORPORATE, LEISURE etc",
      "type": "string"
    },
    "nightlyCorporateMarketSegment": {
      "description": "corporate market segment applicable for each night of the stay",
      "type": "object",
      "required": [
        "start",
        "end",
        "value"
      ],
      "properties": {
        "start": {
          "description": "start date",
          "type": "string",
          "format": "date"
        },
        "end": {
          "description": "end date",
          "type": "string",
          "format": "date"
        },
        "value": {
          "description": "corporate market segment applicable for the given period, e.g. GOVERNMENT, CORPORATE, LEISURE etc",
          "type": "string"
        }
      },
      "title": "NightlyCorporateMarketSegment"
    },
    "policyTypeCode": {
      "description": "payment policy of the rate plan",
      "type": "string"
    },
    "promoCode": {
      "description": "promotion code for the offer",
      "type": "string",
      "pattern": "^[A-Za-z0-9]{1,20}$",
      "minLength": 1,
      "maxLength": 20
    },
    "promoGroupCode": {
      "description": "promotion group code associated with the promotion code in the offer",
      "type": "string",
      "pattern": "^[A-Za-z0-9]{1,20}$",
      "minLength": 1,
      "maxLength": 20
    },
    "rateAccessCode": {
      "description": "rate access code attached to the rate plan",
      "type": "string",
      "pattern": "^[A-Za-z0-9]{1,6}$",
      "minLength": 1,
      "maxLength": 6
    },
    "productUseId": {
      "description": "unique ID, generated by the CRS, identifying a product use. Included services are also assigned IDs. This ID is required when modifying an existing requested product use and should not specified at creation time",
      "type": "integer",
      "format": "int32"
    },
    "productUseReq": {
      "description": "list of products (w/o attributes) with associated dates that are part of the offer",
      "type": "array",
      "maxItems": 100,
      "items": {
        "type": "object",
        "title": "ProductUseReqItem",
        "required": [
          "period",
          "inventoryTypeCode",
          "guestCounts"
        ],
        "properties": {
          "id": {
            "$ref": "#/definitions/productUseId"
          },
          "period": {
            "description": "period where the product is available",
            "$ref": "#/definitions/period"
          },
          "isDayUse": {
            "description": "indicates that the reservation is a day use reservation",
            "type": "boolean"
          },
          "ratePlanCode": {
            "$ref": "#/definitions/ratePlanCode"
          },
          "channelRatePlanCode": {
            "description": "rate plan code of OTA/GDS",
            "type": "string",
            "pattern": "^.*$",
            "minLength": 1,
            "maxLength": 50
          },
          "routingInstructions": {
            "description": "list of routing Instructions",
            "type": "array",
            "items": {
              "$ref": "#/definitions/routingInstruction"
            },
            "title": "ProductUseReqItemRoutingInstructions"
          },
          "inventoryTypeCode": {
            "$ref": "#/definitions/inventoryTypeCode"
          },
          "channelInventoryTypeCode": {
            "description": "business code representing an inventory type code of OTA/GDS",
            "type": "string",
            "pattern": "^.*$",
            "minLength": 1,
            "maxLength": 50
          },
          "upgradedInventoryTypeCode": {
            "$ref": "#/definitions/upgradedInventoryTypeCode"
          },
          "quantity": {
            "$ref": "#/definitions/quantity"
          },
          "guestCounts": {
            "description": "number of guests for the requested product. Per unit if there is no load balancing, for the whole offer if there is. Only one element should be filled for each age qualifying code",
            "type": "array",
            "items": {
              "$ref": "#/definitions/guestCountReq"
            },
            "title": "ProductUseReqItemGuestCounts"
          },
          "guestOccIds": {
            "description": "list of guest id which are part of this segment",
            "type": "array",
            "maxItems": 50,
            "items": {
              "$ref": "#/definitions/id"
            },
            "title": "ProductUseReqItemGuestOccIds"
          },
          "requestedProductRates": {
            "type": "array",
            "maxItems": 100,
            "items": {
              "$ref": "#/definitions/rateReq"
            },
            "title": "ProductUseReqItemRequestedProductRates"
          },
          "assignedRoom": {
            "$ref": "#/definitions/assignedRoom"
          },
          "requestedRoomConfiguration": {
            "$ref": "#/definitions/requestedRoomConfiguration"
          },
          "attributeCodes": {
            "description": "list of codes attached to attributes requested by guests. The code is for the attention of the hotelier",
            "type": "array",
            "items": {
              "$ref": "#/definitions/attributeCode"
            },
            "title": "ProductUseReqItemAttributeCodes"
          },
          "taxFeeOverride": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/taxOverride"
            },
            "title": "ProductUseReqItemTaxFeeOverride"
          }
        }
      },
      "title": "ProductUseReq"
    },
    "productUseRes": {
      "description": "list of products (w/o attributes) with associated dates that are part of the offer",
      "type": "array",
      "items": {
        "type": "object",
        "title": "ProductUseResItem",
        "required": [
          "period",
          "quantity",
          "inventoryTypeCode",
          "guestCounts",
          "totalGuestCounts"
        ],
        "properties": {
          "id": {
            "$ref": "#/definitions/productUseId"
          },
          "period": {
            "description": "period where the product is available",
            "$ref": "#/definitions/period"
          },
          "isDayUse": {
            "description": "indicates that the reservation is a day use reservation",
            "type": "boolean"
          },
          "ratePlanCode": {
            "$ref": "#/definitions/ratePlanCode"
          },
          "channelRatePlanCode": {
            "description": "rate plan code of OTA/GDS",
            "type": "string",
            "pattern": "^.*$",
            "minLength": 1,
            "maxLength": 50
          },
          "routingInstructions": {
            "description": "list of routing instructions",
            "type": "array",
            "items": {
              "$ref": "#/definitions/routingInstruction"
            },
            "title": "ProductUseResItemRoutingInstructions"
          },
          "inventoryTypeCode": {
            "$ref": "#/definitions/inventoryTypeCode"
          },
          "channelInventoryTypeCode": {
            "description": "business code representing an inventory type code of OTA/GDS",
            "type": "string",
            "pattern": "^.*$",
            "minLength": 1,
            "maxLength": 50
          },
          "isOptional": {
            "$ref": "#/definitions/isOptional"
          },
          "isMainProduct": {
            "$ref": "#/definitions/isMainProduct"
          },
          "isConsumedNextDay": {
            "$ref": "#/definitions/isConsumedNextDay"
          },
          "upgradedInventoryTypeCode": {
            "$ref": "#/definitions/upgradedInventoryTypeCode"
          },
          "quantity": {
            "$ref": "#/definitions/quantity"
          },
          "guestCounts": {
            "description": "number of guests for the requested product. Per unit if there is no load balancing, for the whole offer if there is. Only one element should be filled for each age qualifying code",
            "type": "array",
            "items": {
              "$ref": "#/definitions/guestCountRes"
            },
            "title": "ProductUseResItemGuestCounts"
          },
          "hasGuestCountChanged": {
            "$ref": "#/definitions/hasGuestCountChanged"
          },
          "guestOccIds": {
            "description": "list of guest id which are part of this segment",
            "type": "array",
            "items": {
              "$ref": "#/definitions/id"
            },
            "title": "ProductUseResItemGuestOccIds"
          },
          "totalGuestCounts": {
            "description": "total number of guests for the requested product",
            "type": "array",
            "items": {
              "$ref": "#/definitions/guestCountRes"
            },
            "title": "ProductUseResItemTotalGuestCounts"
          },
          "isProductIncludedInOffer": {
            "description": "indicates if the product rate is included in the offer",
            "type": "boolean"
          },
          "specialRateInd": {
            "$ref": "#/definitions/specialRateInd"
          },
          "productRates": {
            "$ref": "#/definitions/productUseRates"
          },
          "packageRates": {
            "$ref": "#/definitions/productUsePackageRates"
          },
          "assignedRoom": {
            "$ref": "#/definitions/assignedRoom"
          },
          "promotions": {
            "description": "different types of promotions",
            "type": "array",
            "items": {
              "$ref": "#/definitions/promotionRes"
            },
            "title": "ProductUseResItemPromotions"
          },
          "priceGridCode": {
            "description": "price grid code used for non-room products for packages only",
            "$ref": "#/definitions/priceGridCode"
          },
          "requestedRoomConfiguration": {
            "$ref": "#/definitions/requestedRoomConfiguration"
          },
          "attributeCodes": {
            "description": "list of codes attached to attributes requested by guests. The code is for the attention of the hotelier",
            "type": "array",
            "items": {
              "$ref": "#/definitions/attributeCode"
            },
            "title": "ProductUseResItemAttributeCodes"
          },
          "isRateFloorUsed": {
            "$ref": "#/definitions/isRateFloorUsed"
          }
        }
      },
      "title": "ProductUseRes"
    },
    "migProductUseReq": {
      "description": "list of products (w/o attributes) with associated dates that are part of the offer",
      "type": "array",
      "items": {
        "type": "object",
        "title": "MigProductUseReqItem",
        "required": [
          "period",
          "quantity",
          "inventoryTypeCode",
          "guestCounts"
        ],
        "properties": {
          "period": {
            "description": "period where the product is available",
            "$ref": "#/definitions/period"
          },
          "isDayUse": {
            "description": "indicates that the reservation is a day use reservation",
            "type": "boolean"
          },
          "ratePlanCode": {
            "$ref": "#/definitions/ratePlanCode"
          },
          "routingInstructions": {
            "description": "list of routing Instructions",
            "type": "array",
            "items": {
              "$ref": "#/definitions/routingInstruction"
            },
            "title": "MigProductUseReqItemRoutingInstructions"
          },
          "inventoryTypeCode": {
            "$ref": "#/definitions/inventoryTypeCode"
          },
          "isOptional": {
            "$ref": "#/definitions/isOptional"
          },
          "isMainProduct": {
            "$ref": "#/definitions/isMainProduct"
          },
          "isConsumedNextDay": {
            "$ref": "#/definitions/isConsumedNextDay"
          },
          "upgradedInventoryTypeCode": {
            "$ref": "#/definitions/upgradedInventoryTypeCode"
          },
          "quantity": {
            "$ref": "#/definitions/quantity"
          },
          "guestCounts": {
            "description": "number of guests for the requested product. Per unit if there is no load balancing, for the whole offer if there is. Only one element should be filled for each age qualifying code",
            "type": "array",
            "items": {
              "$ref": "#/definitions/guestCountRes"
            },
            "title": "MigProductUseReqItemGuestCounts"
          },
          "guestOccIds": {
            "description": "list of guest id which are part of this segment",
            "type": "array",
            "items": {
              "$ref": "#/definitions/id"
            },
            "title": "MigProductUseReqItemGuestOccIds"
          },
          "isProductIncludedInOffer": {
            "description": "indicates if the product rate is included in the offer.",
            "type": "boolean"
          },
          "specialRateInd": {
            "$ref": "#/definitions/specialRateInd"
          },
          "productRates": {
            "$ref": "#/definitions/productUseRates"
          },
          "packageRates": {
            "$ref": "#/definitions/productUsePackageRates"
          },
          "assignedRoom": {
            "$ref": "#/definitions/assignedRoom"
          },
          "promotions": {
            "description": "different types of promotions",
            "type": "array",
            "items": {
              "$ref": "#/definitions/promotionRes"
            },
            "title": "MigProductUseReqItemPromotions"
          },
          "priceGridCode": {
            "description": "price grid code. It is used for non-room products for packages only.",
            "$ref": "#/definitions/priceGridCode"
          },
          "requestedRoomConfiguration": {
            "$ref": "#/definitions/requestedRoomConfiguration"
          },
          "attributeCodes": {
            "description": "list of codes attached to attributes requested by guests. The code is for the attention of the hotelier",
            "type": "array",
            "items": {
              "$ref": "#/definitions/attributeCode"
            },
            "title": "MigProductUseReqItemAttributeCodes"
          },
          "isRateFloorUsed": {
            "$ref": "#/definitions/isRateFloorUsed"
          },
          "taxFeeOverride": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/taxOverride"
            },
            "title": "MigProductUseReqItemTaxFeeOverride"
          },
          "channelInventoryTypeCode": {
            "description": "business code representing an inventory type code of OTA/GDS",
            "type": "string",
            "pattern": "^.*$",
            "minLength": 1,
            "maxLength": 50
          },
          "channelRatePlanCode": {
            "description": "rate plan code of OTA/GDS",
            "type": "string",
            "pattern": "^.*$",
            "minLength": 1,
            "maxLength": 50
          }
        }
      },
      "title": "MigProductUseReq"
    },
    "productUseSearchRes": {
      "description": "List of products (w/o attributes) with associated dates that are part of the offer",
      "type": "array",
      "items": {
        "type": "object",
        "title": "ProductUseSearchResItem",
        "required": [
          "period",
          "quantity",
          "inventoryTypeCode",
          "guestCounts",
          "totalGuestCounts",
          "productCode"
        ],
        "properties": {
          "id": {
            "$ref": "#/definitions/productUseId"
          },
          "period": {
            "description": "Period where the product is available",
            "$ref": "#/definitions/period"
          },
          "isDayUse": {
            "description": "Indicates that the reservation is a day use reservation",
            "type": "boolean"
          },
          "ratePlanCode": {
            "$ref": "#/definitions/ratePlanCode"
          },
          "routingInstructions": {
            "description": "List of routing Instructions",
            "type": "array",
            "items": {
              "$ref": "#/definitions/routingInstruction"
            },
            "title": "ProductUseSearchResItemRoutingInstructions"
          },
          "inventoryTypeCode": {
            "$ref": "#/definitions/inventoryTypeCode"
          },
          "isOptional": {
            "$ref": "#/definitions/isOptional"
          },
          "isMainProduct": {
            "$ref": "#/definitions/isMainProduct"
          },
          "isConsumedNextDay": {
            "$ref": "#/definitions/isConsumedNextDay"
          },
          "upgradedInventoryTypeCode": {
            "$ref": "#/definitions/upgradedInventoryTypeCode"
          },
          "inventoryTypeName": {
            "description": "Name of the inventory Type (short description)",
            "$ref": "#/definitions/description"
          },
          "quantity": {
            "$ref": "#/definitions/quantity"
          },
          "guestCounts": {
            "description": "Number of guests for the requested product. Per unit if there is no load balancing, for the whole offer if there is. Only one element should be filled for each age qualifying code",
            "type": "array",
            "items": {
              "$ref": "#/definitions/guestCountRes"
            },
            "title": "ProductUseSearchResItemGuestCounts"
          },
          "totalGuestCounts": {
            "description": "Total number of guests for the requested product.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/guestCountRes"
            },
            "title": "ProductUseSearchResItemTotalGuestCounts"
          },
          "isProductIncludedInOffer": {
            "description": "Indicates if the product rate is included in the offer.",
            "type": "boolean"
          },
          "assignedRoom": {
            "$ref": "#/definitions/assignedRoom"
          },
          "productCode": {
            "description": "Code defining the product (Sleeping room, meeting room or any service).",
            "type": "string"
          },
          "priceGridCode": {
            "description": "Price grid code. It is used for non-room products for packages only.",
            "$ref": "#/definitions/priceGridCode"
          },
          "requestedRoomConfiguration": {
            "$ref": "#/definitions/requestedRoomConfiguration"
          },
          "attributeCodes": {
            "description": "list of codes attached to attributes requested by guests. The code is for the attention of the hotelier",
            "type": "array",
            "items": {
              "$ref": "#/definitions/attributeCode"
            },
            "title": "ProductUseSearchResItemAttributeCodes"
          },
          "isRateFloorUsed": {
            "$ref": "#/definitions/isRateFloorUsed"
          }
        }
      },
      "title": "ProductUseSearchRes"
    },
    "ratePlanCode": {
      "description": "rate plan code",
      "type": "string",
      "pattern": "^[A-Z0-9]{1,50}$",
      "minLength": 1,
      "maxLength": 50
    },
    "guestCountReq": {
      "title": "GuestCountReq",
      "type": "object",
      "minProperties": 1,
      "properties": {
        "otaCode": {
          "description": "the OTA Age Qualifier Code (e.g. for an Adult, \"AQC10\"). Either age or a combination of ota code and count is mandatory",
          "type": "string"
        },
        "count": {
          "description": "number of guest",
          "type": "integer",
          "default": 1
        },
        "age": {
          "description": "age of guest. Either age or a combination of ota code is mandatory",
          "$ref": "#/definitions/age"
        }
      }
    },
    "guestCountRes": {
      "title": "GuestCountRes",
      "type": "object",
      "minProperties": 1,
      "properties": {
        "otaCode": {
          "description": "the OTA Age Qualifier Code (e.g. for an Adult, \"AQC10\")",
          "type": "string",
          "pattern": "^.*$"
        },
        "count": {
          "description": "number of guest",
          "type": "integer"
        },
        "age": {
          "$ref": "#/definitions/age"
        },
        "guestType": {
          "description": "guest type code",
          "type": "string",
          "pattern": "^.*$"
        }
      }
    },
    "productUseRates": {
      "type": "object",
      "description": "rates of the product",
      "properties": {
        "dailyRates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rateChange"
          },
          "title": "ProductUseRatesDailyRates"
        },
        "totalRate": {
          "description": "total amount of a segment with extra person",
          "$ref": "#/definitions/totalRateDetails"
        },
        "totalBaseOccRate": {
          "description": "total amount of a segment with extra person",
          "$ref": "#/definitions/totalRateDetails"
        },
        "totalExtraOccRate": {
          "description": "total amount of a segment with extra person",
          "$ref": "#/definitions/totalRateDetails"
        },
        "bookingPattern": {
          "$ref": "#/definitions/bookingPattern"
        },
        "pricingFrequency": {
          "$ref": "#/definitions/pricingFrequency"
        },
        "pricingMethod": {
          "$ref": "#/definitions/pricingMethod"
        },
        "isDefaultPricingBased": {
          "description": "indicates if current product is priced using default rate",
          "type": "boolean"
        },
        "taxInclusionMode": {
          "$ref": "#/definitions/taxInclusionMode"
        },
        "hasRateChange": {
          "description": "indicates that the base amount of the offer is changing over the stay",
          "type": "boolean"
        },
        "ratesDefinition": {
          "description": "the list of applicable rates for current offer",
          "$ref": "#/definitions/ratesDefinition"
        },
        "requestedRates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rateRes"
          },
          "title": "ProductUseRatesRequestedRates"
        }
      },
      "title": "ProductUseRates"
    },
    "productUsePackageRates": {
      "type": "object",
      "description": "rates of the product",
      "properties": {
        "dailyRates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rateChange"
          },
          "title": "ProductUsePackageRatesDailyRates"
        },
        "totalRate": {
          "type": "object",
          "description": "total amount of a segment with extra person",
          "$ref": "#/definitions/totalRateDetails",
          "title": "ProductUsePackageRatesTotalRate"
        },
        "totalBaseOccRate": {
          "type": "object",
          "description": "total amount of a segment with extra person",
          "$ref": "#/definitions/totalRateDetails",
          "title": "ProductUsePackageRatesTotalBaseOccRate"
        },
        "totalExtraOccRate": {
          "type": "object",
          "description": "total amount of a segment with extra person",
          "$ref": "#/definitions/totalRateDetails",
          "title": "ProductUsePackageRatesTotalExtraOccRate"
        },
        "mainWithIncludedProducts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/mainWithIncludedProduct"
          },
          "title": "ProductUsePackageRatesMainWithIncludedProducts"
        },
        "bookingPattern": {
          "$ref": "#/definitions/bookingPattern"
        },
        "pricingFrequency": {
          "$ref": "#/definitions/pricingFrequency"
        },
        "pricingMethod": {
          "$ref": "#/definitions/pricingMethod"
        },
        "isDefaultPricingBased": {
          "description": "indicates if current product is priced using default rate",
          "type": "boolean"
        },
        "taxInclusionMode": {
          "$ref": "#/definitions/taxInclusionMode"
        },
        "hasRateChange": {
          "description": "indicates that the base amount of the offer is changing over the stay",
          "type": "boolean"
        },
        "ratesDefinition": {
          "type": "object",
          "description": "the list of applicable rates for current offer",
          "$ref": "#/definitions/ratesDefinition",
          "title": "ProductUsePackageRatesRatesDefinition"
        },
        "requestedRates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rateRes"
          },
          "title": "ProductUsePackageRatesRequestedRates"
        }
      },
      "title": "ProductUsePackageRates"
    },
    "mainWithIncludedProduct": {
      "description": "daily package price that contains the price of the sleeping room and included non-room products and their tax and service fees. Does not contain the price of the excluded non-room products and their tax and service fees",
      "type": "object",
      "required": [
        "bsAmt"
      ],
      "properties": {
        "start": {
          "description": "period start date",
          "type": "string",
          "format": "date"
        },
        "end": {
          "description": "period end date",
          "type": "string",
          "format": "date"
        },
        "bsAmt": {
          "$ref": "#/definitions/baseAmount"
        }
      },
      "title": "MainWithIncludedProduct"
    },
    "hasGuestCountChanged": {
      "description": "indicates that the guest counts of the current image is different from the one the previous committed image",
      "type": "boolean"
    },
    "dateTime": {
      "description": "date and time of the special request (UTC)",
      "type": "string",
      "pattern": "^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2]\\d|3[0-1])T([0-1]\\d|2[0-4]):([0-5]\\d):([0-5]\\d)$",
      "example": "2018-05-26T22:00:00"
    },
    "assignedRoom": {
      "description": "room assignment, it is valid if the quantity  is equal to 1",
      "type": "string",
      "maxLength": 50
    },
    "isOptional": {
      "description": "defines whether or not the productUse is optional (if not, then it is part of a pre-defined package)",
      "type": "boolean",
      "default": false
    },
    "isRateFloorUsed": {
      "description": "indicates whether floor value is used to price the product or not",
      "type": "boolean",
      "default": false
    },
    "isMainProduct": {
      "description": "defines whether or not the productUse contains the main product of the offer",
      "type": "boolean",
      "default": false
    },
    "isConsumedNextDay": {
      "description": "indicates if the product is consumed the next day",
      "type": "boolean",
      "default": false
    },
    "pricingFrequency": {
      "description": "the frequency under which the product is priced",
      "type": "string",
      "enum": [
        "PerNight",
        "PerStay",
        "PerUse"
      ]
    },
    "bookingPattern": {
      "description": "the booking pattern defines when and how many times the product is used",
      "type": "string",
      "enum": [
        "DayOfCheckIn",
        "DayOfCheckOut",
        "Anytime"
      ]
    },
    "pricingMethod": {
      "description": "the method under which the product is priced",
      "type": "string",
      "enum": [
        "PerProduct",
        "PerPerson",
        "PerProductPerOcc",
        "PerProductPerGuestType"
      ]
    },
    "routingInstruction": {
      "title": "RoutingInstruction",
      "type": "object",
      "description": "routing Instruction object used for the Rate Plan",
      "allOf": [
        {
          "$ref": "#/definitions/routingInstructionWithoutId"
        },
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique identifier of the Routing Instruction generated by the system",
              "maxLength": 16
            }
          },
          "title": "RoutingInstruction1"
        }
      ]
    },
    "routingInstructionWithoutId": {
      "title": "RoutingInstructionWithoutId",
      "type": "object",
      "description": "routing instruction object used for the Rate Plan",
      "properties": {
        "code": {
          "type": "string",
          "description": "code of the Routing Instruction object given by the user",
          "maxLength": 64
        },
        "authorizerCode": {
          "type": "string",
          "description": "authorizer code from the Authorizer catalog",
          "maxLength": 32
        },
        "routingCode": {
          "type": "string",
          "description": "routing Codes from the Authorizer Catalog",
          "maxLength": 32
        },
        "window": {
          "type": "string",
          "description": "billing window used in the guest checkout process",
          "maxLength": 32
        },
        "limitCriteria": {
          "type": "string",
          "description": "determines the computation type of the Routing instruction complimentary limit",
          "enum": [
            "Flat",
            "Percent"
          ]
        },
        "limitValue": {
          "type": "string",
          "description": "computation value of the Routing Instruction complimentary limit. It could be an amount or a percentage",
          "maxLength": 32
        },
        "dow": {
          "type": "string",
          "description": "days of week of the Routing Instruction",
          "example": "MT-TFS-",
          "maxLength": 32
        },
        "period": {
          "description": "period of the routing instruction",
          "$ref": "#/definitions/period"
        },
        "routingLimitType": {
          "type": "string",
          "description": "determines the type of the Routing limit",
          "enum": [
            "Room",
            "Window",
            "Comp"
          ]
        },
        "couponNumber": {
          "type": "string",
          "description": "coupon number used per Routing Instruction",
          "maxLength": 64
        },
        "covers": {
          "type": "integer",
          "description": "number of participants covered by the Routing Instructions",
          "maxLength": 32
        },
        "source": {
          "type": "string",
          "description": "determines the source of routing",
          "enum": [
            "Client",
            "System"
          ]
        },
        "isDaily": {
          "type": "boolean",
          "description": "determines if the Routing Instruction is used daily"
        },
        "comment": {
          "type": "string",
          "description": "comment of the Routing Instruction",
          "maxLength": 2000
        }
      }
    },
    "requestedRoomConfiguration": {
      "description": "the requested configuration of a room",
      "type": "string",
      "example": "ocean view",
      "maxLength": 20
    },
    "rateReq": {
      "description": "list of requested rate amounts",
      "type": "object",
      "required": [
        "start",
        "end",
        "base"
      ],
      "properties": {
        "start": {
          "description": "start date",
          "type": "string",
          "format": "date"
        },
        "end": {
          "description": "end date",
          "type": "string",
          "format": "date"
        },
        "base": {
          "$ref": "#/definitions/baseReq"
        }
      },
      "title": "RateReq"
    },
    "rateRes": {
      "description": "list of the applied rates per period, and the list of original rates in case of an effective rate override",
      "type": "object",
      "required": [
        "start",
        "end",
        "base"
      ],
      "properties": {
        "start": {
          "description": "start date",
          "type": "string",
          "format": "date"
        },
        "end": {
          "description": "end date",
          "type": "string",
          "format": "date"
        },
        "base": {
          "$ref": "#/definitions/baseRes"
        }
      },
      "title": "RateRes"
    },
    "baseReq": {
      "description": "used only to override the daily amount",
      "type": "object",
      "required": [
        "amount"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/amount"
        },
        "currency": {
          "$ref": "#/definitions/currency"
        },
        "overrideInd": {
          "$ref": "#/definitions/overrideInd"
        }
      },
      "title": "BaseReq"
    },
    "baseRes": {
      "description": "used only to override the daily amount",
      "type": "object",
      "required": [
        "amount"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/amount"
        },
        "overrideInd": {
          "$ref": "#/definitions/overrideInd"
        },
        "originalBaseRates": {
          "description": "original base rates in the CRS in case rate has been overridden",
          "type": "array",
          "items": {
            "$ref": "#/definitions/originalBaseRate"
          },
          "title": "BaseResOriginalBaseRates"
        }
      },
      "title": "BaseRes"
    },
    "currency": {
      "description": "indicates the currency [ISO4217]",
      "type": "string",
      "pattern": "^[A-Z]{3,3}$",
      "minLength": 3,
      "maxLength": 3,
      "example": "USD"
    },
    "overrideInd": {
      "description": "flag to indicate the amount was overridden",
      "type": "boolean"
    },
    "originalBaseRate": {
      "description": "original base rates in the CRS in case rate has been overridden",
      "type": "object",
      "required": [
        "start",
        "end"
      ],
      "properties": {
        "start": {
          "description": "period start date",
          "type": "string",
          "format": "date"
        },
        "end": {
          "description": "period end date",
          "type": "string",
          "format": "date"
        },
        "bsAmt": {
          "$ref": "#/definitions/baseAmount"
        }
      },
      "title": "OriginalBaseRate"
    },
    "taxOverride": {
      "description": "override the tax fee",
      "type": "object",
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "type": "string",
          "maxLength": 5,
          "description": "user defined code"
        },
        "overridePerDay": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/taxOverridePerDay"
          },
          "title": "TaxOverrideOverridePerDay"
        },
        "overridePerStay": {
          "$ref": "#/definitions/taxOverridePerStay"
        }
      },
      "title": "TaxOverride"
    },
    "taxOverridePerDay": {
      "description": "override the tax fee per day",
      "type": "object",
      "properties": {
        "period": {
          "description": "duration for which the tax definition item applies (for the requested stay)",
          "$ref": "#/definitions/period"
        },
        "value": {
          "type": "string",
          "description": "amount of the tax fee"
        }
      },
      "title": "TaxOverridePerDay"
    },
    "taxOverridePerStay": {
      "description": "override the tax fee per stay",
      "properties": {
        "value": {
          "type": "string",
          "description": "amount of the tax fee"
        }
      },
      "type": "object",
      "title": "TaxOverridePerStay"
    },
    "totalSegment": {
      "description": "total for the segment",
      "type": "object",
      "properties": {
        "finalPriceAmt": {
          "$ref": "#/definitions/finalPriceAmt"
        }
      },
      "title": "TotalSegment"
    },
    "totalRateDetails": {
      "description": "all details on a given total rate",
      "type": "object",
      "title": "TotalRateDetails",
      "allOf": [
        {
          "$ref": "#/definitions/rateAmounts"
        },
        {
          "type": "object",
          "properties": {
            "payableAmtAfTx": {
              "description": "amount after all taxes except those payable at the hotel",
              "type": "string"
            },
            "taxGroups": {
              "description": "the applicable taxes grouped by tax code and inclusion in rate",
              "type": "array",
              "minItems": 1,
              "maxItems": 99,
              "items": {
                "$ref": "#/definitions/taxAmount"
              },
              "title": "TotalRateDetails1TaxGroups"
            },
            "totalTaxes": {
              "description": "total amount of all applicable taxes",
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            },
            "daily": {
              "description": "daily average, highest or checkin rate for the stay",
              "type": "array",
              "items": {
                "$ref": "#/definitions/dailyTypeAmount"
              },
              "title": "TotalRateDetails1Daily"
            },
            "subTotalServiceCharges": {
              "description": "total tax amounts classified as service charge",
              "type": "array",
              "minItems": 1,
              "maxItems": 2,
              "items": {
                "$ref": "#/definitions/subTotalTaxAmt"
              },
              "title": "TotalRateDetails1SubTotalServiceCharges"
            },
            "subTotalTaxes": {
              "description": "total tax amounts classified as tax",
              "type": "array",
              "minItems": 1,
              "maxItems": 2,
              "items": {
                "$ref": "#/definitions/subTotalTaxAmt"
              },
              "title": "TotalRateDetails1SubTotalTaxes"
            },
            "payableTotalTaxes": {
              "$ref": "#/definitions/payableTotalTaxes"
            },
            "payHotelTotalTaxes": {
              "$ref": "#/definitions/payHotelTotalTaxes"
            }
          },
          "title": "TotalRateDetails1"
        }
      ]
    },
    "reservationTotalRateDetails": {
      "description": "all details on a given total rate",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/reservationRateAmounts"
        },
        {
          "type": "object",
          "properties": {
            "payableAmtAfTx": {
              "description": "amount after all taxes except those payable at the hotel",
              "type": "string"
            },
            "taxGroups": {
              "description": "the applicable taxes grouped by tax code and inclusion in rate",
              "type": "array",
              "minItems": 1,
              "maxItems": 99,
              "items": {
                "$ref": "#/definitions/taxAmount"
              },
              "title": "ReservationTotalRateDetails1TaxGroups"
            },
            "totalTaxes": {
              "description": "total amount of all applicable taxes",
              "type": "string"
            },
            "daily": {
              "description": "daily average, highest or checkin rate for the stay",
              "type": "array",
              "minItems": 1,
              "maxItems": 99,
              "items": {
                "$ref": "#/definitions/dailyTypeAmount"
              },
              "title": "ReservationTotalRateDetails1Daily"
            },
            "subTotalServiceCharges": {
              "description": "total tax amounts classified as service charge",
              "type": "array",
              "minItems": 1,
              "maxItems": 2,
              "items": {
                "$ref": "#/definitions/subTotalTaxAmt"
              },
              "title": "ReservationTotalRateDetails1SubTotalServiceCharges"
            },
            "subTotalTaxes": {
              "description": "total tax amounts classified as tax",
              "type": "array",
              "minItems": 1,
              "maxItems": 2,
              "items": {
                "$ref": "#/definitions/subTotalTaxAmt"
              },
              "title": "ReservationTotalRateDetails1SubTotalTaxes"
            },
            "payableTotalTaxes": {
              "$ref": "#/definitions/payableTotalTaxes"
            },
            "payHotelTotalTaxes": {
              "$ref": "#/definitions/payHotelTotalTaxes"
            }
          },
          "title": "ReservationTotalRateDetails1"
        }
      ],
      "title": "ReservationTotalRateDetails"
    },
    "reservationRateAmounts": {
      "type": "object",
      "properties": {
        "amtBfTx": {
          "$ref": "#/definitions/amountBeforeTax"
        },
        "bsAmt": {
          "$ref": "#/definitions/baseAmount"
        },
        "amtAfTx": {
          "$ref": "#/definitions/amountAfterTax"
        }
      },
      "title": "ReservationRateAmounts"
    },
    "rateAmounts": {
      "type": "object",
      "required": [
        "bsAmt"
      ],
      "properties": {
        "amtBfTx": {
          "$ref": "#/definitions/amountBeforeTax"
        },
        "bsAmt": {
          "$ref": "#/definitions/baseAmount"
        },
        "amtAfTx": {
          "$ref": "#/definitions/amountAfterTax"
        }
      },
      "title": "RateAmounts"
    },
    "dailyTypeAmount": {
      "description": "all details on a given daily rate",
      "type": "object",
      "required": [
        "amtType",
        "bsAmt"
      ],
      "properties": {
        "amtType": {
          "description": "defines if amounts are average, checkin or highest rate",
          "type": "string",
          "enum": [
            "Average",
            "Checkin",
            "Highest"
          ]
        },
        "amtBfTx": {
          "$ref": "#/definitions/amountBeforeTax"
        },
        "bsAmt": {
          "$ref": "#/definitions/baseAmount"
        },
        "amtAfTx": {
          "$ref": "#/definitions/amountAfterTax"
        },
        "payableAmtAfTx": {
          "description": "amount after all taxes except those payable at the hotel",
          "type": "string"
        }
      },
      "title": "DailyTypeAmount"
    },
    "dailyRate": {
      "type": "object",
      "properties": {
        "dailyBaseOccRate": {
          "$ref": "#/definitions/dailyRateDetails"
        },
        "dailyExtraOccRate": {
          "$ref": "#/definitions/dailyRateDetails"
        },
        "dailyTotalRate": {
          "$ref": "#/definitions/dailyRateDetails"
        }
      },
      "title": "DailyRate"
    },
    "rateChange": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/dailyRate"
        },
        {
          "type": "object",
          "required": [
            "start",
            "end"
          ],
          "properties": {
            "start": {
              "description": "period start date",
              "type": "string",
              "pattern": "^.*$",
              "format": "date"
            },
            "end": {
              "description": "period end date",
              "type": "string",
              "pattern": "^.*$",
              "format": "date"
            }
          },
          "title": "RateChange1"
        }
      ],
      "title": "RateChange"
    },
    "dailyRateDetails": {
      "description": "all details on a given daily rate",
      "type": "object",
      "properties": {
        "amtBfTx": {
          "$ref": "#/definitions/amountBeforeTax"
        },
        "bsAmt": {
          "$ref": "#/definitions/baseAmount"
        },
        "amtAfTx": {
          "$ref": "#/definitions/amountAfterTax"
        },
        "taxList": {
          "description": "the list of applicable taxes for this rate",
          "type": "array",
          "minItems": 1,
          "maxItems": 99,
          "items": {
            "$ref": "#/definitions/taxAmount"
          },
          "title": "DailyRateDetailsTaxList"
        },
        "totalTaxes": {
          "description": "total of all the taxes and fees in a day",
          "type": "string",
          "minLength": 1,
          "maxLength": 20
        },
        "rateDefId": {
          "description": "when Amount is a dailyTotal, id of the reference RatesDefinitions item",
          "$ref": "#/definitions/id"
        },
        "subTotalServiceCharges": {
          "description": "total tax amounts classified as service charge",
          "type": "array",
          "minItems": 1,
          "maxItems": 2,
          "items": {
            "$ref": "#/definitions/subTotalTaxAmt"
          },
          "title": "DailyRateDetailsSubTotalServiceCharges"
        },
        "subTotalTaxes": {
          "description": "total tax amounts classified as tax",
          "type": "array",
          "minItems": 1,
          "maxItems": 2,
          "items": {
            "$ref": "#/definitions/subTotalTaxAmt"
          },
          "title": "DailyRateDetailsSubTotalTaxes"
        },
        "payableTotalTaxes": {
          "$ref": "#/definitions/payableTotalTaxes"
        },
        "payHotelTotalTaxes": {
          "$ref": "#/definitions/payHotelTotalTaxes"
        },
        "payableAmtAfTx": {
          "description": "amount after all taxes except those payable at the hotel",
          "type": "string"
        }
      },
      "title": "DailyRateDetails"
    },
    "amountBeforeTax": {
      "description": "amount excluding all taxes/service charges",
      "type": "string",
      "pattern": "^.*$"
    },
    "amountAfterTax": {
      "description": "amount including all taxes/service charges",
      "type": "string",
      "pattern": "^.*$"
    },
    "baseAmount": {
      "description": "amount defined in the CRS which includes included taxes/service charges and excludes excluded taxes/service charges",
      "type": "string",
      "pattern": "^.*$"
    },
    "taxAmount": {
      "description": "tax amount",
      "type": "object",
      "required": [
        "amount",
        "isIncludedInRate"
      ],
      "properties": {
        "amount": {
          "description": "amount computed for this tax code",
          "type": "string",
          "pattern": "^.*$",
          "minLength": 1,
          "maxLength": 20
        },
        "taxCode": {
          "description": "tax code",
          "type": "string",
          "pattern": "^.*$",
          "minLength": 1,
          "maxLength": 20
        },
        "isIncludedInRate": {
          "description": "indicates if the tax has been included in the rate conveyed in associated \"baseAmount\". This field takes into account the inclusion set at house and rate plan level",
          "type": "boolean"
        },
        "otaCode": {
          "$ref": "#/definitions/otaTaxCode"
        },
        "taxDefIds": {
          "description": "references the Tax Definition Item applied to compute this tax amount",
          "type": "array",
          "items": {
            "type": "integer"
          },
          "title": "TaxAmountTaxDefIds"
        }
      },
      "title": "TaxAmount"
    },
    "subTotalTaxAmt": {
      "description": "tax amount, with pay at hotel Taxes",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/taxAmount"
        },
        {
          "type": "object",
          "title": "SubTotalTaxAmt1",
          "properties": {
            "payableAmount": {
              "description": "part of the sub total amount that can be payed before arriving at the hotel. Returned only when at least one tax or service charge that must be paid at the hotel is applicable. Returned only for subtotals of excluded taxes or service charges",
              "type": "string",
              "pattern": "^.*$",
              "minLength": 1,
              "maxLength": 20
            },
            "payHotelAmount": {
              "description": "part of the sub total amount that need to be paid at the hotel. Returned only when at least one tax or service charge that must be paid at the hotel is applicable. Returned only for subtotals of excluded taxes or service charges",
              "type": "string",
              "pattern": "^.*$",
              "minLength": 1,
              "maxLength": 20
            }
          }
        }
      ],
      "title": "SubTotalTaxAmt"
    },
    "otaTaxCode": {
      "description": "tax code (Refer to [FTT] OTA code list)",
      "type": "string",
      "enum": [
        "FTT1",
        "FTT2",
        "FTT3",
        "FTT4",
        "FTT5",
        "FTT6",
        "FTT7",
        "FTT8",
        "FTT9",
        "FTT10",
        "FTT11",
        "FTT12",
        "FTT13",
        "FTT14",
        "FTT15",
        "FTT16",
        "FTT17",
        "FTT18",
        "FTT19",
        "FTT20",
        "FTT21",
        "FTT22",
        "FTT23",
        "FTT24",
        "FTT25",
        "FTT26",
        "FTT27",
        "FTT28",
        "FTT29",
        "FTT30",
        "FTT31",
        "FTT32",
        "FTT33",
        "FTT34",
        "FTT35",
        "FTT36",
        "FTT37",
        "FTT38",
        "FTT39",
        "FTT40",
        "FTT41",
        "FTT42",
        "FTT43",
        "FTT44",
        "FTT45",
        "FTT46",
        "FTT47",
        "FTT48",
        "FTT49",
        "FTT50",
        "FTT51",
        "FTT52",
        "FTT53",
        "FTT54",
        "FTT55",
        "FTT56"
      ]
    },
    "isPaidAtHotel": {
      "description": "set to true if the tax must be paid at the hotel",
      "type": "boolean"
    },
    "payableTotalTaxes": {
      "description": "total amount of taxes and services charges that can be payed before arriving at the hotel. Returned only when at least one tax or service charge that must be paid at the hotel is applicable",
      "type": "string",
      "minLength": 1,
      "maxLength": 20
    },
    "payHotelTotalTaxes": {
      "description": "total amount of taxes and service charges to pay at the hotel. Returned only when at least one tax or service charge that must be paid at the hotel is applicable",
      "type": "string",
      "minLength": 1,
      "maxLength": 20
    },
    "id": {
      "description": "a unique ID for the corresponding definition item. Used as reference",
      "type": "integer",
      "format": "int32"
    },
    "finalPriceAmt": {
      "description": "total including cancellation or no-show fees, with taxes except those payable at the hotel",
      "type": "string",
      "pattern": "^.*$"
    },
    "finalPriceAmtWithoutFees": {
      "description": "total excluding cancellation or no-show fees, with taxes except those payable at the hotel",
      "type": "string"
    },
    "history": {
      "description": "list of past images of the reservation",
      "type": "array",
      "items": {
        "type": "object",
        "title": "HistoryItem",
        "required": [
          "status",
          "imageStatus",
          "lastUpdateDateTime",
          "reservationIds"
        ],
        "properties": {
          "status": {
            "$ref": "#/definitions/resStatus"
          },
          "reservationType": {
            "$ref": "#/definitions/reservationType"
          },
          "imageStatus": {
            "$ref": "#/definitions/imageStatus"
          },
          "bookingOfficeIds": {
            "description": "list of IDs of the booking office which requested the last transaction. Each ID is limited to 70 characters",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "HistoryItemBookingOfficeIds"
          },
          "lastUpdateDateTime": {
            "$ref": "#/definitions/lastUpdateDateTime"
          },
          "lastUpdateDateTimeHotelLocalTime": {
            "$ref": "#/definitions/lastUpdateDateTimeHotelLocalTime"
          },
          "authenticatedUser": {
            "$ref": "#/definitions/authenticatedUser"
          },
          "impersonatedUser": {
            "$ref": "#/definitions/authenticatedUser"
          },
          "reservationIds": {
            "$ref": "#/definitions/reservationIdsRes"
          },
          "emailNotification": {
            "$ref": "#/definitions/emailNotification"
          },
          "smsNotification": {
            "$ref": "#/definitions/smsNotification"
          },
          "userProfiles": {
            "$ref": "#/definitions/guestsHistoryRes"
          },
          "requestor": {
            "$ref": "#/definitions/historyPointOfSale"
          },
          "segments": {
            "$ref": "#/definitions/historySegmentsRes"
          },
          "products": {
            "description": "the list of products (base product + attribute(s)) returned",
            "type": "array",
            "items": {
              "$ref": "#/definitions/product"
            },
            "title": "HistoryItemProducts"
          },
          "attributes": {
            "description": "the list of attributes",
            "type": "array",
            "items": {
              "$ref": "#/definitions/attribute"
            },
            "title": "HistoryItemAttributes"
          },
          "links": {
            "description": "link reservation details",
            "type": "array",
            "items": {
              "$ref": "#/definitions/reservationLinks"
            },
            "title": "HistoryItemLinks"
          },
          "groupContracts": {
            "description": "list of groupContract",
            "type": "array",
            "maxItems": 99,
            "items": {
              "$ref": "#/definitions/groupContractRes"
            },
            "title": "HistoryItemGroupContracts"
          },
          "ratePlans": {
            "description": "list of rate plans used in the reservation",
            "type": "array",
            "items": {
              "$ref": "#/definitions/ratePlanRes"
            },
            "title": "HistoryItemRatePlans"
          },
          "printRate": {
            "$ref": "#/definitions/printRate"
          },
          "chargePrivilege": {
            "$ref": "#/definitions/chargePrivilege"
          },
          "businessSource": {
            "$ref": "#/definitions/businessSource"
          }
        }
      },
      "title": "History"
    },
    "authenticatedUser": {
      "description": "authenticated user information. It is a LSS information (user id, first name, last name) related to the user who performed the transaction",
      "type": "object",
      "properties": {
        "userId": {
          "$ref": "#/definitions/userId"
        },
        "userLastName": {
          "$ref": "#/definitions/userLastName"
        },
        "userFirstName": {
          "$ref": "#/definitions/userFirstName"
        }
      },
      "title": "AuthenticatedUser"
    },
    "userId": {
      "description": "user id of the authenticated user",
      "type": "string",
      "pattern": "^.*$"
    },
    "userLastName": {
      "description": "last name of the authenticated user",
      "type": "string",
      "pattern": "^.*$"
    },
    "userFirstName": {
      "description": "first name of the authenticated user",
      "type": "string",
      "pattern": "^.*$"
    },
    "historyProductUseRes": {
      "description": "List of products (w/o attributes) with associated dates that are part of the offer",
      "type": "array",
      "items": {
        "type": "object",
        "title": "HistoryProductUseResItem",
        "required": [
          "period",
          "quantity",
          "inventoryTypeCode",
          "guestCounts",
          "totalGuestCounts"
        ],
        "properties": {
          "period": {
            "description": "Period where the product is available",
            "$ref": "#/definitions/period"
          },
          "isDayUse": {
            "description": "Indicates that the reservation is a day use reservation",
            "type": "boolean"
          },
          "inventoryTypeCode": {
            "$ref": "#/definitions/inventoryTypeCode"
          },
          "channelInventoryTypeCode": {
            "description": "business code representing an inventory type code of OTA/GDS",
            "type": "string",
            "pattern": "^.*$",
            "minLength": 1,
            "maxLength": 50
          },
          "isOptional": {
            "$ref": "#/definitions/isOptional"
          },
          "isMainProduct": {
            "$ref": "#/definitions/isMainProduct"
          },
          "upgradedInventoryTypeCode": {
            "$ref": "#/definitions/upgradedInventoryTypeCode"
          },
          "quantity": {
            "$ref": "#/definitions/quantity"
          },
          "routingInstructions": {
            "description": "List of routing Instructions",
            "type": "array",
            "items": {
              "$ref": "#/definitions/routingInstruction"
            },
            "title": "HistoryProductUseResItemRoutingInstructions"
          },
          "guestCounts": {
            "description": "Number of guests for the requested product. Per unit if there is no load balancing, for the whole offer if there is. Only one element should be filled for each age qualifying code",
            "type": "array",
            "items": {
              "$ref": "#/definitions/guestCountRes"
            },
            "title": "HistoryProductUseResItemGuestCounts"
          },
          "totalGuestCounts": {
            "description": "Total number of guests for the requested product",
            "type": "array",
            "items": {
              "$ref": "#/definitions/guestCountRes"
            },
            "title": "HistoryProductUseResItemTotalGuestCounts"
          },
          "isProductIncludedInOffer": {
            "description": "Indicates if the product rate is included in the offer.",
            "type": "boolean"
          },
          "ratePlanCode": {
            "$ref": "#/definitions/ratePlanCode"
          },
          "channelRatePlanCode": {
            "description": "rate plan code of OTA/GDS",
            "type": "string",
            "pattern": "^.*$",
            "minLength": 1,
            "maxLength": 50
          },
          "specialRateInd": {
            "$ref": "#/definitions/specialRateInd"
          },
          "productRates": {
            "$ref": "#/definitions/productUseRates"
          },
          "packageRates": {
            "$ref": "#/definitions/productUsePackageRates"
          },
          "assignedRoom": {
            "$ref": "#/definitions/assignedRoom"
          },
          "promotions": {
            "description": "Different types of promotions",
            "type": "array",
            "items": {
              "$ref": "#/definitions/promotionRes"
            },
            "title": "HistoryProductUseResItemPromotions"
          },
          "guestOccIds": {
            "description": "List of guest id which are part of this segment",
            "type": "array",
            "items": {
              "$ref": "#/definitions/id"
            },
            "title": "HistoryProductUseResItemGuestOccIds"
          },
          "priceGridCode": {
            "description": "Price grid code. It is used for non-room products for packages only.",
            "$ref": "#/definitions/priceGridCode"
          },
          "requestedRoomConfiguration": {
            "$ref": "#/definitions/requestedRoomConfiguration"
          },
          "attributeCodes": {
            "description": "list of codes attached to attributes requested by guests. The code is for the attention of the hotelier",
            "type": "array",
            "items": {
              "$ref": "#/definitions/attributeCode"
            },
            "title": "HistoryProductUseResItemAttributeCodes"
          }
        }
      },
      "title": "HistoryProductUseRes"
    },
    "historyOfferRes": {
      "type": "object",
      "description": "historyOffer",
      "required": [
        "productUses"
      ],
      "properties": {
        "groupCode": {
          "$ref": "#/definitions/groupCode"
        },
        "productUses": {
          "$ref": "#/definitions/historyProductUseRes"
        },
        "totalRate": {
          "description": "total amount of a segment with extra person",
          "$ref": "#/definitions/historyTotalRateDetails"
        },
        "totalBaseOccRate": {
          "description": "total amount of a segment without extra person",
          "$ref": "#/definitions/historyTotalOccupancyRateDetails"
        },
        "totalExtraOccRate": {
          "description": "total amount of extra person in a segment",
          "$ref": "#/definitions/historyTotalOccupancyRateDetails"
        },
        "groupId": {
          "$ref": "#/definitions/groupId"
        },
        "propertyMarketSegment": {
          "$ref": "#/definitions/propertyMarketSegment"
        },
        "nightlyCorpMarketSegments": {
          "description": "list of corporate market segments applicable for each night of the stay",
          "type": "array",
          "items": {
            "$ref": "#/definitions/nightlyCorporateMarketSegment"
          },
          "title": "HistoryOfferResNightlyCorpMarketSegments"
        },
        "corpMarketSegment": {
          "$ref": "#/definitions/corporateMarketSegment"
        },
        "policyTypeCode": {
          "$ref": "#/definitions/policyTypeCode"
        },
        "promoCode": {
          "$ref": "#/definitions/promoCode"
        },
        "promoGroupCode": {
          "$ref": "#/definitions/promoGroupCode"
        },
        "isPerpetualOffer": {
          "$ref": "#/definitions/isPerpetualOffer"
        },
        "isOneOffOffer": {
          "$ref": "#/definitions/isOneOffOffer"
        },
        "rateAccessCode": {
          "$ref": "#/definitions/rateAccessCode"
        }
      },
      "title": "HistoryOfferRes"
    },
    "historyTotalRateDetails": {
      "type": "object",
      "properties": {
        "amtAfTx": {
          "$ref": "#/definitions/amountAfterTax"
        },
        "bsAmt": {
          "$ref": "#/definitions/baseAmount"
        },
        "payableAmtAfTx": {
          "description": "amount after all taxes except those payable at the hotel",
          "type": "string"
        },
        "taxGroups": {
          "description": "the applicable taxes grouped by tax code and inclusion in rate",
          "type": "array",
          "items": {
            "$ref": "#/definitions/taxAmount"
          },
          "title": "HistoryTotalRateDetailsTaxGroups"
        },
        "daily": {
          "description": "daily average, highest or checkin rate for the stay",
          "type": "array",
          "minItems": 1,
          "maxItems": 99,
          "items": {
            "$ref": "#/definitions/historyDailyTypeAmount"
          },
          "title": "HistoryTotalRateDetailsDaily"
        },
        "subTotalServiceCharges": {
          "description": "total tax amounts classified as service charge",
          "type": "array",
          "minItems": 1,
          "maxItems": 2,
          "items": {
            "$ref": "#/definitions/subTotalTaxAmt"
          },
          "title": "HistoryTotalRateDetailsSubTotalServiceCharges"
        },
        "subTotalTaxes": {
          "description": "total tax amounts classified as tax",
          "type": "array",
          "minItems": 1,
          "maxItems": 2,
          "items": {
            "$ref": "#/definitions/subTotalTaxAmt"
          },
          "title": "HistoryTotalRateDetailsSubTotalTaxes"
        },
        "payableTotalTaxes": {
          "$ref": "#/definitions/payableTotalTaxes"
        },
        "payHotelTotalTaxes": {
          "$ref": "#/definitions/payHotelTotalTaxes"
        }
      },
      "title": "HistoryTotalRateDetails"
    },
    "historyTotalOccupancyRateDetails": {
      "type": "object",
      "required": [
        "bsAmt"
      ],
      "properties": {
        "amtBfTx": {
          "$ref": "#/definitions/amountBeforeTax"
        },
        "bsAmt": {
          "$ref": "#/definitions/baseAmount"
        },
        "payableAmtAfTx": {
          "description": "amount after all taxes except those payable at the hotel",
          "type": "string"
        },
        "daily": {
          "$ref": "#/definitions/historyDailyTypeAmount"
        },
        "subTotalServiceCharges": {
          "description": "total tax amounts classified as service charge",
          "type": "array",
          "minItems": 1,
          "maxItems": 2,
          "items": {
            "$ref": "#/definitions/subTotalTaxAmt"
          },
          "title": "HistoryTotalOccupancyRateDetailsSubTotalServiceCharges"
        },
        "subTotalTaxes": {
          "description": "total tax amounts classified as tax",
          "type": "array",
          "minItems": 1,
          "maxItems": 2,
          "items": {
            "$ref": "#/definitions/subTotalTaxAmt"
          },
          "title": "HistoryTotalOccupancyRateDetailsSubTotalTaxes"
        },
        "payableTotalTaxes": {
          "$ref": "#/definitions/payableTotalTaxes"
        },
        "payHotelTotalTaxes": {
          "$ref": "#/definitions/payHotelTotalTaxes"
        }
      },
      "title": "HistoryTotalOccupancyRateDetails"
    },
    "historyDailyTypeAmount": {
      "description": "base amount on a given daily rate",
      "type": "object",
      "required": [
        "amtType",
        "bsAmt"
      ],
      "properties": {
        "amtType": {
          "description": "when daily rate detail is part of an daily rate item, defines if amount are average, checkin or highest rate. For history, we return the average rate",
          "type": "string",
          "enum": [
            "Average",
            "Checkin",
            "Highest"
          ]
        },
        "bsAmt": {
          "$ref": "#/definitions/baseAmount"
        },
        "payableAmtAfTx": {
          "description": "amount after all taxes except those payable at the hotel",
          "type": "string"
        }
      },
      "title": "HistoryDailyTypeAmount"
    },
    "historyFormOfPaymentRes": {
      "description": "information concerning form of payment",
      "type": "object",
      "properties": {
        "paymentInfo": {
          "$ref": "#/definitions/paymentInfoRes"
        },
        "depositPayments": {
          "description": "list of the payments done for deposits (payment by points excluded)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/paymentTransactionRes"
          },
          "title": "HistoryFormOfPaymentResDepositPayments"
        }
      },
      "title": "HistoryFormOfPaymentRes"
    },
    "historySegmentsRes": {
      "description": "List of segments",
      "type": "array",
      "items": {
        "type": "object",
        "title": "HistorySegmentsResItem",
        "required": [
          "id",
          "segmentStatus",
          "actionStatus",
          "segmentHolderId",
          "propertyCode",
          "offer",
          "lastUpdateDateTime"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Identify the segment inside the reservation all along the reservation life."
          },
          "customerOwnReference": {
            "$ref": "#/definitions/customerOwnReference"
          },
          "segmentStatus": {
            "$ref": "#/definitions/segmentStatus"
          },
          "segmentPmsStatus": {
            "$ref": "#/definitions/segmentPmsStatus"
          },
          "actionStatus": {
            "$ref": "#/definitions/actionStatus"
          },
          "segmentHolderId": {
            "$ref": "#/definitions/segmentHolderId"
          },
          "bookerId": {
            "$ref": "#/definitions/bookerId"
          },
          "purchaseOrderReference": {
            "$ref": "#/definitions/purchaseOrderReference"
          },
          "propertyCurrency": {
            "$ref": "#/definitions/currency"
          },
          "lastUpdateDateTime": {
            "$ref": "#/definitions/lastUpdateDateTime"
          },
          "lastUpdateDateTimeHotelLocalTime": {
            "$ref": "#/definitions/lastUpdateDateTimeHotelLocalTime"
          },
          "indicators": {
            "$ref": "#/definitions/historyIndicatorsRes"
          },
          "option": {
            "$ref": "#/definitions/option"
          },
          "propertyCode": {
            "$ref": "#/definitions/propertyCode"
          },
          "creator": {
            "description": "Contains the details of the channel which created the segment",
            "$ref": "#/definitions/pointOfSale"
          },
          "requestor": {
            "description": "Contains the details of the channel which requested the transaction",
            "$ref": "#/definitions/pointOfSale"
          },
          "offer": {
            "$ref": "#/definitions/historyOfferRes"
          },
          "formOfPayment": {
            "$ref": "#/definitions/historyFormOfPaymentRes"
          },
          "taxDefinitions": {
            "type": "array",
            "description": "The applicable rules of taxes for each tax change of the segment",
            "items": {
              "$ref": "#/definitions/taxDefinition"
            },
            "title": "HistorySegmentsResItemTaxDefinitions"
          },
          "travelPurpose": {
            "$ref": "#/definitions/travelPurpose"
          },
          "owner": {
            "description": "Agency which owns the segment. This is the agency whose IATA number is used for guarantee, and also the agency who is commissioned for the segment.",
            "$ref": "#/definitions/reservationOwner"
          },
          "corporateAccountInfo": {
            "$ref": "#/definitions/corporateAccountInfoRes"
          },
          "comments": {
            "type": "array",
            "description": "comment details of corresponding segment. It describes the type, language and text of comments",
            "items": {
              "$ref": "#/definitions/comment"
            },
            "title": "HistorySegmentsResItemComments"
          },
          "specialRequests": {
            "type": "array",
            "description": "List the special requests",
            "items": {
              "$ref": "#/definitions/specialRequests"
            },
            "title": "HistorySegmentsResItemSpecialRequests"
          },
          "serviceRequests": {
            "type": "array",
            "description": "List the service requests",
            "items": {
              "$ref": "#/definitions/serviceRequests"
            },
            "title": "HistorySegmentsResItemServiceRequests"
          },
          "traces": {
            "type": "array",
            "description": "Traces allow to generate tasks that require fulfillment, which can be associated to a particular department. e.g. \"Review deposits\"",
            "minItems": 1,
            "maxItems": 100,
            "items": {
              "$ref": "#/definitions/traces"
            },
            "title": "HistorySegmentsResItemTraces"
          },
          "alerts": {
            "type": "array",
            "description": "Alerts are PMS functionality which can be pre-configured. They include screen and printer notification. e.g. \"VIP guest\"",
            "minItems": 1,
            "maxItems": 100,
            "items": {
              "$ref": "#/definitions/alerts"
            },
            "title": "HistorySegmentsResItemAlerts"
          },
          "arrivalTime": {
            "$ref": "#/definitions/arrivalTime"
          },
          "departureTime": {
            "$ref": "#/definitions/departureTime"
          },
          "checkInDateTime": {
            "$ref": "#/definitions/checkInDateTime"
          },
          "checkOutDateTime": {
            "$ref": "#/definitions/checkOutDateTime"
          },
          "arrivalTransport": {
            "$ref": "#/definitions/transportation"
          },
          "departureTransport": {
            "$ref": "#/definitions/transportation"
          },
          "arrivalAmenities": {
            "type": "array",
            "description": "List of loyalty arrival amenity codes selected by the loyalty guest",
            "maxItems": 50,
            "items": {
              "$ref": "#/definitions/ArrivalAmenity"
            },
            "title": "HistorySegmentsResItemArrivalAmenities"
          },
          "cancellationReasons": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/cancellationReason"
            },
            "title": "HistorySegmentsResItemCancellationReasons"
          },
          "policyProcessStatus": {
            "$ref": "#/definitions/policyProcessStatus"
          },
          "assignedRooms": {
            "description": "this is a deprecated field. It can be used at ProductUses level (assignedRoom)",
            "type": "array",
            "items": {
              "$ref": "#/definitions/allocatedRoom"
            },
            "title": "HistorySegmentsResItemAssignedRooms"
          },
          "isAssignedRoomLocked": {
            "description": "indicates if assigned room can be updated. If set to true, assigned room cannot be updated",
            "type": "boolean"
          },
          "rateOverrideReason": {
            "description": "reason of the rate override",
            "$ref": "#/definitions/rateOverrideReason"
          }
        }
      },
      "title": "HistorySegmentsRes"
    },
    "historyIndicatorsRes": {
      "description": "how the segment was booked. Example by Force Sell, Rate Override, etc",
      "type": "object",
      "properties": {
        "isForcedSell": {
          "$ref": "#/definitions/isForcedSell"
        },
        "isWaitlist": {
          "$ref": "#/definitions/isWaitlist"
        },
        "isTentative": {
          "$ref": "#/definitions/isTentative"
        },
        "isCancelledAfterDeadline": {
          "$ref": "#/definitions/isCancelledAfterDeadline"
        },
        "hasRateOverride": {
          "$ref": "#/definitions/hasRateOverride"
        },
        "isRateOverrideWithinThreshold": {
          "$ref": "#/definitions/isRateOverrideWithinThreshold"
        },
        "hasForcedInventoryAvailability": {
          "$ref": "#/definitions/hasForcedInventoryAvailability"
        },
        "hasForcedRestrictions": {
          "$ref": "#/definitions/hasForcedRestrictions"
        },
        "isNonRoomProductIgnored": {
          "$ref": "#/definitions/isNonRoomProductIgnored"
        },
        "isOverrideTaxIgnored": {
          "$ref": "#/definitions/isOverrideTaxIgnored"
        }
      },
      "title": "HistoryIndicatorsRes"
    },
    "modificationChanges": {
      "description": "list of changes following a successful modification request",
      "type": "array",
      "items": {
        "type": "object",
        "title": "ModificationChangesItem",
        "required": [
          "op",
          "path"
        ],
        "properties": {
          "op": {
            "description": "operation used for the change",
            "type": "string",
            "enum": [
              "upsert",
              "append",
              "remove"
            ]
          },
          "path": {
            "description": "path used for the change",
            "type": "string"
          },
          "value": {
            "description": "the json structure (not a string, i.e. without opening and closing quotes) to be inserted at the specified path"
          }
        }
      },
      "title": "ModificationChanges"
    },
    "linkModificationChanges": {
      "description": "list of changes following a successful modification request",
      "type": "array",
      "items": {
        "type": "object",
        "title": "LinkModificationChangesItem",
        "required": [
          "op",
          "value"
        ],
        "properties": {
          "op": {
            "description": "operation used for the change",
            "type": "string",
            "enum": [
              "Link",
              "Unlink"
            ]
          },
          "value": {
            "description": "list of cfNumbers",
            "type": "array",
            "items": {
              "type": "string",
              "properties": {
                "cfNumber": {
                  "$ref": "#/definitions/cfNumber"
                }
              }
            },
            "title": "LinkModificationChangesItemValue"
          }
        }
      },
      "title": "LinkModificationChanges"
    },
    "ReservationModifyRes": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/warning"
          },
          "title": "ReservationModifyResWarnings"
        },
        "data": {
          "type": "object",
          "title": "ReservationModifyResData",
          "properties": {
            "denials": {
              "description": "request denial details",
              "$ref": "#/definitions/denial"
            },
            "creator": {
              "description": "contains the details of the channel which created the reservation",
              "$ref": "#/definitions/pointOfSale"
            },
            "requestor": {
              "description": "contains the details of the channel which requested the transaction",
              "$ref": "#/definitions/pointOfSale"
            },
            "hotelReservation": {
              "$ref": "#/definitions/HotelReservationRes"
            },
            "modificationChanges": {
              "$ref": "#/definitions/modificationChanges"
            }
          }
        }
      },
      "title": "ReservationModifyRes"
    },
    "ReservationModifyPendingRes": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/warning"
          },
          "title": "ReservationModifyPendingResWarnings"
        },
        "data": {
          "type": "object",
          "title": "ReservationModifyPendingResData",
          "properties": {
            "denials": {
              "description": "request denial details",
              "$ref": "#/definitions/denial"
            },
            "creator": {
              "description": "contains the details of the channel which created the reservation",
              "$ref": "#/definitions/pointOfSale"
            },
            "requestor": {
              "description": "contains the details of the channel which requested the transaction",
              "$ref": "#/definitions/pointOfSale"
            },
            "hotelReservation": {
              "$ref": "#/definitions/HotelReservationPendingRes"
            },
            "modificationChanges": {
              "$ref": "#/definitions/modificationChanges"
            }
          }
        }
      },
      "title": "ReservationModifyPendingRes"
    },
    "ReservationPartialModifyReq": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/modificationChanges"
        }
      },
      "title": "ReservationPartialModifyReq"
    },
    "LinkReservationModifyReq": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/linkModificationChanges"
        }
      },
      "title": "LinkReservationModifyReq"
    },
    "ReservationMigrateReq": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "object",
          "required": [
            "creator",
            "requestor",
            "hotelReservation"
          ],
          "properties": {
            "creator": {
              "description": "contains the details of the channel which created the reservation",
              "$ref": "#/definitions/pointOfSale"
            },
            "requestor": {
              "description": "contains the details of the channel which requested the transaction",
              "$ref": "#/definitions/pointOfSale"
            },
            "hotelReservation": {
              "$ref": "#/definitions/HotelReservationMigrateReq"
            }
          },
          "title": "ReservationMigrateReqData"
        }
      },
      "title": "ReservationMigrateReq"
    },
    "HotelReservationMigrateReq": {
      "description": "Full representation of reservation record",
      "type": "object",
      "required": [
        "status",
        "creationDateTime",
        "lastUpdateDateTime",
        "purgeDateTime",
        "segments",
        "userProfiles",
        "hotels"
      ],
      "properties": {
        "status": {
          "$ref": "#/definitions/resStatus"
        },
        "type": {
          "$ref": "#/definitions/reservationType"
        },
        "creationDateTime": {
          "$ref": "#/definitions/createDateTime"
        },
        "lastUpdateDateTime": {
          "$ref": "#/definitions/lastUpdateDateTime"
        },
        "purgeDateTime": {
          "description": "Date and time when the confirmation number has to be released",
          "$ref": "#/definitions/purgeDateTime"
        },
        "reservationIds": {
          "$ref": "#/definitions/migReservationIds"
        },
        "emailNotification": {
          "$ref": "#/definitions/emailNotification"
        },
        "smsNotification": {
          "$ref": "#/definitions/smsNotification"
        },
        "reservationFlags": {
          "$ref": "#/definitions/migReservationFlags"
        },
        "channelSettings": {
          "$ref": "#/definitions/migChannelSettings"
        },
        "hotels": {
          "description": "List of hotels",
          "type": "array",
          "items": {
            "$ref": "#/definitions/migHotel"
          },
          "title": "HotelReservationMigrateReqHotels"
        },
        "products": {
          "description": "The list of base products",
          "type": "array",
          "items": {
            "$ref": "#/definitions/migProduct"
          },
          "title": "HotelReservationMigrateReqProducts"
        },
        "groupContracts": {
          "description": "List of groupContract",
          "type": "array",
          "maxItems": 99,
          "items": {
            "$ref": "#/definitions/migGroupContract"
          },
          "title": "HotelReservationMigrateReqGroupContracts"
        },
        "installments": {
          "description": "Deposit rule details",
          "type": "array",
          "maxItems": 3,
          "items": {
            "$ref": "#/definitions/installment"
          },
          "title": "HotelReservationMigrateReqInstallments"
        },
        "ratePlans": {
          "description": "List of rate plans used in the reservation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/migRatePlanReq"
          },
          "title": "HotelReservationMigrateReqRatePlans"
        },
        "userProfiles": {
          "$ref": "#/definitions/migGuestsReq"
        },
        "segments": {
          "$ref": "#/definitions/migSegmentReq"
        },
        "comments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/comment"
          },
          "title": "HotelReservationMigrateReqComments"
        },
        "customData": {
          "$ref": "#/definitions/customData"
        },
        "invoiceIds": {
          "type": "array",
          "description": "List of invoice Ids. Each Id is unique in the reservation.",
          "items": {
            "$ref": "#/definitions/invoiceId"
          },
          "title": "HotelReservationMigrateReqInvoiceIds"
        },
        "printRate": {
          "$ref": "#/definitions/printRate"
        },
        "chargePrivilege": {
          "$ref": "#/definitions/chargePrivilege"
        },
        "businessSource": {
          "$ref": "#/definitions/businessSource"
        },
        "sharePricingMethod": {
          "$ref": "#/definitions/sharePricingMethod"
        }
      },
      "title": "HotelReservationMigrateReq"
    },
    "migReservationIds": {
      "description": "ids of the reservation",
      "type": "object",
      "properties": {
        "cxNumber": {
          "$ref": "#/definitions/cxNumber"
        },
        "pnr": {
          "$ref": "#/definitions/pnr"
        },
        "extCfNumber": {
          "$ref": "#/definitions/extCfNumber"
        },
        "extCxNumber": {
          "$ref": "#/definitions/extCxNumber"
        },
        "pmsCfNumber": {
          "$ref": "#/definitions/pmsCfNumber"
        },
        "pmsCxNumber": {
          "$ref": "#/definitions/pmsCxNumber"
        },
        "externalShareId": {
          "$ref": "#/definitions/externalShareId"
        },
        "unsolicitedCancelId": {
          "$ref": "#/definitions/unsolicitedCancelId"
        }
      },
      "title": "MigReservationIds"
    },
    "migReservationFlags": {
      "description": "migrate reservation flags",
      "type": "object",
      "properties": {
        "isBillable": {
          "description": "indicates if the reservation is billable",
          "type": "boolean"
        }
      },
      "title": "MigReservationFlags"
    },
    "migChannelSettings": {
      "description": "how the reservation was booked",
      "type": "object",
      "properties": {
        "isModifiable": {
          "$ref": "#/definitions/isModifiable"
        },
        "isCancellable": {
          "$ref": "#/definitions/isCancellable"
        },
        "isUnsolicitedCancelSupported": {
          "$ref": "#/definitions/isUnsolicitedCancelSupported"
        },
        "isUnsolicitedCancelSent": {
          "$ref": "#/definitions/isUnsolicitedCancelSent"
        },
        "isUnsolicitedCancelLogged": {
          "$ref": "#/definitions/isUnsolicitedCancelLogged"
        },
        "isRateViewable": {
          "$ref": "#/definitions/isRateViewable"
        },
        "isBookPolicyOverridden": {
          "$ref": "#/definitions/isBookPolicyOverridden"
        }
      },
      "title": "MigChannelSettings"
    },
    "isModifiable": {
      "description": "indicates if the reservation can be modified by another channel than creator or the hotelier",
      "type": "boolean"
    },
    "isCancellable": {
      "description": "indicates if the reservation can be cancelled by another channel than creator or the hotelier",
      "type": "boolean"
    },
    "isUnsolicitedCancelSupported": {
      "description": "indicates if the creator channel has to be informed in case of unsolicited cancel",
      "type": "boolean"
    },
    "isUnsolicitedCancelSent": {
      "description": "indicates if the creator channel supports the unsolicited cancel notification",
      "type": "boolean"
    },
    "isUnsolicitedCancelLogged": {
      "description": "indicates if an unsolicited cancel must be logged in reject queue for the creator channel",
      "type": "boolean"
    },
    "isRateViewable": {
      "description": "indicates if creator channel is configured to view rate",
      "type": "boolean"
    },
    "isBookPolicyOverridden": {
      "description": "indicates if creator channel is configured to allow override of booking policy",
      "type": "boolean"
    },
    "migProduct": {
      "description": "product details",
      "type": "object",
      "required": [
        "inventoryTypeName"
      ],
      "properties": {
        "inventoryTypeCode": {
          "$ref": "#/definitions/inventoryTypeCode"
        },
        "inventoryTypeName": {
          "description": "name of the inventory Type (short description)",
          "$ref": "#/definitions/DescriptionOfRatePlanAndInventoryType"
        },
        "productClass": {
          "description": "product class of the product",
          "type": "string"
        },
        "maximumNumberParticipant": {
          "description": "maximum allowed number of participants for this inventory Item (extra participants included)",
          "type": "integer"
        },
        "extraPersonStart": {
          "description": "threshold for charging extra person",
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "description": "description of the inventory Item",
          "$ref": "#/definitions/DescriptionOfRatePlanAndInventoryType"
        },
        "productName": {
          "description": "name of the product",
          "type": "string",
          "minLength": 1,
          "maxLength": 64
        },
        "attributeCodes": {
          "description": "list of attribute codes composing the requested product",
          "type": "array",
          "items": {
            "$ref": "#/definitions/attributeCode"
          },
          "title": "MigProductAttributeCodes"
        }
      },
      "title": "MigProduct"
    },
    "migRatePlanReq": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ratePlanCommon"
        },
        {
          "type": "object",
          "properties": {
            "packageDetails": {
              "$ref": "#/definitions/packageDetails"
            },
            "bookingMessage": {
              "description": "booking message linked to the rate plan",
              "$ref": "#/definitions/description"
            },
            "isCommissionable": {
              "description": "indicates if this rate is commissionable or not",
              "type": "boolean"
            },
            "priceGridCode": {
              "$ref": "#/definitions/priceGridCode"
            },
            "sellStrategyCode": {
              "$ref": "#/definitions/sellStrategyCode"
            },
            "bookingRestrictions": {
              "$ref": "#/definitions/bookingRestrictions"
            },
            "cdNumber": {
              "$ref": "#/definitions/cdNumber"
            },
            "tierMinLos": {
              "$ref": "#/definitions/tierMinLos"
            },
            "gamingBucket": {
              "$ref": "#/definitions/gamingBucket"
            }
          },
          "title": "MigRatePlanReq1"
        }
      ],
      "title": "MigRatePlanReq"
    },
    "migGuestsReq": {
      "description": "List of user profiles, at least one is mandatory",
      "type": "array",
      "maxItems": 300,
      "items": {
        "type": "object",
        "title": "MigGuestsReqItem",
        "required": [
          "personName"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Identifies a guest within the reservation. This id (unique for each guest) can be used to cross-referenced a guest from the segmentHolderId, bookerId or guestOccIds."
          },
          "age": {
            "$ref": "#/definitions/age"
          },
          "identificationInfo": {
            "$ref": "#/definitions/identificationInfo"
          },
          "personName": {
            "$ref": "#/definitions/personName"
          },
          "nativeInformation": {
            "$ref": "#/definitions/guestNativeInformation"
          },
          "guestProfileId": {
            "$ref": "#/definitions/guestProfileId"
          },
          "externalProfileIds": {
            "description": "Guest profile id received from external system",
            "type": "array",
            "items": {
              "$ref": "#/definitions/externalProfileId"
            },
            "title": "MigGuestsReqItemExternalProfileIds"
          },
          "addresses": {
            "type": "array",
            "maxItems": 99,
            "description": "List of addresses",
            "items": {
              "$ref": "#/definitions/addressWithoutIndex"
            },
            "title": "MigGuestsReqItemAddresses"
          },
          "telephones": {
            "type": "array",
            "maxItems": 99,
            "description": "List of telephones and fax",
            "items": {
              "$ref": "#/definitions/telephone"
            },
            "title": "MigGuestsReqItemTelephones"
          },
          "emails": {
            "type": "array",
            "maxItems": 2,
            "description": "List of emails",
            "items": {
              "$ref": "#/definitions/email"
            },
            "title": "MigGuestsReqItemEmails"
          },
          "loyaltyProgram": {
            "$ref": "#/definitions/loyaltyProgram"
          },
          "frequentTraveller": {
            "$ref": "#/definitions/frequentTraveller"
          },
          "nextDestination": {
            "$ref": "#/definitions/nextDestination"
          },
          "customData": {
            "$ref": "#/definitions/customData",
            "description": "All data under customData are stored in the reservation and returned in the response and retrieve. Any valid Json object is accepted"
          },
          "nationalities": {
            "description": "Indicates the guest nationality using the ISO 3166-1 standard code for countries, territories or areas",
            "type": "array",
            "items": {
              "$ref": "#/definitions/nationality"
            },
            "title": "MigGuestsReqItemNationalities"
          },
          "contactPerson": {
            "$ref": "#/definitions/contactPerson",
            "description": "Container for guest contact person information. It consists the details of the person related to the guest"
          },
          "isSelfLimiting": {
            "$ref": "#/definitions/isSelfLimiting"
          },
          "guestProfileStatus": {
            "$ref": "#/definitions/guestProfileStatus"
          },
          "profileNotFound": {
            "$ref": "#/definitions/profileNotFound"
          },
          "discrepancyFound": {
            "$ref": "#/definitions/discrepancyFound"
          },
          "discrepancyReason": {
            "$ref": "#/definitions/discrepancyReason",
            "description": "List of fields separated by comma which has discrepancy"
          },
          "isVip": {
            "$ref": "#/definitions/isVip"
          },
          "additionalMembershipPrograms": {
            "description": "list of additional membership programs of the guest",
            "type": "array",
            "minItems": 1,
            "maxItems": 30,
            "items": {
              "$ref": "#/definitions/additionalMembershipProgram"
            },
            "title": "MigGuestsReqItemAdditionalMembershipPrograms"
          }
        }
      },
      "title": "MigGuestsReq"
    },
    "ReservationSearchReq": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "search reservation request",
          "type": "object",
          "title": "ReservationSearchReqData",
          "properties": {
            "agencyIdentifiers": {
              "$ref": "#/definitions/agencyIdentifiers"
            },
            "agencyName": {
              "description": "name of the agency. For inputs, the service searches for reservations with agency name's starting with, ending with or containing characters using wildcard expression (STA*, *END, *CONT*). For inputs where wildcard expression (*) is not used, the service searches for reservations with exact match of agency name. Single character excluding wildcard expression (*), is not supported in the input",
              "type": "string"
            },
            "arrivalDate": {
              "description": "date range of arrival date",
              "$ref": "#/definitions/searchPeriod"
            },
            "assignedRoom": {
              "description": "assigned room code or name",
              "type": "string",
              "pattern": "[A-Za-z0-9]{1,50}",
              "minLength": 1,
              "maxLength": 50
            },
            "bookerFirstName": {
              "description": "first name of the booker. For inputs, the service searches for reservations with booker first name's starting with, ending with or containing characters using wildcard expression (STA*, *END, *CONT*). For inputs where wildcard expression (*) is not used, the service searches for reservations with exact match of booker first name. Single character excluding wildcard expression (*), is not supported in the input",
              "type": "string"
            },
            "bookerLastName": {
              "description": "last name of the booker. For inputs, the service searches for reservations with booker last name's starting with, ending with or containing characters using wildcard expression (STA*, *END, *CONT*). For inputs where wildcard expression (*) is not used, the service searches for reservations with exact match of booker last name. Single character excluding wildcard expression (*), is not supported in the input",
              "type": "string"
            },
            "businessSource": {
              "$ref": "#/definitions/businessSource"
            },
            "cardNumber": {
              "description": "last 4 digits of the tokenized credit card number associated to reservations' form of payment",
              "type": "string",
              "maxLength": 4
            },
            "cdNumber": {
              "description": "corporate discount Number entered for reservation",
              "type": "string",
              "pattern": "[A-Za-z0-9]{1,20}",
              "minLength": 1,
              "maxLength": 20
            },
            "cfNumber": {
              "description": "it is the confirmation number which the guest receives. It searches for CRS confirmation number but also into the external confirmation numbers stored in the reservation",
              "type": "string",
              "minLength": 1,
              "maxLength": 50
            },
            "corporateAccountName": {
              "description": "name of the corporate account. For inputs, the service searches for reservations with corporate account name's starting with, ending with or containing characters using wildcard expression (STA*, *END, *CONT*). For inputs where wildcard expression (*) is not used, the service searches for reservations with exact match of corporate account name. Single character excluding wildcard expression (*), is not supported in the input",
              "type": "string",
              "minLength": 1,
              "maxLength": 35
            },
            "corpMarketSegment": {
              "description": "corporate market segment, e.g. GOVERNMENT, CORPORATE, LEISURE etc",
              "$ref": "#/definitions/corporateMarketSegment"
            },
            "creationDate": {
              "description": "date range of creation",
              "$ref": "#/definitions/searchPeriod"
            },
            "cxNumber": {
              "description": "cancellation Number. It is the cancellation number which is received by the guest. It searches for CRS cancellation number but also into the external cancellation numbers stored in the reservation",
              "type": "string",
              "minLength": 1,
              "maxLength": 50
            },
            "departureDate": {
              "description": "date range of departure date (reservation end date)",
              "$ref": "#/definitions/searchPeriod"
            },
            "externalShareId": {
              "$ref": "#/definitions/externalShareId"
            },
            "emailAddress": {
              "description": "email address of the guest or of the booker",
              "$ref": "#/definitions/emailField"
            },
            "firstName": {
              "description": "first name of the guest. For inputs, the service searches for reservations with guest first name's starting with, ending with or containing characters using wildcard expression (STA*, *END, *CONT*). For inputs where wildcard expression (*) is not used, the service searches for reservations with exact match of first name. Single character excluding wildcard expression (*), is not supported in the input",
              "type": "string",
              "minLength": 1,
              "maxLength": 56
            },
            "groupCode": {
              "description": "it is the identifier code of a reservation. For inputs, the service searches for reservations with group code's starting with, ending with or containing characters using wildcard expression (ST*, *EN, *CO*). For inputs where wildcard expression (*) is not used, the service searches for reservations with exact match of group code. Single character excluding wildcard expression (*), is not supported in the input",
              "type": "string",
              "minLength": 3,
              "maxLength": 51
            },
            "groupContractSaleStatus": {
              "description": "sale status of the reservation contract",
              "enum": [
                "prospect",
                "definite",
                "tentative"
              ],
              "type": "string"
            },
            "groupId": {
              "description": "identifier of the group master reservation. When received in the input, the search is done within the group identifiers",
              "type": "string",
              "pattern": "^.*$",
              "maxLength": 50
            },
            "groupName": {
              "description": "it is a name of a group",
              "type": "string"
            },
            "guaranteeRequired": {
              "description": "indicates if guarantee is required or not. Searches reservations requiring guarantee. If true, output is reservations with guarantee required, else not",
              "type": "boolean"
            },
            "hideNoShow": {
              "description": "exclude no-show status reservations",
              "type": "boolean",
              "default": false
            },
            "includeJointReservations": {
              "description": "when set to true, returns all the reservations part of the link of type joint of the matching reservations",
              "type": "boolean",
              "default": false
            },
            "includePseudoPropertyReservations": {
              "description": "when set to true, search returns all the reservations tagged to both pseudo and master property code. By default, only reservations related to master property code will be returned with master property code in input",
              "type": "boolean",
              "default": false
            },
            "includeSharedReservations": {
              "description": "when set to true, returns all the reservations part of the share of the matching reservations",
              "type": "boolean",
              "default": false
            },
            "inventoryTypeCode": {
              "$ref": "#/definitions/inventoryTypeCode"
            },
            "isCommissionable": {
              "description": "indicates if this rate is commissionable or not",
              "type": "boolean"
            },
            "isMultiRoom": {
              "description": "indicate if the reservation is containing more than one room",
              "type": "boolean",
              "default": false
            },
            "isRateFloorUsed": {
              "$ref": "#/definitions/isRateFloorUsed"
            },
            "lastName": {
              "description": "last name of the guest. For inputs, the service searches for reservations with guest first name's starting with, ending with or containing characters using wildcard expression (STA*, *END, *CONT*). For inputs where wildcard expression (*) is not used, the service searches for reservations with exact match of last name. Single character excluding wildcard expression (*), is not supported in the input",
              "type": "string",
              "minLength": 1,
              "maxLength": 57
            },
            "links": {
              "description": "list of linkId that could be of type joint or share",
              "type": "array",
              "items": {
                "$ref": "#/definitions/reservationLinkId"
              },
              "maxItems": 50,
              "title": "ReservationSearchReqDataLinks"
            },
            "loyaltyId": {
              "description": "loyalty identifier or additional membership program identifier of the user profile",
              "type": "string",
              "pattern": "[A-Za-z0-9]{1,28}",
              "minLength": 1,
              "maxLength": 28
            },
            "loyaltyTierLevel": {
              "description": "level within the loyalty program",
              "type": "string",
              "minLength": 1,
              "maxLength": 5
            },
            "paymentType": {
              "description": "payment type based on OTA_CodeList PMT. (1-Cash, 2-Direct Bill, 3-Voucher, 5-Credit Card, 7-Check, 19-IATA Number, 30-Corporate Discount Number, 44-Guarantee to Property, 46-Online Payment, 47-Pay by Points, 48-Pay by EFT Electronic Funds Transfer) = ['1', '2', '3', '5', '7', '19', '30', '44', '46', '47', '48']",
              "enum": [
                1,
                2,
                3,
                5,
                7,
                19,
                30,
                44,
                46,
                47,
                48
              ],
              "type": "integer"
            },
            "paymentIntent": {
              "$ref": "#/definitions/paymentIntent"
            },
            "paymentStatus": {
              "$ref": "#/definitions/paymentStatus"
            },
            "policyProcessStatus": {
              "$ref": "#/definitions/policyProcessStatus"
            },
            "priceGridCode": {
              "description": "price grid code linked to the reservation",
              "type": "string",
              "pattern": "[A-Z0-9]{1,16}",
              "minLength": 1,
              "maxLength": 16
            },
            "programCode": {
              "description": "when set in the input, a search is done within the user profiles by matching the program code of additional membership programs and the program name of the loyalty program",
              "$ref": "#/definitions/programCode"
            },
            "propertyCode": {
              "description": "list of property codes",
              "type": "array",
              "items": {
                "$ref": "#/definitions/propertyCode"
              },
              "title": "ReservationSearchReqDataPropertyCode"
            },
            "promoCodes": {
              "description": "promotion code linked to the reservation",
              "type": "array",
              "items": {
                "$ref": "#/definitions/promoCode"
              },
              "maxItems": 10,
              "title": "ReservationSearchReqDataPromoCodes"
            },
            "promoGroupCodes": {
              "description": "promotion Group code linked to the reservation promotion code",
              "type": "array",
              "items": {
                "$ref": "#/definitions/promoGroupCode"
              },
              "maxItems": 10,
              "title": "ReservationSearchReqDataPromoGroupCodes"
            },
            "propertyMarketSegment": {
              "$ref": "#/definitions/propertyMarketSegment"
            },
            "rateAccessCodes": {
              "description": "rate access code attached to the rate plan",
              "type": "array",
              "items": {
                "$ref": "#/definitions/rateAccessCode"
              },
              "maxItems": 1,
              "title": "ReservationSearchReqDataRateAccessCodes"
            },
            "ratePlanCode": {
              "description": "rate plan of the reservation. For inputs, the service searches for reservations with rate plan code's starting with, ending with or containing characters using wildcard expression (STA*, *END, *CONT*). For inputs where wildcard expression (*) is not used, the service searches for reservations with exact match of rate plan code. Single character excluding wildcard expression (*), is not supported in the input",
              "$ref": "#/definitions/ratePlanCode"
            },
            "reportingData": {
              "$ref": "#/definitions/reportingData"
            },
            "reservationStatus": {
              "description": "status of the reservations expected in result booked (BK), modified (MY) or cancelled (CL)",
              "type": "array",
              "items": {
                "$ref": "#/definitions/resStatus"
              },
              "title": "ReservationSearchReqDataReservationStatus"
            },
            "reservationTypes": {
              "description": "parameter used to specify which reservationType the user wants to search for. The value \"Individual\" also includes the reservation without a reservationType. If no value is provided, the default search is done on individual reservations",
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "GroupMaster",
                  "Individual"
                ]
              },
              "title": "ReservationSearchReqDataReservationTypes"
            },
            "retrieveMode": {
              "description": "type of result expected for the search, displayList to return the list of reservations, checkOneFound to check if at least one reservation matches the criteria",
              "enum": [
                "displayList",
                "checkOneFound"
              ],
              "type": "string"
            },
            "segmentPmsStatus": {
              "description": "segment status on PMS side",
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "In-house",
                  "Checked out",
                  "No-show",
                  "Waitlisted",
                  "Pre-Checkin"
                ]
              },
              "title": "ReservationSearchReqDataSegmentPmsStatus"
            },
            "stayDate": {
              "description": "date situated within the stay period, between reservationStartDate (included) and reservationEndDate (excluded)",
              "$ref": "#/definitions/searchPeriod"
            },
            "transportationId": {
              "description": "identifier of the transportation method (car license plate, flight number etc.)",
              "type": "string",
              "minLength": 1,
              "maxLength": 32
            },
            "vendorCode": {
              "description": "vendor code",
              "$ref": "#/definitions/vendorCode"
            }
          }
        }
      },
      "title": "ReservationSearchReq"
    },
    "foundReservation": {
      "description": "returned in case retrieve_mode in request is set to checkOneFound. It is true if at least one reservation matching the criteria is found, false otherwise",
      "type": "boolean"
    },
    "reservationCount": {
      "description": "total number of reservations in the search response",
      "type": "integer"
    },
    "holdTime": {
      "description": "hold time limit (i.e '18:00'), filled if consolidatedRoomStayStatus = 'NonGuaranteedHold'",
      "type": "string"
    },
    "isAccessibleByWeb": {
      "description": "indicates if the reservation is available through website",
      "type": "boolean"
    },
    "matchedSearchCriteria": {
      "description": "indicates if the segment matched the input criteria",
      "type": "boolean"
    },
    "CancellationReq": {
      "type": "object",
      "properties": {
        "data": {
          "title": "CancellationReqData",
          "properties": {
            "cancellationReasons": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/cancellationReason"
              },
              "title": "CancellationReqDataCancellationReasons"
            },
            "extCxNumber": {
              "$ref": "#/definitions/extCxNumber"
            },
            "pmsCxNumber": {
              "$ref": "#/definitions/pmsCxNumber"
            }
          },
          "type": "object"
        }
      },
      "title": "CancellationReq"
    },
    "cancellationReason": {
      "type": "object",
      "description": "reason of the reservation or segment cancellation",
      "properties": {
        "code": {
          "description": "code of the cancellation reason",
          "type": "string",
          "maxLength": 30
        },
        "description": {
          "description": "description of the cancellation reason",
          "$ref": "#/definitions/description"
        },
        "others": {
          "description": "exceptional cancellation reason",
          "$ref": "#/definitions/description"
        },
        "waiveFees": {
          "description": "flag to waive the cancellation fees",
          "type": "boolean"
        }
      },
      "title": "CancellationReason"
    },
    "code": {
      "description": "group of products for which an allowance is booked",
      "type": "string",
      "pattern": "^[A-Z0-9]{2,8}$",
      "minLength": 2,
      "maxLength": 8
    },
    "RelatedTaxId": {
      "type": "integer",
      "pattern": "^.*$",
      "description": "list of associated parent tax ids on which the tax on tax is applied",
      "maxLength": 5
    },
    "programId": {
      "description": "membership identifier of the guest",
      "type": "string",
      "minLength": 1,
      "maxLength": 50,
      "example": "1231231"
    },
    "programCode": {
      "description": "program code of the membership program",
      "type": "string",
      "minLength": 1,
      "maxLength": 20,
      "example": "PC12"
    },
    "programLevel": {
      "description": "level within the membership program",
      "type": "string",
      "minLength": 1,
      "maxLength": 50,
      "example": "Gold"
    },
    "programType": {
      "description": "type of the membership program",
      "type": "string",
      "minLength": 1,
      "maxLength": 50,
      "example": "mLite"
    },
    "additionalMembershipProgram": {
      "description": "additional membership program of the guest",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/programId"
        },
        "programCode": {
          "$ref": "#/definitions/programCode"
        },
        "programType": {
          "$ref": "#/definitions/programType"
        },
        "level": {
          "$ref": "#/definitions/programLevel"
        }
      },
      "title": "AdditionalMembershipProgram"
    },
    "pointOfSale-reservationCreateReq": {
      "type": "object",
      "required": [
        "vendorCode",
        "channelCode"
      ],
      "properties": {
        "hotelSource": {
          "description": "the hotel code of creator of the reservation or the requestor of the last transaction",
          "$ref": "#/definitions/propertyCode"
        },
        "vendorCode": {
          "description": "the vendor code of the creator of the reservation or the requestor of the transaction",
          "$ref": "#/definitions/vendorCode"
        },
        "vendorTypes": {
          "description": "the vendor type code [0 = Unknown, 1 = PMS, 2 = booking tool, 3 = brand website, 4 = GDS/3rd party website, 5 = mobile, 6 = alternate distribution system]",
          "type": "array",
          "items": {
            "type": "integer",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6
            ]
          },
          "title": "PointOfSale-reservationCreateReqVendorTypes"
        },
        "channelCode": {
          "description": "the channel code of the creator of the reservation or the requestor of the transaction",
          "$ref": "#/definitions/channelCode"
        },
        "channelSubCode": {
          "description": "sub-channel code as it has been provided by the creator of the reservation or the requestor of the transaction",
          "$ref": "#/definitions/channelCode"
        },
        "metricsCode": {
          "description": "the metrics code of the creator of the reservation or the requestor of the transaction, it is only optional for the retrieve of a group record and should always be returned for a standard reservation",
          "$ref": "#/definitions/metricsCode"
        },
        "travelAgencyInfo": {
          "$ref": "#/definitions/travelAgencyInformation"
        },
        "origin": {
          "description": "Indicates the Expedia channel that was used for the reservation, if relevant",
          "type": "string"
        },
        "callCenterInformation": {
          "description": "List of call centers information",
          "type": "array",
          "maxItems": 2,
          "items": {
            "$ref": "#/definitions/callCenterInformation"
          },
          "title": "PointOfSale-reservationCreateReqCallCenterInformation"
        },
        "reportingData": {
          "$ref": "#/definitions/reportingData"
        }
      },
      "title": "PointOfSale-reservationCreateReq"
    },
    "comment-reservationCreateReq": {
      "type": "object",
      "title": "Comment-reservationCreateReq",
      "required": [
        "type",
        "text"
      ],
      "properties": {
        "type": {
          "$ref": "#/definitions/typeOfComments"
        },
        "language": {
          "$ref": "#/definitions/language"
        },
        "text": {
          "type": "array",
          "items": {
            "description": "free flow text in the comment",
            "type": "string",
            "pattern": "^.*$",
            "minLength": 1,
            "maxLength": 1200
          },
          "title": "Comment-reservationCreateReqText"
        },
        "isProcessed": {
          "description": "indicates if comment is processed",
          "type": "boolean"
        },
        "userName": {
          "description": "name of the user who processed the comment",
          "type": "string",
          "maxLength": 99
        }
      }
    },
    "segmentReq-reservationCreateReq": {
      "description": "List of segments",
      "type": "array",
      "items": {
        "type": "object",
        "title": "SegmentReq-reservationCreateReqItem",
        "required": [
          "propertyCode",
          "offer"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Identify the segment inside the reservation all along the reservation life."
          },
          "synchroNumber": {
            "$ref": "#/definitions/synchroNumber"
          },
          "externalSegmentId": {
            "type": "integer",
            "description": "Used to identify a segment on external booking engines/GDS side."
          },
          "segmentStatus": {
            "$ref": "#/definitions/segmentStatus"
          },
          "segmentPmsStatus": {
            "$ref": "#/definitions/segmentPmsStatusReq"
          },
          "segmentHolderId": {
            "$ref": "#/definitions/segmentHolderId"
          },
          "bookerId": {
            "$ref": "#/definitions/bookerId"
          },
          "parentId": {
            "$ref": "#/definitions/parentId"
          },
          "indicators": {
            "$ref": "#/definitions/indicatorsReq"
          },
          "option": {
            "$ref": "#/definitions/option"
          },
          "propertyCode": {
            "$ref": "#/definitions/propertyCode"
          },
          "creator": {
            "description": "Contains the details of the channel which created the reservation. If provided in the payload, will be stored in the reservation. The channel headers must still be provided to perform the permissions check.",
            "$ref": "#/definitions/pointOfSale-reservationCreateReq"
          },
          "owner": {
            "description": "Agency which owns the segment. This is the agency whose IATA number is used for guarantee, and also the agency who is commissioned for the segment. If provided in the payload, will be stored in the reservation instead of the information from the Ama-Reservation-Owner header.",
            "$ref": "#/definitions/reservationOwner"
          },
          "corporateAccountInfo": {
            "$ref": "#/definitions/corporateAccountInfoReq"
          },
          "offer": {
            "$ref": "#/definitions/offerReq"
          },
          "formOfPayment": {
            "$ref": "#/definitions/formOfPaymentReq"
          },
          "specialRequests": {
            "type": "array",
            "description": "List the special requests",
            "maxItems": 100,
            "items": {
              "$ref": "#/definitions/specialRequestsReq"
            },
            "title": "SegmentReq-reservationCreateReqItemSpecialRequests"
          },
          "serviceRequests": {
            "type": "array",
            "description": "List the service requests",
            "maxItems": 25,
            "items": {
              "$ref": "#/definitions/serviceRequests"
            },
            "title": "SegmentReq-reservationCreateReqItemServiceRequests"
          },
          "traces": {
            "type": "array",
            "description": "Traces allow to generate tasks that require fulfillment, which can be associated to a particular department. e.g. \"Review deposits\"",
            "minItems": 1,
            "maxItems": 100,
            "items": {
              "$ref": "#/definitions/traces"
            },
            "title": "SegmentReq-reservationCreateReqItemTraces"
          },
          "alerts": {
            "type": "array",
            "description": "Alerts are PMS functionality which can be pre-configured. They include screen and printer notification. e.g. \"VIP guest\"",
            "minItems": 1,
            "maxItems": 100,
            "items": {
              "$ref": "#/definitions/alerts"
            },
            "title": "SegmentReq-reservationCreateReqItemAlerts"
          },
          "arrivalTime": {
            "$ref": "#/definitions/arrivalTime"
          },
          "departureTime": {
            "$ref": "#/definitions/departureTime"
          },
          "arrivalTransport": {
            "$ref": "#/definitions/transportation"
          },
          "departureTransport": {
            "$ref": "#/definitions/transportation"
          },
          "language": {
            "$ref": "#/definitions/language"
          },
          "comments": {
            "type": "array",
            "description": "comment details of corresponding segment. It describes the type, language and text of comments",
            "items": {
              "$ref": "#/definitions/comment-reservationCreateReq"
            },
            "title": "SegmentReq-reservationCreateReqItemComments"
          },
          "customData": {
            "$ref": "#/definitions/customData"
          },
          "travelPurpose": {
            "$ref": "#/definitions/travelPurpose"
          },
          "arrivalAmenities": {
            "type": "array",
            "description": "List of loyalty arrival amenity codes selected by the loyalty guest",
            "maxItems": 50,
            "items": {
              "$ref": "#/definitions/ArrivalAmenity"
            },
            "title": "SegmentReq-reservationCreateReqItemArrivalAmenities"
          },
          "cancellationReasons": {
            "type": "array",
            "maxItems": 10,
            "items": {
              "$ref": "#/definitions/cancellationReason"
            },
            "title": "SegmentReq-reservationCreateReqItemCancellationReasons"
          },
          "invoiceIds": {
            "type": "array",
            "description": "List of invoice Ids used in the segment",
            "maxItems": 100,
            "items": {
              "$ref": "#/definitions/invoiceId"
            },
            "title": "SegmentReq-reservationCreateReqItemInvoiceIds"
          },
          "chargeRoutings": {
            "type": "array",
            "maxItems": 20,
            "items": {
              "$ref": "#/definitions/chargeRouting"
            },
            "title": "SegmentReq-reservationCreateReqItemChargeRoutings"
          },
          "customerOwnReference": {
            "$ref": "#/definitions/customerOwnReference"
          },
          "purchaseOrderReference": {
            "$ref": "#/definitions/purchaseOrderReference"
          },
          "policyProcessStatus": {
            "$ref": "#/definitions/policyProcessStatus"
          },
          "assignedRooms": {
            "description": "this is a deprecated field. It can be used at ProductUses level (assignedRoom)",
            "type": "array",
            "items": {
              "$ref": "#/definitions/allocatedRoom"
            },
            "title": "SegmentReq-reservationCreateReqItemAssignedRooms"
          },
          "isAssignedRoomLocked": {
            "description": "indicates if assigned room can be updated. If set to true, assigned room cannot be updated",
            "type": "boolean"
          },
          "rateOverrideReason": {
            "$ref": "#/definitions/rateOverrideReason"
          }
        }
      },
      "title": "SegmentReq-reservationCreateReq"
    },
    "HotelReservationReq-reservationCreateReq": {
      "description": "Full representation of reservation record",
      "type": "object",
      "title": "HotelReservationReq-reservationCreateReq",
      "required": [
        "hotels",
        "segments"
      ],
      "properties": {
        "reservationIds": {
          "$ref": "#/definitions/reservationIdsReq"
        },
        "emailNotification": {
          "$ref": "#/definitions/emailNotification"
        },
        "smsNotification": {
          "$ref": "#/definitions/smsNotification"
        },
        "type": {
          "$ref": "#/definitions/reservationType"
        },
        "groupContracts": {
          "description": "List of groupContract",
          "type": "array",
          "maxItems": 99,
          "items": {
            "$ref": "#/definitions/groupContractReq"
          },
          "title": "HotelReservationReq-reservationCreateReqGroupContracts"
        },
        "purgeDateTime": {
          "description": "Date and time when the confirmation number has to be released. Only sent in migration requests, in partial freeze mode",
          "$ref": "#/definitions/purgeDateTime"
        },
        "hotels": {
          "description": "List of hotels",
          "type": "array",
          "maxItems": 99,
          "items": {
            "$ref": "#/definitions/hotelReq"
          },
          "title": "HotelReservationReq-reservationCreateReqHotels"
        },
        "installments": {
          "description": "Deposit rule details",
          "type": "array",
          "maxItems": 3,
          "items": {
            "$ref": "#/definitions/installment"
          },
          "title": "HotelReservationReq-reservationCreateReqInstallments"
        },
        "userProfiles": {
          "$ref": "#/definitions/guestsReq"
        },
        "segments": {
          "$ref": "#/definitions/segmentReq-reservationCreateReq"
        },
        "comments": {
          "type": "array",
          "description": "comment details of the reservation. It describes the type, language and text of comments",
          "items": {
            "$ref": "#/definitions/comment-reservationCreateReq"
          },
          "title": "HotelReservationReq-reservationCreateReqComments"
        },
        "chargePrivilege": {
          "$ref": "#/definitions/chargePrivilege"
        },
        "customData": {
          "$ref": "#/definitions/customData",
          "description": "All data under customData are stored in the reservation and returned in the response and retrieve. Any valid Json object is accepted"
        },
        "invoiceIds": {
          "type": "array",
          "description": "List of invoice Ids. Each Id is unique in the reservation.",
          "maxItems": 1000,
          "items": {
            "$ref": "#/definitions/invoiceId"
          },
          "title": "HotelReservationReq-reservationCreateReqInvoiceIds"
        },
        "businessSource": {
          "$ref": "#/definitions/businessSource"
        }
      }
    },
    "ReservationReq-reservationCreateReq": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "title": "ReservationReq-reservationCreateReqData",
          "type": "object",
          "required": [
            "hotelReservation"
          ],
          "properties": {
            "creator": {
              "description": "contains the details of the channel which created the reservation. If provided in the payload, will be stored in the reservation. The channel headers must still be provided to perform the permissions check",
              "$ref": "#/definitions/pointOfSale-reservationCreateReq"
            },
            "hotelReservation": {
              "$ref": "#/definitions/HotelReservationReq-reservationCreateReq"
            }
          }
        }
      },
      "title": "ReservationReq-reservationCreateReq"
    },
    "HotelReservationRetrieveRes-reservation": {
      "description": "full representation of reservation record",
      "type": "object",
      "required": [
        "status",
        "imageStatus",
        "hotels",
        "creationDateTime",
        "lastUpdateDateTime",
        "reservationIds",
        "segments",
        "products"
      ],
      "properties": {
        "status": {
          "$ref": "#/definitions/resStatus"
        },
        "type": {
          "$ref": "#/definitions/reservationType"
        },
        "imageStatus": {
          "$ref": "#/definitions/imageStatus"
        },
        "creationDateTime": {
          "$ref": "#/definitions/createDateTime"
        },
        "lastUpdateDateTime": {
          "$ref": "#/definitions/lastUpdateDateTime"
        },
        "lastUpdateDateTimeHotelLocalTime": {
          "$ref": "#/definitions/lastUpdateDateTimeHotelLocalTime"
        },
        "cancellationDateTime": {
          "$ref": "#/definitions/cancellationDateTime"
        },
        "purgeDateTime": {
          "$ref": "#/definitions/purgeDateTime"
        },
        "authenticatedUser": {
          "description": "authenticated user information",
          "$ref": "#/definitions/authenticatedUser"
        },
        "impersonatedUser": {
          "description": "impersonated user information",
          "$ref": "#/definitions/authenticatedUser"
        },
        "reservationIds": {
          "$ref": "#/definitions/reservationIdsRes"
        },
        "emailNotification": {
          "$ref": "#/definitions/emailNotification"
        },
        "smsNotification": {
          "$ref": "#/definitions/smsNotification"
        },
        "hotels": {
          "description": "list of hotels",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hotelRes"
          },
          "title": "HotelReservationRetrieveRes-reservationHotels"
        },
        "products": {
          "description": "the list of products (base product + attribute(s)) returned",
          "type": "array",
          "items": {
            "$ref": "#/definitions/product"
          },
          "title": "HotelReservationRetrieveRes-reservationProducts"
        },
        "attributes": {
          "description": "the list of attributes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/attribute"
          },
          "title": "HotelReservationRetrieveRes-reservationAttributes"
        },
        "links": {
          "description": "link reservation details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/reservationLinks"
          },
          "title": "HotelReservationRetrieveRes-reservationLinks"
        },
        "groupContracts": {
          "description": "list of groupContract",
          "type": "array",
          "maxItems": 99,
          "items": {
            "$ref": "#/definitions/groupContractRes"
          },
          "title": "HotelReservationRetrieveRes-reservationGroupContracts"
        },
        "installments": {
          "description": "deposit rule details",
          "type": "array",
          "maxItems": 3,
          "items": {
            "$ref": "#/definitions/installment"
          },
          "title": "HotelReservationRetrieveRes-reservationInstallments"
        },
        "ratePlans": {
          "description": "list of rate plans used in the reservation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ratePlanRes"
          },
          "title": "HotelReservationRetrieveRes-reservationRatePlans"
        },
        "userProfiles": {
          "description": "list of user profiles, at least one is mandatory for a 1 step",
          "$ref": "#/definitions/guestsRes"
        },
        "segments": {
          "$ref": "#/definitions/segmentRes"
        },
        "totalReservation": {
          "description": "list of totals per currency",
          "type": "array",
          "items": {
            "$ref": "#/definitions/totalReservation"
          },
          "title": "HotelReservationRetrieveRes-reservationTotalReservation"
        },
        "totalOfActiveSegments": {
          "description": "list of totals per currency",
          "type": "array",
          "items": {
            "$ref": "#/definitions/totalOfActiveSegments"
          },
          "title": "HotelReservationRetrieveRes-reservationTotalOfActiveSegments"
        },
        "comments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/comment"
          },
          "title": "HotelReservationRetrieveRes-reservationComments"
        },
        "customData": {
          "$ref": "#/definitions/customData"
        },
        "invoiceIds": {
          "type": "array",
          "description": "list of invoice Ids. Each Id is unique in the reservation",
          "items": {
            "$ref": "#/definitions/invoiceId"
          },
          "title": "HotelReservationRetrieveRes-reservationInvoiceIds"
        },
        "sendUserNotification": {
          "type": "boolean",
          "description": "indicator used to determine when a notification is sent to a user, it is only responded if the retrieve_delta request parameter is set to true"
        },
        "printRate": {
          "$ref": "#/definitions/printRate"
        },
        "chargePrivilege": {
          "$ref": "#/definitions/chargePrivilege"
        },
        "businessSource": {
          "$ref": "#/definitions/businessSource"
        }
      },
      "title": "HotelReservationRetrieveRes-reservation"
    },
    "ReservationRetrieveRes-reservation": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/warning"
          },
          "title": "ReservationRetrieveRes-reservationWarnings"
        },
        "data": {
          "type": "object",
          "title": "ReservationRetrieveRes-reservationData",
          "properties": {
            "creator": {
              "description": "contains the details of the channel which created the reservation",
              "$ref": "#/definitions/pointOfSale"
            },
            "requestor": {
              "description": "contains the details of the channel which requested the transaction",
              "$ref": "#/definitions/pointOfSale"
            },
            "hotelReservation": {
              "$ref": "#/definitions/HotelReservationRetrieveRes-reservation"
            },
            "history": {
              "$ref": "#/definitions/history"
            },
            "modificationChanges": {
              "$ref": "#/definitions/modificationChanges"
            }
          }
        }
      },
      "title": "ReservationRetrieveRes-reservation"
    },
    "comment-reservationModifyReq": {
      "type": "object",
      "title": "Comment-reservationModifyReq",
      "required": [
        "type",
        "text"
      ],
      "properties": {
        "type": {
          "$ref": "#/definitions/typeOfComments"
        },
        "language": {
          "$ref": "#/definitions/language"
        },
        "text": {
          "type": "array",
          "items": {
            "description": "free flow text in the comment",
            "type": "string",
            "pattern": "^.*$",
            "minLength": 1,
            "maxLength": 1200
          },
          "title": "Comment-reservationModifyReqText"
        },
        "isProcessed": {
          "description": "indicates if comment is processed",
          "type": "boolean"
        },
        "userName": {
          "description": "name of the user who processed the comment",
          "type": "string",
          "maxLength": 99
        }
      }
    },
    "segmentModifyReq-reservationModifyReq": {
      "description": "List of segments",
      "type": "array",
      "items": {
        "type": "object",
        "title": "SegmentModifyReq-reservationModifyReqItem",
        "required": [
          "segmentHolderId",
          "propertyCode",
          "offer"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Identify the segment inside the reservation all along the reservation life."
          },
          "synchroNumber": {
            "$ref": "#/definitions/synchroNumber"
          },
          "externalSegmentId": {
            "type": "integer",
            "description": "Used to identify a segment on external booking engines/GDS side."
          },
          "segmentStatus": {
            "$ref": "#/definitions/segmentStatus"
          },
          "segmentPmsStatus": {
            "$ref": "#/definitions/segmentPmsStatusReq"
          },
          "segmentHolderId": {
            "$ref": "#/definitions/segmentHolderId"
          },
          "bookerId": {
            "$ref": "#/definitions/bookerId"
          },
          "parentId": {
            "$ref": "#/definitions/parentId"
          },
          "indicators": {
            "$ref": "#/definitions/indicatorsReq"
          },
          "option": {
            "$ref": "#/definitions/option"
          },
          "propertyCode": {
            "$ref": "#/definitions/propertyCode"
          },
          "corporateAccountInfo": {
            "$ref": "#/definitions/corporateAccountInfoReq"
          },
          "offer": {
            "$ref": "#/definitions/offerReq"
          },
          "formOfPayment": {
            "$ref": "#/definitions/formOfPaymentReq"
          },
          "specialRequests": {
            "type": "array",
            "description": "List the special requests",
            "maxItems": 100,
            "items": {
              "$ref": "#/definitions/specialRequestsReq"
            },
            "title": "SegmentModifyReq-reservationModifyReqItemSpecialRequests"
          },
          "serviceRequests": {
            "type": "array",
            "description": "List the service requests",
            "maxItems": 25,
            "items": {
              "$ref": "#/definitions/serviceRequests"
            },
            "title": "SegmentModifyReq-reservationModifyReqItemServiceRequests"
          },
          "arrivalTime": {
            "$ref": "#/definitions/arrivalTime"
          },
          "departureTime": {
            "$ref": "#/definitions/departureTime"
          },
          "arrivalTransport": {
            "$ref": "#/definitions/transportation"
          },
          "departureTransport": {
            "$ref": "#/definitions/transportation"
          },
          "language": {
            "$ref": "#/definitions/language"
          },
          "comments": {
            "type": "array",
            "description": "comment details of corresponding segment. It describes the type, language and text of comments",
            "items": {
              "$ref": "#/definitions/comment-reservationModifyReq"
            },
            "title": "SegmentModifyReq-reservationModifyReqItemComments"
          },
          "customData": {
            "$ref": "#/definitions/customData"
          },
          "travelPurpose": {
            "$ref": "#/definitions/travelPurpose"
          },
          "arrivalAmenities": {
            "type": "array",
            "description": "List of loyalty arrival amenity codes selected by the loyalty guest",
            "maxItems": 50,
            "items": {
              "$ref": "#/definitions/ArrivalAmenity"
            },
            "title": "SegmentModifyReq-reservationModifyReqItemArrivalAmenities"
          },
          "cancellationReasons": {
            "type": "array",
            "maxItems": 10,
            "items": {
              "$ref": "#/definitions/cancellationReason"
            },
            "title": "SegmentModifyReq-reservationModifyReqItemCancellationReasons"
          },
          "forceRepricing": {
            "type": "boolean",
            "description": "Used to force the repricing of the segment."
          },
          "invoiceIds": {
            "type": "array",
            "description": "List of invoice Ids used in the segment",
            "maxItems": 100,
            "items": {
              "$ref": "#/definitions/invoiceId"
            },
            "title": "SegmentModifyReq-reservationModifyReqItemInvoiceIds"
          },
          "chargeRoutings": {
            "type": "array",
            "maxItems": 20,
            "items": {
              "$ref": "#/definitions/chargeRouting"
            },
            "title": "SegmentModifyReq-reservationModifyReqItemChargeRoutings"
          },
          "customerOwnReference": {
            "$ref": "#/definitions/customerOwnReference"
          },
          "purchaseOrderReference": {
            "$ref": "#/definitions/purchaseOrderReference"
          },
          "policyProcessStatus": {
            "$ref": "#/definitions/policyProcessStatus"
          },
          "assignedRooms": {
            "description": "this is a deprecated field. It can be used at ProductUses level (assignedRoom)",
            "type": "array",
            "items": {
              "$ref": "#/definitions/allocatedRoom"
            },
            "title": "SegmentModifyReq-reservationModifyReqItemAssignedRooms"
          },
          "isAssignedRoomLocked": {
            "description": "indicates if assigned room can be updated. If set to true, assigned room cannot be updated",
            "type": "boolean"
          },
          "rateOverrideReason": {
            "$ref": "#/definitions/rateOverrideReason"
          }
        }
      },
      "title": "SegmentModifyReq-reservationModifyReq"
    },
    "HotelReservationModifyReq-reservationModifyReq": {
      "description": "Full representation of reservation record",
      "type": "object",
      "required": [
        "hotelReservation"
      ],
      "properties": {
        "hotelReservation": {
          "type": "object",
          "title": "HotelReservationModifyReq-reservationModifyReqHotelReservation",
          "required": [
            "hotels",
            "segments"
          ],
          "properties": {
            "reservationIds": {
              "$ref": "#/definitions/reservationIdsReq"
            },
            "emailNotification": {
              "$ref": "#/definitions/emailNotification"
            },
            "smsNotification": {
              "$ref": "#/definitions/smsNotification"
            },
            "type": {
              "$ref": "#/definitions/reservationType"
            },
            "groupContracts": {
              "description": "List of groupContract",
              "type": "array",
              "maxItems": 99,
              "items": {
                "$ref": "#/definitions/groupContractReq"
              },
              "title": "HotelReservationModifyReq-reservationModifyReqHotelReservationGroupContracts"
            },
            "installments": {
              "description": "Deposit rule details",
              "type": "array",
              "maxItems": 3,
              "items": {
                "$ref": "#/definitions/installment"
              },
              "title": "HotelReservationModifyReq-reservationModifyReqHotelReservationInstallments"
            },
            "purgeDateTime": {
              "description": "Date and time when the confirmation number has to be released. Only sent in migration requests, in partial freeze mode",
              "$ref": "#/definitions/purgeDateTime"
            },
            "hotels": {
              "description": "List of hotels",
              "type": "array",
              "items": {
                "$ref": "#/definitions/hotelReq"
              },
              "title": "HotelReservationModifyReq-reservationModifyReqHotelReservationHotels"
            },
            "userProfiles": {
              "$ref": "#/definitions/guestsReq"
            },
            "segments": {
              "$ref": "#/definitions/segmentModifyReq-reservationModifyReq"
            },
            "comments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/comment-reservationModifyReq"
              },
              "title": "HotelReservationModifyReq-reservationModifyReqHotelReservationComments"
            },
            "customData": {
              "$ref": "#/definitions/customData"
            },
            "chargePrivilege": {
              "$ref": "#/definitions/chargePrivilege"
            },
            "invoiceIds": {
              "type": "array",
              "description": "List of invoice Ids. Each Id is unique in the reservation.",
              "items": {
                "$ref": "#/definitions/invoiceId"
              },
              "title": "HotelReservationModifyReq-reservationModifyReqHotelReservationInvoiceIds"
            },
            "businessSource": {
              "$ref": "#/definitions/businessSource"
            }
          }
        }
      },
      "title": "HotelReservationModifyReq-reservationModifyReq"
    },
    "ReservationModifyReq-reservationModifyReq": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/HotelReservationModifyReq-reservationModifyReq"
        }
      },
      "title": "ReservationModifyReq-reservationModifyReq"
    },
    "reservationIdentifiers-multiRetrieveRequest": {
      "description": "parameters that identify the reservation to retrieve",
      "type": "object",
      "required": [
        "cfNumber"
      ],
      "properties": {
        "cfNumber": {
          "$ref": "#/definitions/cfNumber"
        }
      },
      "title": "ReservationIdentifiers-multiRetrieveRequest"
    },
    "MultiRetrieveReservationReq-multiRetrieveRequest": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "object",
          "description": "multi retrieve reservation request",
          "title": "MultiRetrieveReservationReq-multiRetrieveRequestData",
          "properties": {
            "reservationIdentifiers": {
              "type": "array",
              "description": "list of cfNumbers and creation dates",
              "items": {
                "$ref": "#/definitions/reservationIdentifiers-multiRetrieveRequest"
              },
              "title": "MultiRetrieveReservationReq-multiRetrieveRequestDataReservationIdentifiers"
            }
          }
        }
      },
      "title": "MultiRetrieveReservationReq-multiRetrieveRequest"
    },
    "HotelReservationRetrieveRes-reservationMultiRetrieveRes": {
      "description": "full representation of reservation record",
      "type": "object",
      "required": [
        "status",
        "imageStatus",
        "hotels",
        "creationDateTime",
        "lastUpdateDateTime",
        "reservationIds",
        "segments",
        "products"
      ],
      "properties": {
        "warningIds": {
          "description": "list of warning references",
          "type": "array",
          "items": {
            "$ref": "#/definitions/id"
          },
          "title": "HotelReservationRetrieveRes-reservationMultiRetrieveResWarningIds"
        },
        "status": {
          "$ref": "#/definitions/resStatus"
        },
        "type": {
          "$ref": "#/definitions/reservationType"
        },
        "imageStatus": {
          "$ref": "#/definitions/imageStatus"
        },
        "creationDateTime": {
          "$ref": "#/definitions/createDateTime"
        },
        "lastUpdateDateTime": {
          "$ref": "#/definitions/lastUpdateDateTime"
        },
        "lastUpdateDateTimeHotelLocalTime": {
          "$ref": "#/definitions/lastUpdateDateTimeHotelLocalTime"
        },
        "cancellationDateTime": {
          "$ref": "#/definitions/cancellationDateTime"
        },
        "purgeDateTime": {
          "$ref": "#/definitions/purgeDateTime"
        },
        "authenticatedUser": {
          "description": "authenticated user information",
          "$ref": "#/definitions/authenticatedUser"
        },
        "impersonatedUser": {
          "description": "impersonated user information",
          "$ref": "#/definitions/authenticatedUser"
        },
        "reservationIds": {
          "$ref": "#/definitions/reservationIdsRes"
        },
        "emailNotification": {
          "$ref": "#/definitions/emailNotification"
        },
        "smsNotification": {
          "$ref": "#/definitions/smsNotification"
        },
        "hotels": {
          "description": "list of hotels",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hotelRes"
          },
          "title": "HotelReservationRetrieveRes-reservationMultiRetrieveResHotels"
        },
        "products": {
          "description": "the list of products (base product + attribute(s)) returned",
          "type": "array",
          "items": {
            "$ref": "#/definitions/product"
          },
          "title": "HotelReservationRetrieveRes-reservationMultiRetrieveResProducts"
        },
        "attributes": {
          "description": "the list of attributes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/attribute"
          },
          "title": "HotelReservationRetrieveRes-reservationMultiRetrieveResAttributes"
        },
        "links": {
          "description": "link reservation details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/reservationLinks"
          },
          "title": "HotelReservationRetrieveRes-reservationMultiRetrieveResLinks"
        },
        "groupContracts": {
          "description": "list of groupContract",
          "type": "array",
          "maxItems": 99,
          "items": {
            "$ref": "#/definitions/groupContractRes"
          },
          "title": "HotelReservationRetrieveRes-reservationMultiRetrieveResGroupContracts"
        },
        "installments": {
          "description": "deposit rule details",
          "type": "array",
          "maxItems": 3,
          "items": {
            "$ref": "#/definitions/installment"
          },
          "title": "HotelReservationRetrieveRes-reservationMultiRetrieveResInstallments"
        },
        "ratePlans": {
          "description": "list of rate plans used in the reservation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ratePlanRes"
          },
          "title": "HotelReservationRetrieveRes-reservationMultiRetrieveResRatePlans"
        },
        "userProfiles": {
          "description": "list of user profiles, at least one is mandatory for a 1 step",
          "$ref": "#/definitions/guestsRes"
        },
        "segments": {
          "$ref": "#/definitions/segmentRes"
        },
        "totalReservation": {
          "description": "list of totals per currency",
          "type": "array",
          "items": {
            "$ref": "#/definitions/totalReservation"
          },
          "title": "HotelReservationRetrieveRes-reservationMultiRetrieveResTotalReservation"
        },
        "totalOfActiveSegments": {
          "description": "list of totals per currency",
          "type": "array",
          "items": {
            "$ref": "#/definitions/totalOfActiveSegments"
          },
          "title": "HotelReservationRetrieveRes-reservationMultiRetrieveResTotalOfActiveSegments"
        },
        "comments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/comment"
          },
          "title": "HotelReservationRetrieveRes-reservationMultiRetrieveResComments"
        },
        "customData": {
          "$ref": "#/definitions/customData"
        },
        "invoiceIds": {
          "type": "array",
          "description": "list of invoice Ids. Each Id is unique in the reservation",
          "items": {
            "$ref": "#/definitions/invoiceId"
          },
          "title": "HotelReservationRetrieveRes-reservationMultiRetrieveResInvoiceIds"
        },
        "printRate": {
          "$ref": "#/definitions/printRate"
        },
        "chargePrivilege": {
          "$ref": "#/definitions/chargePrivilege"
        },
        "businessSource": {
          "$ref": "#/definitions/businessSource"
        }
      },
      "title": "HotelReservationRetrieveRes-reservationMultiRetrieveRes"
    },
    "MultiRetrieveReservationArchivedAndActiveRes-reservationMultiRetrieveRes": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/warning"
          },
          "title": "MultiRetrieveReservationArchivedAndActiveRes-reservationMultiRetrieveResWarnings"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "title": "MultiRetrieveReservationArchivedAndActiveRes-reservationMultiRetrieveResDataItem",
            "properties": {
              "creator": {
                "description": "contains the details of the channel which created the reservation",
                "$ref": "#/definitions/pointOfSale"
              },
              "requestor": {
                "description": "contains the details of the channel which requested the transaction",
                "$ref": "#/definitions/pointOfSale"
              },
              "hotelReservation": {
                "$ref": "#/definitions/HotelReservationRetrieveRes-reservationMultiRetrieveRes"
              }
            }
          },
          "title": "MultiRetrieveReservationArchivedAndActiveRes-reservationMultiRetrieveResData"
        }
      },
      "title": "MultiRetrieveReservationArchivedAndActiveRes-reservationMultiRetrieveRes"
    },
    "guaranteeRes-postSearchReservations": {
      "description": "payment policies for the guarantee",
      "type": "object",
      "required": [
        "isRequired"
      ],
      "properties": {
        "isRequired": {
          "$ref": "#/definitions/isRequired"
        }
      },
      "title": "GuaranteeRes-postSearchReservations"
    },
    "policiesRes-postSearchReservations": {
      "description": "element containing all the policies regarding guarantee, deposit, cancellation, no-show and early check-out",
      "type": "object",
      "properties": {
        "guarantee": {
          "description": "payment policies for the guarantee",
          "$ref": "#/definitions/guaranteeRes-postSearchReservations"
        }
      },
      "title": "PoliciesRes-postSearchReservations"
    },
    "offerSearchRes-postSearchReservations": {
      "type": "object",
      "description": "offer",
      "required": [
        "productUses"
      ],
      "properties": {
        "groupCode": {
          "$ref": "#/definitions/groupCode"
        },
        "productUses": {
          "$ref": "#/definitions/productUseSearchRes"
        },
        "groupId": {
          "$ref": "#/definitions/groupId"
        },
        "propertyMarketSegment": {
          "$ref": "#/definitions/propertyMarketSegment"
        },
        "nightlyCorpMarketSegments": {
          "description": "list of corporate market segments applicable for each night of the stay",
          "type": "array",
          "items": {
            "$ref": "#/definitions/nightlyCorporateMarketSegment"
          },
          "title": "OfferSearchRes-postSearchReservationsNightlyCorpMarketSegments"
        },
        "corpMarketSegment": {
          "$ref": "#/definitions/corporateMarketSegment"
        },
        "policies": {
          "$ref": "#/definitions/policiesRes-postSearchReservations"
        },
        "policyTypeCode": {
          "$ref": "#/definitions/policyTypeCode"
        },
        "promoCode": {
          "$ref": "#/definitions/promoCode"
        },
        "promoGroupCode": {
          "$ref": "#/definitions/promoGroupCode"
        },
        "isPerpetualOffer": {
          "$ref": "#/definitions/isPerpetualOffer"
        },
        "isOneOffOffer": {
          "$ref": "#/definitions/isOneOffOffer"
        },
        "rateAccessCode": {
          "$ref": "#/definitions/rateAccessCode"
        }
      },
      "title": "OfferSearchRes-postSearchReservations"
    },
    "segmentSearchRes-postSearchReservations": {
      "description": "List of segments",
      "type": "array",
      "items": {
        "type": "object",
        "title": "SegmentSearchRes-postSearchReservationsItem",
        "required": [
          "id",
          "matchedSearchCriteria",
          "segmentStatus",
          "start",
          "end",
          "synchroNumber",
          "consolidatedSegmentStatus",
          "hasAddOns",
          "propertyCode",
          "checkInRate",
          "offer"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Identify the segment inside the reservation all along the reservation life."
          },
          "matchedSearchCriteria": {
            "$ref": "#/definitions/matchedSearchCriteria"
          },
          "start": {
            "description": "Start date",
            "type": "string",
            "format": "date"
          },
          "end": {
            "description": "End date",
            "type": "string",
            "format": "date"
          },
          "synchroNumber": {
            "$ref": "#/definitions/synchroNumber"
          },
          "segmentStatus": {
            "$ref": "#/definitions/segmentStatus"
          },
          "consolidatedSegmentStatus": {
            "$ref": "#/definitions/consolidatedSegmentStatus"
          },
          "holdTime": {
            "$ref": "#/definitions/holdTime"
          },
          "segmentPmsStatus": {
            "$ref": "#/definitions/segmentPmsStatus"
          },
          "segmentHolderId": {
            "$ref": "#/definitions/segmentHolderId"
          },
          "bookerId": {
            "$ref": "#/definitions/bookerId"
          },
          "hasAddOns": {
            "$ref": "#/definitions/hasAddOns"
          },
          "indicators": {
            "$ref": "#/definitions/indicatorsSearchRes"
          },
          "parentId": {
            "$ref": "#/definitions/parentId"
          },
          "creationDateTime": {
            "$ref": "#/definitions/createDateTime"
          },
          "creationDateTimeHotelLocalTime": {
            "$ref": "#/definitions/createDateTimeHotelLocalTime"
          },
          "lastUpdateDateTime": {
            "$ref": "#/definitions/lastUpdateDateTime"
          },
          "checkInDateTime": {
            "$ref": "#/definitions/checkInDateTime"
          },
          "checkOutDateTime": {
            "$ref": "#/definitions/checkOutDateTime"
          },
          "option": {
            "$ref": "#/definitions/option"
          },
          "propertyCode": {
            "$ref": "#/definitions/propertyCode"
          },
          "creator": {
            "description": "Contains the details of the channel which created the segment",
            "$ref": "#/definitions/searchPointOfSale"
          },
          "requestor": {
            "description": "Contains the details of the channel which requested the transaction",
            "$ref": "#/definitions/searchPointOfSale"
          },
          "owner": {
            "description": "Agency which owns the segment. This is the agency whose IATA number is used for guarantee, and also the agency who is commissioned for the segment.",
            "$ref": "#/definitions/searchReservationOwner"
          },
          "areAmountsConfidential": {
            "description": "Indicates if amounts defined in the rate plan are confidential",
            "type": "boolean",
            "default": false
          },
          "isAccessibleByWeb": {
            "$ref": "#/definitions/isAccessibleByWeb"
          },
          "checkInRate": {
            "description": "Daily check in rate",
            "type": "string"
          },
          "offer": {
            "$ref": "#/definitions/offerSearchRes-postSearchReservations"
          },
          "formOfPayment": {
            "$ref": "#/definitions/formOfPaymentSearchRes"
          },
          "travelPurpose": {
            "$ref": "#/definitions/travelPurpose"
          },
          "cancellationReasons": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/cancellationReason",
              "description": "Details about cancellation reasons"
            },
            "title": "SegmentSearchRes-postSearchReservationsItemCancellationReasons"
          },
          "corporateAccountInfo": {
            "type": "array",
            "maxItems": 2,
            "description": "List of corporate accounts (up to 2 from different sources)",
            "items": {
              "$ref": "#/definitions/corporateAccountInfoSearchRes"
            },
            "title": "SegmentSearchRes-postSearchReservationsItemCorporateAccountInfo"
          },
          "policyProcessStatus": {
            "$ref": "#/definitions/policyProcessStatus"
          },
          "assignedRooms": {
            "description": "this is a deprecated field. It can be used at ProductUses level (assignedRoom)",
            "type": "array",
            "items": {
              "$ref": "#/definitions/allocatedRoom"
            },
            "title": "SegmentSearchRes-postSearchReservationsItemAssignedRooms"
          },
          "isAssignedRoomLocked": {
            "description": "indicates if assigned room can be updated. If set to true, assigned room cannot be updated",
            "type": "boolean"
          }
        }
      },
      "title": "SegmentSearchRes-postSearchReservations"
    },
    "ratePlanCommon-postSearchReservations": {
      "type": "object",
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/ratePlanCode"
        },
        "types": {
          "description": "list of rate plan type (OTA codes as per RPT OTA list)",
          "$ref": "#/definitions/ratePlanTypes"
        },
        "name": {
          "description": "name of the rate plan",
          "$ref": "#/definitions/DescriptionOfRatePlanAndInventoryType"
        },
        "description": {
          "description": "short description of the rate plan",
          "$ref": "#/definitions/DescriptionOfRatePlanAndInventoryType"
        },
        "longDescription": {
          "description": "long description of the rate plan",
          "$ref": "#/definitions/description"
        }
      },
      "title": "RatePlanCommon-postSearchReservations"
    },
    "ratePlanRes-postSearchReservations": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ratePlanCommon-postSearchReservations"
        },
        {
          "type": "object",
          "properties": {
            "isCommissionable": {
              "description": "indicates if this rate is commissionable or not",
              "type": "boolean"
            }
          },
          "title": "RatePlanRes-postSearchReservations1"
        }
      ],
      "title": "RatePlanRes-postSearchReservations"
    },
    "HotelReservationSearchRes-postSearchReservations": {
      "type": "object",
      "title": "HotelReservationSearchRes-postSearchReservations",
      "required": [
        "status",
        "reservationIds",
        "hotels",
        "userProfiles",
        "segments",
        "products"
      ],
      "properties": {
        "status": {
          "$ref": "#/definitions/resStatus"
        },
        "type": {
          "$ref": "#/definitions/reservationType"
        },
        "reservationIds": {
          "$ref": "#/definitions/reservationIdsSearchRes"
        },
        "creator": {
          "description": "contains the details of the channel which created the reservation",
          "$ref": "#/definitions/searchPointOfSale"
        },
        "requestor": {
          "description": "contains the details of the channel which requested the transaction",
          "$ref": "#/definitions/searchPointOfSale"
        },
        "creationDateTime": {
          "$ref": "#/definitions/createDateTime"
        },
        "lastUpdateDateTime": {
          "$ref": "#/definitions/lastUpdateDateTime"
        },
        "links": {
          "description": "link reservation details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/reservationLinks"
          },
          "title": "HotelReservationSearchRes-postSearchReservationsLinks"
        },
        "comments": {
          "type": "array",
          "description": "comment details of corresponding segment. It describes the type, language and text of comments",
          "items": {
            "$ref": "#/definitions/comment"
          },
          "title": "HotelReservationSearchRes-postSearchReservationsComments"
        },
        "groupContracts": {
          "description": "list of groupContract",
          "type": "array",
          "maxItems": 99,
          "items": {
            "$ref": "#/definitions/groupContractRes"
          },
          "title": "HotelReservationSearchRes-postSearchReservationsGroupContracts"
        },
        "installments": {
          "description": "deposit rule details",
          "type": "array",
          "maxItems": 3,
          "items": {
            "$ref": "#/definitions/installment"
          },
          "title": "HotelReservationSearchRes-postSearchReservationsInstallments"
        },
        "hotels": {
          "description": "list of hotels",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hotelSearchRes"
          },
          "title": "HotelReservationSearchRes-postSearchReservationsHotels"
        },
        "userProfiles": {
          "$ref": "#/definitions/guestsSearchRes"
        },
        "segments": {
          "$ref": "#/definitions/segmentSearchRes-postSearchReservations"
        },
        "products": {
          "description": "list of products",
          "type": "array",
          "items": {
            "$ref": "#/definitions/product"
          },
          "title": "HotelReservationSearchRes-postSearchReservationsProducts"
        },
        "ratePlans": {
          "description": "list of rate plans used in the reservation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ratePlanRes-postSearchReservations"
          },
          "title": "HotelReservationSearchRes-postSearchReservationsRatePlans"
        },
        "businessSource": {
          "$ref": "#/definitions/businessSource"
        }
      }
    },
    "ReservationSearchRes-postSearchReservations": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/warning"
          },
          "title": "ReservationSearchRes-postSearchReservationsWarnings"
        },
        "data": {
          "description": "search reservation response",
          "type": "object",
          "title": "ReservationSearchRes-postSearchReservationsData",
          "properties": {
            "foundReservation": {
              "$ref": "#/definitions/foundReservation"
            },
            "reservationCount": {
              "$ref": "#/definitions/reservationCount"
            },
            "hotelReservations": {
              "description": "list of reservations matching the search criteria. Returned in case retrieve_mode in request is set to displayList",
              "type": "array",
              "items": {
                "$ref": "#/definitions/HotelReservationSearchRes-postSearchReservations"
              },
              "title": "ReservationSearchRes-postSearchReservationsDataHotelReservations"
            }
          }
        }
      },
      "title": "ReservationSearchRes-postSearchReservations"
    }
  },
  "responses": {
    "400": {
      "description": "Bad Request - Client sent a request that is not conforming to API. Client has to modify the request so that it passes. Most of functional error responses fall under this category.\n\nExamples of functional error codes (not exhaustive list):\n\ncode    | title\n------- | -------------------\n15      | Invalid max modification date in query\n41      | Occupancy must include an adult\n12115   | Different loyalty Ids requested for the same segment.\n",
      "schema": {
        "$ref": "#/definitions/responseError_400"
      }
    },
    "401": {
      "description": "Unauthorized - The request requires user authentication.\n\nExamples of functional error codes (not exhaustive list):\n\ncode    | title\n------- | -------------------\n71      | Wrong authentication credentials\n12222   | Missing authentication information: the credit card authentication failed\n",
      "schema": {
        "$ref": "#/definitions/responseError_401"
      }
    },
    "403": {
      "description": "Forbidden - Server refuses to fulfil request for functional or security reasons. If it is for security reasons, the authentication will not solve the issue.\n\nExamples of functional error codes (not exhaustive list):\n\ncode    | title\n------- | -------------------\n13011   | There is no pending image to be committed\n14010   | You are not allowed to use 2-step services\n15042   | The purge date must be set to at most 4 years after the checkout date\n",
      "schema": {
        "$ref": "#/definitions/responseError_403"
      }
    },
    "404": {
      "description": "Not Found - Client requested resource that does not exist.\n\nExamples of functional error codes (not exhaustive list):\n\ncode    | title\n------- | -------------------\n97      | No reservation available for the input cancellation number\n161     | Search criteria invalid: No image available for the input image id\n12610   | Segments [X,X] not found in reservation\n",
      "schema": {
        "$ref": "#/definitions/responseError_404"
      }
    },
    "406": {
      "description": "Not Acceptable - Client requested resource does not support requested method or requested version.\n\nExamples of functional error codes (not exhaustive list):\n\ncode    | title\n------- | -------------------\n172     | Requested version not supported [ X.X ]. Please use one of the following : X.X / X.X\n",
      "schema": {
        "$ref": "#/definitions/responseError_406"
      }
    },
    "429": {
      "description": "Too Many Requests - The network rate limit is exceeded or The quota limit is exceeded.\n\nExamples of functional error codes (not exhaustive list):\n\ncode    | title\n------- | -------------------\n38194   | Too many requests\n38195   | Quota limit exceeded\n",
      "schema": {
        "$ref": "#/definitions/responseError_429"
      }
    },
    "500": {
      "description": "Internal Server Error - Server was unable to process request due to unexpected problem that can't be corrected by client. This error is not used to describe functional problems.\n\nExamples of functional error codes (not exhaustive list):\n\ncode    | title\n------- | -------------------\n448     | System error\n450     | Unable to process\n",
      "schema": {
        "$ref": "#/definitions/responseError_500"
      }
    },
    "504": {
      "description": "Gateway Timeout - This status code is returned by the Enterprise Service Bus in case of timeout on backend side.\n\nExamples of functional error codes (not exhaustive list):\n\ncode    | title\n------- | -------------------\n15345   | ESPINV RTO occurred\n15346   | ESPINV Message too old\n",
      "schema": {
        "$ref": "#/definitions/responseError_504"
      }
    },
    "reservationResponse": {
      "description": "Successful operation.",
      "schema": {
        "$ref": "#/definitions/ReservationRes"
      }
    },
    "reservationCreatePendingResponse": {
      "description": "Successful operation.",
      "schema": {
        "$ref": "#/definitions/ReservationPendingRes"
      }
    },
    "reservationModifyResponse": {
      "description": "Successful operation.",
      "schema": {
        "$ref": "#/definitions/ReservationModifyRes"
      }
    },
    "reservationModifyPendingResponse": {
      "description": "Successful operation.",
      "schema": {
        "$ref": "#/definitions/ReservationModifyPendingRes"
      }
    },
    "reservationRetrieveArchivedResponse": {
      "description": "Successful operation.",
      "schema": {
        "$ref": "#/definitions/ReservationRetrieveArchivedRes"
      }
    },
    "reservationRetrieveLastResponse": {
      "description": "Successful operation.",
      "schema": {
        "$ref": "#/definitions/ReservationRetrievePendingRes"
      }
    },
    "reservationMigrateResponse": {
      "description": "Successful operation.",
      "schema": {
        "$ref": "#/definitions/responseWarning"
      }
    },
    "reservationMigrateWithCreationResponse": {
      "description": "successful operation with resource being created",
      "schema": {
        "$ref": "#/definitions/responseWarning"
      }
    },
    "linkReservationResponse": {
      "description": "Successful operation.",
      "schema": {
        "$ref": "#/definitions/LinkReservationRes"
      }
    },
    "linkReservationRetrieveResponse": {
      "description": "Successful operation.",
      "schema": {
        "$ref": "#/definitions/LinkReservationRetrieveRes"
      }
    },
    "shareReservationSynchronizeResponse": {
      "description": "Successful operation.",
      "schema": {
        "$ref": "#/definitions/ShareReservationSynchronizeRes"
      }
    },
    "reservationMultiRetrieveResponse": {
      "description": "Successful operation.",
      "schema": {
        "$ref": "#/definitions/MultiRetrieveReservationRes"
      }
    },
    "default": {
      "description": "Internal unexpected error.\n",
      "schema": {
        "$ref": "#/definitions/responseError_500"
      }
    },
    "reservationRetrieveResponse-reservation": {
      "description": "Successful operation.",
      "schema": {
        "$ref": "#/definitions/ReservationRetrieveRes-reservation"
      }
    },
    "reservationMultiRetrieveArchivedAndActiveResponse-reservationMultiRetrieveRes": {
      "description": "Successful operation.",
      "schema": {
        "$ref": "#/definitions/MultiRetrieveReservationArchivedAndActiveRes-reservationMultiRetrieveRes"
      }
    },
    "reservationSearchResponse-postSearchReservations": {
      "description": "Successful operation.",
      "schema": {
        "$ref": "#/definitions/ReservationSearchRes-postSearchReservations"
      }
    }
  },
  "x-metadata": {
    "status": 0
  }
}