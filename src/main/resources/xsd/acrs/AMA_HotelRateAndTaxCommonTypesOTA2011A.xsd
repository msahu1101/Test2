<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2020 sp1 (x64) (http://www.altova.com) by  (AMADEUS s.a.s.) -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:altova="http://www.altova.com/xml-schema-extensions" xmlns="http://xml.amadeus.com/ahp/rates" targetNamespace="http://xml.amadeus.com/ahp/rates" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:include schemaLocation="OTA/2011A/chameleon/OTA_CommonTypes.xsd"/>
	<xs:simpleType name="ActivationStatusType">
		<xs:annotation>
			<xs:documentation>Defines whether the tax must be activated or not after the main action</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Active"/>
			<xs:enumeration value="Inactive"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="AdvanceBookingRestrictionCodeType">
		<xs:annotation>
			<xs:documentation>Unique code that defines the rate plan.</xs:documentation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="AAA"/>
					<altova:example value="BAR"/>
					<altova:example value="BFR"/>
					<altova:example value="IGCOR"/>
					<altova:example value="IGCOR001"/>
				</altova:exampleValues>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="8"/>
			<xs:minLength value="1"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:attributeGroup name="AdvanceBookingRestrictionIdentifierGroup">
		<xs:annotation>
			<xs:documentation>Defines the advance booking restriction with the combination of the property identifier group. Brand and Property are optional.</xs:documentation>
		</xs:annotation>
		<xs:attributeGroup ref="PropertyIdentifierOptionalGroup"/>
		<xs:attribute name="RatePlanCode" use="optional">
			<xs:annotation>
				<xs:documentation>Unique Rate Plan code that defines the Rate Plan at the corporate and hotel level.  This field must = 5 characters when created at the corporate level and can be 5 - 8 characters when created (activated) at the hotel level.</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="RatePlanCodeType">
					<xs:minLength value="5"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="RateParityGroupCode" type="AdvanceBookingRestrictionCodeType" use="optional">
			<xs:annotation>
				<xs:documentation>Unique identifier of the Rate parity group at chain level</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AdvanceBookingRestrictionCode" type="AdvanceBookingRestrictionCodeType" use="required">
			<xs:annotation>
				<xs:documentation>System generated Advance Booking restriction code.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="AdvanceBookingRestrictionIdentifierOptionalGroup">
		<xs:annotation>
			<xs:documentation>Defines the advance booking restriction with the combination of the property identifier group. Brand and Property are optional.</xs:documentation>
		</xs:annotation>
		<xs:attributeGroup ref="PropertyIdentifierOptionalGroup"/>
		<xs:attribute name="RatePlanCode">
			<xs:annotation>
				<xs:documentation>Unique Rate Plan code that defines the Rate Plan at the corporate and hotel level.  This field must = 5 characters when created at the corporate level and can be 5 - 8 characters when created (activated) at the hotel level.</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="RatePlanCodeType">
					<xs:minLength value="5"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="RateParityGroupCode" type="AdvanceBookingRestrictionCodeType">
			<xs:annotation>
				<xs:documentation>Unique identifier of the Rate Parity Group, at chain level</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AdvanceBookingRestrictionCode" type="AdvanceBookingRestrictionCodeType" use="optional">
			<xs:annotation>
				<xs:documentation>System generated  Advance booking restriction code. This element exists only for the Update RQ (Mandatory ) and not for the Create RQ. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:complexType name="AdvanceBookingRestrictionRetrieveType">
		<xs:annotation>
			<xs:documentation>Determines the overall structure of the Advance Booking Restriction</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Scope">
				<xs:complexType>
					<xs:attributeGroup ref="AdvanceBookingRestrictionIdentifierGroup"/>
					<xs:attribute name="VersionNumber" type="VersionNumberType" use="required">
						<xs:annotation>
							<xs:documentation>Version of data set and prevents Concurrent Updates. </xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="CheckInPeriod" type="PolicyPeriodType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Relative periods are defined in relation to the check-in date </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Content">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="RoomType">
							<xs:annotation>
								<xs:documentation>Currently the Room type will always be set to All for any message</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:choice>
									<xs:element name="RoomCode" type="xs:string"/>
									<xs:element name="All" type="xs:string"/>
								</xs:choice>
							</xs:complexType>
						</xs:element>
						<xs:element name="BookingRestriction">
							<xs:complexType>
								<xs:choice>
									<xs:element name="BookingPeriod">
										<xs:annotation>
											<xs:documentation>Sell (Absolute) period with start and and date that allow booking.</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:attribute name="StartDate" type="StartDateType" use="required">
												<xs:annotation>
													<xs:documentation>If undefined, the Start Date should be defaulted to the beginning of the Stay Period. </xs:documentation>
												</xs:annotation>
											</xs:attribute>
											<xs:attribute name="EndDate" type="EndDateType">
												<xs:annotation>
													<xs:documentation>Undefined end date means Rate Plan is bookable at any time in the future without limitation.</xs:documentation>
												</xs:annotation>
											</xs:attribute>
										</xs:complexType>
									</xs:element>
									<xs:element name="RelativeDays">
										<xs:annotation>
											<xs:documentation>Two relatives cannot have overlapping/same check-in days of the week. You will need to pass at least one of the attributes out of the two. If there is already a relative defined, the DOW will need to be defined. And it cannot be all the DOW. </xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:attribute name="MaxNumberOfDays">
												<xs:annotation>
													<xs:documentation>Maximum lead time (in days) that a booking can be created before the check-in date. </xs:documentation>
												</xs:annotation>
												<xs:simpleType>
													<xs:restriction base="xs:int">
														<xs:minInclusive value="0"/>
													</xs:restriction>
												</xs:simpleType>
											</xs:attribute>
											<xs:attribute name="MinNumberOfDays">
												<xs:annotation>
													<xs:documentation>Minimum lead time (in days) that a booking can be created before the check-in date. </xs:documentation>
												</xs:annotation>
												<xs:simpleType>
													<xs:restriction base="xs:int">
														<xs:minInclusive value="0"/>
													</xs:restriction>
												</xs:simpleType>
											</xs:attribute>
										</xs:complexType>
									</xs:element>
								</xs:choice>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="RuleType" type="xs:string">
			<xs:annotation>
				<xs:documentation>Define the ABR Rule Type (Absolute, Relative or Alternate.)</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="Absolute"/>
						<altova:example value="Relative"/>
						<altova:example value="Alternate"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="AdvanceBookingRestrictionType">
		<xs:annotation>
			<xs:documentation>Determines the overall structure of the Advance Booking Restriction</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Scope">
				<xs:complexType>
					<xs:attributeGroup ref="AdvanceBookingRestrictionIdentifierOptionalGroup"/>
					<xs:attribute name="VersionNumber" type="VersionNumberType">
						<xs:annotation>
							<xs:documentation>Version of data set and prevents Concurrent Updates. ONLY USED for UpdateRQ/RetrieveRS, NOT for CreateRQ nor SearchRS</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="CheckInPeriod" type="PolicyPeriodType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Periods defined in which the business traveler is allowed to check into the hotel.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Content">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="RoomType">
							<xs:annotation>
								<xs:documentation>Currently the Room type will always be set to All for any message</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:choice>
									<xs:element name="RoomCode" type="RoomCodeType"/>
									<xs:element name="All" type="xs:string"/>
								</xs:choice>
							</xs:complexType>
						</xs:element>
						<xs:element name="BookingRestriction">
							<xs:annotation>
								<xs:documentation>This is the set of booking restrictions defined for the CheckInPeriod</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:choice>
									<xs:element name="BookingPeriod">
										<xs:annotation>
											<xs:documentation>Sell (Absolute) period in which the the user is allowed to sell/book the business.</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:attribute name="StartDate" type="StartDateType" use="required">
												<xs:annotation>
													<xs:documentation>If undefined, then the Start Date defaults to the Stay Period Start Date.</xs:documentation>
												</xs:annotation>
											</xs:attribute>
											<xs:attribute name="EndDate" type="EndDateType">
												<xs:annotation>
													<xs:documentation>If undefined, then the End Date, then the Rate Plan can be booked at any point in the future.</xs:documentation>
												</xs:annotation>
											</xs:attribute>
										</xs:complexType>
									</xs:element>
									<xs:element name="RelativeDays">
										<xs:annotation>
											<xs:documentation>If two Relative Days are created, then they cannot have overlapping / same check-in days of the week. The user must include either Min, Max or both. If there is already a relative defined, the DOW will need to be defined and cannot include All DOW. </xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:attribute name="MinNumberOfDays">
												<xs:annotation>
													<xs:documentation>Minimum lead time (in days) that a booking can be created before the check-in date. </xs:documentation>
												</xs:annotation>
												<xs:simpleType>
													<xs:restriction base="xs:int">
														<xs:minInclusive value="0"/>
													</xs:restriction>
												</xs:simpleType>
											</xs:attribute>
											<xs:attribute name="MaxNumberOfDays">
												<xs:annotation>
													<xs:documentation>Maximum lead time (in days) that a booking can be created before the check-in date. </xs:documentation>
												</xs:annotation>
												<xs:simpleType>
													<xs:restriction base="xs:int">
														<xs:minInclusive value="0"/>
													</xs:restriction>
												</xs:simpleType>
											</xs:attribute>
										</xs:complexType>
									</xs:element>
								</xs:choice>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="RuleType" type="xs:string">
			<xs:annotation>
				<xs:documentation>Define the ABR Rule Type (Absolute, Relative or Alternate.)</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="Absolute"/>
						<altova:example value="Relative"/>
						<altova:example value="Alternate"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:attributeGroup name="AllocationAllowance">
		<xs:annotation>
			<xs:documentation>The allocation for the RMS and NonRMS hotels</xs:documentation>
		</xs:annotation>
		<xs:attribute name="IsRMS_AllocationAllowed" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>Default = "No"</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsNonRMS_AllocationAllowed" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>Default = "Yes"</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:complexType name="AllocationAttributesType">
		<xs:annotation>
			<xs:documentation>Contains the allocation attributes example: at least / at most definitions</xs:documentation>
		</xs:annotation>
		<xs:attribute name="IsRatePlanAtLeastAtMostAllowed" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>Defines whether or not the rate plan can have At-Least and/or At-Most definitions. The actual value definitions will be done via inventory rules. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="AlternateRateScopeType">
		<xs:annotation>
			<xs:documentation>Scope of an Alternate Rate</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="BrandList" type="BrandScopeType"/>
			<xs:element name="RegionList" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If region list not specified, it means it is applicable to none of the regions</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Region" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:choice>
										<xs:element name="RegionCode">
											<xs:annotation>
												<xs:documentation>Unique code assigned to a particular region</xs:documentation>
											</xs:annotation>
											<xs:simpleType>
												<xs:restriction base="RegionCodeType">
													<xs:minLength value="1"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<xs:element name="All" type="xs:string">
											<xs:annotation>
												<xs:documentation>All regions</xs:documentation>
											</xs:annotation>
										</xs:element>
									</xs:choice>
									<xs:element name="ExcludedCountryList" minOccurs="0">
										<xs:complexType>
											<xs:sequence>
												<xs:element name="Country" maxOccurs="unbounded">
													<xs:complexType>
														<xs:attribute name="CountryCode" type="CountryCodeType" use="required"/>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="CountryList" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Included list of countries. The RegionList is optional if the CountryList specified</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Country" maxOccurs="unbounded">
							<xs:complexType>
								<xs:attribute name="CountryCode" type="CountryCodeType" use="required"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="ChainCode" type="ChainCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Unique Code of a chain/corporation</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CorporateID" type="CorporateID_Type" use="required">
			<xs:annotation>
				<xs:documentation>Corporate Account the alternate rate woud be linked to</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="VersionNumber" type="VersionTimeStampType">
			<xs:annotation>
				<xs:documentation>Version of data set and prevents Concurrent Updates. Mandatory for Search Response</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:simpleType name="AmountFeeDepositType">
		<xs:annotation>
			<xs:documentation>Different possible options for the fee / deposit</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="FirstNight"/>
			<xs:enumeration value="LastNight"/>
			<xs:enumeration value="FirstAndLastNight"/>
			<xs:enumeration value="EntireStay"/>
			<xs:enumeration value="NoCharge"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="AmountRuleContentType">
		<xs:annotation>
			<xs:documentation>Amount Rule type</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AmountRuleList">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="AmountRule" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:choice>
										<xs:element name="Room">
											<xs:annotation>
												<xs:documentation>Indicates to which room types and/or room class the rule applies</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:choice>
													<xs:sequence>
														<xs:element name="RoomType" minOccurs="0">
															<xs:complexType>
																<xs:sequence>
																	<xs:element name="CodeList">
																		<xs:complexType>
																			<xs:sequence>
																				<xs:element name="Code" type="RoomCodeType" maxOccurs="unbounded"/>
																			</xs:sequence>
																		</xs:complexType>
																	</xs:element>
																</xs:sequence>
															</xs:complexType>
														</xs:element>
														<xs:element name="RoomClass" minOccurs="0">
															<xs:complexType>
																<xs:sequence>
																	<xs:element name="CodeList">
																		<xs:complexType>
																			<xs:sequence>
																				<xs:element name="Code" type="RoomClassCodeType" maxOccurs="unbounded"/>
																			</xs:sequence>
																		</xs:complexType>
																	</xs:element>
																</xs:sequence>
															</xs:complexType>
														</xs:element>
													</xs:sequence>
													<xs:element name="All" type="xs:string"/>
												</xs:choice>
											</xs:complexType>
										</xs:element>
										<xs:element name="Product">
											<xs:annotation>
												<xs:documentation>Indicates to which products the rule applies</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:choice>
													<xs:element name="CodeList" maxOccurs="unbounded">
														<xs:annotation>
															<xs:documentation>Applies to some products</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:sequence>
																<xs:element name="Code" maxOccurs="unbounded">
																	<xs:annotation>
																		<xs:documentation>Code of the priced object. Example for Product: "SR"</xs:documentation>
																	</xs:annotation>
																	<xs:simpleType>
																		<xs:restriction base="xs:string">
																			<xs:maxLength value="64"/>
																		</xs:restriction>
																	</xs:simpleType>
																</xs:element>
															</xs:sequence>
															<xs:attribute name="CodeType" type="xs:string" use="required">
																<xs:annotation>
																	<xs:documentation>Qualifier for the following codes. Examples: "InventoryType", "Product"</xs:documentation>
																</xs:annotation>
															</xs:attribute>
														</xs:complexType>
													</xs:element>
													<xs:element name="All" type="xs:string">
														<xs:annotation>
															<xs:documentation>Applies to all products</xs:documentation>
														</xs:annotation>
													</xs:element>
												</xs:choice>
											</xs:complexType>
										</xs:element>
									</xs:choice>
									<xs:element name="AmountList">
										<xs:annotation>
											<xs:documentation>Amount per occupancy for a given set of room types/classes</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:sequence>
												<xs:element name="Amount" maxOccurs="unbounded">
													<xs:annotation>
														<xs:documentation>Amount</xs:documentation>
													</xs:annotation>
													<xs:complexType>
														<xs:choice>
															<xs:element name="Flat">
																<xs:simpleType>
																	<xs:restriction base="xs:decimal"/>
																</xs:simpleType>
															</xs:element>
															<xs:element name="AmountAddOff">
																<xs:complexType>
																	<xs:choice>
																		<xs:element name="Add">
																			<xs:simpleType>
																				<xs:restriction base="xs:decimal">
																					<xs:minInclusive value="0"/>
																				</xs:restriction>
																			</xs:simpleType>
																		</xs:element>
																		<xs:element name="Off">
																			<xs:simpleType>
																				<xs:restriction base="xs:decimal">
																					<xs:minInclusive value="0"/>
																				</xs:restriction>
																			</xs:simpleType>
																		</xs:element>
																	</xs:choice>
																</xs:complexType>
															</xs:element>
															<xs:element name="PercentAddOff">
																<xs:complexType>
																	<xs:choice>
																		<xs:element name="Add">
																			<xs:simpleType>
																				<xs:restriction base="xs:decimal">
																					<xs:minInclusive value="0"/>
																				</xs:restriction>
																			</xs:simpleType>
																		</xs:element>
																		<xs:element name="Off">
																			<xs:simpleType>
																				<xs:restriction base="xs:decimal">
																					<xs:minInclusive value="0"/>
																					<xs:maxExclusive value="100"/>
																				</xs:restriction>
																			</xs:simpleType>
																		</xs:element>
																	</xs:choice>
																</xs:complexType>
															</xs:element>
														</xs:choice>
														<xs:attribute name="Tag1">
															<xs:annotation>
																<xs:documentation>Tag received from external system associated to Amount Rule for pricing optimization</xs:documentation>
															</xs:annotation>
															<xs:simpleType>
																<xs:restriction base="xs:string">
																	<xs:maxLength value="20"/>
																</xs:restriction>
															</xs:simpleType>
														</xs:attribute>
														<xs:attribute name="Tag2">
															<xs:annotation>
																<xs:documentation>Tag received from external system associated to Amount Rule for pricing optimization</xs:documentation>
															</xs:annotation>
															<xs:simpleType>
																<xs:restriction base="xs:string">
																	<xs:maxLength value="20"/>
																</xs:restriction>
															</xs:simpleType>
														</xs:attribute>
														<xs:attribute name="Occupancy">
															<xs:annotation>
																<xs:documentation>Occupancy of the given amount</xs:documentation>
															</xs:annotation>
															<xs:simpleType>
																<xs:restriction base="xs:int">
																	<xs:minExclusive value="0"/>
																</xs:restriction>
															</xs:simpleType>
														</xs:attribute>
														<xs:attribute name="ExtraPersonCharge" type="xs:boolean">
															<xs:annotation>
																<xs:documentation>If set to true, the amount specified here is for an extra person. In this case Occupancy shouldn't be filled</xs:documentation>
															</xs:annotation>
														</xs:attribute>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="Comment">
			<xs:annotation>
				<xs:documentation>Free flow text limited to 10 chars</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:maxLength value="10"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="BARLevel">
			<xs:annotation>
				<xs:documentation>Value received from external system associated to Amount Rule for pricing optimization</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string"/>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="AmountRuleSearchType">
		<xs:annotation>
			<xs:documentation>Defines the amount rule object used in case of a set service.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Scope">
				<xs:annotation>
					<xs:documentation>Amount Rules are defined for a price grid at property level</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attributeGroup ref="PropertyPriceGridIdentifierGroup"/>
					<xs:attribute name="CalculationMethod">
						<xs:annotation>
							<xs:documentation>External system value associated to amount rule for price optimization</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string"/>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="VersionNumber" type="VersionNumberType">
						<xs:annotation>
							<xs:documentation>Global Version of the amount rules of the given scope ChainCode / BrandCode / PropertyCode / PriceGridCode. Optional if no one ever set an amount rule for the given scope, Mandatory if there was at least one amount rule set.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Period" type="PolicyPeriodType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When amount rule will be applied</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Content" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="AmountRuleList">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="AmountRule" maxOccurs="unbounded">
										<xs:complexType>
											<xs:sequence>
												<xs:choice>
													<xs:element name="Room">
														<xs:annotation>
															<xs:documentation>Indicates to which room types and/or room class the rule applies</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:choice>
																<xs:sequence>
																	<xs:element name="RoomType" minOccurs="0">
																		<xs:complexType>
																			<xs:sequence>
																				<xs:element name="CodeList">
																					<xs:complexType>
																						<xs:sequence>
																							<xs:element name="Code" type="RoomCodeType" maxOccurs="unbounded"/>
																						</xs:sequence>
																					</xs:complexType>
																				</xs:element>
																			</xs:sequence>
																		</xs:complexType>
																	</xs:element>
																	<xs:element name="RoomClass" minOccurs="0">
																		<xs:complexType>
																			<xs:sequence>
																				<xs:element name="CodeList">
																					<xs:complexType>
																						<xs:sequence>
																							<xs:element name="Code" type="RoomClassCodeType" maxOccurs="unbounded"/>
																						</xs:sequence>
																					</xs:complexType>
																				</xs:element>
																			</xs:sequence>
																		</xs:complexType>
																	</xs:element>
																</xs:sequence>
																<xs:element name="All" type="xs:string">
																	<xs:annotation>
																		<xs:documentation>The response returns All when the given Period and DOW includes all rooms (room type and/or room class) of the same period of parent PG.</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="None" type="xs:string">
																	<xs:annotation>
																		<xs:documentation>The response returns None when there is no room (either room class or room type) for the given Period and DOW.</xs:documentation>
																	</xs:annotation>
																</xs:element>
															</xs:choice>
														</xs:complexType>
													</xs:element>
													<xs:element name="Product">
														<xs:annotation>
															<xs:documentation>Indicates to which products the rule applies</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:choice>
																<xs:element name="CodeList" maxOccurs="unbounded">
																	<xs:annotation>
																		<xs:documentation>Applies to some products</xs:documentation>
																	</xs:annotation>
																	<xs:complexType>
																		<xs:sequence>
																			<xs:element name="Code" maxOccurs="unbounded">
																				<xs:annotation>
																					<xs:documentation>Code of the priced object. Example for Product: "SR"</xs:documentation>
																				</xs:annotation>
																				<xs:simpleType>
																					<xs:restriction base="xs:string">
																						<xs:maxLength value="64"/>
																					</xs:restriction>
																				</xs:simpleType>
																			</xs:element>
																		</xs:sequence>
																		<xs:attribute name="CodeType" type="xs:string" use="required">
																			<xs:annotation>
																				<xs:documentation>Qualifier for the following codes. Examples: "InventoryType", "Product"</xs:documentation>
																			</xs:annotation>
																		</xs:attribute>
																	</xs:complexType>
																</xs:element>
																<xs:element name="All" type="xs:string">
																	<xs:annotation>
																		<xs:documentation>Applies to all products</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="None" type="xs:string">
																	<xs:annotation>
																		<xs:documentation>The response returns None when there is no product for the given Period and DOW.</xs:documentation>
																	</xs:annotation>
																</xs:element>
															</xs:choice>
														</xs:complexType>
													</xs:element>
												</xs:choice>
												<xs:element name="AmountList">
													<xs:annotation>
														<xs:documentation>Amount per occupancy for a given set of room types/classes</xs:documentation>
													</xs:annotation>
													<xs:complexType>
														<xs:sequence>
															<xs:element name="Amount" maxOccurs="unbounded">
																<xs:annotation>
																	<xs:documentation>Amount</xs:documentation>
																</xs:annotation>
																<xs:complexType>
																	<xs:choice>
																		<xs:element name="Flat">
																			<xs:simpleType>
																				<xs:restriction base="xs:decimal"/>
																			</xs:simpleType>
																		</xs:element>
																		<xs:element name="AmountAddOff">
																			<xs:complexType>
																				<xs:choice>
																					<xs:element name="Add">
																						<xs:simpleType>
																							<xs:restriction base="xs:decimal">
																								<xs:minInclusive value="0"/>
																							</xs:restriction>
																						</xs:simpleType>
																					</xs:element>
																					<xs:element name="Off">
																						<xs:simpleType>
																							<xs:restriction base="xs:decimal">
																								<xs:minInclusive value="0"/>
																							</xs:restriction>
																						</xs:simpleType>
																					</xs:element>
																				</xs:choice>
																			</xs:complexType>
																		</xs:element>
																		<xs:element name="PercentAddOff">
																			<xs:complexType>
																				<xs:choice>
																					<xs:element name="Add">
																						<xs:simpleType>
																							<xs:restriction base="xs:decimal">
																								<xs:minInclusive value="0"/>
																							</xs:restriction>
																						</xs:simpleType>
																					</xs:element>
																					<xs:element name="Off">
																						<xs:simpleType>
																							<xs:restriction base="xs:decimal">
																								<xs:minInclusive value="0"/>
																								<xs:maxExclusive value="100"/>
																							</xs:restriction>
																						</xs:simpleType>
																					</xs:element>
																				</xs:choice>
																			</xs:complexType>
																		</xs:element>
																	</xs:choice>
																	<xs:attribute name="Tag1">
																		<xs:annotation>
																			<xs:documentation>External system tag  associated to amount rule for  price optimization</xs:documentation>
																		</xs:annotation>
																		<xs:simpleType>
																			<xs:restriction base="xs:string">
																				<xs:maxLength value="20"/>
																			</xs:restriction>
																		</xs:simpleType>
																	</xs:attribute>
																	<xs:attribute name="Tag2">
																		<xs:annotation>
																			<xs:documentation>External system tag  associated to amount rule for  price optimization</xs:documentation>
																		</xs:annotation>
																		<xs:simpleType>
																			<xs:restriction base="xs:string">
																				<xs:maxLength value="20"/>
																			</xs:restriction>
																		</xs:simpleType>
																	</xs:attribute>
																	<xs:attribute name="Occupancy">
																		<xs:annotation>
																			<xs:documentation>Occupancy of the given amount</xs:documentation>
																		</xs:annotation>
																		<xs:simpleType>
																			<xs:restriction base="xs:int">
																				<xs:minExclusive value="0"/>
																			</xs:restriction>
																		</xs:simpleType>
																	</xs:attribute>
																	<xs:attribute name="ExtraPersonCharge" type="xs:boolean">
																		<xs:annotation>
																			<xs:documentation>If set to true, the amount specified here is for an extra person. In this case Occupancy shouldn't be filled</xs:documentation>
																		</xs:annotation>
																	</xs:attribute>
																</xs:complexType>
															</xs:element>
														</xs:sequence>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="Comment">
						<xs:annotation>
							<xs:documentation>Free flow text limited to 10 chars</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:maxLength value="10"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="BARLevel">
						<xs:annotation>
							<xs:documentation>External system value associated to amount rule for price optimization</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string"/>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AmountRuleSetType">
		<xs:annotation>
			<xs:documentation>Defines the amount rule object used in case of a set service. 
NO unset is provided because there should never be a single day where no prices are defined</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Scope">
				<xs:annotation>
					<xs:documentation>Amount Rules are defined for a price grid at property level</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attributeGroup ref="PropertyPriceGridIdentifierGroup"/>
					<xs:attribute name="CalculationMethod">
						<xs:annotation>
							<xs:documentation>Value received from external system associated to Amount Rule for pricing optimization</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string"/>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="VersionNumber" type="VersionNumberType">
						<xs:annotation>
							<xs:documentation>Global Version of the amount rules of the given scope ChainCode / BrandCode / PropertyCode / PriceGridCode. Optional the very first time the user sets an amount rule for the given scope, mandatory from the 2nd time on.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Set" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Period" type="PolicyPeriodType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>If no period is provided, the amount rule applies to an open open period</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Content" type="AmountRuleContentType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AmountTypeType">
		<xs:annotation>
			<xs:documentation>The value of the tax defined based on whether the amount type is a flat amount or percentage</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="PercentageValue">
				<xs:annotation>
					<xs:documentation>Used if the amount type is a percentage</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:choice>
						<xs:element name="Value">
							<xs:annotation>
								<xs:documentation>Tax value defined from the perspective that it is a percentage</xs:documentation>
								<xs:appinfo>
									<altova:exampleValues>
										<altova:example value="8"/>
										<altova:example value="9"/>
										<altova:example value="14.5"/>
									</altova:exampleValues>
								</xs:appinfo>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:minInclusive value="0"/>
									<xs:maxInclusive value="100"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="LOS_Dependent">
							<xs:annotation>
								<xs:documentation>Defines tax based on length of stay</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="ValueBefore">
										<xs:annotation>
											<xs:documentation>Defines the tax percentage to be applied up until a specified number of days</xs:documentation>
											<xs:appinfo>
												<altova:exampleValues>
													<altova:example value="6.5"/>
													<altova:example value="8"/>
													<altova:example value="9.75"/>
												</altova:exampleValues>
											</xs:appinfo>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:decimal">
												<xs:minInclusive value="0"/>
												<xs:maxInclusive value="100"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="ValueAfter">
										<xs:annotation>
											<xs:documentation>Defines the tax percentage to be applied after a specified number of days</xs:documentation>
											<xs:appinfo>
												<altova:exampleValues>
													<altova:example value="5.25"/>
													<altova:example value="4"/>
													<altova:example value="0"/>
												</altova:exampleValues>
											</xs:appinfo>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:decimal">
												<xs:minInclusive value="0"/>
												<xs:maxInclusive value="100"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="DayOfChange" type="xs:nonNegativeInteger">
										<xs:annotation>
											<xs:documentation>Defines the number of days after which the value after tax percentage is applied</xs:documentation>
											<xs:appinfo>
												<altova:exampleValues>
													<altova:example value="15"/>
													<altova:example value="30"/>
													<altova:example value="60"/>
												</altova:exampleValues>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:choice>
				</xs:complexType>
			</xs:element>
			<xs:element name="FlatValue">
				<xs:annotation>
					<xs:documentation>Provides context to the user on what to enter for a value based on the amount type</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="CurrencyCode" type="CurrencyCodeType">
							<xs:annotation>
								<xs:documentation>Defined by ISO 4217 Standard</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:choice>
							<xs:element name="Value">
								<xs:annotation>
									<xs:documentation>Tax value defined from the perspective that it is a flat amount</xs:documentation>
									<xs:appinfo>
										<altova:exampleValues>
											<altova:example value="10.00"/>
											<altova:example value="19.95"/>
											<altova:example value="5.00"/>
										</altova:exampleValues>
									</xs:appinfo>
								</xs:annotation>
								<xs:simpleType>
									<xs:restriction base="xs:decimal">
										<xs:minInclusive value="0"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<xs:element name="LOS_Dependent">
								<xs:annotation>
									<xs:documentation>Defines tax based on length of stay</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="ValueBefore">
											<xs:annotation>
												<xs:documentation>Defines tax amount to be applied until a specified number of days</xs:documentation>
												<xs:appinfo>
													<altova:exampleValues>
														<altova:example value="7.00"/>
														<altova:example value="9.50"/>
														<altova:example value="11"/>
													</altova:exampleValues>
												</xs:appinfo>
											</xs:annotation>
											<xs:simpleType>
												<xs:restriction base="xs:decimal">
													<xs:minInclusive value="0"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<xs:element name="ValueAfter">
											<xs:annotation>
												<xs:documentation>Defines tax amount to be applied after a specified number of days</xs:documentation>
												<xs:appinfo>
													<altova:exampleValues>
														<altova:example value="5.50"/>
														<altova:example value="9.99"/>
														<altova:example value="14"/>
													</altova:exampleValues>
												</xs:appinfo>
											</xs:annotation>
											<xs:simpleType>
												<xs:restriction base="xs:decimal">
													<xs:minInclusive value="0"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<xs:element name="DayOfChange" type="xs:nonNegativeInteger">
											<xs:annotation>
												<xs:documentation>Defines the number of days after which the value after tax amount is applied</xs:documentation>
												<xs:appinfo>
													<altova:exampleValues>
														<altova:example value="15"/>
														<altova:example value="30"/>
														<altova:example value="60"/>
													</altova:exampleValues>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:choice>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:attributeGroup name="BlackoutParticipationGroup">
		<xs:annotation>
			<xs:documentation>Defines a period of dates and what status applies to that date</xs:documentation>
		</xs:annotation>
		<xs:attributeGroup ref="PeriodGroup"/>
		<xs:attribute name="Status" type="BlackoutParticipationStatusType" use="required">
			<xs:annotation>
				<xs:documentation>Blackout/Participation status of the period. Undefined means "Unset" for Manage and have no meaning in Search Response.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:simpleType name="BlackoutParticipationSearchStatusType">
		<xs:annotation>
			<xs:documentation>Used to allow a user to search for blackout and/or participation periods</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Participation"/>
			<xs:enumeration value="Blackout"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:attributeGroup name="BlackoutParticipationStatusGroup">
		<xs:annotation>
			<xs:documentation>Defines current status of the date value as well as the "requested to be changed to" value</xs:documentation>
		</xs:annotation>
		<xs:attribute name="CurrentStatus" type="BlackoutParticipationStatusType" use="required">
			<xs:annotation>
				<xs:documentation>Status of period currently saved in back-end </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RequestedStatus" type="BlackoutParticipationStatusType" use="required">
			<xs:annotation>
				<xs:documentation>Status of period requested to change </xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:simpleType name="BlackoutParticipationStatusType">
		<xs:annotation>
			<xs:documentation>Blackout/Participation status of the period</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Participation"/>
			<xs:enumeration value="Blackout"/>
			<xs:enumeration value="None"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="BrandCodeType">
		<xs:annotation>
			<xs:documentation>Unique code assigned to a particular brand. Unique at the chain level</xs:documentation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="HIE"/>
					<altova:example value="CP"/>
					<altova:example value="HI"/>
					<altova:example value="EH"/>
					<altova:example value="ITC"/>
				</altova:exampleValues>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:minLength value="2"/>
			<xs:maxLength value="3"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="BrandScopeType">
		<xs:annotation>
			<xs:documentation>Contains the brand details</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="BrandCodeList">
				<xs:annotation>
					<xs:documentation>List of brands. Currently supports only 1 brand</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="BrandCode" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Unique code assigned to a particular brand. Unique at the chain level</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="BrandCodeType">
									<xs:minLength value="2"/>
									<xs:maxLength value="3"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="All" type="xs:string">
				<xs:annotation>
					<xs:documentation>All brands</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="BrandScopePluralType">
		<xs:annotation>
			<xs:documentation>Contains the brand details using plural instead of list</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="Codes">
				<xs:annotation>
					<xs:documentation>List of Brand codes</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Code" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Unique code assigned to a particular brand. Unique at the chain level</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="BrandCodeType">
									<xs:minLength value="2"/>
									<xs:maxLength value="3"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="All" type="xs:string">
				<xs:annotation>
					<xs:documentation>All brands</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="BrandScopeCodeType">
		<xs:annotation>
			<xs:documentation>Contains the brand details</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="BrandCodeList">
				<xs:annotation>
					<xs:documentation>List of Brands</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Code" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Unique code assigned to a particular brand. Unique at the chain level</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="BrandCodeType">
									<xs:minLength value="2"/>
									<xs:maxLength value="3"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="All" type="xs:string">
				<xs:annotation>
					<xs:documentation>All brands</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:attribute name="CancelNoShowCode" type="FunctionalCode">
		<xs:annotation>
			<xs:documentation>Unique code at the chain level for the Cancel No Show Policy - used for an update only</xs:documentation>
		</xs:annotation>
	</xs:attribute>
	<xs:attributeGroup name="CancelNoShowIdentifierGroup">
		<xs:annotation>
			<xs:documentation>Defines the Cancel No Show policy with the combination of property rate plan identifier group and cancel no show code. Brand and Property are optional, this group is used by policies which can be set at chain level</xs:documentation>
		</xs:annotation>
		<xs:attributeGroup ref="PropertyRatePlanIdentifierOptionalGroup"/>
		<xs:attribute name="CancelNoShowCode" type="FunctionalCode" use="required">
			<xs:annotation>
				<xs:documentation>Unique code at the chain level for the Cancel No Show Policy</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="CancelNoShowIdentifierOptionalGroup">
		<xs:annotation>
			<xs:documentation>Represents the Cancel No Show Identifier Group definition except that the Cancel No Show Code is optional.</xs:documentation>
		</xs:annotation>
		<xs:attributeGroup ref="PropertyRatePlanIdentifierOptionalGroup"/>
		<xs:attribute name="CancelNoShowCode" type="FunctionalCode" use="optional">
			<xs:annotation>
				<xs:documentation>Unique code at the chain level for the Cancel No Show Policy - used for an update only</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:complexType name="CancelNoShowRetrieveType">
		<xs:annotation>
			<xs:documentation>Cancel no show policy type with the CancelNoShowCode mandatory</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Scope">
				<xs:annotation>
					<xs:documentation>Indicates at which level the creation/update is done</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attributeGroup ref="CancelNoShowIdentifierGroup"/>
					<xs:attribute name="VersionNumber" type="VersionNumberType" use="required">
						<xs:annotation>
							<xs:documentation>Version of data set and prevents Concurrent Updates - used for an update only</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Period" type="PolicyPeriodType">
				<xs:annotation>
					<xs:documentation>When the deposit will be applied: period and day of the week. Day of the week will be returned for sure.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Content">
				<xs:annotation>
					<xs:documentation>Functional content of the cancellation no show policy</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="DueDate" type="DueDateType">
							<xs:annotation>
								<xs:documentation>Case which specifies when the penalty will be applicable. Currently only -	Number of days prior to arrival case is applicable</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CancelNoShowType">
		<xs:annotation>
			<xs:documentation>Cancel no show policy type</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Scope">
				<xs:annotation>
					<xs:documentation>Indicates at which level the creation/update is done</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attributeGroup ref="CancelNoShowIdentifierOptionalGroup"/>
					<xs:attribute name="VersionNumber" type="VersionNumberType">
						<xs:annotation>
							<xs:documentation>Version of data set and prevents Concurrent Updates - used for an update only</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Period" type="PolicyPeriodType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When the deposit will be applied: period and day of the week</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Content">
				<xs:annotation>
					<xs:documentation>Functional content of the cancellation no show policy</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="DueDate" type="DueDateType">
							<xs:annotation>
								<xs:documentation>Case which specifies when the penalty will be applicable. Currently only -	Number of days prior to arrival case is applicable</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CxlNoShowType">
		<xs:annotation>
			<xs:documentation>Detailed value related to Cancel No Show House Policy</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:annotation>
				<xs:documentation>The content is optional. In case for the given scope there is no records at all, the system must return the version number linked to the given scope</xs:documentation>
			</xs:annotation>
			<xs:element name="Scope">
				<xs:annotation>
					<xs:documentation>Guarantee can be created at Chain level, property level or rate plan level</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attributeGroup ref="PropertyRatePlanIdentifierOptionalGroup"/>
					<xs:attribute name="VersionNumber" type="VersionNumberType">
						<xs:annotation>
							<xs:documentation>Version of data set and prevents Concurrent Updates - used for an update</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Period" type="PolicyPeriodType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When the guarantee will be applied: period and day of the week. If a period is not applied , the Guarantee will be applicable all the time</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Content" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Functional Content of the Guarantee. It is necessary to specify that the Guarantee is required or not for the specific date range and Days of the week within that range. The cancellation No Show policy can be associated to the Guarantee. A guarantee can exist without the Cancellation no show policy but not vice versa</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="CancelNoShowPolicy">
							<xs:annotation>
								<xs:documentation>The functional content of the cancellation No show policy that will be associated to the Guarantee. Note: If a cancellation no show policy is created, then the Guarantee is by default required and the Guarantee IsRequired filed would be set to True. For UPDATE: The cancellation No Show policy would be deleted if the Guarantee IsRequired Flag is set to false. In case the cancellation no show policy is selected, the guarantee IsRequired is set to true</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="DueDate" type="DueDateType">
										<xs:annotation>
											<xs:documentation>Case which specifies when the penalty will be applicable. Currently only -	Number of days prior to arrival case is applicable</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CancelPolicyType">
		<xs:annotation>
			<xs:documentation>Cancel penalty policy type</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="DueDate" type="DueDateType">
				<xs:annotation>
					<xs:documentation>Date the policy is due</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice>
				<xs:element name="NightBasedAmount" type="AmountFeeDepositType">
					<xs:annotation>
						<xs:documentation>Amount of the policy expressed in number of nights</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="MonetaryAmount" type="MonetaryAmountType">
					<xs:annotation>
						<xs:documentation>Monetary amount, currency and amount structure - only used for rate plan deposits for now</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="PercentageFee" type="xs:decimal">
					<xs:annotation>
						<xs:documentation>Percentage Fee is the percentage of the total amount charged as cancellation fee</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
			<xs:element name="CancellationTime" type="xs:time" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Rate plan speific Cancellation time. When null, it is follow house cancellation time</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="RefundPercentage">
			<xs:annotation>
				<xs:documentation>Percentage of the refund, for  rate plan deposit only</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="10"/>
						<altova:example value="14.5"/>
						<altova:example value="60.75"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:decimal">
					<xs:minInclusive value="1"/>
					<xs:maxInclusive value="100"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:simpleType name="ChainCodeType">
		<xs:annotation>
			<xs:documentation>Unique code of a chain/corporation</xs:documentation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="IHG"/>
					<altova:example value="MOH"/>
					<altova:example value="SW"/>
					<altova:example value="HHC"/>
				</altova:exampleValues>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:minLength value="2"/>
			<xs:maxLength value="3"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="ChannelTypeScopeType">
		<xs:annotation>
			<xs:documentation>Selection of either a list of channel types or All channel types</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="ChannelTypeList">
				<xs:annotation>
					<xs:documentation>Booking source. Can support multiple channels.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ChannelType" type="xs:int" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>1 = Own hotel – PMS
2 = Call center / hotel to hotel – Booking Tool
3 = Brand website 
4 = GDS/Third Party websites – Other
5 = Mobile channel
6 = Unused</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="All" type="xs:string">
				<xs:annotation>
					<xs:documentation>All channel types</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:simpleType name="ChargeFrequencyType">
		<xs:annotation>
			<xs:documentation>Defines when/how often the tax is applied</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="PerDay"/>
			<xs:enumeration value="PerStay"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ChargeUnitType">
		<xs:annotation>
			<xs:documentation>Defines the unit of the tax and how it applies</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="PerProduct"/>
			<xs:enumeration value="PerPerson"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="ChildRatePlanCodeType">
		<xs:annotation>
			<xs:documentation>Scope of a Child Rate Plan Code for QDR</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PriceGrid" minOccurs="0">
				<xs:annotation>
					<xs:documentation> Only one Price Grid code is associated with Rate Plan at the time</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="PriceGridCode" type="PriceGridCodeType" use="required">
						<xs:annotation>
							<xs:documentation>Price Grid code associated with Rate Plan. This is the either a standalone Price Grid code or it is the primary Price Tier Code if it is part of a Price Grid Tier Groping.  </xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="BookingPeriod" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Sell (Absolute) period in which the the user is allowed to sell/book the business</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="EndDate" type="EndDateType">
						<xs:annotation>
							<xs:documentation>If undefined, then the End Date, then the Rate Plan can be booked at any point in the future.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="StayPeriod" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Stay Period for Child Rate Plan Code</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="EndDate" type="xs:date" use="optional"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="RatePlanCode" type="RatePlanCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Unique Rate Plan code that defines the Rate Plan at the corporate and hotel level.  This field must = 5 characters when created at the corporate level and can be 5 - 8 characters when created (activated) at the hotel level.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Name" use="required">
			<xs:annotation>
				<xs:documentation>Rate Plan Name. Mono-lingual. Unique at Hotel level only and can be updated</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:minLength value="1"/>
					<xs:maxLength value="20"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="Status" use="required">
			<xs:annotation>
				<xs:documentation>The status of the rate plan, whether active, inactive (based on the creation/activation at chain or hotel level) </xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="Active"/>
					<xs:enumeration value="Inactive"/>
					<xs:enumeration value="Unknown"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:simpleType name="CityCodeType">
		<xs:annotation>
			<xs:documentation>Defined by ISO 37120 Standard</xs:documentation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="NCE"/>
					<altova:example value="BOS"/>
					<altova:example value="ORD"/>
				</altova:exampleValues>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="3"/>
			<xs:minLength value="3"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="CityScopeType">
		<xs:annotation>
			<xs:documentation>Contains the city details</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="CityCodeList">
				<xs:annotation>
					<xs:documentation>List of cities. If none is specified, it applies to all. ISO 37120 Standard </xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="CityCode" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Defined by ISO 37120 Standard</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="CityCodeType">
									<xs:minLength value="3"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="All" type="xs:string">
				<xs:annotation>
					<xs:documentation>All cities</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="ConditionType">
		<xs:annotation>
			<xs:documentation>Describes the different types of conditions that can be applied to the Tax and Fee Rule</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="Age" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Condition which applies taxes based on the age of the customer</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:choice>
						<xs:element name="Case" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Specifies that there can be infinite number of cases and condition that can be applied under the parent condition at the same level</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Condition" type="ConditionType" maxOccurs="4">
										<xs:annotation>
											<xs:documentation>User can apply n number of conditions at the same level: parent condition cannot be reused inside a branch</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="TaxValue" type="AmountTypeType">
							<xs:annotation>
								<xs:documentation>Tax value based on amount type rules</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:attribute name="FromAge">
						<xs:annotation>
							<xs:documentation>Lower limit of age between which the tax and fee rule is applicable </xs:documentation>
							<xs:appinfo>
								<altova:exampleValues>
									<altova:example value="3"/>
									<altova:example value="13"/>
									<altova:example value="18"/>
								</altova:exampleValues>
							</xs:appinfo>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:nonNegativeInteger">
								<xs:minInclusive value="0"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="ToAge">
						<xs:annotation>
							<xs:documentation>Upper limit of age between which the tax and fee rule should be applicable</xs:documentation>
							<xs:appinfo>
								<altova:exampleValues>
									<altova:example value="65"/>
									<altova:example value="55"/>
									<altova:example value="62"/>
								</altova:exampleValues>
							</xs:appinfo>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:nonNegativeInteger">
								<xs:minInclusive value="0"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Period" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Condition which applies taxes between a specified ranges of dates</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:choice>
						<xs:element name="Case" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Specifies that there can be infinite number of cases and condition that can be applied under the parent condition at the same level</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Condition" type="ConditionType" maxOccurs="4">
										<xs:annotation>
											<xs:documentation>User can apply n number of conditions at the same level: parent condition cannot be reused inside a branch</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="TaxValue" type="AmountTypeType">
							<xs:annotation>
								<xs:documentation>Tax value based on amount type rules</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:attribute name="StartDate" type="StartDateType">
						<xs:annotation>
							<xs:documentation>Start date of tax object</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="EndDate" type="EndDateType">
						<xs:annotation>
							<xs:documentation>End date of tax object</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="DayOfWeek" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Condition which applies tax and fee rule based on specified days of the week</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ActiveOnDaysList" minOccurs="0">
							<xs:annotation>
								<xs:documentation>List of days that the condition will be applied to</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Day" maxOccurs="7">
										<xs:annotation>
											<xs:documentation>Days of the week. A day cannot be reused</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:enumeration value="Sunday"/>
												<xs:enumeration value="Monday"/>
												<xs:enumeration value="Tuesday"/>
												<xs:enumeration value="Wednesday"/>
												<xs:enumeration value="Thursday"/>
												<xs:enumeration value="Friday"/>
												<xs:enumeration value="Saturday"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:choice>
							<xs:element name="Case" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Specifies that there can be infinite number of cases and condition that can be applied under the parent condition at the same level</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Condition" type="ConditionType" maxOccurs="4">
											<xs:annotation>
												<xs:documentation>User can apply n number of conditions at the same level: parent condition cannot be reused inside a branch</xs:documentation>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="TaxValue" type="AmountTypeType">
								<xs:annotation>
									<xs:documentation>Tax value based on amount type rules</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:choice>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Price" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Condition which specifies the details of a tax that is applied for a range of prices</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:choice>
						<xs:element name="Case" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Specifies that there can be infinite number of cases and condition that can be applied under the parent condition at the same level</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Condition" type="ConditionType" maxOccurs="4">
										<xs:annotation>
											<xs:documentation>User can apply n number of conditions at the same level: parent condition cannot be reused inside a branch</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="TaxValue" type="AmountTypeType">
							<xs:annotation>
								<xs:documentation>Tax value based on amount type rules</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:attribute name="ChargeUnit" type="ChargeUnitType" use="required">
						<xs:annotation>
							<xs:documentation>Note:  This attribute is used when specifying the details of the price condition and is not related to the charge unit that applies to the tax identified within the amount tax computation.  ------- Defines the unit of the pricing and how the pricing range applies</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="VAT_InclusionStatus" use="required">
						<xs:annotation>
							<xs:documentation>Determines whether VAT is included</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="WithoutVAT"/>
								<xs:enumeration value="WithVAT"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="ServiceInclusionStatus" use="required">
						<xs:annotation>
							<xs:documentation>Determines if services are included</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="WithoutIncludedServices"/>
								<xs:enumeration value="WithIncludedServices"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="LowerPrice" use="required">
						<xs:annotation>
							<xs:documentation>Lower range of the price to which the tax is applied</xs:documentation>
							<xs:appinfo>
								<altova:exampleValues>
									<altova:example value="49.99"/>
									<altova:example value="99.95"/>
									<altova:example value="129"/>
								</altova:exampleValues>
							</xs:appinfo>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:decimal">
								<xs:minInclusive value="0"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="UpperPrice" use="required">
						<xs:annotation>
							<xs:documentation>Upper range of the price to which the tax is applied</xs:documentation>
							<xs:appinfo>
								<altova:exampleValues>
									<altova:example value="130"/>
									<altova:example value="145.5"/>
									<altova:example value="168.99"/>
								</altova:exampleValues>
							</xs:appinfo>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:decimal">
								<xs:minInclusive value="0"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="MaximumNumberOfNights" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Condition which specifies maximum number of days for which a tax can be applicable</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:choice>
						<xs:element name="Case" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Specifies that there can be infinite number of cases and condition that can be applied under the parent condition at the same level</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Condition" type="ConditionType" maxOccurs="4">
										<xs:annotation>
											<xs:documentation>User can apply n number of conditions at the same level: parent condition cannot be reused inside a branch</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="TaxValue" type="AmountTypeType">
							<xs:annotation>
								<xs:documentation>Tax value based on amount type rules</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:attribute name="MaximumNumber" use="required">
						<xs:annotation>
							<xs:documentation>Maximum number of days for which the tax is applicable</xs:documentation>
							<xs:appinfo>
								<altova:exampleValues>
									<altova:example value="20"/>
									<altova:example value="2"/>
								</altova:exampleValues>
							</xs:appinfo>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:nonNegativeInteger">
								<xs:maxInclusive value="100"/>
								<xs:minInclusive value="1"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:simpleType name="CountryCodeType">
		<xs:annotation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="US"/>
					<altova:example value="FR"/>
					<altova:example value="CA"/>
				</altova:exampleValues>
			</xs:appinfo>
			<xs:documentation>Defined by ISO 3166-1 alpha-2 Standard</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:minLength value="2"/>
			<xs:maxLength value="2"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="CountryScopeType">
		<xs:annotation>
			<xs:documentation>Contains the country details</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="CountryCodeList">
				<xs:annotation>
					<xs:documentation>List of countries. Currently only 1 country can be selected </xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="CountryCode" type="CountryCodeType" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Defined by ISO 3166-1 alpha-2 Standard</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="All" type="xs:string">
				<xs:annotation>
					<xs:documentation>All countries</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:simpleType name="CorporateID_Type">
		<xs:annotation>
			<xs:documentation>Unique Identifier for the Corporate User. Alpha Numeric</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:maxLength value="20"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:attributeGroup name="CorporateAccountIdentifierGroup">
		<xs:annotation>
			<xs:documentation>Defines the attributes of a corporate account</xs:documentation>
		</xs:annotation>
		<xs:attribute name="ChainCode" type="ChainCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Unique Code of a chain/corporation</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CorporateID" use="required">
			<xs:annotation>
				<xs:documentation>Unique code of a corporate account</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="CorporateID_Type">
					<xs:minLength value="1"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="Name" use="required">
			<xs:annotation>
				<xs:documentation>Unique name of a corporate account</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:minLength value="1"/>
					<xs:maxLength value="20"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="PrimaryCorporateID" type="CorporateID_Type" use="optional">
			<xs:annotation>
				<xs:documentation>Indicator to identify if a corporate account is primary or not</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BusinessChoiceCode" use="optional">
			<xs:annotation>
				<xs:documentation>Business Choice Code of a corporate account</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string"/>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="ProgramType" use="optional">
			<xs:annotation>
				<xs:documentation>Program type of a corporate account (corporateSalesCode)</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string"/>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="AccountType" use="required">
			<xs:annotation>
				<xs:documentation>Account type of a corporate account (programIDCode)</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string"/>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="SalesSourceDescription" use="optional">
			<xs:annotation>
				<xs:documentation>Sales Source Description of a corporate account</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:minLength value="1"/>
					<xs:maxLength value="100"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="IsPrimaryAccount" type="xs:boolean" use="optional">
			<xs:annotation>
				<xs:documentation>Identifies if the account is a primary account. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:simpleType name="CurrencyCodeType">
		<xs:annotation>
			<xs:documentation>Defined by ISO 4217 Standard</xs:documentation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="USD"/>
					<altova:example value="EUR"/>
					<altova:example value="GBP"/>
				</altova:exampleValues>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:minLength value="3"/>
			<xs:maxLength value="3"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:attributeGroup name="CurrencySelectionType">
		<xs:annotation>
			<xs:documentation>The selection of currency based on whether the rate plan follows the house currency or not</xs:documentation>
		</xs:annotation>
		<xs:attribute name="FollowHouseDefaultCurrency" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>- If Yes, then the prices in the price grid will be set to follow the default currency of the hotel.                                   - If No, then the prices in the price grid will be based on the Currency set in the CurrencySelectionType.          * Must remain unset on TPI PriceGrid to allow activation.  - Default = "Yes"</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Currency" type="CurrencyCodeType">
			<xs:annotation>
				<xs:documentation>- The currency that this price grid is enforced to follow.     - Mandatory if FollowHouseDefault.   * Must remain unset on TPI PriceGrid to allow activation.          - Currency Default = "No"</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:complexType name="DepositCancelNoShowPolicyType">
		<xs:annotation>
			<xs:documentation>Cancel No Show policy type</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:annotation>
				<xs:documentation>If FollowHouse = false or not defined, the DueDate and the choice between the NightBasedAmount or MonetaryAmount must be defined</xs:documentation>
			</xs:annotation>
			<xs:element name="DueDate" type="DueDateType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date the policy is due. AtBookingTime  not available for Rate Plan policies.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice minOccurs="0">
				<xs:element name="NightBasedAmount">
					<xs:annotation>
						<xs:documentation>Amount of the policy expressed in number of nights</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="AmountFeeDepositType">
								<xs:attribute name="RefundPercentage">
									<xs:annotation>
										<xs:documentation>Only available for Rate Plan when NightBasedAmount set to EntireStay</xs:documentation>
									</xs:annotation>
									<xs:simpleType>
										<xs:restriction base="xs:decimal">
											<xs:minInclusive value="1"/>
											<xs:maxInclusive value="100"/>
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="MonetaryAmount">
					<xs:annotation>
						<xs:documentation>Monetary amount, currency and amount structure - only used for rate plan deposits for now</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:complexContent>
							<xs:extension base="MonetaryAmountType"/>
						</xs:complexContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="PercentageFee" type="xs:decimal">
					<xs:annotation>
						<xs:documentation>Percentage Fee is the percentage of the total amount charged as No-Show cancellation fee</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
			<xs:element name="CancellationTime" type="xs:time" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Rate plan specific Cancellation time. When null, it is follow house cancellation time</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="FollowHouse" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>If true the ChancelNoShow is  entirely follow the house setting for this policy type. This option is only available for Rate Plan policies.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RefundPercentage">
			<xs:annotation>
				<xs:documentation>Percentage of Refund for all possible values</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:decimal">
					<xs:minInclusive value="0.01"/>
					<xs:maxInclusive value="100.00"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="DepositContentRetrieveType">
		<xs:annotation>
			<xs:documentation>Deposit Content type used by retrieve and search service: contains additional info that is not used by create and update</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Deposit" type="DepositPolicyType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Deposit details</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CancellationPenalty" type="CancelPolicyType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Cancel penalty associated to the deposit</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CancellationNoShowPolicy" type="CancelNoShowType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Cancel no show policy associated to the deposit</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="StartDate" type="StartDateType">
			<xs:annotation>
				<xs:documentation>Start date of the deposit. Optional because no dates for deposit sets at Rate Plan Level</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="EndDate" type="EndDateType">
			<xs:annotation>
				<xs:documentation>End date of the deposit. Optional because no dates for deposit sets at Rate Plan Level</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DOW_PatternGroup"/>
		<xs:attribute name="CurrencyCode" type="CurrencyCodeType">
			<xs:annotation>
				<xs:documentation>Currency Code of the monetary amounts defined in this message. Mandatory only if there's at LEAST one monetary amount for Deposit/CancelPenalty/CancelNoShow</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LinkedToSpecial" type="xs:boolean" use="required">
			<xs:annotation>
				<xs:documentation>Indicates if the deposit is linked to a special event/requirement or not</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="DepositContentType">
		<xs:annotation>
			<xs:documentation>Deposit Content type used by create and update: doesn't contain the "LinkedToSpecial" boolean</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Deposit" type="DepositPolicyType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Deposit details</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CancellationPenalty" type="CancelPolicyType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Cancel penalty associated to the deposit</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CancellationNoShowPolicy" type="CancelNoShowType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Cancel no show policy associated to the deposit</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="StartDate" type="StartDateType">
			<xs:annotation>
				<xs:documentation>Start date of the deposit. Optional because no dates for deposit sets at Rate Plan Level</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="EndDate" type="EndDateType">
			<xs:annotation>
				<xs:documentation>End date of the deposit. Optional because no dates for deposit sets at Rate Plan Level</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DOW_PatternGroup"/>
		<xs:attribute name="CurrencyCode" type="CurrencyCodeType">
			<xs:annotation>
				<xs:documentation>Currency Code of the monetary amounts defined in this message. Mandatory only if there's at LEAST one monetary amount for Deposit/CancelPenalty/CancelNoShow</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:attributeGroup name="DepositIdentifierGroup">
		<xs:annotation>
			<xs:documentation>Defines the Deposit with the combination of property rate plan identifier group and deposit code. Brand and Property are optional, this group is used by policies which can be set at chain level</xs:documentation>
		</xs:annotation>
		<xs:attributeGroup ref="PropertyRatePlanIdentifierOptionalGroup"/>
		<xs:attribute name="DepositCode" type="FunctionalCode" use="optional">
			<xs:annotation>
				<xs:documentation>DEPRECATED: This element has to be removed as soon as we have disable the previous CRUD service</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="DepositIdentifierOptionalGroup">
		<xs:annotation>
			<xs:documentation>Defines the Deposit with the combination of property rate plan identifier group and deposit code. Brand and Property are optional, this group is used by policies which can be set at chain level</xs:documentation>
		</xs:annotation>
		<xs:attributeGroup ref="PropertyRatePlanIdentifierOptionalGroup"/>
		<xs:attribute name="DepositCode" type="FunctionalCode" use="optional">
			<xs:annotation>
				<xs:documentation>DEPRECATED: This element has to be removed as soon as we have disable the previous CRUD service</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:complexType name="DepositPolicyType">
		<xs:annotation>
			<xs:documentation>Deposit policy type</xs:documentation>
			<xs:documentation>Defines the policy type using the Due Date Type, the way the Nights will be charged as well as the monetary amount</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="DueDate" type="DueDateType">
				<xs:annotation>
					<xs:documentation>Date the policy is due</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice>
				<xs:element name="NightBasedAmount" type="AmountFeeDepositType">
					<xs:annotation>
						<xs:documentation>Amount of the policy expressed in number of nights</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="MonetaryAmount" type="MonetaryAmountType">
					<xs:annotation>
						<xs:documentation>Monetary amount, amount and currency structure - only used for rate plan deposits for now</xs:documentation>
						<xs:appinfo>
							<altova:exampleValues>
								<altova:example value="49.95"/>
								<altova:example value="50"/>
								<altova:example value="129.50"/>
							</altova:exampleValues>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element name="PercentageFee" type="xs:decimal">
					<xs:annotation>
						<xs:documentation>Percentage Fee is the percentage of the total amount charged as deposit</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DepositRetrieveType">
		<xs:annotation>
			<xs:documentation>Deposit type used by retrieve and search service: contains additional info that is not used by create and update</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Scope">
				<xs:annotation>
					<xs:documentation>Deposit can be created at chain level, property level or rate plan level</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attributeGroup ref="DepositIdentifierGroup"/>
					<xs:attribute name="VersionNumber" type="VersionNumberType" use="required">
						<xs:annotation>
							<xs:documentation>Version of the overall deposit object attached to the scope.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Period" type="PolicyPeriodType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When the deposit will be applied: period and day of the week</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Content" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Functional content of the deposit</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Deposit" type="DepositPolicyType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Deposit details</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CancellationPenalty" type="CancelPolicyType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Cancel penalty associated to the deposit</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CancellationNoShowPolicy" type="DepositCancelNoShowPolicyType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Cancel no show policy associated to the deposit</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="Type" use="required">
						<xs:annotation>
							<xs:documentation>Indicates if the deposit is: linked to a special event, linked to a special requirement, or just a regular Advance Deposit </xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="Regular"/>
								<xs:enumeration value="SpecialEvent"/>
								<xs:enumeration value="SpecialRequirement"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DepositSetType">
		<xs:annotation>
			<xs:documentation>Defines the deposit object used in case of a set service.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Scope">
				<xs:annotation>
					<xs:documentation>Deposit can be created at Chain level, property level or rate plan level</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attributeGroup ref="DepositIdentifierOptionalGroup"/>
					<xs:attribute name="VersionNumber" type="VersionNumberType">
						<xs:annotation>
							<xs:documentation>Version of the overall deposit object attached to the scope.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Unset" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Period used to erase deposit policy on the specified period.
*Note: At least one of the elements, the "Unset" or the"Set" must be provided.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Period" type="PolicyPeriodType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>If no period is provided, it will unset or delete the advance deposit for the  entire open period </xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Set" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This element allows the user to set the Advance deposit for a list of periods. '- Note: At least one of the elements, the "Unset" or the"Set" must be provided.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Period" type="PolicyPeriodType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>When the deposit content will be applied: If the period is not provided, and a content is provided, then it means that the content will be applied on an open-open period.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Content">
							<xs:annotation>
								<xs:documentation>Functional Content of the deposit to apply over the period.
At least one of the 3 elements Deposit / CancellationPenalty / CancellationNoShowPolicy has to be provided to set a deposit.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Deposit" type="DepositPolicyType" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Deposit details</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="CancellationPenalty" type="CancelPolicyType" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Cancel penalty associated to the deposit</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="CancellationNoShowPolicy" type="DepositCancelNoShowPolicyType" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Cancel no show policy associated to the deposit. For Rate Plan policies this policy is mandatory.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DepositType">
		<xs:annotation>
			<xs:documentation>Defines how the deposit is retrieved including its scope, period and content; Version Number is optional</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Scope">
				<xs:annotation>
					<xs:documentation>Deposit can be created at Chain level, property level or rate plan level</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attributeGroup ref="DepositIdentifierOptionalGroup"/>
					<xs:attribute name="VersionNumber" type="VersionNumberType">
						<xs:annotation>
							<xs:documentation>Version of data set and prevents Concurrent Updates - used for an update, not for create</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Period" type="PolicyPeriodType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When the deposit will be applied: period and day of the week</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Content">
				<xs:annotation>
					<xs:documentation>Functional Content of the deposit. At LEAST ONE of the 3 elements Deposit/CancellationPenalty/CancellationNoShowPolicy has to be present when creating/updating a Deposit</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Deposit" type="DepositPolicyType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Deposit details</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CancellationPenalty" type="CancelPolicyType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Cancel penalty associated to the deposit</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CancellationNoShowPolicy" type="DepositCancelNoShowPolicyType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Cancel no show policy associated to the deposit</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="DescriptionType">
		<xs:annotation>
			<xs:documentation>Free flow text defining the tax or fee in more detail</xs:documentation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="This is a State Tax description."/>
					<altova:example value="This is a Country Tax description."/>
				</altova:exampleValues>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:maxLength value="80"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="DisclaimerMessageType">
		<xs:annotation>
			<xs:documentation>List of all disclaimer messages from all residency taxes applying for a given period: workaround for external system to do breakdowns</xs:documentation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="This State Tax applies to whatever disclaimer."/>
					<altova:example value="This City Tax has a disclaimer."/>
				</altova:exampleValues>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="255"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="DisplayAttributesType">
		<xs:annotation>
			<xs:documentation>Determines which attributes can be returned as "displayable" in the system</xs:documentation>
		</xs:annotation>
		<xs:attribute name="MarketingDisplay" type="xs:string">
			<xs:annotation>
				<xs:documentation>Indicator returned to external system in the availability response;  (Common Values = B, M, T or E)     Can be any alphanumeric value.       Default is "empty string" (nothing entered)</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsRateAmountDisplayed" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>Indicates whether or not the rate amounts must be displayed to the customer or not.                          </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AreAmenitiesDisplayed" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>Indicator returned to channels (GDS) that determines whether or not amenities are described in the Rate Plan description.                  </xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="DOWPeriodType">
		<xs:annotation>
			<xs:documentation>The combination of the Start date and the End date along with the day of the week attribute group.  

If an end date is not provided, then it means the date range is open ended (e.g. we do not evaluate on a date not entered).

If a start date is not provided, then it means the beginning of the range is open ended (e.g. we do not evaluate on a date not entered).  

If a user does not select a DOW, then by default, the start and end period will apply to all the days of the week.  If a user chooses one or more specific days of the week, then those selected will be set to True and those not selected will be set to False.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="StartDate" type="StartDateType">
			<xs:annotation>
				<xs:documentation>Start date of the feature. Optional - used in the cases where the start date can be optional.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="EndDate" type="EndDateType">
			<xs:annotation>
				<xs:documentation>End date of the feature. Optional - used in the cases where the end date can be optional.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DOW_PatternGroup"/>
	</xs:complexType>
	<xs:attributeGroup name="DOW_PatternMandatoryGroup">
		<xs:annotation>
			<xs:documentation xml:lang="en">If a day(s) of the week is set to true then the associated item is available on that day of the week  (e.g., if Mon="true" then a flight operates on Mondays or a certain rate is available on Mondays).</xs:documentation>
		</xs:annotation>
		<xs:attribute name="Mon" type="xs:boolean" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">When true, apply to Monday.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Tue" type="xs:boolean" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">When true, apply to Tuesday.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Weds" type="xs:boolean" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">When true, apply to Wednesday.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Thur" type="xs:boolean" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">When true, apply to Thursday.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Fri" type="xs:boolean" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">When true, apply to Friday.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Sat" type="xs:boolean" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">When true, apply to Saturday.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Sun" type="xs:boolean" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">When true, apply to Sunday.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:complexType name="DueDateType">
		<xs:annotation>
			<xs:documentation>Date the fee / deposit is due</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="AtBookingTime" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>Policy starts to apply at the time the user is booking</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NumOfDaysPriorToArrival">
				<xs:annotation>
					<xs:documentation>Policy stats to apply X days before the guest's arrival date</xs:documentation>
					<xs:appinfo>
						<altova:exampleValues>
							<altova:example value="5"/>
							<altova:example value="7"/>
							<altova:example value="14"/>
						</altova:exampleValues>
					</xs:appinfo>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:nonNegativeInteger">
						<xs:minInclusive value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="NumOfDaysAfterBooking">
				<xs:annotation>
					<xs:documentation>Policy starts to apply X days after the booking</xs:documentation>
					<xs:appinfo>
						<altova:exampleValues>
							<altova:example value="1"/>
							<altova:example value="7"/>
							<altova:example value="30"/>
						</altova:exampleValues>
					</xs:appinfo>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:nonNegativeInteger">
						<xs:minInclusive value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:simpleType name="EarlyDepartureAmount">
		<xs:annotation>
			<xs:documentation>Flat amount that is applicable</xs:documentation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="20.50"/>
					<altova:example value="59.99"/>
					<altova:example value="100.00"/>
				</altova:exampleValues>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:decimal">
			<xs:minInclusive value="0"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="EndDateType">
		<xs:annotation>
			<xs:documentation>End date of tax object</xs:documentation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="2015-04-01"/>
					<altova:example value="2015-04-30"/>
				</altova:exampleValues>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:date">
			<xs:minInclusive value="2000-01-01"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="ExclusionRuleType">
		<xs:annotation>
			<xs:documentation>Contains ExclusionRule attributes</xs:documentation>
		</xs:annotation>
		<xs:attribute name="ExcludedCode" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>The code to be excluded during shopping
</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ExcludedCodeType" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>The type of the exclusionCode. RatePlan or Product
</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCorporateEnforced" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>Is this exclusion mandatory by Corporate
</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="FailedPropertyType">
		<xs:annotation>
			<xs:documentation>Failed property structure: chain brand property and Hotel group Name</xs:documentation>
		</xs:annotation>
		<xs:attributeGroup ref="PropertyIdentifierGroup"/>
		<xs:attribute name="HotelGroupName">
			<xs:annotation>
				<xs:documentation>Free Flow text. Name of the  hotel group to which the property belongs to. Mandatory for the "included hotels", optional for the "excluded hotels"</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:minLength value="1"/>
					<xs:maxLength value="30"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:simpleType name="FunctionalCode">
		<xs:annotation>
			<xs:documentation>Unique ID at chain level (Generated by the system, not the user)</xs:documentation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="123"/>
					<altova:example value="ABC"/>
					<altova:example value="XZab456"/>
				</altova:exampleValues>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:maxLength value="7"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="OrderedCodeType">
		<xs:annotation>
			<xs:documentation>code for the ordered list  for sell strategy</xs:documentation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="123"/>
					<altova:example value="ABC"/>
					<altova:example value="XZab456"/>
				</altova:exampleValues>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:maxLength value="8"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="GeographicalScopeType">
		<xs:annotation>
			<xs:documentation>The brands and the regions to which the rule applies</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="BrandRegion" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The combination of brands and regions. Brand cannot be defined without a region and vice and versa</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Region" type="RegionScopeType">
							<xs:annotation>
								<xs:documentation>Geographical Region codes</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Brand" type="BrandScopeCodeType">
							<xs:annotation>
								<xs:documentation>Brand codes</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="PropertyList" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows you to include or exclude a property or a list of properties</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Property" type="RateInheritanceRulePropertyScopeType" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="ChainCode" type="ChainCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Chain code</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="GuaranteeCxlNoShowSearchType">
		<xs:annotation>
			<xs:documentation>Guarantee type used by the search service: contains additional info that is not used by create and update</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:annotation>
				<xs:documentation>The content is optional. In case for the given scope there is no records at all, the system must return the version number linked to the given scope</xs:documentation>
			</xs:annotation>
			<xs:element name="Scope">
				<xs:annotation>
					<xs:documentation>Guarantee can be created at Chain level, property level or rate plan level</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attributeGroup ref="PropertyRatePlanIdentifierOptionalGroup"/>
					<xs:attribute name="VersionNumber" type="VersionNumberType">
						<xs:annotation>
							<xs:documentation>Version of data set and prevents Concurrent Updates - used for an update</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Period" type="PolicyPeriodType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When the guarantee will be applied: period and day of the week. If a period is not applied , the Guarantee will be applicable all the time</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Content" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Functional Content of the Guarantee. It is necessary to specify that the Guarantee is required or not for the specific date range and Days of the week within that range. The cancellation No Show policy can be associated to the Guarantee. A guarantee can exist without the Cancellation no show policy but not vice versa</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:choice>
						<xs:element name="Guarantee">
							<xs:annotation>
								<xs:documentation>Content specific to the guarantee</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:attribute name="IsRequired" type="xs:boolean" use="required">
									<xs:annotation>
										<xs:documentation>Flag to specify if the Guarantee is required or not</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
						<xs:element name="CancelNoShowPolicy">
							<xs:annotation>
								<xs:documentation>The functional content of the cancellation No show policy that will be associated to the Guarantee. Note: If a cancellation no show policy is created, then the Guarantee is by default required and the Guarantee IsRequired filed would be set to True. For UPDATE: The cancellation No Show policy would be deleted if the Guarantee IsRequired Flag is set to false. In case the cancellation no show policy is selected, the guarantee IsRequired is set to true</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="DueDate" type="DueDateType">
										<xs:annotation>
											<xs:documentation>Case which specifies when the penalty will be applicable. Currently only -	Number of days prior to arrival case is applicable</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:choice>
					<xs:attribute name="LinkedToDeposit" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>If true , it  has advance deposit associated to it. Only for Search Response (Mandatory)</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="GuaranteeCxlNoShowType">
		<xs:annotation>
			<xs:documentation>Guarantee Cancel No Show type</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Scope">
				<xs:annotation>
					<xs:documentation>Guarantee can be created at Chain level, property level or rate plan level</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attributeGroup ref="PropertyRatePlanIdentifierOptionalGroup"/>
					<xs:attribute name="VersionNumber" type="VersionNumberType">
						<xs:annotation>
							<xs:documentation>Version of data set and prevents Concurrent Updates - used for an update</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Period" type="PolicyPeriodType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When the guarantee will be applied: period and day of the week. If a period is not applied , the Guarantee will be applicable all the time</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Content">
				<xs:annotation>
					<xs:documentation>Functional Content of the Guarantee. It is necessary to specify that the Guarantee is required or not for the specific date range and Days of the week within that range. The cancellation No Show policy can be associated to the Guarantee. A guarantee can exist without the Cancellation no show policy but not vice versa</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:choice>
						<xs:element name="Guarantee">
							<xs:annotation>
								<xs:documentation>Content specific to the guarantee</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:attribute name="IsRequired" type="xs:boolean" use="required">
									<xs:annotation>
										<xs:documentation>Flag to specify if the Guarantee is required or not. Set to "false" will remove the Guarantee and CancelNoShowPolicy polices.</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
						<xs:element name="CancelNoShowPolicy">
							<xs:annotation>
								<xs:documentation>The functional content of the cancellation No show policy that will be associated to the Guarantee. Note: If a cancellation no show policy is created, then the Guarantee is by default required and the Guarantee IsRequired filed would be set to True. For UPDATE: The cancellation No Show policy would be deleted if the Guarantee IsRequired Flag is set to false. In case the cancellation no show policy is selected, the guarantee IsRequired is set to true</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:choice>
									<xs:element name="DueDate" type="DueDateType">
										<xs:annotation>
											<xs:documentation>Case which specifies when the penalty will be applicable. Currently only -	Number of days prior to arrival case is applicable</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Unset" type="xs:string">
										<xs:annotation>
											<xs:documentation>When node is exists the CuncelNoShowPolicy is unset without affecting the Guarantee setting.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:choice>
							</xs:complexType>
						</xs:element>
					</xs:choice>
					<xs:attribute name="LinkedToDeposit" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>If true , it  has advance deposit associated to it. Only for Search Response (Mandatory)</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:attributeGroup name="GuaranteeIdentifierGroup">
		<xs:annotation>
			<xs:documentation>Defines the Guarantee with the combination of property rate plan identifier group and Guarantee code. Brand and Property are optional, this group is used by policies which can be set at chain level</xs:documentation>
		</xs:annotation>
		<xs:attributeGroup ref="PropertyRatePlanIdentifierOptionalGroup"/>
		<xs:attribute name="GuaranteeCode" type="FunctionalCode" use="required">
			<xs:annotation>
				<xs:documentation>Unique code at the chain level for the guarantee - used for an update</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="GuaranteeIdentifierOptionalGroup">
		<xs:annotation>
			<xs:documentation>Represents the Guarantee Identifier Group definition except that the Guarantee Code is optional.</xs:documentation>
		</xs:annotation>
		<xs:attributeGroup ref="PropertyRatePlanIdentifierOptionalGroup"/>
		<xs:attribute name="GuaranteeCode" type="FunctionalCode" use="optional">
			<xs:annotation>
				<xs:documentation>Unique code at the chain level for the guarantee - used for an update</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:complexType name="GuaranteeType">
		<xs:annotation>
			<xs:documentation>Guarantee type</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Scope">
				<xs:annotation>
					<xs:documentation>Guarantee can be created at Chain level, property level or rate plan level</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attributeGroup ref="GuaranteeIdentifierOptionalGroup"/>
					<xs:attribute name="VersionNumber" type="VersionNumberType">
						<xs:annotation>
							<xs:documentation>Version of data set and prevents Concurrent Updates - used for an update</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Period" type="PolicyPeriodType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When the guarantee will be applied: period and day of the week. If a period is not applied , the Guarantee will be applicable all the time</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Content">
				<xs:annotation>
					<xs:documentation>Functional Content of the Guarantee. It is necessary to specify that the Guarantee is required or not for the specific date range and Days of the week within that range</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Guarantee">
							<xs:annotation>
								<xs:documentation>Content specific to the guarantee</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:attribute name="IsRequired" type="xs:boolean" use="required">
									<xs:annotation>
										<xs:documentation>Flag to specify if the Guarantee is required or not</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:attributeGroup name="GroupScopeType">
		<xs:attribute name="ChainCode" type="ChainCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Unique Code of a Chain/Corporation</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PropertyCode" type="PropertyCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Unique code assigned to a particular hotel.  Unique at brand level.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviousFirstArrivalDate" type="xs:date" use="optional">
			<xs:annotation>
				<xs:documentation>Set and used by PMS to identify group with Groups Code and Property Code. On creation equal to First Arrival Date, on Modification equal to Previous First Arrival Date.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="GroupExternalID" use="optional">
			<xs:annotation>
				<xs:documentation>External Group ID may be used for identify the group along with Property and Group Code. Set on the PMS only and stored with the group.</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:long">
					<xs:minInclusive value="0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="GroupTagsGroup">
		<xs:annotation>
			<xs:documentation>Determines the Market Segmentation and Industry Type for the Group</xs:documentation>
		</xs:annotation>
		<xs:attribute name="MarketSegmentation" type="xs:string" use="optional"/>
		<xs:attribute name="IndustryType" type="xs:string" use="optional"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="GroupStatusGroup">
		<xs:annotation>
			<xs:documentation>GroupStatus used to identify status for various internal and external consumers</xs:documentation>
		</xs:annotation>
		<xs:attribute name="SaleStatus" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>GroupSaleStatus used for identification if a group can be picked based on the status</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CancellationReason" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>String to store cancellation reason</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BookingStatus" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>GroupReservationStatus used for identification if a group can be picked based on the status</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:simpleType name="InclusionStatusType">
		<xs:annotation>
			<xs:documentation>Determines if tax is included in rate or excluded from rate</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="IncludedInRate"/>
			<xs:enumeration value="ExcludedFromRate"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="InventoryTypeCodeType">
		<xs:annotation>
			<xs:documentation>A code representing an Inventory Type which is the business code for an Inventory Type </xs:documentation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="KNGN"/>
					<altova:example value="BRK01"/>
				</altova:exampleValues>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="LevelType">
		<xs:annotation>
			<xs:documentation>Describes where the tax is being initiated from</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Chain"/>
			<xs:enumeration value="Brand"/>
			<xs:enumeration value="Property"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="LoyaltyAttributesType">
		<xs:annotation>
			<xs:documentation>Contains the loyalty attributes</xs:documentation>
		</xs:annotation>
		<xs:attribute name="LoyaltyPointsApply" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>Yes = Customer can earn points by booking this rate. 
</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FreeNight" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>Indicates whether or not the rate plan is part of a free night promotion. 
</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LoyaltyAwards" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>Yes = Customer can pay part or the entire stay with loyalty points. 
</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="MealPlanPropertyScopeType">
		<xs:annotation>
			<xs:documentation>The list of properties that would have the meal plan applicable to</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Property" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="PropertyCodeList">
							<xs:annotation>
								<xs:documentation>List of properties</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Code" type="PropertyCodeType" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>Unique code assigned to a particular property. Unique at brand level</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="IsIncluded" type="xs:boolean" use="required">
						<xs:annotation>
							<xs:documentation>Included by default </xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="BrandCode" type="BrandCodeType" use="required">
						<xs:annotation>
							<xs:documentation>Property belonging to the brand</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="MealPlanScopeType">
		<xs:annotation>
			<xs:documentation>The brands and the regions to which the Meal plan would be applicable to</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="BrandRegion" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The combination of brands and regions, the meal plan will be applicable to</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Region" type="RegionScopeType">
							<xs:annotation>
								<xs:documentation>The list of regions the meal plan will be applicable to</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Brand" type="BrandScopeType">
							<xs:annotation>
								<xs:documentation>The list of brands the meal will be applicable to</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="PropertyList" type="MealPlanPropertyScopeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows you to include or exclude a property or a list of properties</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="ModeType">
		<xs:annotation>
			<xs:documentation>Conditional field (only mandatory in case the amount type is in percentage)</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="AmountWithTaxes"/>
			<xs:enumeration value="AmountWithoutTaxes"/>
			<xs:enumeration value="TaxesOnly"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="MonetaryAmountType">
		<xs:annotation>
			<xs:documentation>Defines the actual flat value and currency being referenced</xs:documentation>
		</xs:annotation>
		<xs:attribute name="CurrencyCode" use="required">
			<xs:annotation>
				<xs:documentation>ISO Currency code of the monetary amount</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="CurrencyCodeType">
					<xs:length value="3"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="Amount" use="required">
			<xs:annotation>
				<xs:documentation>Amount</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="15.00"/>
						<altova:example value="59.95"/>
						<altova:example value="110.5"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:decimal">
					<xs:minInclusive value="0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:simpleType name="NameType">
		<xs:annotation>
			<xs:documentation>Name of the tax or fee</xs:documentation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="State Tax Name"/>
					<altova:example value="Country Tax Name"/>
				</altova:exampleValues>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:maxLength value="64"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="OTA_FeeTaxTypeType">
		<xs:annotation>
			<xs:documentation>Industry standard for tax types http://www.opentravel.org (OTA Fee Tax Type - FFT)</xs:documentation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="3"/>
					<altova:example value="6"/>
					<altova:example value="11"/>
					<altova:example value="14"/>
					<altova:example value="15"/>
				</altova:exampleValues>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:int">
			<xs:minInclusive value="1"/>
			<xs:maxInclusive value="41"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="OfficeID_Type">
		<xs:annotation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="BOS123456"/>
				</altova:exampleValues>
			</xs:appinfo>
			<xs:documentation>Please enter 9 characters, first 3 must be letters (IATA city code), sixth one a number (corporate qualifier), other characters must be letters or numbers.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:minLength value="9"/>
			<xs:maxLength value="9"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="PaymentAtHotelStatusType">
		<xs:annotation>
			<xs:documentation>If services are included then this value will be NotPaidAtHotel</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="PaidAtHotel"/>
			<xs:enumeration value="OnlinePayment"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:attributeGroup name="PeriodGroup">
		<xs:annotation>
			<xs:documentation>Definition of the group period - Start Date must be less than or equal to End Date.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="StartDate" type="xs:date" use="optional">
			<xs:annotation>
				<xs:documentation>Rate Plan setting - Optional at Chain and Property level. 
Property setting -  If period set to 1 day, then start date equals end date.</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="2015-05-01"/>
						<altova:example value="2015-04-01"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="EndDate" type="xs:date" use="optional">
			<xs:annotation>
				<xs:documentation>Rate Plan setting - Optional at Chain and Property level. 
Property setting -  If period set to 1 day then start date equals end date</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="2015-06-01"/>
						<altova:example value="2015-07-01"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="PeriodGroupOptional">
		<xs:annotation>
			<xs:documentation>Definition of the group period where both the start and end dates can be optional (open period) - If both are populated, then Start Date must be less than or equal to End Date.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="StartDate" type="xs:date" use="optional">
			<xs:annotation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="2015-05-01"/>
						<altova:example value="2015-04-01"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="EndDate" type="xs:date" use="optional">
			<xs:annotation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="2015-06-01"/>
						<altova:example value="2015-07-01"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="PeriodMandatoryGroup">
		<xs:annotation>
			<xs:documentation>Definition of the period.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="StartDate" type="xs:date" use="required">
			<xs:annotation>
				<xs:documentation>Start Date</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="2015-05-01"/>
						<altova:example value="2015-04-01"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="EndDate" type="xs:date" use="required">
			<xs:annotation>
				<xs:documentation>End Date - If period set to 1 day then start date equals end date</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="2015-06-01"/>
						<altova:example value="2015-07-01"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="PeriodOptionalEndGroup">
		<xs:annotation>
			<xs:documentation>Definition of the group period where the start date is mandatory and end date is optional (open period) - If both are populated, then Start Date must be less than or equal to End Date.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="StartDate" type="xs:date" use="required">
			<xs:annotation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="2015-05-01"/>
						<altova:example value="2015-04-01"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="EndDate" type="xs:date" use="optional">
			<xs:annotation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="2015-06-01"/>
						<altova:example value="2015-07-01"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:complexType name="PolicyPeriodType">
		<xs:annotation>
			<xs:documentation>The combination of the Start date and the End date along with the day of the week attribute group.  

If an end date is not provided, then it means the date range is open ended (e.g. we do not evaluate on a date not entered).

If a start date is not provided, then it means the beginning of the range is open ended (e.g. we do not evaluate on a date not entered).  

If a user does not select a DOW, then by default, the start and end period will apply to all the days of the week.  If a user chooses one or more specific days of the week, then those selected will be set to True and those not selected will be set to False.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="StartDate" type="StartDateType">
			<xs:annotation>
				<xs:documentation>Start date of the feature. Optional - used in the cases where the start date can be optional.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="EndDate" type="EndDateType">
			<xs:annotation>
				<xs:documentation>End date of the feature. Optional - used in the cases where the end date can be optional.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DOW_PatternGroup"/>
	</xs:complexType>
	<xs:simpleType name="PositionOrderType">
		<xs:annotation>
			<xs:documentation>Sets the order in which taxes are applied</xs:documentation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="1"/>
					<altova:example value="2"/>
					<altova:example value="3"/>
				</altova:exampleValues>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:int">
			<xs:minInclusive value="0"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:attributeGroup name="PriceGridCodeGroup">
		<xs:annotation>
			<xs:documentation>Defines the "Type" of price code and the price code itself</xs:documentation>
		</xs:annotation>
		<xs:attribute name="Type" use="required">
			<xs:annotation>
				<xs:documentation>Type of Price Grid</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="FlatRate"/>
					<xs:enumeration value="PercentAdd"/>
					<xs:enumeration value="PercentOff"/>
					<xs:enumeration value="AmountAdd"/>
					<xs:enumeration value="AmountOff"/>
					<xs:enumeration value="Buy/Get"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="ReferencePriceGridCode" type="PriceGridCodeType">
			<xs:annotation>
				<xs:documentation>Mandatory only if the Price Grid type is not Flat Rate</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:simpleType name="PriceGridCodeType">
		<xs:annotation>
			<xs:documentation>Unique code assigned to a particular price code. Unique at the chain level</xs:documentation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="C1"/>
					<altova:example value="XX"/>
					<altova:example value="HI"/>
					<altova:example value="EH"/>
					<altova:example value="C2"/>
				</altova:exampleValues>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:complexType name="PriceGridContentType">
		<xs:annotation>
			<xs:documentation>The functional contents of the Price Grid</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="YieldManagement" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Default = "Yield at own value"</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:choice minOccurs="0">
						<xs:annotation>
							<xs:documentation>Mandatory if Yield Management Type is set to "AdjustmentValue".</xs:documentation>
						</xs:annotation>
						<xs:element name="FlatAmount">
							<xs:simpleType>
								<xs:restriction base="xs:decimal"/>
							</xs:simpleType>
						</xs:element>
						<xs:element name="Percent">
							<xs:simpleType>
								<xs:restriction base="xs:decimal"/>
							</xs:simpleType>
						</xs:element>
					</xs:choice>
					<xs:attribute name="Type" use="required">
						<xs:annotation>
							<xs:documentation>"Type" of yield management option</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string"/>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="LengthOfStayPricing" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Minimum and maximum length of stay used for the Length of stay pricing</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="MinimumLengthOfStay" use="required">
						<xs:annotation>
							<xs:documentation>Minimum length of stay</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:int">
								<xs:minExclusive value="0"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="MaximumLengthOfStay">
						<xs:annotation>
							<xs:documentation>Maximum length of stay. If not provided, the maximum length of stay is the limit set in configuration module</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:int">
								<xs:minExclusive value="0"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Pricing">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Methods" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>A list of Pricing Methods</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Method" type="xs:string">
										<xs:annotation>
											<xs:documentation>This field defines the pricing method to be applied to this Price Grid. Please refer to ICD for enumeration options.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="BookingPattern">
						<xs:annotation>
							<xs:documentation>Defines when product is consumed. Please refer to ICD for enumeration options.</xs:documentation>
							<xs:appinfo>
								<altova:exampleValues>
									<altova:example value="EveryNight"/>
									<altova:example value="DayOfCheckIn "/>
									<altova:example value="DayOfCheckOut"/>
								</altova:exampleValues>
							</xs:appinfo>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="Frequency" type="xs:string" use="required">
						<xs:annotation>
							<xs:documentation>Defines the frequency the pricing applies to. Please refer to ICD for enumeration options.</xs:documentation>
							<xs:appinfo>
								<altova:exampleValues>
									<altova:example value="PerNight"/>
									<altova:example value="PerStay"/>
									<altova:example value="PerUse"/>
								</altova:exampleValues>
							</xs:appinfo>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Classifications" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Determines the classification of the price grid and how it can be used. Default value is Any.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Classification" maxOccurs="unbounded">
							<xs:annotation>
								<xs:appinfo>
									<altova:exampleValues>
										<altova:example value="Standalone"/>
										<altova:example value="Package"/>
										<altova:example value="Addon"/>
										<altova:example value="Any"/>
									</altova:exampleValues>
								</xs:appinfo>
							</xs:annotation>
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:string"/>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="Name" use="required">
			<xs:annotation>
				<xs:documentation>Price Grid Name. Mono-lingual. Not unique and can be updated</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:minLength value="1"/>
					<xs:maxLength value="20"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="ProductCategoryCode" type="ProductCategoryCodeType" use="required">
			<xs:annotation>
				<xs:documentation>A code representing the Product Category. Any product associated with this Price Grid must belong to this Product Category.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ProductClassCode" type="ProductCategoryClassCodeType">
			<xs:annotation>
				<xs:documentation>A code representing the Product Class. This must belong to this Product Category.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ProductCode" type="ProductCodeType">
			<xs:annotation>
				<xs:documentation>A code representing the Product for this Product Category and for this Price Grid. *Mandatory at Property</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="PriceGridCodeGroup"/>
		<xs:attribute name="TaxInclusion">
			<xs:annotation>
				<xs:documentation> - Optional at Corporate level         - Mandatory* at the Hotel level upon activation (create at hotel)                      * Must remain unset on TPI PriceGrid to allow activation.        - Default = "House "</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="IncludedInRate"/>
					<xs:enumeration value="ExcludedFromRate"/>
					<xs:enumeration value="House"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="PriceEndsWith">
			<xs:annotation>
				<xs:documentation>- Optional for percentage linking.     - Used to force the system to apply a value before or after decimal: 0-999.                     * Must remain unset on TPI PriceGrid to allow activation.  </xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:minLength value="1"/>
					<xs:maxLength value="3"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="IsApplicableToAllInventoryTypes" type="xs:boolean">
			<xs:annotation>
				<xs:documentation> - If Yes, then a price must be set (mandatory) for EVERY active room type.         - If No, then at least one active room type must have a price defined.                      - If a Price Grid Code is referenced, then the user must use the same value or a subset of values.                   - Mandatory* upon activation ("create at hotel")                 * Must remain unset on TPI PriceGrid to allow activation. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="AllocationAllowance">
			<xs:annotation>
				<xs:documentation>NOTE FROM LIZ APR 13:  Confirm whether these fields are remaining in scope.</xs:documentation>
			</xs:annotation>
		</xs:attributeGroup>
		<xs:attribute name="IsStayRestrictionAllowed" type="xs:boolean">
			<xs:annotation>
				<xs:documentation> - This flag determines whether or not stay restrictions are set for Non-RMS hotels.              - If Yes, then the MinLOS, MaxLOS and CTA can be set for this price grid.       - If No, then the MinLOS, MaxLOS and CTA cannot be set for this price grid.   * Must remain unset on TPI PriceGrid to allow activation.                       - Default = "Yes"</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PriceGridProtectionLevel" type="xs:string">
			<xs:annotation>
				<xs:documentation>Can only be set/modified by a user configuring on the Corporate level.                                                     There are 3 options:
 1)  A = All
 2)  N = Price Grid Name and any fields entered by at the corporate level are protected.      
 3)  "Blank" = Protect only those field that have set by corporate. (Price Grid Name remains editable.)
</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="CurrencySelectionType"/>
		<xs:attribute name="ExtraPersonCharge">
			<xs:annotation>
				<xs:documentation>- Applicable to all room types.               - *Forbidden on TPI PriceGrid at Hotel Level.                      - Default = 0. </xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:decimal">
					<xs:minInclusive value="0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="IsDefaultPriceGrid" type="xs:boolean" use="required">
			<xs:annotation>
				<xs:documentation> - Determines which Price Grid is considered the Default Price Grid for the hotel.                 - There can only be one price grid that is considered the default for the hotel. - Default = "No"</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsDeleteAtHotelAllowed" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>Deactivation=Deletion at Hotel Level
If set to “Yes”, the Hotel user can delete it only if there are no rate plans linked to the price grid.   - Mandatory for Hotel  activation.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsConsumedNextDay" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>Determines the point of consumption for the corresponding product: Same day (default) or Next day (true) </xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="PriceGridGroupContentType">
		<xs:annotation>
			<xs:documentation>Content of a price grid group</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="IsEnabled" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>Status of the price grid group</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PriceGrids">
				<xs:annotation>
					<xs:documentation>Ordered list of price grids</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="PriceGrid" maxOccurs="unbounded">
							<xs:complexType>
								<xs:attribute name="Code" type="PriceGridCodeType" use="required">
									<xs:annotation>
										<xs:documentation>Price Grid Code</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PriceReferenceType">
		<xs:annotation>
			<xs:documentation>Content of a Price Identifier object</xs:documentation>
		</xs:annotation>
		<xs:attribute name="Code" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>Code of the identifier object</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Type" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>Eg; "PriceGrid" or "RatePlan"</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="PriceGridGroupContentRetrieveType">
		<xs:annotation>
			<xs:documentation>Content of a price grid group</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="IsEnabled" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>Status of the price grid group</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PriceGrids">
				<xs:annotation>
					<xs:documentation>Ordered list of price grids</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="PriceGrid" maxOccurs="unbounded">
							<xs:complexType>
								<xs:attribute name="Code" type="PriceGridCodeType" use="required">
									<xs:annotation>
										<xs:documentation>Price Grid Code</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="MinimumLengthOfStay">
									<xs:annotation>
										<xs:documentation>Minimum length of stay</xs:documentation>
									</xs:annotation>
									<xs:simpleType>
										<xs:restriction base="xs:int">
											<xs:minExclusive value="0"/>
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
								<xs:attribute name="MaximumLengthOfStay">
									<xs:annotation>
										<xs:documentation>Maximum length of stay</xs:documentation>
									</xs:annotation>
									<xs:simpleType>
										<xs:restriction base="xs:int">
											<xs:minExclusive value="0"/>
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="PriceGridGroupName" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>Name of the price grid group: currently corresponds to the name of the primary price grid (first price grid in the price grid list below)</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:attributeGroup name="PriceGridGroupRetrieveScope">
		<xs:annotation>
			<xs:documentation>Scope of a price grid group for UpdateRQ, SearchRS, UpdateRS, CreateRS</xs:documentation>
		</xs:annotation>
		<xs:attributeGroup ref="PropertyOptionalGroup"/>
		<xs:attribute name="PriceGridGroupCode" type="FunctionalCode" use="required">
			<xs:annotation>
				<xs:documentation>Unique identifier generated by the system</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ProductCode" type="ProductCodeType" use="optional">
			<xs:annotation>
				<xs:documentation>A code representing the Product for this Product Category and for the Primary Price Grid. *Mandatory at Property</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="VersionNumber" type="VersionNumberType" use="required">
			<xs:annotation>
				<xs:documentation>Version Number of price grid group</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="PriceGridIdentifierOptionalGroup">
		<xs:annotation>
			<xs:documentation>Defines the price grid with the combination of the property identifier group and price grid code (Property Rate Plan Identifier Group). Brand and Property are optional, this group is used by policies which are set at chain level.</xs:documentation>
		</xs:annotation>
		<xs:attributeGroup ref="PropertyIdentifierOptionalGroup"/>
		<xs:attribute name="PriceGridCode" type="PriceGridCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Unique at Chain level that defines the price grid.
Cannot be modified on an Update PriceGrid action</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:complexType name="PriceGridRetrieveType">
		<xs:annotation>
			<xs:documentation>Determines the overall structure of the price grid</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Scope">
				<xs:complexType>
					<xs:attributeGroup ref="PriceGridIdentifierOptionalGroup"/>
					<xs:attribute name="VersionNumber" type="VersionNumberType" use="required">
						<xs:annotation>
							<xs:documentation>Version of data set and prevents Concurrent Updates. </xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Content" type="PriceGridContentType"/>
			<xs:element name="ActivationStatus">
				<xs:complexType>
					<xs:attribute name="Status" use="required">
						<xs:annotation>
							<xs:documentation>The status of the price grid, whether active, inactive (based on the creation/activation at chain or hotel level) </xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="Active"/>
								<xs:enumeration value="Inactive"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="PropertyCount" type="xs:int">
						<xs:annotation>
							<xs:documentation>Number of hotels that is active for a particular Price Grid. This field will exist only  if the search is done at the Chain level.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="ExtraData" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Applicable only for search response.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="FeaturesInUse" minOccurs="0">
							<xs:annotation>
								<xs:documentation>A list of Features used as part of this Price Grid Data.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Feature" type="xs:string" maxOccurs="unbounded"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="IsInheritingData" type="xs:boolean">
						<xs:annotation>
							<xs:appinfo>
								<altova:exampleValues>
									<altova:example value="false"/>
									<altova:example value="true"/>
								</altova:exampleValues>
							</xs:appinfo>
							<xs:documentation>"true" - Price Grid is inheriting some attributes from base Price Grid.  "false" - regular Price Grid.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PriceGridType">
		<xs:annotation>
			<xs:documentation>Determines the overall structure of the price grid</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Scope">
				<xs:complexType>
					<xs:attributeGroup ref="PriceGridIdentifierOptionalGroup"/>
					<xs:attribute name="VersionNumber" type="VersionNumberType">
						<xs:annotation>
							<xs:documentation>Version of data set and prevents Concurrent Updates. ONLY USED for UpdateRQ/RetrieveRS, NOT for CreateRQ nor SearchRS</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Content" type="PriceGridContentType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="PriceGridTypeType">
		<xs:annotation>
			<xs:documentation>Defines the type of Price Grid. Options are:     - Standalone       - Tier grouping</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ProductCategoryClassCodeType">
		<xs:annotation>
			<xs:documentation>A code representing a Product Class</xs:documentation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="MEAL"/>
					<altova:example value="SR"/>
				</altova:exampleValues>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:minLength value="2"/>
			<xs:maxLength value="8"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ProductCategoryCodeType">
		<xs:annotation>
			<xs:documentation>A code representing a Product Category</xs:documentation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="SR"/>
					<altova:example value="NR"/>
					<altova:example value="MR"/>
				</altova:exampleValues>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:minLength value="2"/>
			<xs:maxLength value="8"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ProductClassCodeType">
		<xs:annotation>
			<xs:documentation>Unique code assigned to a particular product class. Unique at the chain level</xs:documentation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="1"/>
					<altova:example value="2"/>
					<altova:example value="3"/>
					<altova:example value="4"/>
					<altova:example value="5"/>
				</altova:exampleValues>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:maxLength value="2"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ProductCodeType">
		<xs:annotation>
			<xs:documentation>A code representing a Product</xs:documentation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="SR"/>
					<altova:example value="BRK"/>
				</altova:exampleValues>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:minLength value="2"/>
			<xs:maxLength value="8"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="ProductTypeScopeType">
		<xs:annotation>
			<xs:documentation>List of products (rooms or/and services) By default applies to all rooms. In case the tax must be applied only to room(s), then the selection type for service must be "None" (vice versa)</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="RoomCodeList">
				<xs:annotation>
					<xs:documentation>List of types of rooms available based on the level at which defined</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:choice>
						<xs:element name="RoomCode" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Unique code assigned to a particular room</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="RoomCodeType"/>
							</xs:simpleType>
						</xs:element>
						<xs:element name="SelectionType" type="SelectionType">
							<xs:annotation>
								<xs:documentation>All or None - Used if not returning a specific code or list of codes</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:complexType>
			</xs:element>
			<xs:element name="ServiceCodeList">
				<xs:annotation>
					<xs:documentation>List of types of services available based on the level at which defined</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:choice>
						<xs:element name="ServiceCode" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Unique code assigned to a particular service</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="ServiceCodeType"/>
							</xs:simpleType>
						</xs:element>
						<xs:element name="SelectionType" type="SelectionType">
							<xs:annotation>
								<xs:documentation>All or None - Used if not returning a specific code or list of codes</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="ProgramType">
		<xs:annotation>
			<xs:documentation>Defines the rate plan is of which program type</xs:documentation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="GLD"/>
					<altova:example value="MMA"/>
				</altova:exampleValues>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="PromotionCodeType">
		<xs:annotation>
			<xs:documentation>Unique code that defines the promotion rule.</xs:documentation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="AAA"/>
					<altova:example value="BAR"/>
					<altova:example value="BFR"/>
					<altova:example value="IGCOR"/>
					<altova:example value="IGCOR001"/>
				</altova:exampleValues>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="8"/>
			<xs:minLength value="1"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="PromotionContentType">
		<xs:annotation>
			<xs:documentation>Promotion type</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Amount" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Discounted amount per GetDiscountedNight. </xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:choice>
						<xs:element name="AmountOff">
							<xs:annotation>
								<xs:documentation>Amount off per GetDiscountedNight </xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:minExclusive value="0"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="PercentOff">
							<xs:annotation>
								<xs:documentation>Percent off per GetDiscountedNight</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:minExclusive value="0"/>
									<xs:maxInclusive value="100"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:choice>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="NumBuyNight" use="required">
			<xs:annotation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="1"/>
					</altova:exampleValues>
				</xs:appinfo>
				<xs:documentation>Number of nights to buy in order to get the discounted night. E.g. Buy 2 get 1. (NumBuyNight = 2 NumGetDiscountedNight = 1) If 3 nights are booked, the 3rd night will be discounted.</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:int">
					<xs:minExclusive value="0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="NumGetDiscountedNight" use="required">
			<xs:annotation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="1"/>
					</altova:exampleValues>
				</xs:appinfo>
				<xs:documentation>Number of nights discounted </xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:int">
					<xs:minExclusive value="0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="MaxDiscountedNight">
			<xs:annotation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="1"/>
					</altova:exampleValues>
				</xs:appinfo>
				<xs:documentation>Maximum number of discounted nights this promotion offers. MaxDiscountedNight must be at least GetDiscountedNight or a multiple of GetDiscountedNight</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:int">
					<xs:minExclusive value="0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:attributeGroup name="PromotionIdentifierGroup">
		<xs:annotation>
			<xs:documentation>Defines the promotion with the combination of the property identifier group. Brand and Property are optional.</xs:documentation>
		</xs:annotation>
		<xs:attributeGroup ref="PropertyIdentifierOptionalGroup"/>
		<xs:attribute name="PromotionCode" type="PromotionCodeType" use="required">
			<xs:annotation>
				<xs:documentation>System generated Promotion code. Unique at a chain and at all its properties. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="PropagationRuleIdentifierGroup">
		<xs:annotation>
			<xs:documentation>Defines the propagation rule with the combination of the property identifier group and the functional code</xs:documentation>
		</xs:annotation>
		<xs:attribute name="ChainCode" type="ChainCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Chain Code</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PropagationRuleCode" type="FunctionalCode" use="required">
			<xs:annotation>
				<xs:documentation>Unique identifier of the Propagation Rule, system generated. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="VersionNumber" type="VersionTimeStampType" use="required">
			<xs:annotation>
				<xs:documentation>Version Number of the rule</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:complexType name="PropagationContentType">
		<xs:annotation>
			<xs:documentation>Propagation Content Type</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Module">
				<xs:annotation>
					<xs:documentation>Module the propagation acts on. It can be "RatePlan" or "PriceGrid" for now</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:choice>
						<xs:element name="RatePlanModule">
							<xs:annotation>
								<xs:documentation>In this Module, the user can specify if he wants to propagation to enrolled and/or non enrolled hotels, and for each case, which sub-modules he wants to propagate</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="EnrolledProperties" minOccurs="0">
										<xs:annotation>
											<xs:documentation>For the properties where the rate plan is active</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:sequence>
												<xs:element name="RatePlan" minOccurs="0">
													<xs:annotation>
														<xs:documentation>If selected, the following backend object/rules are propagated: RatePlan, AdvanceBookingRule, ViewershipRule, LOSrestriction, NoStayRestriction, StayOverRestriction, ClosedToArrival, Deposit and Blackout Setting</xs:documentation>
													</xs:annotation>
													<xs:complexType>
														<xs:attribute name="Mode" type="xs:string" use="required">
															<xs:annotation>
																<xs:documentation>"Full" or "ChangesOnly"</xs:documentation>
															</xs:annotation>
														</xs:attribute>
													</xs:complexType>
												</xs:element>
												<xs:element name="RateConfigurationRule" type="xs:string" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Propagate the rate configuration rule</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="ParticipationDate" type="xs:string" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Propagate the participation dates</xs:documentation>
													</xs:annotation>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="NonEnrolledProperties" minOccurs="0">
										<xs:annotation>
											<xs:documentation>For the properties where the rate plan is inactive</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:sequence>
												<xs:element name="RatePlan">
													<xs:annotation>
														<xs:documentation>The following backend object/rules are propagated: RatePlan, AdvanceBookingRule, ViewershipRule, LOSrestriction, NoStayRestriction, StayOverRestriction, ClosedToArrival, Deposit and Blackout Setting. This element is mandatory and the mode can have only one value: it has been added for readibiliy and consistency purposes</xs:documentation>
													</xs:annotation>
													<xs:complexType>
														<xs:attribute name="Mode" type="xs:string" use="required">
															<xs:annotation>
																<xs:documentation>Only "Full" is possible here </xs:documentation>
															</xs:annotation>
														</xs:attribute>
													</xs:complexType>
												</xs:element>
												<xs:element name="RateConfigurationRule" type="xs:string" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Propagate the rate configuration rule</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="ParticipationDate" type="xs:string" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Propagate the participation dates</xs:documentation>
													</xs:annotation>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
								<xs:attribute name="Code" type="RatePlanCodeType" use="required">
									<xs:annotation>
										<xs:documentation>Rate Plan Code</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
						<xs:element name="PriceGridModule">
							<xs:annotation>
								<xs:documentation>In this Module, the user can specify if he wants to propagation to enrolled and/or non enrolled hotels, and for each case, which sub-modules he wants to propagate. For now, there are no sub-modules, in the future there might be some such as AmountRules</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="EnrolledProperties" minOccurs="0">
										<xs:annotation>
											<xs:documentation>For the properties where the price grid is active</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:sequence>
												<xs:element name="PriceGrid" minOccurs="0">
													<xs:annotation>
														<xs:documentation>The following backend object/rules are propagated: Price Grid.</xs:documentation>
													</xs:annotation>
													<xs:complexType>
														<xs:attribute name="Mode" type="xs:string" use="required">
															<xs:annotation>
																<xs:documentation>"Full" or "ChangesOnly"</xs:documentation>
															</xs:annotation>
														</xs:attribute>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="NonEnrolledProperties" minOccurs="0">
										<xs:annotation>
											<xs:documentation>For the properties where the price grid is inactive</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:sequence>
												<xs:element name="PriceGrid">
													<xs:annotation>
														<xs:documentation>The following backend object/rules are propagated: Price Grid. This element is mandatory and the mode can have only one value: it has been added for readibiliy and consistency purposes</xs:documentation>
													</xs:annotation>
													<xs:complexType>
														<xs:attribute name="Mode" type="xs:string" use="required">
															<xs:annotation>
																<xs:documentation>Only "Full" is possible here </xs:documentation>
															</xs:annotation>
														</xs:attribute>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
								<xs:attribute name="Code" type="PriceGridCodeType" use="required">
									<xs:annotation>
										<xs:documentation>Price Grid Code</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
					</xs:choice>
				</xs:complexType>
			</xs:element>
			<xs:element name="Schedule" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Scheduling of the rule. It's possible not to schedule it. Choice between "run asap" or schedule it with a date and time</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:choice>
						<xs:element name="StartDateTime" type="xs:dateTime">
							<xs:annotation>
								<xs:documentation>Date and Time when the Propagation is scheduled</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DefaultDateTime" type="xs:string">
							<xs:annotation>
								<xs:documentation>In order to set it to the default time of the given chain</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="AsSoonAsPossible" type="xs:string">
							<xs:annotation>
								<xs:documentation>In order to create a propagation that has to be run as soon as possible.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PropagationContentRetrieveType">
		<xs:annotation>
			<xs:documentation>Propagation Content Type</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Module">
				<xs:annotation>
					<xs:documentation>Module the propagation acts on. It can be "RatePlan" or "PriceGrid" for now. </xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:choice>
						<xs:element name="RatePlanModule">
							<xs:annotation>
								<xs:documentation>In this Module, the user can specify if he wants to propagation to enrolled and/or non enrolled hotels, and for each case, which sub-modules he wants to propagate</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="EnrolledProperties" minOccurs="0">
										<xs:annotation>
											<xs:documentation>For the properties where the rate plan is active</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:sequence>
												<xs:element name="RatePlan" minOccurs="0">
													<xs:annotation>
														<xs:documentation>If selected, the following backend object/rules are propagated: RatePlan, AdvanceBookingRule, ViewershipRule, LOSrestriction, NoStayRestriction, StayOverRestriction, ClosedToArrival, Deposit</xs:documentation>
													</xs:annotation>
													<xs:complexType>
														<xs:attribute name="Mode" type="xs:string" use="required">
															<xs:annotation>
																<xs:documentation>"Full" or "ChangesOnly"</xs:documentation>
															</xs:annotation>
														</xs:attribute>
													</xs:complexType>
												</xs:element>
												<xs:element name="RateConfigurationRule" type="xs:string" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Propagate the rate configuration rule</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="ParticipationDate" type="xs:string" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Propagate the participation dates</xs:documentation>
													</xs:annotation>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="NonEnrolledProperties" minOccurs="0">
										<xs:annotation>
											<xs:documentation>For the properties where the rate plan is inactive</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:sequence>
												<xs:element name="RatePlan">
													<xs:annotation>
														<xs:documentation>The following backend object/rules are propagated: RatePlan, AdvanceBookingRule, ViewershipRule, LOSrestriction, NoStayRestriction, StayOverRestriction, ClosedToArrival, Deposit. This element is mandatory and the mode can have only one value: it has been added for readibiliy and consistency purposes</xs:documentation>
													</xs:annotation>
													<xs:complexType>
														<xs:attribute name="Mode" type="xs:string" use="required">
															<xs:annotation>
																<xs:documentation>Only "Full" is possible here </xs:documentation>
															</xs:annotation>
														</xs:attribute>
													</xs:complexType>
												</xs:element>
												<xs:element name="RateConfigurationRule" type="xs:string" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Propagate the rate configuration rule</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="ParticipationDate" type="xs:string" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Propagate the participation dates</xs:documentation>
													</xs:annotation>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
								<xs:attribute name="Code" type="RatePlanCodeType" use="required">
									<xs:annotation>
										<xs:documentation>Rate Plan Code</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
						<xs:element name="PriceGridModule">
							<xs:annotation>
								<xs:documentation>In this Module, the user can specify if he wants to propagation to enrolled and/or non enrolled hotels, and for each case, which sub-modules he wants to propagate. For now, there are no sub-modules, in the future there might be some such as AmountRules</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="EnrolledProperties" minOccurs="0">
										<xs:annotation>
											<xs:documentation>For the properties where the price grid is active</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:sequence>
												<xs:element name="PriceGrid" minOccurs="0">
													<xs:annotation>
														<xs:documentation>The following backend object/rules are propagated: Price Grid.</xs:documentation>
													</xs:annotation>
													<xs:complexType>
														<xs:attribute name="Mode" type="xs:string" use="required">
															<xs:annotation>
																<xs:documentation>"Full" or "ChangesOnly"</xs:documentation>
															</xs:annotation>
														</xs:attribute>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="NonEnrolledProperties" minOccurs="0">
										<xs:annotation>
											<xs:documentation>For the properties where the price grid is inactive</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:sequence>
												<xs:element name="PriceGrid">
													<xs:annotation>
														<xs:documentation>The following backend object/rules are propagated: Price Grid. This element is mandatory and the mode can have only one value: it has been added for readibiliy and consistency purposes</xs:documentation>
													</xs:annotation>
													<xs:complexType>
														<xs:attribute name="Mode" type="xs:string" use="required">
															<xs:annotation>
																<xs:documentation>Only "Full" is possible here </xs:documentation>
															</xs:annotation>
														</xs:attribute>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
								<xs:attribute name="Code" type="PriceGridCodeType" use="required">
									<xs:annotation>
										<xs:documentation>Price Grid Code</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
					</xs:choice>
				</xs:complexType>
			</xs:element>
			<xs:element name="Schedule" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Scheduling of the propagation rule. If the user created a propagation rule to be scheduled "AsSoonAsPossible", the searchRS outputs the dateTime corresponding to the moment the rule was created.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:choice>
						<xs:element name="StartDateTime" type="xs:dateTime">
							<xs:annotation>
								<xs:documentation>Date and Time when the Propagation is scheduled</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DefaultDateTime" type="xs:string">
							<xs:annotation>
								<xs:documentation>In order to set it to the default time of the given chain</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PropagationContentRetrieveResultType">
		<xs:annotation>
			<xs:documentation>Propagation Content Type</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PropagationResult" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Results of the propagation. RETURN ONLY IN FULL SEARCH MODE</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:choice>
						<xs:element name="SucceededPropertyList">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Property" maxOccurs="unbounded">
										<xs:complexType>
											<xs:attribute name="BrandCode" type="BrandCodeType">
												<xs:annotation>
													<xs:documentation>Brand code of the Property Code</xs:documentation>
												</xs:annotation>
											</xs:attribute>
											<xs:attribute name="PropertyCode" type="PropertyCodeType">
												<xs:annotation>
													<xs:documentation>Property Code</xs:documentation>
												</xs:annotation>
											</xs:attribute>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="FailedPropertyList">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Property" maxOccurs="unbounded">
										<xs:complexType>
											<xs:sequence>
												<xs:element name="Error">
													<xs:complexType>
														<xs:attribute name="Code" type="xs:string">
															<xs:annotation>
																<xs:documentation>Error Code</xs:documentation>
															</xs:annotation>
														</xs:attribute>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
											<xs:attribute name="BrandCode" type="BrandCodeType">
												<xs:annotation>
													<xs:documentation>Brand code of the Property Code</xs:documentation>
												</xs:annotation>
											</xs:attribute>
											<xs:attribute name="PropertyCode" type="PropertyCodeType">
												<xs:annotation>
													<xs:documentation>Property Code</xs:documentation>
												</xs:annotation>
											</xs:attribute>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:choice>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PropagationScopeType">
		<xs:annotation>
			<xs:documentation>The brands and the regions to which the propagation rule applies</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="BrandRegions" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The combination of brands and regions. Brand cannot be defined without a region and vice and versa</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Region" type="RegionScopePluralType">
							<xs:annotation>
								<xs:documentation>Geographical Region codes</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Brand" type="BrandScopePluralType">
							<xs:annotation>
								<xs:documentation>Brand codes</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Countries" minOccurs="0">
				<xs:annotation>
					<xs:documentation>NOT IMPLEMENTED YET. Included and excluded list of countries. </xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Country" maxOccurs="unbounded">
							<xs:complexType>
								<xs:attribute name="IsIncluded" type="xs:boolean" use="required">
									<xs:annotation>
										<xs:documentation>Indicates if country is included or not</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="Code" type="CountryCodeType" use="required">
									<xs:annotation>
										<xs:documentation>Country code</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Properties" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows you to include or exclude a property or a list of properties</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Property" type="PropertyScopePluralType" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="ChainCode" type="ChainCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Chain code</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="PropagationScopeRetrieveType">
		<xs:annotation>
			<xs:documentation>The brands and the regions to which the propagation rule applies. For update and retrieve</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="BrandRegions" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The combination of brands and regions. Brand cannot be defined without a region and vice and versa</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Region" type="RegionScopePluralType">
							<xs:annotation>
								<xs:documentation>Geographical Region codes</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Brand" type="BrandScopePluralType">
							<xs:annotation>
								<xs:documentation>Brand codes</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Countries" minOccurs="0">
				<xs:annotation>
					<xs:documentation>NOT IMPLEMENTED YET. Included and excluded list of countries. </xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Country" maxOccurs="unbounded">
							<xs:complexType>
								<xs:attribute name="IsIncluded" type="xs:boolean" use="required">
									<xs:annotation>
										<xs:documentation>Indicates if country is included or not</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="Code" type="CountryCodeType" use="required">
									<xs:annotation>
										<xs:documentation>Country code</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Properties" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows you to include or exclude a property or a list of properties</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Property" type="PropertyScopePluralType" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attributeGroup ref="PropagationRuleIdentifierGroup"/>
	</xs:complexType>
	<xs:simpleType name="PropertyCodeType">
		<xs:annotation>
			<xs:documentation>Unique code assigned to a particular property. Unique at brand level</xs:documentation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="HOLIATL"/>
					<altova:example value="CPATL"/>
				</altova:exampleValues>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:maxLength value="8"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:attributeGroup name="PropertyGroup">
		<xs:annotation>
			<xs:documentation>Defines the chain and property code identifiers for a specific property</xs:documentation>
		</xs:annotation>
		<xs:attribute name="ChainCode" type="ChainCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Unique Code of a chain/corporation</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PropertyCode" type="PropertyCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Unique code assigned to a particular property</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="PropertyIdentifierGroup">
		<xs:annotation>
			<xs:documentation>Defines the chain, brand and property code identifiers for a specific property</xs:documentation>
		</xs:annotation>
		<xs:attribute name="ChainCode" type="ChainCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Unique Code of a chain/corporation</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BrandCode" type="BrandCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Unique code assigned to a particular brand. Unique at the chain level</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PropertyCode" type="PropertyCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Unique code assigned to a particular property. Unique at brand level</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="PropertyIdentifierOptionalGroup">
		<xs:annotation>
			<xs:documentation>Defines the chain, brand and property code identifiers for a specific property.  Brand and Property are optional, this group is used by policies which can be set at chain level</xs:documentation>
		</xs:annotation>
		<xs:attribute name="ChainCode" type="ChainCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Unique Code of a chain/corporation</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BrandCode" type="BrandCodeType" use="optional">
			<xs:annotation>
				<xs:documentation>Unique code assigned to a particular brand. Unique at the chain level.
When creating / updating / retrieving / deleting a policy at hotel level, then the brand code is mandatory.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PropertyCode" type="PropertyCodeType" use="optional">
			<xs:annotation>
				<xs:documentation>Unique code assigned to a particular hotel.  Unique at brand level
When creating / updating / retrieving / deleting a policy at hotel level, then the property code is mandatory.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="PropertyOptionalGroup">
		<xs:annotation>
			<xs:documentation>Defines the chain and property code identifiers for a specific property</xs:documentation>
		</xs:annotation>
		<xs:attribute name="ChainCode" type="ChainCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Unique Code of a chain/corporation</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PropertyCode" type="PropertyCodeType" use="optional">
			<xs:annotation>
				<xs:documentation>Unique code assigned to a particular property</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:complexType name="PropertyListScopeType">
		<xs:annotation>
			<xs:documentation>The list of properties</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Property" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="PropertyCodeList">
							<xs:annotation>
								<xs:documentation>List of properties</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Code" type="PropertyCodeType" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>Unique code assigned to a particular property. Unique at brand level</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="IsIncluded" type="xs:boolean" use="required">
						<xs:annotation>
							<xs:documentation>Included by default </xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="BrandCode" type="BrandCodeType" use="required">
						<xs:annotation>
							<xs:documentation>Property belonging to the brand</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:attributeGroup name="PropertyPriceGridIdentifierGroup">
		<xs:annotation>
			<xs:documentation>Defines the Price Grid with the combination of the property identifier group and price grid code (Property Price Grid Identifier Group)</xs:documentation>
		</xs:annotation>
		<xs:attributeGroup ref="PropertyIdentifierGroup"/>
		<xs:attribute name="PriceGridCode" type="PriceGridCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Unique code that defines the price grid</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="PropertyRatePlanIdentifierGroup">
		<xs:annotation>
			<xs:documentation>Defines the Rate Plan with the combination of the property identifier group and rate plan code (Property Rate Plan Identifier Group)</xs:documentation>
		</xs:annotation>
		<xs:attributeGroup ref="PropertyIdentifierGroup"/>
		<xs:attribute name="RatePlanCode" type="RatePlanCodeType" use="optional">
			<xs:annotation>
				<xs:documentation>Unique code that defines the rate plan.  If the house policy is defined in the rate plan, this exists</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="PropertyRatePlanIdentifierOptionalGroup">
		<xs:annotation>
			<xs:documentation>Defines the Rate Plan with the combination of the property identifier group and rate plan code (Property Rate Plan Identifier Group). Brand and Property are optional, this group is used by policies which can be set at chain level</xs:documentation>
		</xs:annotation>
		<xs:attributeGroup ref="PropertyIdentifierOptionalGroup"/>
		<xs:attribute name="RatePlanCode" type="RatePlanCodeType" use="optional">
			<xs:annotation>
				<xs:documentation>Unique code that defines the rate plan.  If the house policy is defined in the rate plan, this exists</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:complexType name="PropertiesScopeType">
		<xs:annotation>
			<xs:documentation>The list of properties</xs:documentation>
		</xs:annotation>
		<xs:attribute name="IsIncluded" type="xs:boolean" use="required">
			<xs:annotation>
				<xs:documentation>Included by default </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Code" type="PropertyCodeType" use="required"/>
	</xs:complexType>
	<xs:complexType name="PropertyScopeType">
		<xs:annotation>
			<xs:documentation>Contains the property details</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="PropertyCodeList">
				<xs:annotation>
					<xs:documentation>List of properties</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="PropertyCode" type="PropertyCodeType" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Unique code assigned to a particular property. Unique at brand level</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="All" type="xs:string">
				<xs:annotation>
					<xs:documentation>All properties (legacy requirement for DHM: in case tax applies to all properties, "all" is returned instead of the list of property codes)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="PropertyScopePluralType">
		<xs:annotation>
			<xs:documentation>The list of properties that are excluded or excluded using plural instead of list</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PropertyCodes">
				<xs:annotation>
					<xs:documentation>List of property codes</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Code" type="PropertyCodeType" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Unique code assigned to a particular property. Unique at brand level</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="IsIncluded" type="xs:boolean" use="required">
			<xs:annotation>
				<xs:documentation>Indicates if the property is included or not</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BrandCode" type="BrandCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Brand to which the property belongs to</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="QualifiedRateType">
		<xs:annotation>
			<xs:documentation>If one or more attributes are true, then the rate plan is considered a Qualified Rate.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="IsLoyaltyNumberRequired" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>Yes = Customer needs to give a Loyalty number in order to see availability and book this rate plan.     - Default = "No"</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsID_RequiredAtCheckIn" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>Yes = Customer needs to present a valid ID at check-in in order to access this rate plan.                     - Default = "No</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCouponRequired" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>Yes = Customer needs to present a coupon or voucher at check-in in order to access this rate plan.                       - Default = "No</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="QualifiedDiscountRateBrandScopeType">
		<xs:annotation>
			<xs:documentation>Contains the brand details</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="BrandCodes">
				<xs:annotation>
					<xs:documentation>List of brands. Currently supports only 1 brand</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Code" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Unique code assigned to a particular brand. Unique at the chain level</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="BrandCodeType">
									<xs:minLength value="2"/>
									<xs:maxLength value="3"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="All">
				<xs:annotation>
					<xs:documentation>All brands</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string"/>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="QualifiedDiscountRateRegionScopeType">
		<xs:annotation>
			<xs:documentation>The selection of the list of regions or all regions</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="RegionCodes">
				<xs:annotation>
					<xs:documentation>List of regions</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Code" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Unique code assigned to a particular region</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="RegionCodeType">
									<xs:minLength value="1"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="All" type="xs:string">
				<xs:annotation>
					<xs:documentation>All regions</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="QualifiedDiscountRateScopeType">
		<xs:annotation>
			<xs:documentation>Scope of a Qualified Discount Rate</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="BrandsScope" type="QualifiedDiscountRateBrandScopeType" minOccurs="0"/>
			<xs:element name="RegionsScope" type="QualifiedDiscountRateRegionScopeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If region list not specified, it means it is applicable to none of the regions</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PropertiesScopes" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows you to include or exclude a property or a list of properties</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="PropertiesScope" type="PropertiesScopeType" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="QualifiedDiscountRateChildRatePlanCodePerPeriodType">
		<xs:sequence>
			<xs:element name="Period" type="DOWPeriodType"/>
			<xs:element name="ChildRatePlanCode" type="RatePlanCodeType" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:attributeGroup name="QualifiedDiscountRateIdentifierGroup">
		<xs:annotation>
			<xs:documentation>Defines the attributes required to create/set particular Qualified Discount Rate</xs:documentation>
		</xs:annotation>
		<xs:attribute name="ChainCode" type="ChainCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Unique Code of a chain/corporation</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Code" use="required">
			<xs:annotation>
				<xs:documentation>Unique Code of a Qualified Discount Rate</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:minLength value="1"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="Name" use="required">
			<xs:annotation>
				<xs:documentation>Unique name of a Qualified Discount Rate</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:minLength value="1"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="VersionNumber" type="VersionTimeStampType" use="required">
			<xs:annotation>
				<xs:documentation>Version of data set and prevents Concurrent Updates.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="QualifiedDiscountRateIdentifierGroupM">
		<xs:annotation>
			<xs:documentation>Defines the attribute level details of particular Qualified Discount Rate</xs:documentation>
		</xs:annotation>
		<xs:attribute name="ChainCode" type="ChainCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Unique Code of a chain/corporation</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Code" use="required">
			<xs:annotation>
				<xs:documentation>Unique Code of a Qualified Discount Rate</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:minLength value="1"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="Name" use="required">
			<xs:annotation>
				<xs:documentation>Unique name of a Qualified Discount Rate</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:minLength value="1"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="ParentRatePlanCode" type="RatePlanCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Unique Rate Plan code that defines the Rate Plan at the corporate and hotel level.  This field must = 5 characters when created at the corporate level and can be 5 - 8 characters when created (activated) at the hotel level.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="VersionNumber" type="VersionTimeStampType" use="required">
			<xs:annotation>
				<xs:documentation>Version of data set and prevents Concurrent Updates.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="QualifiedDiscountRateSortingGroup">
		<xs:annotation>
			<xs:documentation>Defines the criteria to sort ParentRatePlanCode, Period and ChildRatePlanCode while displaying search results for Qualified Discount Rates</xs:documentation>
			<xs:documentation>Sort the data in Ascending / Descending order</xs:documentation>
			<xs:documentation/>
		</xs:annotation>
		<xs:attribute name="ParentRatePlanCodeSortType" use="optional">
			<xs:annotation>
				<xs:documentation>Parent Rate Plan Code data will be sorted in ascending or descending order</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="Ascending"/>
						<altova:example value="Descending"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string"/>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="PeriodSortType" use="optional">
			<xs:annotation>
				<xs:documentation>Period will be sorted based on timestamp in ascending or descending order</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="Ascending"/>
						<altova:example value="Descending"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string"/>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="ChildRatePlanCodeSortType" use="optional">
			<xs:annotation>
				<xs:documentation>Child Rate Plan Code data will be sorted in ascending or descending order</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="Ascending"/>
						<altova:example value="Descending"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string"/>
			</xs:simpleType>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:complexType name="RateConfigRuleReferenceType">
		<xs:annotation>
			<xs:documentation>Determines the reference structure of the rate configuration rule.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice>
				<xs:element name="AmountAddOff">
					<xs:complexType>
						<xs:attribute name="Type" use="required">
							<xs:annotation>
								<xs:documentation>Either Add or Off which should be consistent with the PricingType.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:enumeration value="Add"/>
									<xs:enumeration value="Off"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
						<xs:attribute name="MinimumValue" use="required">
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:minInclusive value="0"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
						<xs:attribute name="MaximumValue">
							<xs:annotation>
								<xs:documentation>Optional when RateMatch is false; Not applicable when RateMatch is true.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:minInclusive value="0"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
					</xs:complexType>
				</xs:element>
				<xs:element name="PercentAddOff">
					<xs:complexType>
						<xs:attribute name="Type" use="required">
							<xs:annotation>
								<xs:documentation>Either Add or Off which should be consistent with the PricingType.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:enumeration value="Add"/>
									<xs:enumeration value="Off"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
						<xs:attribute name="MinimumValue" use="required">
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:minInclusive value="0"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
						<xs:attribute name="MaximumValue">
							<xs:annotation>
								<xs:documentation>Optional when RateMatch is false; Not applicable when RateMatch is true.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:minInclusive value="0"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
					</xs:complexType>
				</xs:element>
			</xs:choice>
			<xs:choice>
				<xs:element name="ReferencePriceGridCode" type="PriceGridCodeType">
					<xs:annotation>
						<xs:documentation>The reference (or base) price grid on the price when the PricingType is not flat type.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="ReferenceRatePlanCode" type="RatePlanCodeType">
					<xs:annotation>
						<xs:documentation>The reference (or base) rate plan on the price when the PricingType is not flat type. The price grid associated to the rate plan is taken as the reference.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RateConfigRuleScopeType">
		<xs:annotation>
			<xs:documentation>Determines the scope structure of the rate configuration rule.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="LengthOfStay" minOccurs="0">
				<xs:annotation>
					<xs:documentation>TierGrouping element defines the minimum and maximum number of nights covered in this tier group. Mandatory when IsTierAllowed is true; Not applicable when IsTierAllowed is false.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="MinimumNumberOfNights" use="required">
						<xs:annotation>
							<xs:documentation>Minimum number of nights in this Tier Group.</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:int">
								<xs:minExclusive value="0"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="MaximumNumberOfNights">
						<xs:annotation>
							<xs:documentation>Maximum number of nights in this Tier Group. If this attribute is undefined, the system updates to infinity.</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:int">
								<xs:minExclusive value="0"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Period">
				<xs:complexType>
					<xs:attributeGroup ref="PeriodOptionalEndGroup"/>
					<xs:attributeGroup ref="DOW_PatternMandatoryGroup"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FailedRateCfgRulesType">
		<xs:annotation>
			<xs:documentation>Determines the scope structure of the rate configuration rule.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="FailedRateCfgRule" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Scope" type="RateConfigRuleScopeType">
							<xs:annotation>
								<xs:documentation>Scope defines the scope of a rate configuration rule - a Period and optionally the Tier Grouping</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Products" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Failed product list</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Product" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>The product that fails to process</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:attribute name="Type" use="required">
												<xs:annotation>
													<xs:appinfo>
														<altova:exampleValues>
															<altova:example value="RoomType"/>
														</altova:exampleValues>
													</xs:appinfo>
													<xs:documentation>The type of the product. Currently supports only RoomType</xs:documentation>
												</xs:annotation>
												<xs:simpleType>
													<xs:restriction base="xs:string"/>
												</xs:simpleType>
											</xs:attribute>
											<xs:attribute name="Code" use="required">
												<xs:annotation>
													<xs:documentation>Product Code</xs:documentation>
												</xs:annotation>
												<xs:simpleType>
													<xs:restriction base="xs:string">
														<xs:minLength value="1"/>
														<xs:maxLength value="4"/>
													</xs:restriction>
												</xs:simpleType>
											</xs:attribute>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="ErrorCode" type="StringLength1to64">
							<xs:annotation>
								<xs:documentation>Corresponds to Code in the Errors element</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:attributeGroup name="RateConfigRulesScopeType">
		<xs:annotation>
			<xs:documentation>Determines the scope structure of the rate configuration rules which apply on one rate plan.</xs:documentation>
		</xs:annotation>
		<xs:attributeGroup ref="PropertyOptionalGroup"/>
		<xs:attribute name="RatePlanCode" use="required">
			<xs:annotation>
				<xs:documentation>Unique code that defines the Rate Plan at the corporate and hotel level. Rate Configuration Rule is associated to a Rate Plan.</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="RatePlanCodeType">
					<xs:minLength value="5"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="VersionNumber" type="VersionNumberType" use="optional">
			<xs:annotation>
				<xs:documentation>RateConfigurationRules Version Number which is used to  prevent concurrent updates. Verion Number upon the successful SET request.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:complexType name="RateConfigRuleSearchContentType">
		<xs:annotation>
			<xs:documentation>Determines the scope structure of the rate configuration rule.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Reference" type="RateConfigRuleReferenceType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Not applicable when PricingType is FlatRate.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rooms" minOccurs="0">
				<xs:annotation>
					<xs:documentation>It defines the list of roomson the rate property. </xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Room" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>It defines the single room</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:attribute name="Type" use="required">
									<xs:annotation>
										<xs:documentation>Product Type of the Room. Currently only supports RoomType.</xs:documentation>
										<xs:appinfo>
											<altova:exampleValues>
												<altova:example value="RoomType"/>
											</altova:exampleValues>
										</xs:appinfo>
									</xs:annotation>
									<xs:simpleType>
										<xs:restriction base="xs:string"/>
									</xs:simpleType>
								</xs:attribute>
								<xs:attribute name="Code" use="required">
									<xs:annotation>
										<xs:documentation>Product Code of the Room. </xs:documentation>
										<xs:appinfo>
											<altova:exampleValues>
												<altova:example value="RT01"/>
											</altova:exampleValues>
										</xs:appinfo>
									</xs:annotation>
									<xs:simpleType>
										<xs:restriction base="xs:string">
											<xs:minLength value="1"/>
											<xs:maxLength value="4"/>
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
								<xs:attribute name="Amount">
									<xs:annotation>
										<xs:documentation>Amount of the product. Mandatory for flat type. Not applicable when PricingType is non flat.</xs:documentation>
									</xs:annotation>
									<xs:simpleType>
										<xs:restriction base="xs:decimal">
											<xs:minExclusive value="0"/>
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="PricingType" use="required">
			<xs:annotation>
				<xs:documentation>PricingType defines the pricing type of the rate configuration rule. </xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="FlatRate"/>
						<altova:example value="PercentAdd"/>
						<altova:example value="PercentOff"/>
						<altova:example value="AmountAdd"/>
						<altova:example value="AmountOff"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string"/>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="IsRateMatch" type="xs:boolean" use="required">
			<xs:annotation>
				<xs:documentation>IsRateMatch defines whether Rate Match applies. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCommissionable" type="xs:boolean" use="required">
			<xs:annotation>
				<xs:documentation>IsCommissionable defines whether the rate configuration rule will apply restriction to this setting on the Rate Plan. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="HasExtraPersonCharge" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>HasExtraPersonCharge defines whether the rate configuration rule will apply restriction to this setting on the Rate Plan. If this value is undefined, it means no restriction.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ExtraPersonCharge">
			<xs:annotation>
				<xs:documentation>ExtraPersonCharge defines whether the rate configuration rule will will apply restriction to this setting on the Price Grid. If this value is undefined, it means no restriction.</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:decimal">
					<xs:minInclusive value="0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="TaxInclusion">
			<xs:annotation>
				<xs:documentation>TaxInclusion defines whether the rate configuration rule will apply restriction to this setting on the Price Grid. If this value is undefined, it means no restriction.</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="IncludedInRate"/>
						<altova:example value="ExcludedFromRate"/>
						<altova:example value="House"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string"/>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="YieldManagementType">
			<xs:annotation>
				<xs:documentation>YieldManagementType defines whether the rate configuration rule will apply restriction to this setting on the Price Grid. If this value is undefined, it means no restriction.</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="AdjustmentValue"/>
						<altova:example value="BestFlexibleRate"/>
						<altova:example value="OwnValue"/>
						<altova:example value="OverrideRestrictions"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string"/>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="LastModifiedDate" type="StartDateType">
			<xs:annotation>
				<xs:documentation>The last date this RateConfigurationRule was modified. *Note: only for version 2.701 or later</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="RateConfigRuleSearchScopeType">
		<xs:annotation>
			<xs:documentation>Determines the scope structure of the rate configuration rule.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="LengthOfStay" minOccurs="0">
				<xs:annotation>
					<xs:documentation>TierGrouping element defines the minimum and maximum number of nights covered in this tier group. Mandatory when IsTierAllowed is true; Not applicable when IsTierAllowed is false.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="MinimumNumberOfNights" use="required">
						<xs:annotation>
							<xs:documentation>Minimum number of nights in this Tier Group.</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:int">
								<xs:minExclusive value="0"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="MaximumNumberOfNights">
						<xs:annotation>
							<xs:documentation>Maximum number of nights in this Tier Group. If this attribute is undefined, the system updates to infinity.</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:int">
								<xs:minExclusive value="0"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Period">
				<xs:complexType>
					<xs:attributeGroup ref="PeriodOptionalEndGroup"/>
					<xs:attributeGroup ref="DOW_PatternMandatoryGroup"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="RateConfigurationRuleCode" type="RateConfigurationRuleType" use="required">
			<xs:annotation>
				<xs:documentation>System generated Rate Configuration Rule code. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="RateConfigRuleSearchType">
		<xs:annotation>
			<xs:documentation>Determines the scope structure of the rate configuration rule.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Scope" type="RateConfigRuleSearchScopeType">
				<xs:annotation>
					<xs:documentation>Scope defines the scope of a rate property - a Period and optionally the Tier Grouping</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Content" type="RateConfigRuleSearchContentType">
				<xs:annotation>
					<xs:documentation>Content defines the rate property content.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="RateConfigurationRuleType">
		<xs:annotation>
			<xs:documentation>Unique code that defines the rate configuration rule.</xs:documentation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="AAA"/>
					<altova:example value="BAR"/>
					<altova:example value="BFR"/>
					<altova:example value="IGCOR"/>
					<altova:example value="IGCOR001"/>
				</altova:exampleValues>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="8"/>
			<xs:minLength value="1"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:attributeGroup name="RateInheritanceRuleIdentifierGroup">
		<xs:annotation>
			<xs:documentation>Defines the Inheritance rule with the combination of the property identifier group and the functional code</xs:documentation>
		</xs:annotation>
		<xs:attribute name="ChainCode" type="ChainCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Chain Code</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RateInheritanceRuleCode" type="AdvanceBookingRestrictionCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Unique identifier of the Rate Inheritance Rule system generated. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="VersionNumber" type="VersionTimeStampType" use="required">
			<xs:annotation>
				<xs:documentation>Version Number of the rule</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="RateInheritanceRuleIdentifierOptionalGroup">
		<xs:annotation>
			<xs:documentation>Defines the Inheritance rule with the combination of the property identifier group and the functional code</xs:documentation>
		</xs:annotation>
		<xs:attribute name="ChainCode" type="ChainCodeType" use="required"/>
		<xs:attribute name="RateInheritanceRuleCode" type="AdvanceBookingRestrictionCodeType" use="optional">
			<xs:annotation>
				<xs:documentation>Unique identifier of the Inheritance Rule system generated.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:complexType name="RateInheritanceRulePropertyScopeType">
		<xs:annotation>
			<xs:documentation>The list of properties that are excluded or excluded from the TPI table</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PropertyCodeList">
				<xs:annotation>
					<xs:documentation>List of properties</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Code" type="PropertyCodeType" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Unique code assigned to a particular property. Unique at brand level</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="IsIncluded" type="xs:boolean" use="required">
			<xs:annotation>
				<xs:documentation>Included by default </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BrandCode" type="BrandCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Brand to which the property belongs to</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="RateInheritanceRuleContentType">
		<xs:annotation>
			<xs:documentation>The functional content of a rate inheritance rule</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="BaseRatePlanList">
				<xs:annotation>
					<xs:documentation>List of Rate Plans from which the Rate Plan defined in the scope inherits from</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="RatePlan" maxOccurs="unbounded">
							<xs:complexType>
								<xs:attribute name="Code" type="RatePlanCodeType" use="required">
									<xs:annotation>
										<xs:documentation>Rate Plan code</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="PercentAddOff" minOccurs="0">
				<xs:annotation>
					<xs:documentation>PercentAdd or Off that applies between the Main Rate Plan and the base Rate Plan</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Mon">
							<xs:complexType>
								<xs:choice>
									<xs:element name="Add">
										<xs:simpleType>
											<xs:restriction base="xs:decimal">
												<xs:minInclusive value="0"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="Off">
										<xs:simpleType>
											<xs:restriction base="xs:decimal">
												<xs:minInclusive value="0"/>
												<xs:maxExclusive value="100"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
								</xs:choice>
							</xs:complexType>
						</xs:element>
						<xs:element name="Tue">
							<xs:complexType>
								<xs:choice>
									<xs:element name="Add">
										<xs:simpleType>
											<xs:restriction base="xs:decimal">
												<xs:minInclusive value="0"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="Off">
										<xs:simpleType>
											<xs:restriction base="xs:decimal">
												<xs:minInclusive value="0"/>
												<xs:maxExclusive value="100"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
								</xs:choice>
							</xs:complexType>
						</xs:element>
						<xs:element name="Weds">
							<xs:complexType>
								<xs:choice>
									<xs:element name="Add">
										<xs:simpleType>
											<xs:restriction base="xs:decimal">
												<xs:minInclusive value="0"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="Off">
										<xs:simpleType>
											<xs:restriction base="xs:decimal">
												<xs:minInclusive value="0"/>
												<xs:maxExclusive value="100"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
								</xs:choice>
							</xs:complexType>
						</xs:element>
						<xs:element name="Thur">
							<xs:complexType>
								<xs:choice>
									<xs:element name="Add">
										<xs:simpleType>
											<xs:restriction base="xs:decimal">
												<xs:minInclusive value="0"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="Off">
										<xs:simpleType>
											<xs:restriction base="xs:decimal">
												<xs:minInclusive value="0"/>
												<xs:maxExclusive value="100"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
								</xs:choice>
							</xs:complexType>
						</xs:element>
						<xs:element name="Fri">
							<xs:complexType>
								<xs:choice>
									<xs:element name="Add">
										<xs:simpleType>
											<xs:restriction base="xs:decimal">
												<xs:minInclusive value="0"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="Off">
										<xs:simpleType>
											<xs:restriction base="xs:decimal">
												<xs:minInclusive value="0"/>
												<xs:maxExclusive value="100"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
								</xs:choice>
							</xs:complexType>
						</xs:element>
						<xs:element name="Sat">
							<xs:complexType>
								<xs:choice>
									<xs:element name="Add">
										<xs:simpleType>
											<xs:restriction base="xs:decimal">
												<xs:minInclusive value="0"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="Off">
										<xs:simpleType>
											<xs:restriction base="xs:decimal">
												<xs:minInclusive value="0"/>
												<xs:maxExclusive value="100"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
								</xs:choice>
							</xs:complexType>
						</xs:element>
						<xs:element name="Sun">
							<xs:complexType>
								<xs:choice>
									<xs:element name="Add">
										<xs:simpleType>
											<xs:restriction base="xs:decimal">
												<xs:minInclusive value="0"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="Off">
										<xs:simpleType>
											<xs:restriction base="xs:decimal">
												<xs:minInclusive value="0"/>
												<xs:maxExclusive value="100"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
								</xs:choice>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RateInheritanceRuleScopeType">
		<xs:annotation>
			<xs:documentation>The brands and the regions to which the inheritance rule applies</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="BrandRegion" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The combination of brands and regions of the inheritance rule. Brand cannot be defined without a region and vice and versa</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Region" type="RegionScopeType">
							<xs:annotation>
								<xs:documentation>Geographical Region codes</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Brand" type="BrandScopeCodeType">
							<xs:annotation>
								<xs:documentation>Brand codes</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="PropertyList" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows you to include or exclude a property or a list of properties</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Property" type="RateInheritanceRulePropertyScopeType" maxOccurs="unbounded"/>
					</xs:sequence>
					<xs:attribute name="HotelGroupName">
						<xs:annotation>
							<xs:documentation>Free Flow text. Name of the group of hotels. Mandatory for the "included hotels", optional for the "excluded hotels"</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:minLength value="1"/>
								<xs:maxLength value="30"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="ChainCode" type="ChainCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Chain code of the hotel chain where the data is managed</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DerivedRatePlanCode" type="RatePlanCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Rate Plan Code</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="RateInheritanceRuleScopeRetrieveType">
		<xs:annotation>
			<xs:documentation>The brands and the regions to which the inheritance rule applies</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="BrandRegion" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The combination of brands and regions of the inheritance rule. Brand cannot be defined without a region and vice and versa</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Region" type="RegionScopeType">
							<xs:annotation>
								<xs:documentation>Geographical Region codes</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Brand" type="BrandScopeCodeType">
							<xs:annotation>
								<xs:documentation>Brand codes</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="PropertyList" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows you to include or exclude a property or a list of properties</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Property" type="RateInheritanceRulePropertyScopeType" maxOccurs="unbounded"/>
					</xs:sequence>
					<xs:attribute name="HotelGroupName">
						<xs:annotation>
							<xs:documentation>Free Flow text. Name of the group of hotels. Mandatory for the "included hotels", optional for the "excluded hotels"</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:minLength value="1"/>
								<xs:maxLength value="30"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attributeGroup ref="RateInheritanceRuleIdentifierGroup"/>
		<xs:attribute name="DerivedRatePlanCode" type="RatePlanCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Rate Plan Code</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="RateParityGroupType">
		<xs:annotation>
			<xs:documentation>Determines the overall structure of the Rate Parity Group</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Scope">
				<xs:complexType>
					<xs:attributeGroup ref="PropertyIdentifierOptionalGroup">
						<xs:annotation>
							<xs:documentation>Defines the scope where the parity group is defined. They can be defined at Chain level or chain/brand/property levell</xs:documentation>
						</xs:annotation>
					</xs:attributeGroup>
				</xs:complexType>
			</xs:element>
			<xs:element name="Content">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="RatePlanAdjustmentList">
							<xs:annotation>
								<xs:documentation>Rate Plan Code and corresponding adjustment value</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="RatePlanAdjustment" minOccurs="2" maxOccurs="unbounded">
										<xs:complexType>
											<xs:attribute name="RatePlanCode" type="RatePlanCodeType" use="required">
												<xs:annotation>
													<xs:documentation>Rate Plan code</xs:documentation>
												</xs:annotation>
											</xs:attribute>
											<xs:attribute name="AdjustmentValue" type="xs:decimal" use="required">
												<xs:annotation>
													<xs:documentation>Adjustment value of the rate plan. Positive or negative decimal.</xs:documentation>
												</xs:annotation>
											</xs:attribute>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="Name" use="required">
						<xs:annotation>
							<xs:documentation>Parity Group Name</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:minLength value="1"/>
								<xs:maxLength value="30"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RateParityGroupRetrieveType">
		<xs:annotation>
			<xs:documentation>Determines the overall structure of the Rate Parity Group</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Scope">
				<xs:complexType>
					<xs:attributeGroup ref="RateParityGroupIdentifierGroup"/>
					<xs:attribute name="VersionNumber" type="VersionTimeStampType" use="required">
						<xs:annotation>
							<xs:documentation>Version of the object</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Content">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="RatePlanAdjustmentList">
							<xs:annotation>
								<xs:documentation>Rate plan code and corresponding adjustment value</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="RatePlanAdjustment" minOccurs="2" maxOccurs="unbounded">
										<xs:complexType>
											<xs:attribute name="RatePlanCode" type="RatePlanCodeType" use="required">
												<xs:annotation>
													<xs:documentation>Rate Plan code</xs:documentation>
												</xs:annotation>
											</xs:attribute>
											<xs:attribute name="AdjustmentValue" type="xs:decimal" use="required">
												<xs:annotation>
													<xs:documentation>Adjustment value of the rate plan. Positive or negative decimal.</xs:documentation>
												</xs:annotation>
											</xs:attribute>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="Name" use="required">
						<xs:annotation>
							<xs:documentation>Parity Group Name</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:minLength value="1"/>
								<xs:maxLength value="30"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:attributeGroup name="RatePlanPriceGridIdentifierOptionalGroup">
		<xs:annotation>
			<xs:documentation>Scope with the Price Grid and Rate Plan</xs:documentation>
		</xs:annotation>
		<xs:attribute name="ChainCode" type="ChainCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Unique Code of a chain/corporation</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BrandCode" type="BrandCodeType" use="optional">
			<xs:annotation>
				<xs:documentation>Unique code assigned to a particular brand. Unique at the chain level.
Mandatory for Property (Hotel) level restrictions.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PropertyCode" type="PropertyCodeType" use="optional">
			<xs:annotation>
				<xs:documentation>Unique code assigned to a particular hotel.  Unique at brand level
Mandatory for Property (Hotel) level restrictions.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RatePlanCode" use="optional">
			<xs:annotation>
				<xs:documentation>Rate Plan code is a unique identifier of Rate Plan entity. 
Mandatory for Rate Plan Stay Restrictions.</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="RatePlanCodeType">
					<xs:minLength value="5"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="PriceGridCode" type="PriceGridCodeType" use="optional">
			<xs:annotation>
				<xs:documentation>Price Grid code is a unique identifier of Price Grid entity.  
Mandatory for Price Grid Stay Restrictions.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="RatePlanPriceGridIdentifierGroup">
		<xs:annotation>
			<xs:documentation>Scope with mandatory Price Grid and Rate Plan</xs:documentation>
		</xs:annotation>
		<xs:attribute name="ChainCode" type="ChainCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Unique Code of a chain/corporation</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BrandCode" type="BrandCodeType" use="optional">
			<xs:annotation>
				<xs:documentation>Unique code assigned to a particular brand. Unique at the chain level.
Mandatory for Property (Hotel) level restrictions.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PropertyCode" type="PropertyCodeType" use="optional">
			<xs:annotation>
				<xs:documentation>Unique code assigned to a particular hotel.  Unique at brand level
Mandatory for Property (Hotel) level restrictions.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RatePlanCode" use="required">
			<xs:annotation>
				<xs:documentation>Rate Plan code is a unique identifier of Rate Plan entity. 
Mandatory for Rate Plan Stay Restrictions.</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="RatePlanCodeType">
					<xs:minLength value="5"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="PriceGridCode" type="PriceGridCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Price Grid code is a unique identifier of Price Grid entity.  
Mandatory for Price Grid Stay Restrictions.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="RateParityGroupIdentifierGroup">
		<xs:annotation>
			<xs:documentation>Defines the Parity group with the combination of the property identifier group. Brand and Property are optional.</xs:documentation>
		</xs:annotation>
		<xs:attributeGroup ref="PropertyIdentifierOptionalGroup"/>
		<xs:attribute name="RateParityGroupCode" type="AdvanceBookingRestrictionCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Unique identifier of the Parity Group system generated. This element exists only for the Update RQ (Mandatory ) and not for the Create RQ. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="RateParityGroupIdentifierOptionalGroup">
		<xs:annotation>
			<xs:documentation>Defines the Parity group with the combination of the property identifier group. Brand and Property are optional.</xs:documentation>
		</xs:annotation>
		<xs:attributeGroup ref="PropertyIdentifierOptionalGroup"/>
		<xs:attribute name="RateParityGroupCode" type="AdvanceBookingRestrictionCodeType" use="optional">
			<xs:annotation>
				<xs:documentation>Unique identifier of the Parity Group system generated. This element exists only for the Update RQ (Mandatory ) and not for the Create RQ. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:simpleType name="RatePlanCodeType">
		<xs:annotation>
			<xs:documentation>Unique code that defines the rate plan.</xs:documentation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="AAA"/>
					<altova:example value="BAR"/>
					<altova:example value="BFR"/>
					<altova:example value="IGCOR"/>
					<altova:example value="IGCOR001"/>
				</altova:exampleValues>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:attributeGroup name="RatePlanIdentifierOptionalGroup">
		<xs:annotation>
			<xs:documentation>Defines the Rate Plan with the combination of the property identifier group. Brand and Property are optional.</xs:documentation>
		</xs:annotation>
		<xs:attributeGroup ref="PropertyIdentifierOptionalGroup"/>
		<xs:attribute name="RatePlanCode" use="optional">
			<xs:annotation>
				<xs:documentation>Unique Rate Plan code that defines the Rate Plan at the corporate and hotel level.  This field must = 5 characters when created at the corporate level and can be 5 - 8 characters when created (activated) at the hotel level.</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="RatePlanCodeType">
					<xs:minLength value="5"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="RateParityGroupCode" type="AdvanceBookingRestrictionCodeType" use="optional">
			<xs:annotation>
				<xs:documentation>Unique identifier of the Rate parity group at chain level</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AdvanceBookingRestrictionCode" type="AdvanceBookingRestrictionCodeType" use="required">
			<xs:annotation>
				<xs:documentation>System generated Advance Booking restriction code.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:simpleType name="RatePlanNameType">
		<xs:annotation>
			<xs:documentation>Rate Plan Name. Mono-lingual. Unique at Hotel level only and can be updated.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="RatePlanRetrieveType">
		<xs:annotation>
			<xs:documentation>Determines the overall structure of the rate plan</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Scope">
				<xs:complexType>
					<xs:attributeGroup ref="RatePlanIdentifierOptionalGroup"/>
					<xs:attribute name="VersionNumber" type="VersionNumberType" use="required">
						<xs:annotation>
							<xs:documentation>Version of data set and prevents Concurrent Updates. </xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="StayPeriod" minOccurs="0">
				<xs:complexType>
					<xs:attributeGroup ref="PeriodGroupOptional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="Content">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Description" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Rate Plan description, is mono-lingual.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="BookingMessage" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Rate Plan booking message is mono-lingual.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="500"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="OTA_CategoriesList" minOccurs="0">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="OTA_Category" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>Rate Plan can belong to one or several OTA Rate categories Type.</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:attribute name="OTACode" use="required">
												<xs:annotation>
													<xs:documentation>OTA code RPT</xs:documentation>
												</xs:annotation>
												<xs:simpleType>
													<xs:restriction base="xs:int">
														<xs:minInclusive value="0"/>
													</xs:restriction>
												</xs:simpleType>
											</xs:attribute>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="CheckInCheckOut" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Only available at Hotel level and have to be set. If not set the system shall use house setting as default.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:attribute name="CheckInTime" type="xs:time">
									<xs:annotation>
										<xs:documentation>Default = House setting</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="CheckOutTime" type="xs:time">
									<xs:annotation>
										<xs:documentation>Default = House setting</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
						<xs:element name="RatePlanSecurity" minOccurs="0">
							<xs:complexType>
								<xs:attribute name="RatePlanProtectionLevel" type="xs:string">
									<xs:annotation>
										<xs:documentation>Can only be set/modify at Chain level as part of create of modify/update Rate Plan.              1= P00  (Default) – Protect Any attribute that got set at Chain level from being change at Property level                                          2= P0A -  Protect all attributes from being "change" at Property level (regardless if they were set or not at Chain level).                   3=P0B -  Protect the “Rate Plan name”, “Rate Plan Description” and any other attribute that got set at Chain level                              4= P0D - Protect the “Rate Plan Description” and any other attribute that got set at Chain level.                                     5= P0N - Protect the “Rate Plan name” and any other attribute that got set at Chain level.              6= P0O - All attributes are unprotected and can be change at Property level .                           </xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="IsSellStrategyAllowed" type="xs:boolean">
									<xs:annotation>
										<xs:documentation>Indicates whether or not this Rate Plan can be included in Sell Strategies.
Default = "Yes"</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="AreRatePropertiesAllowed" type="xs:boolean">
									<xs:annotation>
										<xs:documentation>Indicates whether or not hotels can choose to associate rate properties with this rate plan.
Default = "No"</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="IsCustomizationAllowed" type="xs:boolean">
									<xs:annotation>
										<xs:documentation>Indicates whether or not the hotel can customize this rate plan.
Default = "No"</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="IsDeleteAtHotelAllowed" type="xs:boolean">
									<xs:annotation>
										<xs:documentation>Deactivation=Deletion at Hotel Level
If set to “Yes”, the Hotel user can delete it only if there are no future active reservations.
Default = "Yes"</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="ParticipationProtectionLevel" type="xs:string">
									<xs:annotation>
										<xs:documentation>Participation dates protection level. supported values are: Lock, Unlock, ProtectEntered.</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
						<xs:element name="RatePlanPolicies" minOccurs="0">
							<xs:complexType>
								<xs:attribute name="IsBusinessChoiceGuarantee" type="xs:boolean">
									<xs:annotation>
										<xs:documentation> - Indicates whether the rate plan is a business choice guarantee to the hotel.    - Yes = ‘Business Choice’ channel can guarantee, on behalf of the hotel, if the room booked through this rate plan. 
 - Default = "No"</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="IsCallCenterGuarantee" type="xs:boolean">
									<xs:annotation>
										<xs:documentation> - Indicates whether the rate plan is a call center guarantee to the hotel.                                - Yes = 'Call Center' channel can guarantee, on behalf of the hotel, if the room booked through this rate plan. 
 - Default = "No"</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="IsFollowingHousePolicy" type="xs:boolean">
									<xs:annotation>
										<xs:documentation> - Indicates whether the rate plan is following the house policy          - Yes = House Policies are followed                                     - No = Rate Plan Policies are followed
 - Default = "Yes" </xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="IsAdvancePurchaseRequired" type="xs:boolean">
									<xs:annotation>
										<xs:documentation> - Indicates whether or not the rate plan must be paid for up front.                      - Yes = Advance Purchase is required    - No = Advance Purchase is not required
 </xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
						<xs:element name="QualifiedRate" minOccurs="0">
							<xs:annotation>
								<xs:documentation>If one or more of these attributes are true, then the rate plan is considered a Qualified Rate.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:attribute name="IsLoyaltyNumberRequired" type="xs:boolean">
									<xs:annotation>
										<xs:documentation>Yes = Customer needs to give a Loyalty number in order to see availability and book this rate plan.     - Default = "No"</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="IsID_RequiredAtCheckIn" type="xs:boolean">
									<xs:annotation>
										<xs:documentation>Yes = Customer needs to present a valid ID at check-in in order to access this rate plan.                     - Default = "No</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="IsCouponRequired" type="xs:boolean">
									<xs:annotation>
										<xs:documentation>Yes = Customer needs to present a coupon or voucher at check-in in order to access this rate plan.                       - Default = "No</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
						<xs:element name="GroupRate" minOccurs="0">
							<xs:complexType>
								<xs:attribute name="HoldDays" use="required">
									<xs:annotation>
										<xs:documentation>Number of days the reservation can be held before confirmation is required.</xs:documentation>
									</xs:annotation>
									<xs:simpleType>
										<xs:restriction base="xs:int">
											<xs:minInclusive value="0"/>
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
								<xs:attribute name="MinNumberOfRooms" use="required">
									<xs:annotation>
										<xs:documentation>Rate Plan is only returned if the minimum # of rooms requested is more than this number.</xs:documentation>
									</xs:annotation>
									<xs:simpleType>
										<xs:restriction base="xs:int">
											<xs:minInclusive value="0"/>
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
								<xs:attribute name="MaxNumberOfRooms" use="required">
									<xs:annotation>
										<xs:documentation>Rate Plan only return if the maximum # of rooms requested is less than this number.</xs:documentation>
									</xs:annotation>
									<xs:simpleType>
										<xs:restriction base="xs:int">
											<xs:minInclusive value="0"/>
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
						<xs:element name="ServiceList" minOccurs="0">
							<xs:annotation>
								<xs:documentation>To be use for Meals selector.
Currently IHG offer only 3 meals for Rate Plan Breakfast, Lunch and Dinner. they are all optional.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Service" maxOccurs="unbounded">
										<xs:complexType>
											<xs:attribute name="ServiceType" type="xs:string" use="required">
												<xs:annotation>
													<xs:documentation>Should be set to Meals</xs:documentation>
												</xs:annotation>
											</xs:attribute>
											<xs:attribute name="ServiceCode" type="xs:string" use="required">
												<xs:annotation>
													<xs:documentation>Currently will include DIN for Dinner, BRK for Breakfast, and LCH for Lunch.</xs:documentation>
												</xs:annotation>
											</xs:attribute>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="PriceGridData" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Can be only one Price Grid code associate with Rate Plan at the time. Note:  A Rate Plan without a Price Grid is not sellable.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="PriceGrid" minOccurs="0">
										<xs:complexType>
											<xs:attribute name="PriceGridCode" type="PriceGridCodeType" use="required">
												<xs:annotation>
													<xs:documentation>Price Grid code associated with Rate Plan. This is the either a standalone Price Grid code or it is the primary Price Tier Code if it is part of a Price Grid Tier Groping.  </xs:documentation>
												</xs:annotation>
											</xs:attribute>
											<xs:attribute name="PriceGridType" type="PriceGridTypeType" use="required">
												<xs:annotation>
													<xs:documentation>Defines the type of Price Grid. Options are:                         - Standalone                       - Tier grouping</xs:documentation>
												</xs:annotation>
											</xs:attribute>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
								<xs:attribute name="IsPriceGridOneToOne" type="xs:boolean">
									<xs:annotation>
										<xs:documentation>If set to “Yes”, the Price Grid associated to this Rate Plan cannot be linked to another Rate Plan.
Default = "No"</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="HasExtraPersonCharge" type="xs:boolean">
									<xs:annotation>
										<xs:documentation>If set to “Yes”, the extra person charge set at Price Grid level will be used for the total charge calculation  in case there are extra persons.
Default = "No"</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="IsPriceGridWithAllocationAllowed" type="xs:boolean">
									<xs:annotation>
										<xs:documentation>Defines whether or not the price grid with allocation can be associated with this rate plan. The actual value definitions will be done via inventory rules.                                   Default = "Yes"     </xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
						<xs:element name="Products" minOccurs="0">
							<xs:annotation>
								<xs:documentation>To support the multiple product codes sellable to a Rate Plan as a package</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Product" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>Product information sellable with the Rate plan</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:string">
													<xs:attribute name="Code" type="ProductCodeType" use="required">
														<xs:annotation>
															<xs:documentation>Product Code that would be sellable with this Rate plan as a pre-defined package or as an add-on. </xs:documentation>
														</xs:annotation>
													</xs:attribute>
													<xs:attribute name="PriceGridCode" type="PriceGridCodeType" use="optional">
														<xs:annotation>
															<xs:documentation>Price Grid code associated with Product Code linked to the Rate plan.</xs:documentation>
														</xs:annotation>
													</xs:attribute>
													<xs:attribute name="Usage" type="xs:string" use="required">
														<xs:annotation>
															<xs:documentation>Usage of the product in the offering as a part of the package or as an add-on with the Rate plan. Refer ICD for more Usage info. </xs:documentation>
															<xs:appinfo>
																<altova:exampleValues>
																	<altova:example value="Mandatory"/>
																	<altova:example value="Optional"/>
																	<altova:example value="Main"/>
																	<altova:example value="Excluded"/>
																</altova:exampleValues>
															</xs:appinfo>
														</xs:annotation>
													</xs:attribute>
													<xs:attribute name="CorporateEnforced" type="xs:boolean">
														<xs:annotation>
															<xs:documentation>Boolean indicator stating if the product can be removed from the pre-defined package definition.Applicable for Mandatory and Excluded usage. Default value is false.</xs:documentation>
														</xs:annotation>
													</xs:attribute>
													<xs:attribute name="IsPriceIncluded" type="xs:boolean">
														<xs:annotation>
															<xs:documentation>For pricing computation purpose. Refer ICD for associated business rules. </xs:documentation>
														</xs:annotation>
													</xs:attribute>
													<xs:attribute name="Quantity" type="xs:decimal">
														<xs:annotation>
															<xs:documentation>Number of products offered. Default value is 1</xs:documentation>
														</xs:annotation>
													</xs:attribute>
													<xs:attribute name="BookingPattern" type="xs:string">
														<xs:annotation>
															<xs:documentation>Optional field for future enhancement for attributes with special requirements of when they can be offered. </xs:documentation>
														</xs:annotation>
													</xs:attribute>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="DisplayAttributes" type="DisplayAttributesType" minOccurs="0"/>
						<xs:element name="AllocationAttributes" type="AllocationAttributesType" minOccurs="0"/>
						<xs:element name="LoyaltyAttributes" type="LoyaltyAttributesType" minOccurs="0"/>
						<xs:element name="Package" minOccurs="0">
							<xs:complexType>
								<xs:sequence minOccurs="0">
									<xs:element name="DescriptionList" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Currently each package has room for 3 descriptions and each description has its own security level. The description list must exist only if the package indicator is set to true, but is not mandatory if set to true</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:sequence>
												<xs:element name="Description" maxOccurs="unbounded">
													<xs:annotation>
														<xs:documentation>Max length = 500</xs:documentation>
													</xs:annotation>
													<xs:complexType>
														<xs:simpleContent>
															<xs:extension base="xs:string">
																<xs:attribute name="DescriptionType" type="xs:string" use="required">
																	<xs:annotation>
																		<xs:documentation> Values = "Overview", "Additional Details" and "Terms and Conditions". </xs:documentation>
																	</xs:annotation>
																</xs:attribute>
															</xs:extension>
														</xs:simpleContent>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
								<xs:attribute name="PackageIndicator" type="xs:boolean">
									<xs:annotation>
										<xs:documentation>If Yes, the Rate Plan is considered as a package. Not specified will act as False</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
						<xs:element name="ExclusionRules" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Exclusion rules for the rateplan to exclude the enclosed rateplan or product codes during shopping</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="ExclusionRule" type="ExclusionRuleType" maxOccurs="unbounded"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="LongDescription" type="xs:string" minOccurs="0"/>
					</xs:sequence>
					<xs:attribute name="Name" type="RatePlanNameType" use="required">
						<xs:annotation>
							<xs:documentation>Rate Plan Name. Mono-lingual. Unique at Hotel level only and can be updated</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="IsCommissionable" type="xs:boolean">
						<xs:annotation>
							<xs:documentation> - Yes = Rate Plan is commissionable                    - No = Rate Plan is not commissionable       
 - Default = "No"</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="IsAutoDeleteAllowed" type="xs:boolean">
						<xs:annotation>
							<xs:documentation> - Yes = Rate Plan will automatically be deleted after end of the last Stay date.         -  No = Rate Plan will not automatically be deleted     
 - Default = "Yes"</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="IsCourtesyHoldAllowed" type="xs:boolean">
						<xs:annotation>
							<xs:documentation> - Yes = The Courtesy Hold facility described in Shop and Book will be allowed                    -  No = The Courtesy Hold facility described in Shop and Book will not be allowed   
 - Default = "Yes".</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="IsBestFlexibleRate" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>Best flexible rate (Base Rate) can exist per Hotel. The system will not allow any other Rate Plan flagged as Best Flexible Rate to be activated in the same hotel
Default = "No"</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="BlackoutParticipationStatusType" type="BlackoutParticipationStatusType">
						<xs:annotation>
							<xs:documentation>Determines what blackout / participation status type is allowed for this rate plan</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="MustContainMandatoryProduct" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>Indiicates whether the rate plan should be represented as a pre-defined package at the Hotel. Default is false.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="IsHouseUse" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>Indicates whether the rate plan is to be used for House use stays</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="IsComplimentary" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>Indicates whether the rate plan is to be used for Complimentary stays</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="IsDayUse" type="xs:boolean"/>
					<xs:attribute name="PropertyMarketSegmentation" type="xs:string">
						<xs:annotation>
							<xs:documentation>Indicates the market segmentation for the rate plan. This is an attribute relevant only for the property-level rate plan.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="CorporateMarketSegmentation" type="xs:string">
						<xs:annotation>
							<xs:documentation>Indicates the corporate market segmentation for the rate plan</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="PolicyTypeCode" type="xs:string">
						<xs:annotation>
							<xs:documentation>Indicates the Policy Type code associated to the Rate Plan to determine what Policy applies.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="ReferenceRatePlanCode" type="RatePlanCodeType">
						<xs:annotation>
							<xs:documentation>Indicates the rate plan linked to the parent of the linked derived price plan.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="PrintRate" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>Indicates whether the rate information can be printed in a reservation document.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="GamingBucket" type="xs:string">
						<xs:annotation>
							<xs:documentation>Indicates whether the rate plan is used for Comp or Cash flows.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="ActivationStatus">
				<xs:annotation>
					<xs:documentation>The activation status will be returned based on the scope of the search</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="Status" use="required">
						<xs:annotation>
							<xs:documentation>The status of the rate plan, whether active, inactive (based on the creation/activation at chain or hotel level) </xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="Active"/>
								<xs:enumeration value="Inactive"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="PropertyCount" type="xs:int">
						<xs:annotation>
							<xs:documentation>Number of hotels that are active for a particular Rate Plan. This field will exist only  if the search is done at the Chain level.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RatePlanType">
		<xs:annotation>
			<xs:documentation>Determines the overall structure of the rate plan</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Scope">
				<xs:complexType>
					<xs:attributeGroup ref="RatePlanIdentifierOptionalGroup"/>
					<xs:attribute name="VersionNumber" type="VersionNumberType">
						<xs:annotation>
							<xs:documentation>Version of data set and prevents Concurrent Updates. ONLY USED for UpdateRQ/RetrieveRS, NOT for CreateRQ nor SearchRS</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="StayPeriod" minOccurs="0">
				<xs:complexType>
					<xs:attributeGroup ref="PeriodGroupOptional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="Content">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Description" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Rate Plan description, is mono-lingual.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="BookingMessage" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Rate Plan booking message is mono-lingual</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="500"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="OTA_CategoriesList" minOccurs="0">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="OTA_Category" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>Rate Plan can belong to one or several OTA Rate categories Type.</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:attribute name="OTACode" use="required">
												<xs:annotation>
													<xs:documentation>OTA code RPT</xs:documentation>
												</xs:annotation>
												<xs:simpleType>
													<xs:restriction base="xs:int">
														<xs:minInclusive value="0"/>
													</xs:restriction>
												</xs:simpleType>
											</xs:attribute>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="CheckInCheckOut" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Only available at Hotel level and have to be set. If not set the system shall use house setting as default.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:attribute name="CheckInTime" type="xs:time">
									<xs:annotation>
										<xs:documentation>Default = House setting</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="CheckOutTime" type="xs:time">
									<xs:annotation>
										<xs:documentation>Default = House setting</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
						<xs:element name="RatePlanSecurity">
							<xs:complexType>
								<xs:attribute name="RatePlanProtectionLevel" type="xs:string" use="required">
									<xs:annotation>
										<xs:documentation>Can only be set/modify at Chain level as part of create of modify/update Rate Plan.  String value must be defined - empty value is disallowed.  Final set of Protection code will be decided as part of the protection implementation.  </xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="IsSellStrategyAllowed" type="xs:boolean">
									<xs:annotation>
										<xs:documentation>Indicates whether or not this Rate Plan can be included in Sell Strategies.
</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="AreRatePropertiesAllowed" type="xs:boolean">
									<xs:annotation>
										<xs:documentation>Indicates whether or not hotels can choose to associate rate properties with this rate plan.
</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="IsCustomizationAllowed" type="xs:boolean">
									<xs:annotation>
										<xs:documentation>Indicates whether or not the hotel can customize this rate plan.
</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="IsDeleteAtHotelAllowed" type="xs:boolean">
									<xs:annotation>
										<xs:documentation>Deactivation=Deletion at Hotel Level
If set to “Yes”, the Hotel user can delete it only if there are no future active reservations.
</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="ParticipationProtectionLevel" type="xs:string">
									<xs:annotation>
										<xs:documentation>Participation dates protection level. supported values are: Lock, Unlock, ProtectEntered.</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
						<xs:element name="RatePlanPolicies" minOccurs="0">
							<xs:complexType>
								<xs:attribute name="IsBusinessChoiceGuarantee" type="xs:boolean">
									<xs:annotation>
										<xs:documentation> - Indicates whether the rate plan is a business choice guarantee to the hotel.    - Yes = ‘Business Choice’ channel can guarantee, on behalf of the hotel, if the room booked through this rate plan. 
</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="IsCallCenterGuarantee" type="xs:boolean">
									<xs:annotation>
										<xs:documentation> - Indicates whether the rate plan is a call center guarantee to the hotel.                                - Yes = 'Call Center' channel can guarantee, on behalf of the hotel, if the room booked through this rate plan. 
</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="IsFollowingHousePolicy" type="xs:boolean">
									<xs:annotation>
										<xs:documentation> - Indicates whether the rate plan is following the house policy          - Yes = House Policies are followed                                     - No = Rate Plan Policies are followed
 </xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="IsAdvancePurchaseRequired" type="xs:boolean">
									<xs:annotation>
										<xs:documentation> - Indicates whether or not the rate plan must be paid for up front.                      - Yes = Advance Purchase is required    - No = Advance Purchase is not required
 </xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
						<xs:element name="QualifiedRate" minOccurs="0">
							<xs:annotation>
								<xs:documentation>If one or more of these attributes are true, then the rate plan is considered a Qualified Rate.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:attribute name="IsLoyaltyNumberRequired" type="xs:boolean">
									<xs:annotation>
										<xs:documentation>Yes = Customer needs to give a Loyalty number in order to see availability and book this rate plan.    </xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="IsID_RequiredAtCheckIn" type="xs:boolean">
									<xs:annotation>
										<xs:documentation>Yes = Customer needs to present a valid ID at check-in in order to access this rate plan.                    </xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="IsCouponRequired" type="xs:boolean">
									<xs:annotation>
										<xs:documentation>Yes = Customer needs to present a coupon or voucher at check-in in order to access this rate plan.                      </xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
						<xs:element name="GroupRate" minOccurs="0">
							<xs:complexType>
								<xs:attribute name="HoldDays" use="required">
									<xs:annotation>
										<xs:documentation>Number of days the reservation can be held before confirmation is required.</xs:documentation>
									</xs:annotation>
									<xs:simpleType>
										<xs:restriction base="xs:int">
											<xs:minInclusive value="0"/>
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
								<xs:attribute name="MinNumberOfRooms" use="required">
									<xs:annotation>
										<xs:documentation>Rate Plan is only returned if the minimum # of rooms requested is more than this number.</xs:documentation>
									</xs:annotation>
									<xs:simpleType>
										<xs:restriction base="xs:int">
											<xs:minInclusive value="0"/>
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
								<xs:attribute name="MaxNumberOfRooms" use="required">
									<xs:annotation>
										<xs:documentation>Rate Plan only return if the maximum # of rooms requested is less than this number.</xs:documentation>
									</xs:annotation>
									<xs:simpleType>
										<xs:restriction base="xs:int">
											<xs:minInclusive value="0"/>
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
						<xs:element name="ServiceList" minOccurs="0">
							<xs:annotation>
								<xs:documentation>To be use for Meals selector.
Currently IHG offer only 3 meals for Rate Plan Breakfast, Lunch and Dinner. they are all optional.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Service" maxOccurs="unbounded">
										<xs:complexType>
											<xs:attribute name="ServiceType" type="xs:string" use="required">
												<xs:annotation>
													<xs:documentation>Should be set to Meals</xs:documentation>
												</xs:annotation>
											</xs:attribute>
											<xs:attribute name="ServiceCode" type="xs:string" use="required">
												<xs:annotation>
													<xs:documentation>Currently will include DIN for Dinner, BRK for Breakfast, and LCH for Lunch.</xs:documentation>
												</xs:annotation>
											</xs:attribute>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="PriceGridData" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Can be only one Price Grid code associate with Rate Plan at the time - sold as Main Product offered. Note:  A Rate Plan without a Price Grid is not sellable.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="PriceGrid" minOccurs="0">
										<xs:complexType>
											<xs:attribute name="PriceGridCode" type="PriceGridCodeType" use="required">
												<xs:annotation>
													<xs:documentation>Price Grid code associated with Rate Plan. This is the either a standalone Price Grid code or it is the primary Price Tier Code if it is part of a Price Grid Tier Grouping.  </xs:documentation>
												</xs:annotation>
											</xs:attribute>
											<xs:attribute name="PriceGridType" type="PriceGridTypeType" use="required">
												<xs:annotation>
													<xs:documentation>Defines the type of Price Grid. Options are:                         - Standalone                       - Tier grouping</xs:documentation>
												</xs:annotation>
											</xs:attribute>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
								<xs:attribute name="IsPriceGridOneToOne" type="xs:boolean">
									<xs:annotation>
										<xs:documentation>If set to “Yes”, the Price Grid associated to this Rate Plan cannot be linked to another Rate Plan.
</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="HasExtraPersonCharge" type="xs:boolean">
									<xs:annotation>
										<xs:documentation>If set to “Yes”, the extra person charge set at Price Grid level will be used for the total charge calculation  in case there are extra persons.
</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="IsPriceGridWithAllocationAllowed" type="xs:boolean">
									<xs:annotation>
										<xs:documentation>Defines whether or not the price grid with allocation can be associated with this rate plan. The actual value definitions will be done via inventory rules.                                    </xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
						<xs:element name="Products" minOccurs="0">
							<xs:annotation>
								<xs:documentation>To support the multiple product codes sellable to a Rate Plan as a package</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Product" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>Product information sellable with the Rate plan</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:string">
													<xs:attribute name="Code" type="ProductCodeType" use="required">
														<xs:annotation>
															<xs:documentation>Product Code that would be sellable with this Rate plan as a pre-defined package or as an add-on. </xs:documentation>
														</xs:annotation>
													</xs:attribute>
													<xs:attribute name="PriceGridCode" type="PriceGridCodeType" use="optional">
														<xs:annotation>
															<xs:documentation>Price Grid code associated with Product Code linked to the Rate plan.</xs:documentation>
														</xs:annotation>
													</xs:attribute>
													<xs:attribute name="Usage" type="xs:string" use="required">
														<xs:annotation>
															<xs:documentation>Usage of the product in the offering as a part of the package or as an add-on with the Rate plan. Refer ICD for more Usage info. </xs:documentation>
															<xs:appinfo>
																<altova:exampleValues>
																	<altova:example value="Mandatory"/>
																	<altova:example value="Optional"/>
																	<altova:example value="Main"/>
																	<altova:example value="Excluded"/>
																</altova:exampleValues>
															</xs:appinfo>
														</xs:annotation>
													</xs:attribute>
													<xs:attribute name="CorporateEnforced" type="xs:boolean">
														<xs:annotation>
															<xs:documentation>Boolean indicator stating if the product can be removed at Hotel. Applicable for Mandatory. Default is false.</xs:documentation>
														</xs:annotation>
													</xs:attribute>
													<xs:attribute name="IsPriceIncluded" type="xs:boolean">
														<xs:annotation>
															<xs:documentation>For pricing computation purpose. Refer ICD for associated business rules. </xs:documentation>
														</xs:annotation>
													</xs:attribute>
													<xs:attribute name="Quantity" type="xs:decimal">
														<xs:annotation>
															<xs:documentation>Number of products offered  Default is 1.</xs:documentation>
														</xs:annotation>
													</xs:attribute>
													<xs:attribute name="BookingPattern" type="xs:string">
														<xs:annotation>
															<xs:documentation>Optional field for future enhancement for attributes with special requirements of when they can be offered. </xs:documentation>
														</xs:annotation>
													</xs:attribute>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="DisplayAttributes" type="DisplayAttributesType" minOccurs="0"/>
						<xs:element name="AllocationAttributes" type="AllocationAttributesType" minOccurs="0"/>
						<xs:element name="LoyaltyAttributes" type="LoyaltyAttributesType" minOccurs="0"/>
						<xs:element name="Package" minOccurs="0">
							<xs:complexType>
								<xs:sequence minOccurs="0">
									<xs:element name="DescriptionList" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Currently each package has room for 3 descriptions and each description has its own security level. The description list must exist only if the package indicator is set to true, but is not mandatory if set to true</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:sequence>
												<xs:element name="Description" maxOccurs="unbounded">
													<xs:annotation>
														<xs:documentation>Max length = 500</xs:documentation>
													</xs:annotation>
													<xs:complexType>
														<xs:simpleContent>
															<xs:extension base="xs:string">
																<xs:attribute name="DescriptionType" type="xs:string" use="required">
																	<xs:annotation>
																		<xs:documentation> Values = "Overview", "Additional Details" and "Terms and Conditions". </xs:documentation>
																	</xs:annotation>
																</xs:attribute>
															</xs:extension>
														</xs:simpleContent>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
								<xs:attribute name="PackageIndicator" type="xs:boolean">
									<xs:annotation>
										<xs:documentation>If Yes, the Rate Plan is considered as a package. Not specified will act as False</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
						<xs:element name="ExclusionRules" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Exclusion rules for the rateplan to exclude enclosed rateplan or product code during shopping</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="ExclusionRule" type="ExclusionRuleType" maxOccurs="unbounded"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="LongDescription" type="xs:string" minOccurs="0"/>
					</xs:sequence>
					<xs:attribute name="Name" type="RatePlanNameType" use="required">
						<xs:annotation>
							<xs:documentation>Rate Plan Name. Mono-lingual. Unique at Hotel level only and can be updated</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="IsCommissionable" type="xs:boolean">
						<xs:annotation>
							<xs:documentation> - Yes = Rate Plan is commissionable                    - No = Rate Plan is not commissionable       
</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="IsAutoDeleteAllowed" type="xs:boolean">
						<xs:annotation>
							<xs:documentation> - Yes = Rate Plan will automatically be deleted after end of the last Stay date.         -  No = Rate Plan will not automatically be deleted     
</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="IsCourtesyHoldAllowed" type="xs:boolean">
						<xs:annotation>
							<xs:documentation> - Yes = The Courtesy Hold facility described in Shop and Book will be allowed                    -  No = The Courtesy Hold facility described in Shop and Book will not be allowed   
</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="IsBestFlexibleRate" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>Best flexible rate (Base Rate) can exist per Hotel. The system will not allow any other Rate Plan flagged as Best Flexible Rate to be activated in the same hotel
</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="BlackoutParticipationStatusType" type="BlackoutParticipationStatusType">
						<xs:annotation>
							<xs:documentation>Determines what blackout / participation status type is allowed for this rate plan</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="MustContainMandatoryProduct" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>Indicates whether the rate plan should be represented as a pre-defined package at the Hotel. Default is false.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="IsHouseUse" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>Indicates whether the rate plan is to be used for House use stays</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="IsComplimentary" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>Indicates whether the rate plan is to be used for Complimentary stays</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="IsDayUse" type="xs:boolean"/>
					<xs:attribute name="PropertyMarketSegmentation" type="xs:string">
						<xs:annotation>
							<xs:documentation>Indicates the market segmentation for the rate plan. This is an attribute relevant only for the property-level rate plan.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="CorporateMarketSegmentation" type="xs:string">
						<xs:annotation>
							<xs:documentation>Indicates the corporate market segmentation for the rate plan</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="PolicyTypeCode" type="xs:string">
						<xs:annotation>
							<xs:documentation>Indicates the Policy Type code associated to the Rate Plan to determine what Policy applies.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="ReferenceRatePlanCode" type="RatePlanCodeType">
						<xs:annotation>
							<xs:documentation>Indicates the rate plan linked to the parent of the linked derived price plan.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="PrintRate" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>Indicates whether the rate information can be printed in a reservation document.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="GamingBucket" type="xs:string">
						<xs:annotation>
							<xs:documentation>Indicates whether the rate plan is used for Comp or Cash flows.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RateScopeSearchType">
		<xs:annotation>
			<xs:documentation>The criterion for the search of Rate plan</xs:documentation>
		</xs:annotation>
		<xs:choice minOccurs="0">
			<xs:sequence>
				<xs:element name="BrandList" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Currently the list size will be limited to 1</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="BrandCode" type="BrandCodeType" maxOccurs="unbounded"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="RegionList" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Currently the list size will be limited to 1</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="RegionCode" type="RegionCodeType" maxOccurs="unbounded"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="CountryList" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Currently the list size will be limited to 1</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="CountryCode" type="CountryCodeType" maxOccurs="unbounded"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:element name="PropertyList">
				<xs:annotation>
					<xs:documentation>Currently the list size will be limited to 1</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Property" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="PropertyCode" type="PropertyCodeType" maxOccurs="unbounded"/>
								</xs:sequence>
								<xs:attribute name="BrandCode" type="BrandCodeType"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:choice>
		<xs:attribute name="ChainCode" type="ChainCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Unique Code of a chain/corporation</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="SearchScopeType">
		<xs:annotation>
			<xs:documentation>The criterion for the search</xs:documentation>
		</xs:annotation>
		<xs:choice minOccurs="0">
			<xs:sequence>
				<xs:annotation>
					<xs:documentation>Atleast one of the elements have to be present if the sequence selected</xs:documentation>
				</xs:annotation>
				<xs:element name="Brands" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Currently supports only one selection</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Brand" maxOccurs="unbounded">
								<xs:complexType>
									<xs:attribute name="BrandCode" type="BrandCodeType" use="required"/>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="Regions" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Currently supports only one selection</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Region" maxOccurs="unbounded">
								<xs:complexType>
									<xs:attribute name="RegionCode" type="RegionCodeType" use="required"/>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:choice minOccurs="0">
					<xs:element name="Countries">
						<xs:annotation>
							<xs:documentation>Currently supports only one selection</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:sequence>
								<xs:element name="Country" maxOccurs="unbounded">
									<xs:complexType>
										<xs:attribute name="CountryCode" type="CountryCodeType" use="required"/>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="Cities">
						<xs:annotation>
							<xs:documentation>Currently supports only one selection</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:sequence>
								<xs:element name="City" maxOccurs="unbounded">
									<xs:complexType>
										<xs:attribute name="CountryCode" type="CountryCodeType" use="required"/>
										<xs:attribute name="CityCode" type="CityCodeType" use="required"/>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:choice>
			</xs:sequence>
			<xs:element name="Properties">
				<xs:annotation>
					<xs:documentation>Must support multiple properties</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Property" maxOccurs="unbounded">
							<xs:complexType>
								<xs:attribute name="BrandCode" type="BrandCodeType" use="required"/>
								<xs:attribute name="PropertyCode" type="PropertyCodeType" use="required"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:choice>
		<xs:attribute name="ChainCode" type="ChainCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Unique Code of a chain/corporation</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CodeType" type="xs:string">
			<xs:annotation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="RatePlan"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:simpleType name="RegionCodeType">
		<xs:annotation>
			<xs:documentation>Unique code assigned to a particular region</xs:documentation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="HIE"/>
					<altova:example value="CP"/>
					<altova:example value="HI"/>
					<altova:example value="EH"/>
					<altova:example value="ITC"/>
				</altova:exampleValues>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:maxLength value="3"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="RegionScopePluralType">
		<xs:annotation>
			<xs:documentation>The selection of the list of regions or all regions using plural instead of list</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="Codes">
				<xs:annotation>
					<xs:documentation>List of region codes</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Code" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Unique code assigned to a particular region</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="RegionCodeType">
									<xs:minLength value="1"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="All" type="xs:string">
				<xs:annotation>
					<xs:documentation>All regions</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="RegionScopeType">
		<xs:annotation>
			<xs:documentation>The selection of the list of regions or all regions</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="RegionCodeList">
				<xs:annotation>
					<xs:documentation>List of regions</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Code" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Unique code assigned to a particular region</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="RegionCodeType">
									<xs:minLength value="1"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="All" type="xs:string">
				<xs:annotation>
					<xs:documentation>All regions</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="ResidencyType">
		<xs:annotation>
			<xs:documentation>Determines whether tax and fee rule is applicable based on the residency status</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Status">
				<xs:annotation>
					<xs:documentation>Defines the residency of the customer </xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="ResidentOnly"/>
						<xs:enumeration value="NonResidentOnly"/>
						<xs:enumeration value="All"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="DisclaimerMessage" minOccurs="0">
				<xs:annotation>
					<xs:appinfo>
						<altova:exampleValues>
							<altova:example value="This State Tax applies to whatever disclaimer."/>
							<altova:example value="This City Tax has a disclaimer."/>
						</altova:exampleValues>
					</xs:appinfo>
					<xs:documentation>List of all disclaimer messages from all residency taxes applying for a given period: workaround for external system to do breakdowns</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="DisclaimerMessageType">
						<xs:maxLength value="255"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="RoomClassCodeType">
		<xs:annotation>
			<xs:documentation>Room Class Code</xs:documentation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="ITCP"/>
					<altova:example value="ABCD"/>
					<altova:example value="EFGH"/>
				</altova:exampleValues>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:maxLength value="4"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="RoomCodeType">
		<xs:annotation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="KNG"/>
					<altova:example value="QUN"/>
					<altova:example value="KGNS"/>
					<altova:example value="QUNS"/>
				</altova:exampleValues>
			</xs:appinfo>
			<xs:documentation>Unique code assigned to a particular room</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:maxLength value="4"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="SearchCriteriaDateType">
		<xs:annotation>
			<xs:documentation>Determines the start and end date ranges that will be returned in the search</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="StartDate" minOccurs="0">
				<xs:complexType>
					<xs:attribute name="From" type="StartDateType">
						<xs:annotation>
							<xs:documentation>Start date of the search</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="To" type="EndDateType">
						<xs:annotation>
							<xs:documentation>End date of the search</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="EndDate" minOccurs="0">
				<xs:complexType>
					<xs:attribute name="From" type="StartDateType">
						<xs:annotation>
							<xs:documentation>Start date of the search</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="To" type="EndDateType">
						<xs:annotation>
							<xs:documentation>End date of the search</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:attributeGroup name="SearchCriteriaGroup">
		<xs:annotation>
			<xs:documentation>Determines how the user wants the search results to be returned</xs:documentation>
		</xs:annotation>
		<xs:attribute name="StartRecordNum" type="xs:int" use="optional">
			<xs:annotation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="0"/>
						<altova:example value="1"/>
						<altova:example value="5"/>
						<altova:example value="50"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MaxRetrieveCount" type="xs:int" use="optional">
			<xs:annotation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="5"/>
						<altova:example value="15"/>
						<altova:example value="50"/>
						<altova:example value="100"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="SearchResultGroup">
		<xs:annotation>
			<xs:documentation>Determines the actual search results being returned</xs:documentation>
		</xs:annotation>
		<xs:attribute name="TotalRecordNum" type="xs:unsignedInt" use="required"/>
		<xs:attribute name="RetrieveCount" type="xs:unsignedInt" use="optional">
			<xs:annotation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="5"/>
						<altova:example value="15"/>
						<altova:example value="50"/>
						<altova:example value="100"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StartRecordNum" type="xs:unsignedInt" use="optional">
			<xs:annotation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="0"/>
						<altova:example value="1"/>
						<altova:example value="5"/>
						<altova:example value="50"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="EndRecordNum" type="xs:unsignedInt" use="optional"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SearchSortingGroup">
		<xs:annotation>
			<xs:documentation>Determines how the user wants the sort the result</xs:documentation>
		</xs:annotation>
		<xs:attribute name="FieldName" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>The search result field that will need to be sorted</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SortType" use="optional">
			<xs:annotation>
				<xs:documentation>sort in ascending order or descending order</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="Ascending"/>
					<xs:enumeration value="Descending"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:simpleType name="SelectionType">
		<xs:annotation>
			<xs:documentation>All or None - Used if not returning a specific code or list of codes</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="All"/>
			<xs:enumeration value="None"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ServiceCodeType">
		<xs:annotation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="BKT"/>
					<altova:example value="DIN"/>
					<altova:example value="MTG"/>
				</altova:exampleValues>
			</xs:appinfo>
			<xs:documentation>Unique code assigned to a particular service</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:maxLength value="8"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="SellStrategyScopeType">
		<xs:annotation>
			<xs:documentation>Sell Strategy scope at the property level</xs:documentation>
		</xs:annotation>
		<xs:attributeGroup ref="PropertyIdentifierGroup"/>
		<xs:attribute name="SellStrategyType" use="required">
			<xs:annotation>
				<xs:documentation>Supports two values: RoomType and RatePlan. Based on the selection of the Sell Strategy type, it will return the list of Sell Strategies</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string"/>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="SellStrategyCode" type="SellStrategyCodeType">
			<xs:annotation>
				<xs:documentation>Unique Sell Strategy code that defines the sell strategy at the  hotel level.  This field is mandatory and must = 3 characters when created at the hotel level for the Rate Plan Sell Strategy and is user defined. This code is autogenerated at the for the Room type Sell Strategy.The Code is mandatory in the Update RQ</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="VersionNumber" type="VersionTimeStampType">
			<xs:annotation>
				<xs:documentation>Version of data set and prevents Concurrent Updates. Version number MUST exist only for Update RQ and Search RS</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="SellStrategyTemplateScopeType">
		<xs:annotation>
			<xs:documentation>Scope of an Sell Strategy of the Brand Sell Strategy</xs:documentation>
		</xs:annotation>
		<xs:sequence minOccurs="0">
			<xs:annotation>
				<xs:documentation>The brand List and Region List is optional only if the Property List exists. The BRAND is mandatory if the property details element exists. Also, the region is mandatory if both the Country List and the Property Details element does not exist This sequence may not exist in the delete RQ if the Sell Strategy Code is provided</xs:documentation>
			</xs:annotation>
			<xs:element name="BrandList" type="BrandScopeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>At hotel level, the request should only contain one brand code</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RegionList" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If region list not specified, it means it is applicable to none of the regions</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Region" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:choice>
										<xs:element name="RegionCode">
											<xs:annotation>
												<xs:documentation>Unique code assigned to a particular region</xs:documentation>
											</xs:annotation>
											<xs:simpleType>
												<xs:restriction base="RegionCodeType">
													<xs:minLength value="1"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<xs:element name="All" type="xs:string">
											<xs:annotation>
												<xs:documentation>All regions</xs:documentation>
											</xs:annotation>
										</xs:element>
									</xs:choice>
									<xs:element name="ExcludedCountryList" minOccurs="0">
										<xs:complexType>
											<xs:sequence>
												<xs:element name="Country" maxOccurs="unbounded">
													<xs:complexType>
														<xs:attribute name="CountryCode" type="CountryCodeType" use="required"/>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="CountryList" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Included list of countries. The RegionList is optional if the CountryList specified</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Country" maxOccurs="unbounded">
							<xs:complexType>
								<xs:attribute name="CountryCode" type="CountryCodeType" use="required"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="PropertyDetails" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="PropertyList" type="PropertyListScopeType">
							<xs:annotation>
								<xs:documentation>Allows you to include or exclude a property or a list of properties</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="Name" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="ChainCode" type="ChainCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Unique Code of a chain/corporation</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="VersionNumber" type="VersionTimeStampType">
			<xs:annotation>
				<xs:documentation>Version of data set and prevents Concurrent Updates. Version number MUST exist only for Update RQ and Search RS </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SellStrategyCode" type="SellStrategyCodeType">
			<xs:annotation>
				<xs:documentation>Unique Sell Strategy code  This code is autogenerated at the corporate level. The Sell Strategy Code is mandatory in the Update RQ, Search RS </xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="SellStrategyRetrieveScopeType">
		<xs:annotation>
			<xs:documentation>Scope of an Sell Strategy retrieve type of the Brand Sell Strategy</xs:documentation>
		</xs:annotation>
		<xs:attributeGroup ref="PropertyIdentifierGroup"/>
		<xs:attribute name="SellStrategyType" use="required">
			<xs:annotation>
				<xs:documentation>Supports two values: RoomType and RatePlan. Based on the selection of the Sell Strategy type, it will return the list of Sell Strategies</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string"/>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="SellStrategyCode" type="SellStrategyCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Unique Sell Strategy code that defines the sell strategy at the corporate and hotel level.  This field is mandatory and must = 3 characters when created at the hotel level for the Rate Plan Sell Strategy and is user defined. This code is autogenerated at the for the Room type Sell Strategy.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="VersionNumber" type="VersionTimeStampType" use="required">
			<xs:annotation>
				<xs:documentation>Version of data set and prevents Concurrent Updates. Version number MUST exist only for Update RQ and Search RS</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SetVersionNumber" type="VersionTimeStampType" use="optional">
			<xs:annotation>
				<xs:documentation>Version of data set and prevents Concurrent Updates.  This will exist only for Search RS and the only if there are any dates assigned to any of the existing Sell Strategies.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="SellStrategyTemplateType">
		<xs:annotation>
			<xs:documentation>Scope and content of the Brand Sell Strategy</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Scope" type="SellStrategyTemplateScopeType"/>
			<xs:element name="Content">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="RatePlanSellStrategy">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="OrderedRatePlanCodeList">
										<xs:complexType>
											<xs:sequence>
												<xs:element name="RatePlanCode" maxOccurs="unbounded">
													<xs:complexType>
														<xs:simpleContent>
															<xs:extension base="RatePlanCodeType">
																<xs:attribute name="RestrictionType">
																	<xs:simpleType>
																		<xs:restriction base="xs:string">
																			<xs:enumeration value="Mandatory"/>
																			<xs:enumeration value="PositionalMandatory"/>
																		</xs:restriction>
																	</xs:simpleType>
																</xs:attribute>
															</xs:extension>
														</xs:simpleContent>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
								<xs:attribute name="MaxPositionForPositionalRatePlans" use="required">
									<xs:annotation>
										<xs:documentation>This attribute exists only at chain level and is mandatory</xs:documentation>
									</xs:annotation>
									<xs:simpleType>
										<xs:restriction base="xs:int">
											<xs:minInclusive value="1"/>
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
								<xs:attribute name="MaxPositionalRatePlans" use="required">
									<xs:annotation>
										<xs:documentation>This attribute exists only at chain level and is mandatory</xs:documentation>
									</xs:annotation>
									<xs:simpleType>
										<xs:restriction base="xs:int">
											<xs:minInclusive value="1"/>
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
								<xs:attribute name="MaxNumberOfRatePlans" use="required">
									<xs:annotation>
										<xs:documentation>This attribute exists only at chain level and is mandatory</xs:documentation>
									</xs:annotation>
									<xs:simpleType>
										<xs:restriction base="xs:int">
											<xs:minInclusive value="1"/>
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="MaxNumberOfSellStrategies" use="required">
						<xs:annotation>
							<xs:documentation>This attribute exists only at chain level and is mandatory</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:int">
								<xs:minInclusive value="1"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SellStrategyType">
		<xs:annotation>
			<xs:documentation>Scope and Content of the sell strategy at the property level</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Scope" type="SellStrategyScopeType"/>
			<xs:element name="Content">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="OrderedCodeList">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Code" type="OrderedCodeType" maxOccurs="unbounded"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="Name">
						<xs:annotation>
							<xs:documentation>This attribute is mandatory and MUST exist ONLY when Sell Strategy type is RatePlan.</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:minLength value="1"/>
								<xs:maxLength value="30"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="Description">
						<xs:annotation>
							<xs:documentation>This attribute MUST exist ONLY when Sell Strategy type is RatePlan.</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:minLength value="0"/>
								<xs:maxLength value="60"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SellStrategyRetrieveType">
		<xs:annotation>
			<xs:documentation>Scope and Content of the sell strategy at the property level for the retrieve</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Scope" type="SellStrategyRetrieveScopeType"/>
			<xs:element name="PeriodList" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Period" type="PolicyPeriodType" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Content">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="OrderedCodeList">
							<xs:annotation>
								<xs:documentation>List of codes based on the Sell Strategy types</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Code" type="OrderedCodeType" maxOccurs="unbounded"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="Name">
						<xs:annotation>
							<xs:documentation>This attribute is mandatory and MUST exist ONLY when Sell Strategy type is RatePlan.</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:minLength value="1"/>
								<xs:maxLength value="30"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="Description">
						<xs:annotation>
							<xs:documentation>This attribute MUST exist ONLY when Sell Strategy type is RatePlan.</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:minLength value="0"/>
								<xs:maxLength value="60"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="SellStrategyCodeType">
		<xs:annotation>
			<xs:documentation>Unique Code that identifies the Sell Strategy</xs:documentation>
		</xs:annotation>
		<xs:restriction base="FunctionalCode"/>
	</xs:simpleType>
	<xs:attributeGroup name="SpecialEventIdentifierGroup">
		<xs:annotation>
			<xs:documentation>Defines the Special Event with the combination of property rate plan identifier group and special event code. Brand and Property are optional, this group is used by policies which can be set at chain level</xs:documentation>
		</xs:annotation>
		<xs:attributeGroup ref="PropertyRatePlanIdentifierOptionalGroup"/>
		<xs:attribute name="SpecialEventCode" type="FunctionalCode" use="optional"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SpecialEventIdentifierOptionalGroup">
		<xs:annotation>
			<xs:documentation>Defines the Special Event with the combination of property rate plan identifier group and special event code. Brand and Property are optional, this group is used by policies which can be set at chain level</xs:documentation>
		</xs:annotation>
		<xs:attributeGroup ref="PropertyRatePlanIdentifierOptionalGroup"/>
		<xs:attribute name="SpecialEventCode" type="FunctionalCode" use="optional">
			<xs:annotation>
				<xs:documentation>Unique FunctionalCode for the SE. USED ONLY For UpdateRQ/RetrieveRS/SearchRS, NOT for CreateRQ</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:complexType name="SpecialEventSearchType">
		<xs:annotation>
			<xs:documentation>Determines the summary of the special event</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Scope">
				<xs:annotation>
					<xs:documentation>Specials are defined at hotel level only today. But it could be defined at chain level later on</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attributeGroup ref="SpecialEventIdentifierOptionalGroup"/>
					<xs:attribute name="VersionNumber" type="VersionNumberType">
						<xs:annotation>
							<xs:documentation>Version of data set and prevents Concurrent Updates. ONLY USED for UpdateRQ/RetrieveRS, NOT for CreateRQ nor SearchRS</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Period">
				<xs:annotation>
					<xs:documentation>A special has a fixed Start date and a fixed End date</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attributeGroup ref="PeriodGroup"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="Content">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Description" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Free flow text describing the event</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="IsDepositRequired" type="xs:boolean" use="required"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SpecialEventType">
		<xs:annotation>
			<xs:documentation>Determines the overall structure of the Special event</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Scope">
				<xs:annotation>
					<xs:documentation>Specials are defined at hotel level only today. But it could be defined at chain level later on</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attributeGroup ref="SpecialEventIdentifierOptionalGroup"/>
					<xs:attribute name="VersionNumber" type="VersionNumberType">
						<xs:annotation>
							<xs:documentation>Version of data set and prevents Concurrent Updates. ONLY USED for UpdateRQ/RetrieveRS, NOT for CreateRQ nor SearchRS</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Period">
				<xs:annotation>
					<xs:documentation>A special has a fixed Start date and a fixed End date</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attributeGroup ref="PeriodGroup"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="Content" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If content is used, at least one of the optional element inside the content has to be present: AdvanceDeposit or Description</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Description" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Free flow text describing the event</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="AdvanceDeposit" minOccurs="0">
							<xs:annotation>
								<xs:documentation>At least one element among the DepositInfo/CancellationPenalty/CancellationNoShowPolicy is mandatory, if Deposit is used</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Deposit" type="DepositPolicyType" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Deposit details</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="CancellationPenalty" type="CancelPolicyType" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Cancel penalty associated to the deposit</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="CancellationNoShowPolicy" type="DepositCancelNoShowPolicyType" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Cancel no show policy associated to the deposit</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:attributeGroup name="SpecialRequirementIdentifierGroup">
		<xs:annotation>
			<xs:documentation>Defines the Special Requirement with the combination of property rate plan identifier group and special event code. Brand and Property are optional, this group is used by policies which can be set at chain level</xs:documentation>
		</xs:annotation>
		<xs:attributeGroup ref="PropertyRatePlanIdentifierOptionalGroup"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SpecialRequirementIdentifierOptionalGroup">
		<xs:annotation>
			<xs:documentation>Defines the Special Requirement with the combination of property rate plan identifier group and special event code. Brand and Property are optional, this group is used by policies which can be set at chain level</xs:documentation>
		</xs:annotation>
		<xs:attributeGroup ref="PropertyRatePlanIdentifierOptionalGroup"/>
	</xs:attributeGroup>
	<xs:complexType name="SpecialRequirementRetrieveType">
		<xs:annotation>
			<xs:documentation>Special Requirement type used by retrieve and search service: contains additional info that is not used by create and update</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Scope">
				<xs:annotation>
					<xs:documentation>Special Requirement can be created at chain level, property level or rate plan level</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attributeGroup ref="PropertyRatePlanIdentifierOptionalGroup"/>
					<xs:attribute name="VersionNumber" type="VersionNumberType" use="required">
						<xs:annotation>
							<xs:documentation>Version of the overall hotel's special requirements attached to the scope.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Period" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When the special requirement will be applied: period and day of the week</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attributeGroup ref="PeriodGroup"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="Content" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Functional content of the special requirement</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Description" type="xs:string" minOccurs="0"/>
						<xs:element name="AdvanceDeposit" minOccurs="0">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Deposit" type="DepositPolicyType" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Deposit details</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="CancellationPenalty" type="CancelPolicyType" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Cancel penalty associated to the deposit</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="CancellationNoShowPolicy" type="DepositCancelNoShowPolicyType" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Cancel no show policy associated to the deposit</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="MinimumLengthOfStay" type="xs:int" use="required">
						<xs:annotation>
							<xs:documentation>Minimum number of nights the guest has to stay</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SpecialRequirementSetType">
		<xs:annotation>
			<xs:documentation>Defines the special requirement object used in case of a set service.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Scope">
				<xs:annotation>
					<xs:documentation>Specials are defined at hotel level only today. But it could be defined at chain level later on</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attributeGroup ref="SpecialRequirementIdentifierOptionalGroup"/>
					<xs:attribute name="VersionNumber" type="VersionNumberType">
						<xs:annotation>
							<xs:documentation>Version of entire time line.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Unset" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Period used to erase deposit policy on the specified period.
'''Note: At least one of the elements, the "Unset" or the"Set" must be provided.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Period">
							<xs:annotation>
								<xs:documentation>If no period is provided, it will unset or delete the Special Requirement for the  entire open period </xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:attributeGroup ref="PeriodGroup"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Set" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This element is conditional with the "DeletePeriod" element: at least the "Unset" or the"Set" must be provided.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Period">
							<xs:annotation>
								<xs:documentation>When the special requirement content will be applied</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:attributeGroup ref="PeriodGroup"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="Content">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Description" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Free flow text describing the requirement</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="AdvanceDeposit" minOccurs="0">
										<xs:annotation>
											<xs:documentation>At least one element among the DepositInfo / CancellationPenalty / CancellationNoShowPolicy is mandatory, if Deposit is used</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:sequence>
												<xs:element name="Deposit" type="DepositPolicyType" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Deposit details</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="CancellationPenalty" type="CancelPolicyType" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Cancel penalty associated to the deposit</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="CancellationNoShowPolicy" type="DepositCancelNoShowPolicyType" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Cancel no show policy associated to the deposit</xs:documentation>
													</xs:annotation>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
								<xs:attribute name="MinimumLengthOfStay" type="xs:int" use="required">
									<xs:annotation>
										<xs:documentation>Minimum number of nights the guest has to stay</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="StartDateType">
		<xs:annotation>
			<xs:documentation>Start date of tax object</xs:documentation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="2015-03-28"/>
					<altova:example value="2015-01-01"/>
				</altova:exampleValues>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:date">
			<xs:minInclusive value="2000-01-01"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="StateCodeType">
		<xs:annotation>
			<xs:documentation>Defined by ISO 3166-2 Standard</xs:documentation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="MA"/>
					<altova:example value="FL"/>
					<altova:example value="NH"/>
				</altova:exampleValues>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:minLength value="2"/>
			<xs:maxLength value="2"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="StateScopeType">
		<xs:annotation>
			<xs:documentation>Contains the state details</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="StateCodeList">
				<xs:annotation>
					<xs:documentation>List of states. If none is specified, it applies to all</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="StateCode" type="StateCodeType" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Defined by ISO 3166-2 Standard</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="All" type="xs:string">
				<xs:annotation>
					<xs:documentation>All states</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:simpleType name="SupportUndefinedReturn">
		<xs:annotation>
			<xs:documentation>Support search for undefined attributes at the corporate level</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="true"/>
			<xs:enumeration value="false"/>
			<xs:enumeration value="none"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="TaxAndFeeDefinitionType">
		<xs:annotation>
			<xs:documentation>Determines the make up of the tax</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Computation">
				<xs:annotation>
					<xs:documentation>Computation of the tax and fee rule value to be applied based on no conditions or a single condition or multiple numbers of conditions</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:choice>
						<xs:element name="TaxValue" type="AmountTypeType">
							<xs:annotation>
								<xs:documentation>Tax value based on amount type rules</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Condition" type="ConditionType" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>List of different conditions that could be applied to that particular tax and fee rule</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:complexType>
			</xs:element>
			<xs:element name="AmountTaxComputation">
				<xs:annotation>
					<xs:documentation>Computation of the amount with or without taxes </xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ChargeUnit" type="ChargeUnitType">
							<xs:annotation>
								<xs:documentation>Defines the unit of the tax and how it applies</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ChargeFrequency" type="ChargeFrequencyType">
							<xs:annotation>
								<xs:documentation>Defines when/how often the tax is applied</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Mode" type="ModeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Conditional field (only mandatory in case the amount type is in percentage)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CompoundTaxList" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Conditional field (Mandatory if the mode is amount with tax or tax only)</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="CompoundTax" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>Contains the TaxID and position of the compound tax - multiple taxes</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:attributeGroup ref="TaxIdentifierGroup"/>
											<xs:attribute name="PositionOrder" type="PositionOrderType">
												<xs:annotation>
													<xs:documentation>Sets the order in which taxes are applied</xs:documentation>
												</xs:annotation>
											</xs:attribute>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Residency" type="ResidencyType">
				<xs:annotation>
					<xs:documentation>Determines whether tax and fee rule is applicable based on the residency status</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="PaymentAtHotelStatus" type="PaymentAtHotelStatusType" use="required">
			<xs:annotation>
				<xs:documentation>If services are included then this value will be NotPaidAtHotel</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InclusionStatus" type="InclusionStatusType" use="required">
			<xs:annotation>
				<xs:documentation>Determines if tax is included in rate or excluded from rate</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="TaxAndFeeScopeType">
		<xs:annotation>
			<xs:documentation>Contains the chain, brand and property level details</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Country" type="CountryScopeType"/>
			<xs:element name="State" type="StateScopeType" minOccurs="0"/>
			<xs:element name="City" type="CityScopeType"/>
			<xs:element name="Brand" type="BrandScopeType"/>
			<xs:element name="Property" type="PropertyScopeType"/>
			<xs:element name="ProductType" type="ProductTypeScopeType">
				<xs:annotation>
					<xs:documentation>List of products (rooms or/and services) By default applies to all rooms. In case the tax must be applied only to room(s), then the selection type for service must be "None" (vice versa)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TaxAndFeeType">
		<xs:annotation>
			<xs:documentation>Determines the overall structure of a tax</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Name" type="NameType">
				<xs:annotation>
					<xs:documentation>Name of the tax or fee</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Description" type="DescriptionType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Free flow text defining the tax or fee in more detail</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Scope" type="TaxAndFeeScopeType">
				<xs:annotation>
					<xs:documentation>Chain, Brand and Property level details</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Definition" type="TaxAndFeeDefinitionType">
				<xs:annotation>
					<xs:documentation>Describes the individual pricing mechanisms in order to define a tax</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="Type" type="OTA_FeeTaxTypeType" use="required">
			<xs:annotation>
				<xs:documentation>Industry standard for tax types http://www.opentravel.org (OTA Fee Tax Type - FFT)</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:simpleType name="TaxCodeType">
		<xs:annotation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="Need Action Item to determine final min/max length/type"/>
					<altova:example value="ABC123"/>
					<altova:example value="DEF"/>
					<altova:example value="456"/>
				</altova:exampleValues>
			</xs:appinfo>
			<xs:documentation>Internally created tax code</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:attributeGroup name="TaxDetailedIdentifierGroup">
		<xs:annotation>
			<xs:documentation>Used to identify a tax or fee with Chain/Brand/PropertyCode</xs:documentation>
		</xs:annotation>
		<xs:attribute name="ChainCode" type="ChainCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Unique Code of a chain/corporation</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BrandCode" type="BrandCodeType" use="optional">
			<xs:annotation>
				<xs:documentation>Unique code assigned to a particular brand. Unique at the chain level.
When creating / updating / retrieving / deleting a policy at hotel level, then the brand code is mandatory.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PropertyCode" type="PropertyCodeType" use="optional">
			<xs:annotation>
				<xs:documentation>Unique code assigned to a particular hotel.  Unique at brand level
When creating / updating / retrieving / deleting a policy at hotel level, then the property code is mandatory.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InternalFunctionalCode" use="required">
			<xs:annotation>
				<xs:documentation>Code of the created tax or fee</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="TaxCodeType"/>
			</xs:simpleType>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="TaxIdentifierGroup">
		<xs:annotation>
			<xs:documentation>Used to identify a tax or fee</xs:documentation>
		</xs:annotation>
		<xs:attribute name="InternalFunctionalCode" use="required">
			<xs:annotation>
				<xs:documentation>Code of the created tax or fee</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="TaxCodeType"/>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="ChainCode" type="ChainCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Unique Code of a chain/corporation</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:complexType name="TaxValueType">
		<xs:annotation>
			<xs:documentation>Describes the manner in which the tax is being created</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="FlatValue">
				<xs:annotation>
					<xs:documentation>Filled if tax is a flat amount</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Value" type="xs:decimal">
							<xs:annotation>
								<xs:documentation>Flat amount</xs:documentation>
								<xs:appinfo>
									<altova:exampleValues>
										<altova:example value="5"/>
									</altova:exampleValues>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
						<xs:element name="CurrencyCode">
							<xs:annotation>
								<xs:documentation>Defined by ISO 4217 Standard</xs:documentation>
								<xs:appinfo>
									<altova:exampleValues>
										<altova:example value="USD"/>
									</altova:exampleValues>
								</xs:appinfo>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:length value="3"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="PercentageValue" type="xs:decimal">
				<xs:annotation>
					<xs:documentation>Filled if tax is a percentage</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:simpleType name="UserTaxCodeType">
		<xs:annotation>
			<xs:documentation>Defines the user named code identifying a tax and fee rule. Mandatory for specific customers and unique at brand and property level</xs:documentation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="STTAX"/>
					<altova:example value="CITYTAX"/>
				</altova:exampleValues>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:maxLength value="10"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="VersionNumberType">
		<xs:annotation>
			<xs:documentation>Version of data set and prevents Concurrent Updates</xs:documentation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="1"/>
					<altova:example value="2"/>
					<altova:example value="3"/>
				</altova:exampleValues>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:unsignedLong"/>
	</xs:simpleType>
	<xs:simpleType name="VersionTimeStampType">
		<xs:annotation>
			<xs:documentation>Version of data set and prevents Concurrent Updates</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:unsignedLong"/>
	</xs:simpleType>
	<xs:simpleType name="ViewershipCodeType">
		<xs:annotation>
			<xs:documentation>Unique code assigned to a particular viewership rule. Unique at the chain level</xs:documentation>
		</xs:annotation>
		<xs:restriction base="FunctionalCode">
			<xs:maxLength value="7"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:attributeGroup name="ViewershipRuleIdentifierGroup">
		<xs:annotation>
			<xs:documentation>Defines the chain, brand and property code identifiers for a specific property.  Brand and Property are optional, this group is used by policies which can be set at chain level</xs:documentation>
		</xs:annotation>
		<xs:attribute name="ChainCode" type="ChainCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Unique Code of a chain/corporation</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BrandCode" type="BrandCodeType" use="optional">
			<xs:annotation>
				<xs:documentation>Unique code assigned to a particular brand. Unique at the chain level.
When creating / updating / retrieving / deleting a policy at hotel level, then the brand code is mandatory.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PropertyCode" type="PropertyCodeType" use="optional">
			<xs:annotation>
				<xs:documentation>Unique code assigned to a particular hotel.  Unique at brand level
When creating / updating / retrieving / deleting a policy at hotel level, then the property code is mandatory.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ViewershipCode" type="ViewershipCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Unique auto generated code defined for a Viewership rule</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="ViewershipRuleIdentifierOptionalGroup">
		<xs:annotation>
			<xs:documentation>Defines the chain, brand and property code identifiers for a specific property.  Brand and Property are optional, this group is used by policies which can be set at chain level</xs:documentation>
		</xs:annotation>
		<xs:attribute name="ChainCode" type="ChainCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Unique Code of a chain/corporation</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BrandCode" type="BrandCodeType" use="optional">
			<xs:annotation>
				<xs:documentation>Unique code assigned to a particular brand. Unique at the chain level.
When creating / updating / retrieving / deleting a policy at hotel level, then the brand code is mandatory.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PropertyCode" type="PropertyCodeType" use="optional">
			<xs:annotation>
				<xs:documentation>Unique code assigned to a particular hotel.  Unique at brand level
When creating / updating / retrieving / deleting a policy at hotel level, then the property code is mandatory.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ViewershipCode" type="ViewershipCodeType" use="optional">
			<xs:annotation>
				<xs:documentation>Unique auto generated code defined for a Viewership rule. This element would be present only for the update RQ</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:complexType name="ViewershipRuleRetrieveType">
		<xs:annotation>
			<xs:documentation>The scope, period and content section of the search response</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Scope">
				<xs:complexType>
					<xs:sequence>
						<xs:choice>
							<xs:annotation>
								<xs:documentation>Currently, it is only the list of channel types that would be provided.</xs:documentation>
							</xs:annotation>
							<xs:element name="ChannelTypeList">
								<xs:annotation>
									<xs:documentation>Type of channel (booking source) to which this viewership rule applies. Can support multiple channels.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="ChannelType" type="xs:int" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>1 = Own hotel – PMS
2 = Call center / hotel to hotel – Booking Tool
3 = Brand website 
4 = GDS/Third Party websites – Other
5 = Mobile channel
6 = Unused</xs:documentation>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="ChannelList" minOccurs="0">
								<xs:annotation>
									<xs:documentation>List of channels </xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Channel" maxOccurs="unbounded">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:minLength value="1"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:choice>
						<xs:element name="OfficeID_List" minOccurs="0">
							<xs:annotation>
								<xs:documentation>If none selected, it is applicable to all</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="OfficeID" type="OfficeID_Type" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>9 characters, First 3 must be letters (IATA city code), sixth one a number (corporate qualifier), other characters must be letters or numbers.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="CorporateID_List" minOccurs="0">
							<xs:annotation>
								<xs:documentation>If none selected, it is applicable to all. The List size will always be limited to 1 currently</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="CorporateID" type="CorporateID_Type" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>Corporate ID to be associated with Rate Plan. Rate Plan can be associate with only 1 Corp ID. To be validated against Javelin. (IHG external system that stores Corporate information)</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="IATA_NumberList" minOccurs="0">
							<xs:annotation>
								<xs:documentation>If none of the IATA numbers selected, it will be applicable to all IATA numbers. List Of IATA numbers</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="IATA_Number" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>Unique code for the IATA 5-8 Characters</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:minLength value="5"/>
												<xs:maxLength value="8"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="CountryCodeList" minOccurs="0">
							<xs:annotation>
								<xs:documentation>If no countries selected, it is applicable to all countries. List of countries. Currently only 1 country can be selected </xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="CountryCode" type="CountryCodeType" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>Defined by ISO 3166-1 alpha-2 Standard</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="CityCodeList" minOccurs="0">
							<xs:annotation>
								<xs:documentation>If no cities selected, it is applicable to all the cities selected for the country selected, if any. List of cities. If none is specified, it applies to all. ISO 37120 Standard </xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="CityCode" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>Defined by ISO 37120 Standard</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="CityCodeType">
												<xs:minLength value="3"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attributeGroup ref="ViewershipRuleIdentifierGroup"/>
					<xs:attribute name="VersionNumber" type="VersionNumberType" use="required">
						<xs:annotation>
							<xs:documentation>Prevent concurrent updates</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Period" type="PolicyPeriodType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Period on which the viewership rule would be applicable to</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Content">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="RatePlanCodeList">
							<xs:annotation>
								<xs:documentation>The list of rate plan codes, the viewership is applicable to. Currently the list size will always be limited to 1. You can associate only one Viewership rule to a rate plan</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="RatePlanCode" type="RatePlanCodeType" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>Unique identifier of the rate plan</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="RoomTypeList" minOccurs="0">
							<xs:annotation>
								<xs:documentation>If none of the  options selected, it is applicable to all room types. List of room types the viewership rule is applicable to</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="RoomTypes" type="RoomCodeType" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>The unique identifier for the room type</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ViewershipRuleType">
		<xs:annotation>
			<xs:documentation>The scope, period and content section of the Create and Update request</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Scope">
				<xs:complexType>
					<xs:sequence>
						<xs:choice>
							<xs:annotation>
								<xs:documentation>Currently, it is only the list of channel types that would be provided.</xs:documentation>
							</xs:annotation>
							<xs:element name="ChannelTypeList">
								<xs:annotation>
									<xs:documentation>Type of channel (booking source) to which this viewership rule applies. Can support multiple channels.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="ChannelType" type="xs:int" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>1 = Own hotel – PMS
2 = Call center / hotel to hotel – Booking Tool
3 = Brand website 
4 = GDS/Third Party websites – Other
5 = Mobile channel
6 = Unused</xs:documentation>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="ChannelList" minOccurs="0">
								<xs:annotation>
									<xs:documentation>List of channels </xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Channel" maxOccurs="unbounded">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:minLength value="1"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:choice>
						<xs:element name="OfficeID_List" minOccurs="0">
							<xs:annotation>
								<xs:documentation>If none selected, it is applicable to all</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="OfficeID" type="OfficeID_Type" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>9 characters, First 3 must be letters (IATA city code), sixth one a number (corporate qualifier), other characters must be letters or numbers.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="CorporateID_List" minOccurs="0">
							<xs:annotation>
								<xs:documentation>If none selected, it is applicable to all. The List size will always be limited to 1 currently</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="CorporateID" type="CorporateID_Type" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>Corporate ID to be associated with Rate Plan. Rate Plan can be associate with only 1 Corp ID. To be validated against Javelin. (IHG external system that stores Corporate information)</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="IATA_NumberList" minOccurs="0">
							<xs:annotation>
								<xs:documentation>If none of the IATA numbers selected, it will be applicable to all IATA numbers. List Of IATA numbers</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="IATA_Number" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>Unique code for the IATA 5-8 Characters</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:minLength value="5"/>
												<xs:maxLength value="8"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="CountryCodeList" minOccurs="0">
							<xs:annotation>
								<xs:documentation>If no countries selected, it is applicable to all countries. List of countries. Currently only 1 country can be selected </xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="CountryCode" type="CountryCodeType" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>Defined by ISO 3166-1 alpha-2 Standard</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="CityCodeList" minOccurs="0">
							<xs:annotation>
								<xs:documentation>If no cities selected, it is applicable to all the cities selected for the country selected, if any. List of cities. If none is specified, it applies to all. ISO 37120 Standard </xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="CityCode" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>Defined by ISO 37120 Standard</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="CityCodeType">
												<xs:minLength value="3"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attributeGroup ref="ViewershipRuleIdentifierOptionalGroup"/>
					<xs:attribute name="VersionNumber" type="VersionNumberType">
						<xs:annotation>
							<xs:documentation>Version number will be provided only for the Update RQ</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Period" type="PolicyPeriodType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Period on which the viewership rule would be applicable to</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Content">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="RatePlanCodeList">
							<xs:annotation>
								<xs:documentation>The list of rate plan codes, the viewership is applicable to. Currently the list size will always be limited to 1. You can associate only one Viewership rule to a rate plan</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="RatePlanCode" type="RatePlanCodeType" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>Unique identifier of the rate plan</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="RoomTypeList" minOccurs="0">
							<xs:annotation>
								<xs:documentation>If none of the  options selected, it is applicable to all room types. Currently it is applicable to all room types always. Not a possibility to select any specific room type. List of room types the viewership rule is applicable to</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="RoomTypes" type="RoomCodeType" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>The unique identifier for the room type</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="VisibilityRuleContentType">
		<xs:annotation>
			<xs:documentation>The Content of the visibility rule: object type and code</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="BrandRegions" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The combination of brands and regions. Brand cannot be defined without a region and vice and versa</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Region" type="RegionScopePluralType">
							<xs:annotation>
								<xs:documentation>Geographical Region codes</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Brand" type="BrandScopePluralType">
							<xs:annotation>
								<xs:documentation>Brand codes</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Countries" minOccurs="0">
				<xs:annotation>
					<xs:documentation>NOT IMPLEMENTED YET. Included and excluded list of countries. </xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Country" maxOccurs="unbounded">
							<xs:complexType>
								<xs:attribute name="IsIncluded" type="xs:boolean" use="required">
									<xs:annotation>
										<xs:documentation>Indicates if country is included or not</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="Code" type="CountryCodeType" use="required">
									<xs:annotation>
										<xs:documentation>Country code</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Properties" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows you to include or exclude a property or a list of properties</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Property" type="PropertyScopePluralType" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:attributeGroup name="VisibilityRuleIdentifierGroup">
		<xs:annotation>
			<xs:documentation>Defines the visibility rule scope with the functional ID</xs:documentation>
		</xs:annotation>
		<xs:attribute name="ChainCode" type="ChainCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Chain Code</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CodeType" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>Possible values for now: "RatePlan", "PriceGrid"</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Code" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>Code of the object. Example for Rate Plan: "RP001"</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="RatePlan"/>
						<altova:example value="PriceGrid"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="VisibilityRuleCode" type="FunctionalCode" use="required">
			<xs:annotation>
				<xs:documentation>Unique identifier of the Visibility Rule, system generated. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="VersionNumber" type="VersionTimeStampType" use="required">
			<xs:annotation>
				<xs:documentation>Version Number of the rule</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:complexType name="VisibilityScopeType">
		<xs:annotation>
			<xs:documentation>The brands and the regions to which the propagation rule applies</xs:documentation>
		</xs:annotation>
		<xs:attribute name="ChainCode" type="ChainCodeType" use="required">
			<xs:annotation>
				<xs:documentation>Chain code</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CodeType" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>Possible values for now: "RatePlan", "PriceGrid"</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="RatePlan"/>
						<altova:example value="PriceGrid"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Code" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>Code of the object. Example for Rate Plan: "RP001"</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="RP001"/>
						<altova:example value="C1"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="VisibilityScopeRetrieveType">
		<xs:annotation>
			<xs:documentation>The brands and the regions to which the propagation rule applies</xs:documentation>
		</xs:annotation>
		<xs:attributeGroup ref="VisibilityRuleIdentifierGroup"/>
	</xs:complexType>
	<xs:complexType name="YieldManagementType">
		<xs:annotation>
			<xs:documentation>This defines the type of yield management and if any flat or percent values associated to it</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="AdjustmentValue">
				<xs:annotation>
					<xs:documentation>Accepts both positive and negative values. Applicable only for the RMS hotels</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:choice>
						<xs:element name="PercentValue" type="xs:decimal"/>
						<xs:element name="FlatValue" type="xs:decimal"/>
					</xs:choice>
				</xs:complexType>
			</xs:element>
			<xs:element name="YieldAtBestRate" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>Best flexible rate</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="YieldAtOwnValue" type="xs:string"/>
			<xs:element name="OverrideRestrictions" type="xs:boolean"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="GroupOrganizerDepositPoliciesType">
		<xs:annotation>
			<xs:documentation>Deposit Policies which applies to the Group Organizer</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Deposit" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Optional DepositPolicyForGroupOrganizer</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="DaysPriorToArrival" use="required">
						<xs:annotation>
							<xs:documentation>Days prior to First Arrival Date of the Group</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:integer">
								<xs:minInclusive value="0"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="CurrencyCode" use="required">
						<xs:annotation>
							<xs:documentation>ISO Currency code of the monetary amount</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="CurrencyCodeType">
								<xs:length value="3"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="Amount" use="required">
						<xs:annotation>
							<xs:documentation>Amount Due for Deposit</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:decimal"/>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="GroupOrganizerPoliciesType">
		<xs:sequence>
			<xs:element name="Deposits" type="GroupOrganizerDepositPoliciesType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Define the GroupOrganizer Policies. These policies applies to Group Organizer Level</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
</xs:schema>
