{
	"info": {
		"_postman_id": "2d6dbe56-3502-4c93-9a33-1dadddce1e1c",
		"name": "RBS-Integration-Tests-ACRS ICE-LV-Scenario Copy 2",
		"description": "RBS-ACRS-Functional Test ",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17302509",
		"_collection_link": "https://rbs-postman.postman.co/workspace/RBS-Integration-and-Sanity-Test~fd923ab4-54e6-4325-a71c-3aac22f4d563/collection/17302509-2d6dbe56-3502-4c93-9a33-1dadddce1e1c?action=share&creator=17302509&source=collection_link"
	},
	"item": [
		{
			"name": "ICE",
			"item": [
				{
					"name": "Token",
					"item": [
						{
							"name": "ICE_Token_OKTA",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"JWT auth | Status code is 200 with valid response body\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData).to.have.property(\"token_type\");",
											"    pm.expect(jsonData).to.have.property(\"access_token\");",
											"});",
											"",
											"postman.setEnvironmentVariable(\"ICE_JWT_Token\", \"Bearer \" + pm.response.json().access_token);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"\r",
											"/*Construct Random Dates [for availability] from 60 days to 360*/\r",
											"start = new Date(moment().add(20, 'days'));\r",
											"end = new Date(moment().add(30, 'days'));\r",
											"\r",
											"options = { day: '2-digit', month: '2-digit', year: 'numeric' };\r",
											"//setting options to overcome single digit for dates/month.\r",
											"\r",
											"checkInDate = randomDate(start, end).toLocaleDateString(\"en-US\", options);\r",
											"checkOutDate = moment(checkInDate).add(2, 'days').format('MM/DD/YYYY');\r",
											"\r",
											"postman.setEnvironmentVariable('checkInDate',  checkInDate);\r",
											"postman.setEnvironmentVariable('checkOutDate',  checkOutDate);\r",
											"\r",
											"postman.setEnvironmentVariable('invalidCheckInDate',   moment().add(-1, 'days').format('MM/DD/YYYY'));\r",
											"postman.setEnvironmentVariable('invalidCheckOutDate',  moment().add(-2, 'days').format('MM/DD/YYYY'));\r",
											"\r",
											"checkInDate_v2 = randomDate(start, end).toLocaleDateString(\"fr-CA\", options);\r",
											"checkInDate_v2_format = moment(checkInDate_v2).format('YYYY-MM-DD');\r",
											"checkOutDate_v2 = moment(checkInDate_v2_format).add(2, 'days').format('YYYY-MM-DD');\r",
											"\r",
											"postman.setEnvironmentVariable('checkInDate_v2',  checkInDate_v2_format);\r",
											"postman.setEnvironmentVariable('checkOutDate_v2',  checkOutDate_v2);\r",
											"\r",
											"postman.setEnvironmentVariable('invalidCheckInDate_v2',   moment().add(-1, 'days').format('YYYY-MM-DD'));\r",
											"postman.setEnvironmentVariable('invalidCheckOutDate_v2',  moment().add(-2, 'days').format('YYYY-MM-DD'));\r",
											"\r",
											"postman.setEnvironmentVariable(\"scenarioBasedCheckInDate\", checkInDate_v2_format);\r",
											"postman.setEnvironmentVariable(\"scenarioBasedCheckOutDate\", checkOutDate_v2);\r",
											"\r",
											"postman.setEnvironmentVariable(\"scenarioRIBasedCheckInDate\", checkInDate_v2_format);\r",
											"postman.setEnvironmentVariable(\"scenarioRIBasedCheckOutDate\", checkOutDate_v2);\r",
											"\r",
											"postman.setEnvironmentVariable(\"noAvailCheckInDate\", moment().add(60, 'days').format('YYYY-MM-DD'));\r",
											"postman.setEnvironmentVariable(\"noAvailCheckOutDate\", moment().add(62, 'days').format('YYYY-MM-DD'));\r",
											"\r",
											"postman.setEnvironmentVariable(\"minMaxLoscheckInDate\", moment().add(53, 'days').format('YYYY-MM-DD'));\r",
											"postman.setEnvironmentVariable(\"minMaxLosCheckOutDate\", moment().add(60, 'days').format('YYYY-MM-DD'));\r",
											"\r",
											"postman.setEnvironmentVariable(\"scenarioBasedWebCheckInDate\", checkInDate_v2_format);\r",
											"postman.setEnvironmentVariable(\"scenarioBasedWebCheckOutDate\", checkOutDate_v2);\r",
											"\r",
											"function randomDate(start, end) {\r",
											"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()))\r",
											"}\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "{{IDMS_grantType}}",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{IDMS_clientId}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{IDMS_secret}}",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "{{IDMS_scopes}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{identity_endpoint}}",
									"host": [
										"{{identity_endpoint}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Las-Vegas",
					"item": [
						{
							"name": "Scenario Oriented",
							"item": [
								{
									"name": "1.Transient User Success",
									"item": [
										{
											"name": "Single Availability-Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"1.1 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Success : Single Availability with Checkin Date,Â Checkout Date, Property Id and Number of Adults\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.eq(jsonData.ratePlans[0]);\r",
															"  if(jsonData.ratePlans.length){\r",
															"      var ratePlanIndex =0;\r",
															"      \r",
															"    var itemizedList = jsonData.ratePlans[ratePlanIndex].rooms[0].price.itemized\r",
															"  pm.expect(0).not.equal(itemizedList.length);\r",
															"  //save booking object\r",
															"  var bookings = [];\r",
															"    for (var i = 0; i < itemizedList.length; i++) {\r",
															"        var itemized = itemizedList[i];\r",
															"        var booking = {};\r",
															"        booking.date = itemized.date;\r",
															"        booking.price = itemized.basePrice;\r",
															"        booking.programId =itemized.programId; \r",
															"        booking.overridePrice= -1;\r",
															"        bookings[i] = booking;\r",
															"    }\r",
															"   \r",
															"   pm.environment.set(\"useCaseRoomTypeId\",jsonData.ratePlans[ratePlanIndex].rooms[0].roomTypeId);\r",
															"   pm.environment.set(\"useCaseProgramId\",jsonData.ratePlans[ratePlanIndex].programId);\r",
															"     pm.environment.set(\"useCaseBookings\",JSON.stringify(bookings)); \r",
															"     if(jsonData.ratePlans.length>1){\r",
															"            pm.environment.set(\"scenarioBasedModifyProgramId\",jsonData.ratePlans[ratePlanIndex+1].programId);\r",
															"                  pm.environment.set(\"scenarioBasedModifyRoomId\",jsonData.ratePlans[ratePlanIndex+1].rooms[1].roomTypeId);   \r",
															"     }\r",
															"  }else{\r",
															"       pm.expect(1).not.equal(jsonData.ratePlans.length);\r",
															"  }\r",
															" \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"  // set the variables for the flow\r",
															"\r",
															"    postman.setEnvironmentVariable(\"propertyId\",postman.getEnvironmentVariable(\"NYNY_PropertyId\"));\r",
															"\r",
															"    postman.setEnvironmentVariable(\"JWT_Token\",postman.getEnvironmentVariable(\"ICE_JWT_Token\"));\r",
															"\r",
															"    postman.setEnvironmentVariable(\"channel\",postman.getEnvironmentVariable(\"channel-ice\"));\r",
															"\r",
															"    postman.setEnvironmentVariable(\"source\",postman.getEnvironmentVariable(\"source-ice\"));\r",
															"        "
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v3/availability/trip?checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{scenarioBasedCheckOutDate}}&propertyId={{propertyId}}&numAdults=2",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"availability",
														"trip"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{scenarioBasedCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{propertyId}}"
														},
														{
															"key": "numAdults",
															"value": "2"
														},
														{
															"key": "prpogramId",
															"value": "RPCD-v-ADVP-d-PROP-v-MV021",
															"disabled": true
														},
														{
															"key": "propertyId",
															"value": "dc00e77f-d6bb-4dd7-a8ea-dc33ee9675ad",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Calculate Room Charges - Before Create Reservation Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"1.2 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Success : Before Reservation with Profile, Booking, TripDetails, Billing and AgentInfo\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"     pm.environment.set(\"reservationCreateReq-1C1\",\"\");\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    //save response to  reservation Request in env for create reservation\r",
															"     pm.environment.set(\"reservationCreateReq-1C1\",JSON.stringify(jsonData));\r",
															"\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"propertyId\": \"{{propertyId}}\",\r\n    \"roomTypeId\": \"{{useCaseRoomTypeId}}\",\r\n    \"programId\": \"{{useCaseProgramId}}\",\r\n    \"itineraryId\": \"9323708418\",\r\n    \"customerId\": \"846558855426\",\r\n    \"guaranteeCode\": null,\r\n    \"tripDetails\": {\r\n        \"checkInDate\": \"{{scenarioBasedCheckInDate}}\",\r\n        \"checkOutDate\": \"{{scenarioBasedCheckOutDate}}\",\r\n        \"numAdults\": 1,\r\n        \"numChildren\": 0,\r\n        \"numRooms\": 1\r\n    },\r\n    \"bookings\": {{useCaseBookings}},\r\n    \"profile\": {\r\n        \"id\": 846558855426,\r\n        \"operaId\": null,\r\n        \"firstName\": \"Uttam\",\r\n        \"lastName\": \"Ghorai\",\r\n        \"phoneNumbers\": null,\r\n        \"emailAddress1\": null,\r\n        \"emailAddress2\": null,\r\n        \"dateOfBirth\": null,\r\n        \"hgpNo\": null,\r\n        \"swrrNo\": null,\r\n        \"addresses\": [\r\n            {\r\n                \"preferred\": false,\r\n                \"street1\": \"100 St\",\r\n                \"street2\": null,\r\n                \"city\": \"Las Vegas\",\r\n                \"state\": \"NV\",\r\n                \"country\": \"US\",\r\n                \"postalCode\": \"89102\",\r\n                \"type\": \"Home\"\r\n            }\r\n        ],\r\n        \"title\": null,\r\n        \"mlifeNo\": 0\r\n    }\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "1C1-Create Reservation V2 - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"1.3 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Success : Create Transient Reservation with Profile, Booking, TripDetails, Billing \", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.environment.set(\"variable_key\", \"variable_value\");  \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.booked);    \r",
															"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
															"    var reservationId = jsonData.roomReservation.id;\r",
															"    pm.expect(confirmationNumber).not.eq(null);\r",
															"    pm.expect(itineraryId).not.eq(null);\r",
															"    pm.expect(reservationId).not.eq(null);\r",
															"    pm.environment.set('useCaseConfirmationNumber-1C1',  confirmationNumber);\r",
															"     // save response in env for premodify charges\r",
															"   pm.environment.set(\"reservationCreateRes-1C1\",JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"    //Create reservation Request and save in env\r",
															"    // get response from charges before create saved into env\r",
															"     jsonData = JSON.parse(pm.environment.get(\"reservationCreateReq-1C1\"));\r",
															"    //set itinerary id\r",
															"    jsonData.itineraryId=\"1234\";\r",
															"    //set billing\r",
															"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));\r",
															"    billing[0].payment.amount=jsonData.depositDetails.amount;\r",
															"    jsonData.billing = billing;\r",
															"    //set profile\r",
															"    jsonData.customerId = postman.getEnvironmentVariable(\"iceNYNYCustomerId\")\r",
															"    jsonData.profile = JSON.parse(postman.getEnvironmentVariable(\"iceNYNYProfile\"));\r",
															"    //set depositPolicy\r",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));\r",
															"    jsonData.depositPolicy = depositPolicy;\r",
															"    // again save to same variable\r",
															"    pm.environment.set(\"reservationCreateReq-1C1\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													},
													{
														"key": "",
														"value": "",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationCreateReq-1C1}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"1.4 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Success : Find reservation with cnfNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation?confirmationNumber={{useCaseConfirmationNumber-1C1}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{useCaseConfirmationNumber-1C1}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "1M1-Charges Before Modification -Modify room",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"1.5 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Success : PreModify Reservation with Profile, Booking, TripDetails, Billing and AgentInfo\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.environment.set(\"reservationPreModifyRes-1M1\",\"\");\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"     modifiedRoomId = pm.environment.get(\"scenarioBasedModifyRoomId\");\r",
															"      pm.expect(modifiedRoomId).eq(jsonData.roomTypeId);\r",
															"    // save response in env for premodify charges\r",
															"     pm.environment.set(\"reservationPreModifyRes-1M1\",JSON.stringify(jsonData));\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"if(pm.environment.get(\"reservationCreateRes-1C1\")!==\"\"){\r",
															"//get existing reservation\r",
															" jsonData = JSON.parse(pm.environment.get(\"reservationCreateRes-1C1\"));\r",
															" //Modify RoomId\r",
															" modifiedRoomId = pm.environment.get(\"scenarioBasedModifyRoomId\");\r",
															"  pm.expect(modifiedRoomId).not.eq(jsonData.roomTypeId);\r",
															" jsonData.roomTypeId=modifiedRoomId;\r",
															" jsonData.billing = [];\r",
															"pm.environment.set(\"reservationPreModifyReq-1M1\",JSON.stringify(jsonData));\r",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{reservationPreModifyReq-1M1}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "1M1-Modify Reservation- Modify Room",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"1.6 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Success : Modify Reservation with RoomId change\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"         modifiedRoomId = pm.environment.get(\"scenarioBasedModifyRoomId\");\r",
															"    pm.expect(modifiedRoomId).eq(jsonData.roomReservation.roomTypeId);\r",
															"    pm.environment.set(\"reservationModifyRes-1M1\",JSON.stringify(jsonData.roomReservation));\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															"    //Modify reservation Request and save in env",
															"    // get response from charges before create saved into env",
															"    if(pm.environment.get(\"reservationPreModifyRes-1M1\")!==\"\"){",
															"     jsonData = JSON.parse(pm.environment.get(\"reservationPreModifyRes-1M1\"));",
															"    //set itinerary id",
															"    jsonData.itineraryId=\"1234\";",
															"    jsonData.state = \"Booked\",",
															"    //set billing",
															"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));",
															"      billing[0].payment.amount=jsonData.depositDetails.amount;",
															"    jsonData.billing = billing;",
															"    //set depositPolicy",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));",
															"    jsonData.depositPolicy = depositPolicy;",
															"    // again save to same variable",
															"    pm.environment.set(\"reservationModifyRes-1M1\",JSON.stringify(jsonData));",
															"",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationModifyRes-1M1}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Single Availability-Add Date",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"1.7 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Success : Single Availability with adding new dates\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.eq(jsonData.ratePlans[0]);\r",
															"  if(jsonData.ratePlans.length){\r",
															"      var ratePlanIndex =0;\r",
															"      \r",
															"    var itemizedList = jsonData.ratePlans[ratePlanIndex].rooms[0].price.itemized\r",
															"  pm.expect(0).not.equal(itemizedList.length);\r",
															"  //save booking object\r",
															"  var bookings = [];\r",
															"    for (var i = 0; i < itemizedList.length; i++) {\r",
															"        var itemized = itemizedList[i];\r",
															"        var booking = {};\r",
															"        booking.date = itemized.date;\r",
															"        booking.price = itemized.basePrice;\r",
															"        booking.programId =itemized.programId;\r",
															"        booking.overridePrice= -1; \r",
															"        bookings[i] = booking;\r",
															"    }\r",
															"     pm.environment.set(\"useCaseModifiedBookings-1M2\",JSON.stringify(bookings)); \r",
															"\r",
															"  }else{\r",
															"       pm.expect(1).not.equal(jsonData.ratePlans.length);\r",
															"  }\r",
															" \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var moment = require('moment');\r",
															"\r",
															"oldCheckOutDate = moment(pm.environment.get(\"scenarioBasedCheckOutDate\")).format('YYYY-MM-DD');\r",
															"\r",
															"modifiedCheckOutDate = moment(oldCheckOutDate).add(2, 'days').format('YYYY-MM-DD');\r",
															"  pm.environment.set(\"modifiedCheckOutDate\",modifiedCheckOutDate);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v3/availability/trip?checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{modifiedCheckOutDate}}&propertyId={{propertyId}}&numAdults=2",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"availability",
														"trip"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{modifiedCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{propertyId}}"
														},
														{
															"key": "numAdults",
															"value": "2"
														},
														{
															"key": "programId",
															"value": "RPCD-v-ADVP-d-PROP-v-MV021",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "1M2Charges Before Modification - Add New Date",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"1.8 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Success : PreModify Reservation charges with adding new dates\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"     pm.environment.set(\"reservationModifyReq-1M2\",\"\");\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    // save response in env for premodify charges\r",
															"     pm.environment.set(\"reservationModifyReq-1M2\",JSON.stringify(jsonData));\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var moment = require('moment');\r",
															"\r",
															"oldCheckOutDate = moment(pm.environment.get(\"scenarioBasedCheckOutDate\")).format('YYYY-MM-DD');\r",
															"\r",
															"modifiedCheckOutDate = moment(oldCheckOutDate).add(2, 'days').format('YYYY-MM-DD');\r",
															"//get existing modify request\r",
															" jsonData = JSON.parse(pm.environment.get(\"reservationModifyRes-1M1\"));\r",
															"  jsonData.billing = [];\r",
															" //Modify Checkout date +2\r",
															" jsonData.tripDetails.checkOutDate = modifiedCheckOutDate;\r",
															"  // add booking obj\r",
															"   jsonData.bookings = JSON.parse(pm.environment.get(\"useCaseModifiedBookings-1M2\"));\r",
															" \r",
															" \r",
															"pm.environment.set(\"reservationPreModifyReq-1M2\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{reservationPreModifyReq-1M2}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "1M2-Modify Reservation- Add New Date",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"1.8 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Success : Modify Reservation new added dates\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"\r",
															"    pm.environment.set(\"reservationModifyRes-1M2\",JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															"    //Modify reservation Request and save in env",
															"    // get response from charges before create saved into env",
															"      if(pm.environment.get(\"reservationModifyReq-1M2\")!==\"\"){",
															"     jsonData = JSON.parse(pm.environment.get(\"reservationModifyReq-1M2\"));",
															"    //set itinerary id",
															"    jsonData.itineraryId=\"1234\";",
															"    jsonData.state = \"Booked\",",
															"    //set billing",
															"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));",
															"      billing[0].payment.amount=jsonData.depositDetails.amount;",
															"    jsonData.billing = billing;",
															"    //set depositPolicy",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));",
															"    jsonData.depositPolicy = depositPolicy;",
															"    // again save to same variable",
															"    pm.environment.set(\"reservationModifyReq-1M2\",JSON.stringify(jsonData));",
															"",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationModifyReq-1M2}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "1M3-Charges Before Modification - Remove Date",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"1.9 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Success : PreModify Reservation charges with removing dates\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"     pm.environment.set(\"reservationModifyReq-1M3\",\"\");\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    // save response in env for premodify charges\r",
															"     pm.environment.set(\"reservationModifyReq-1M3\",JSON.stringify(jsonData));\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"\r",
															"var moment = require('moment');\r",
															"oldCheckOutDate = moment(pm.environment.get(\"scenarioBasedCheckOutDate\")).format('YYYY-MM-DD');\r",
															"  if(pm.environment.get(\"reservationModifyReq-1M2\")!==\"\"){\r",
															"//get existing modify request\r",
															" jsonData = JSON.parse(pm.environment.get(\"reservationPreModifyReq-1M2\"));\r",
															" //Modify Checkout date -2\r",
															"jsonData.tripDetails.checkOutDate = oldCheckOutDate;\r",
															" //remove bookings obj  \r",
															"  jsonData.bookings.splice(2); \r",
															"pm.environment.set(\"reservationPreModifyReq-1M3\",JSON.stringify(jsonData));\r",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{reservationPreModifyReq-1M3}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "1M3-Modify Reservation- Remove Date",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"1.10 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Success : Modify Reservation with removing dates\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"\r",
															"        pm.environment.set(\"reservationModifyRes-1M3\",JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															"    //Modify reservation Request and save in env",
															"    // get response from charges before create saved into env",
															"     if(pm.environment.get(\"reservationModifyReq-1M3\")!==\"\"){",
															"     jsonData = JSON.parse(pm.environment.get(\"reservationModifyReq-1M3\"));",
															"    ",
															"    //set itinerary id",
															"    jsonData.itineraryId=\"1234\";",
															"    jsonData.state = \"Booked\",",
															"    //set billing",
															"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));",
															"       billing[0].payment.amount=jsonData.depositDetails.amount;",
															"    jsonData.billing = billing;",
															"    //set depositPolicy",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));",
															"    jsonData.depositPolicy = depositPolicy;",
															"    // again save to same variable",
															"    pm.environment.set(\"reservationModifyReq-1M3\",JSON.stringify(jsonData));",
															"",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationModifyReq-1M3}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "1M4-Charges Before Modification -Modify program",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"1.11 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Success : PreModify Reservation with modify program\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"     pm.environment.set(\"reservationModifyReq-1M4\",\"\");\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    // save response in env for premodify charges\r",
															"     pm.environment.set(\"reservationModifyReq-1M4\",JSON.stringify(jsonData));\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var moment = require('moment');\r",
															"\r",
															"\r",
															"//get existing reservation\r",
															" jsonData = JSON.parse(pm.environment.get(\"reservationPreModifyReq-1M3\"));\r",
															"  jsonData.billing = [];\r",
															" //Modify programId\r",
															" jsonData.programId=pm.environment.get(\"scenarioBasedModifyProgramId\");\r",
															" // modify in booking obj\r",
															"    for (var i = 0; i < jsonData.bookings.length; i++) {\r",
															"        jsonData.bookings[i].programId=jsonData.programId;\r",
															"    }\r",
															"pm.environment.set(\"reservationPreModifyReq-1M4\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{reservationPreModifyReq-1M4}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "1M4-Modify Reservation- Modify program",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"1.12 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Success : Modify Reservation with modify program\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"\r",
															"    pm.environment.set(\"reservationModifyRes-1M4\",JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															"    //Modify reservation Request and save in env",
															"      if(pm.environment.get(\"reservationModifyReq-1M4\")!==\"\"){",
															"    // get response from charges before create saved into env",
															"     jsonData = JSON.parse(pm.environment.get(\"reservationModifyReq-1M4\"));",
															"    //set itinerary id",
															"    jsonData.itineraryId=\"1234\";",
															"    jsonData.state = \"Booked\",",
															"    //set billing",
															"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));",
															"       billing[0].payment.amount=jsonData.depositDetails.amount;",
															"    jsonData.billing = billing;",
															"    //set depositPolicy",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));",
															"    jsonData.depositPolicy = depositPolicy;",
															"    // again save to same variable",
															"    pm.environment.set(\"reservationModifyReq-1M4\",JSON.stringify(jsonData));",
															"",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationModifyReq-1M4}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 - Success Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"1.13 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Success : Find reservation with cnfNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"   programId=pm.environment.get(\"scenarioBasedModifyProgramId\");\r",
															"pm.expect(programId).equal(jsonData.roomReservation.bookings[0].programId);\r",
															"\r",
															"pm.environment.set(\"reservationModifyRes-1M4\",JSON.stringify(jsonData.roomReservation));\r",
															"pm.environment.set(\"useCaseProgramId\",programId);\r",
															"pm.environment.set(\"useCaseRoomTypeId\", pm.environment.get(\"scenarioBasedModifyRoomId\"))\r",
															"\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation?confirmationNumber={{useCaseConfirmationNumber-1C1}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{useCaseConfirmationNumber-1C1}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "1M5-Modify Reservation- Modify Guarantee code",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															"//Modify reservation Request and save in env",
															"// get response from charges before create saved into env",
															"jsonData = JSON.parse(pm.environment.get(\"reservationModifyRes-1M4\"));",
															"jsonData.customerId = 12345",
															"jsonData.profile[\"id\"] = 12345",
															"//set itinerary id",
															"jsonData.itineraryId=\"1234\";",
															"jsonData.state = \"Booked\";",
															"//update GC",
															"jsonData.guaranteeCode= \"CC\";",
															"//set billing",
															"billing = JSON.parse(pm.environment.get(\"SingleVISACard\"));",
															"billing[0].amount=jsonData.depositDetails.amount;",
															"jsonData.billing = billing;",
															"//set depositPolicy",
															"depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));",
															"jsonData.depositPolicy = depositPolicy;",
															"// again save to same variable",
															"pm.environment.set(\"reservationModifyReq-1M5\",JSON.stringify(jsonData));",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"1.14 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Success : Modify Reservation with RoomId change\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"     pm.expect(\"CC\").to.equal(jsonData.roomReservation.guaranteeCode);\r",
															"\r",
															"    pm.environment.set(\"reservationModifyRes-1M6\",JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationModifyReq-1M5}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "1M6-Modify Reservation- Add Manual RI",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"1.15 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Success : Modify Reservation with adding RI\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"\r",
															"    pm.environment.set(\"reservationModifyRes-1M6\",JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															"    //Modify reservation Request and save in env",
															"    // get response from charges before create saved into env",
															"    jsonData = \"\";",
															"    // if(pm.environment.get(\"reservationModifyRes-1M6\") !== undefined) {",
															"    //     jsonData = JSON.parse(pm.environment.get(\"reservationModifyRes-1M6\"));",
															"    //     console.log(pm.environment.get(\"reservationModifyRes-1M6\"));",
															"    // } else {",
															"    //     jsonData = JSON.parse(pm.environment.get(\"reservationModifyRes-1M4\"));",
															"    //     console.log(\"hello3\");",
															"    // }",
															"",
															"    jsonData = JSON.parse(pm.environment.get(\"reservationCreateRes-1C1\"));",
															"    jsonData.customerId = 12345;",
															"    jsonData.profile[\"id\"] = 12345;",
															"    //set itinerary id",
															"    jsonData.itineraryId=\"1234\";",
															"    jsonData.state = \"Booked\";",
															"    //set billing",
															"    billing = JSON.parse(pm.environment.get(\"SingleVISACard\"));",
															"    billing[0].payment.amount=0;",
															"    jsonData.billing = billing;",
															"    //set manual routing",
															"    manualRI= JSON.parse(pm.environment.get(\"NYNYManualRI\"));",
															"    manualRI[0].startDate=jsonData.tripDetails.checkInDate;",
															"    manualRI[0].endDate=jsonData.tripDetails.checkOutDate;",
															"    jsonData.routingInstructions = manualRI;",
															"    //set depositPolicy",
															"    depositPolicy = JSON.parse(pm.environment.get(\"depositPolicy\"));",
															"    jsonData.depositPolicy = depositPolicy;",
															"    // again save to same variable",
															"    pm.environment.set(\"reservationModifyReq-1M6\",JSON.stringify(jsonData));",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationModifyReq-1M6}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 - Add Manual RI",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"1.16 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Success : Find reservation having Manual RI with cnfNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"pm.expect(0).not.equal(jsonData.roomReservation.routingInstructions.length);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation?confirmationNumber={{useCaseConfirmationNumber-1C1}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{useCaseConfirmationNumber-1C1}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "1M7-Modify Reservation- Remove Manual RI",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"1.17 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Success : Modify Reservation with removing RI\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"\r",
															"    pm.environment.set(\"reservationModifyRes-1M7\",JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															"    //Modify reservation Request and save in env",
															"    // get response from charges before create saved into env",
															" jsonData = JSON.parse(pm.environment.get(\"reservationModifyRes-1M6\"));",
															"    //set itinerary id",
															"    jsonData.itineraryId=\"1234\";",
															"    jsonData.state = \"Booked\",",
															"    //set billing",
															"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));",
															"    billing[0].payment.amount=0;",
															"    jsonData.billing = billing;",
															"    //remove routing instructions",
															"     jsonData.routingInstructions = [];",
															"     //set depositPolicy",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));",
															"    jsonData.depositPolicy = depositPolicy;",
															"    // again save to same variable",
															"    postman.setEnvironmentVariable(\"reservationModifyReq-1M7\",JSON.stringify(jsonData));",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationModifyReq-1M7}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 - Remove Manual RI",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"1.18 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Success : Find reservation having Manual RI with cnfNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"pm.expect(0).equal(jsonData.roomReservation.routingInstructions.length);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation?confirmationNumber={{useCaseConfirmationNumber-1C1}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{useCaseConfirmationNumber-1C1}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Spl Request and Components",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"1.20 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Success : Get component list\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"   pm.environment.set(\"useCaseModifyAddOns\",null); \r",
															"    pm.environment.set(\"useCaseModifySplReq\",null); \r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"      for (var i = 0; i < jsonData.length; i++) {\r",
															"        if(jsonData[i].id.includes(\"Component\") || jsonData[i].id.includes(\"COMPONENT\")){\r",
															"            pm.environment.set(\"useCaseModifyAddOns\",jsonData[i].id); \r",
															"        }\r",
															"    }\r",
															" \r",
															" \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															" "
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/availability/components?programId={{scenarioBasedModifyProgramId}}&propertyId={{propertyId}}&checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{scenarioBasedCheckOutDate}}&roomTypeId={{scenarioBasedModifyRoomId}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"availability",
														"components"
													],
													"query": [
														{
															"key": "programId",
															"value": "{{scenarioBasedModifyProgramId}}"
														},
														{
															"key": "propertyId",
															"value": "{{propertyId}}"
														},
														{
															"key": "checkInDate",
															"value": "{{scenarioBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{scenarioBasedCheckOutDate}}"
														},
														{
															"key": "roomTypeId",
															"value": "{{scenarioBasedModifyRoomId}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "1M11-Charges Before Modification -Add Add_Ons",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"1.21 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Success : PreModify Reservation with adding Add-Ons\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"     pm.environment.set(\"reservationModifyReq-1M11\",\"\");\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(jsonData.chargesAndTaxes.charges[0].itemized.length).gt(2);\r",
															"     pm.expect(jsonData.chargesAndTaxes.taxesAndFees[0].itemized.length).gt(2);\r",
															"    \r",
															"    // save response in env for premodify charges\r",
															"     pm.environment.set(\"reservationModifyReq-1M11\",JSON.stringify(jsonData));\r",
															"     \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"\r",
															"\r",
															"//get existing reservation\r",
															"jsonData = JSON.parse(pm.environment.get(\"reservationCreateRes-1C1\"));\r",
															" //set AddOns\r",
															" var specialRequestsArr =[];\r",
															"     //if spl req is not there don't run this\r",
															"    if ( pm.environment.get(\"useCaseModifyAddOns\")) {\r",
															"     specialRequestsArr[0] =  pm.environment.get(\"useCaseModifyAddOns\");\r",
															"    }\r",
															"\r",
															" jsonData.specialRequests =specialRequestsArr; \r",
															"    \r",
															" \r",
															"pm.environment.set(\"reservationPreModifyReq-1M11\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{reservationPreModifyReq-1M11}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "1M11-Modify Reservation- Add Add-Ons",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"1.22 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Success : Modify Reservation with adding ADD-ONS\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"          pm.expect(jsonData.roomReservation.specialRequests.length).gt(0);\r",
															"    pm.expect(jsonData.roomReservation.chargesAndTaxes.charges[0].itemized.length).gt(2);\r",
															"     pm.expect(jsonData.roomReservation.chargesAndTaxes.taxesAndFees[0].itemized.length).gt(2);\r",
															"\r",
															"     pm.environment.set(\"reservationModifyRes-1M11\",JSON.stringify(jsonData.roomReservation));\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															"",
															"    //Modify reservation Request and save in env",
															"    // get response from charges before create saved into env",
															"       if(pm.environment.get(\"reservationModifyReq-1M11\")!==\"\"){",
															"     jsonData = JSON.parse( pm.environment.get(\"reservationModifyReq-1M11\"));",
															"    //set itinerary id",
															"    jsonData.itineraryId=\"1234\";",
															"    jsonData.state = \"Booked\",",
															"    //set billing",
															"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));",
															"    billing[0].payment.amount=jsonData.depositDetails.amount;",
															"    jsonData.billing = billing;",
															"    //set depositPolicy",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));",
															"    jsonData.depositPolicy = depositPolicy;",
															"",
															"     pm.environment.set(\"reservationModifyReq-1M11\",JSON.stringify(jsonData));",
															"",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationModifyReq-1M11}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "1M12-Charges Before Modification -Remove Add-Ons",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"1.23 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Success : PreModify Reservation with removing addons\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.environment.set(\"reservationModifyReq-1M12\",\"\");\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"        pm.expect(jsonData.chargesAndTaxes.charges[0].itemized.length).eq(2);\r",
															"     pm.expect(jsonData.chargesAndTaxes.taxesAndFees[0].itemized.length).eq(2);\r",
															"    // save response in env for premodify charges\r",
															"pm.environment.set(\"reservationModifyReq-1M12\",JSON.stringify(jsonData));\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"//get existing reservation\r",
															"jsonData = JSON.parse(pm.environment.get(\"reservationModifyRes-1M11\"));\r",
															" //set AddOns\r",
															" jsonData.specialRequests =[]; \r",
															"    \r",
															" \r",
															"pm.environment.set(\"reservationPreModifyReq-1M12\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{reservationPreModifyReq-1M12}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "1M12-Modify Reservation- Remove Add-Ons",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"1.24 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Success : Modify Reservation with removing addons\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"          pm.expect(jsonData.roomReservation.specialRequests.length).eq(0);\r",
															"    pm.expect(jsonData.roomReservation.chargesAndTaxes.charges[0].itemized.length).eq(2);\r",
															"     pm.expect(jsonData.roomReservation.chargesAndTaxes.taxesAndFees[0].itemized.length).eq(2);\r",
															"    pm.environment.set(\"reservationModifyRes-1M12\",JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															"    //Modify reservation Request and save in env",
															"    // get response from charges before create saved into env",
															"       if(pm.environment.get(\"reservationModifyReq-1M12\")!==\"\"){",
															"  jsonData = JSON.parse( pm.environment.get(\"reservationModifyReq-1M12\"));",
															"    //set itinerary id",
															"    jsonData.itineraryId=\"1234\";",
															"    jsonData.state = \"Booked\",",
															"    //set billing",
															"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));",
															"    billing[0].payment.amount=jsonData.depositDetails.amount;",
															"    jsonData.billing = billing;",
															"    // again save to same variable",
															"    //set depositPolicy",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));",
															"    jsonData.depositPolicy = depositPolicy;",
															" pm.environment.set(\"reservationModifyReq-1M12\",JSON.stringify(jsonData));",
															"",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationModifyReq-1M12}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "1M9-Modify Reservation- Add Spl Req and Room feature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"1.25 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Success : Modify Reservation with adding spl req\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"     pm.expect(jsonData.roomReservation.specialRequests.length).gt(0);\r",
															"\r",
															"     pm.environment.set(\"reservationModifyRes-1M9\",JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															"    //Modify reservation Request and save in env",
															"    // get response from charges before create saved into env",
															"jsonData = JSON.parse(pm.environment.get(\"reservationCreateRes-1C1\"));",
															"    //set itinerary id",
															"    jsonData.itineraryId=\"1234\";",
															"    jsonData.state = \"Booked\",",
															"    //set billing",
															"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));",
															"    billing[0].payment.amount=jsonData.depositDetails.amount;",
															"    jsonData.billing = billing;",
															"    //set depositPolicy",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));",
															"    jsonData.depositPolicy = depositPolicy;",
															"         //set ",
															" var specialRequestsArr =[];",
															"     specialRequestsArr[0] = \"59e6ad43-bd6c-41f6-b96e-24a02a13eb8d\";",
															"    specialRequestsArr[1] = \"b3f872e9-3e89-4f52-bb88-38dfa951ea3c\";",
															"",
															" jsonData.specialRequests =specialRequestsArr; ",
															"    // again save to same variable",
															"    pm.environment.set(\"reservationModifyReq-1M9\",JSON.stringify(jsonData));",
															"    ",
															"",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationModifyReq-1M9}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 - Add- SplReq",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"1.26 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Success : Find reservation having Manual RI with cnfNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															" pm.expect(jsonData.roomReservation.specialRequests.length).gt(0);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation?confirmationNumber={{useCaseConfirmationNumber-1C1}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{useCaseConfirmationNumber-1C1}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "1M10-Modify Reservation- Remove Spl Req and Room feature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"1.27 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Success : Modify Reservation with removing spl req\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"      pm.expect(jsonData.roomReservation.specialRequests.length).eq(0);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"    //Modify reservation Request and save in env",
															"    // get response from charges before create saved into env",
															"jsonData = JSON.parse(pm.environment.get(\"reservationModifyRes-1M9\"));",
															"    //set itinerary id",
															"    jsonData.itineraryId=\"1234\";",
															"    jsonData.state = \"Booked\",",
															"    //set billing",
															"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));",
															"    billing[0].payment.amount=jsonData.depositDetails.amount;",
															"    jsonData.billing = billing;",
															"    //set depositPolicy",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));",
															"    jsonData.depositPolicy = depositPolicy;",
															"    //remove spl req",
															"    jsonData.specialRequests =[]; ",
															"    // again save to same variable",
															"    pm.environment.set(\"reservationModifyReq-1M10\",JSON.stringify(jsonData));",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationModifyReq-1M10}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 - Remove Spl req",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"1.28 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Success : Find reservation having Manual RI with cnfNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															" pm.expect(jsonData.roomReservation.specialRequests.length).eq(0);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation?confirmationNumber={{useCaseConfirmationNumber-1C1}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{useCaseConfirmationNumber-1C1}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "1M8-Charges Before Modification -Override program and price",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"1.29 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Success : PreModify Reservation charges with overide price and program\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    // save response in env for premodify charges\r",
															"   pm.environment.set(\"reservationModifyRes-1M8\",JSON.stringify(jsonData));\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"\r",
															"//get existing reservation\r",
															"jsonData = JSON.parse(pm.environment.get(\"reservationCreateRes-1C1\"));\r",
															" //Modify overide program and price\r",
															" // modify in booking obj\r",
															"\r",
															"        jsonData.bookings[0].overrideProgramId=pm.environment.get(\"scenarioBasedModifyProgramId\")\r",
															"        jsonData.bookings[0].overridePrice = 10.0;\r",
															"    \r",
															" \r",
															"pm.environment.set(\"reservationPreModifyReq-1M8\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{reservationPreModifyReq-1M8}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "1M8-Modify Reservation- Override program and Price",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"1.30 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Success : Modify Reservation with Overide price and program\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"      pm.expect(10).equal(jsonData.roomReservation.bookings[0].overridePrice);\r",
															"      \r",
															"      overrideProgram = pm.environment.get(\"scenarioBasedModifyProgramId\");\r",
															"       pm.expect(overrideProgram).equal(jsonData.roomReservation.bookings[0].overrideProgramId);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															"    //Modify reservation Request and save in env",
															"    // get response from charges before create saved into env",
															"       if(pm.environment.get(\"reservationModifyRes-1M8\")!==\"\"){",
															"     jsonData = JSON.parse(pm.environment.get(\"reservationModifyRes-1M8\"));",
															"    //set itinerary id",
															"    jsonData.itineraryId=\"1234\";",
															"    jsonData.state = \"Booked\",",
															"    //set billing",
															"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));",
															"    billing[0].payment.amount=jsonData.depositDetails.amount;",
															"    jsonData.billing = billing;",
															"     jsonData.bookings[0].overridePrice = 10.0;",
															"    //set depositPolicy",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));",
															"    jsonData.depositPolicy = depositPolicy;",
															"    // again save to same variable",
															"pm.environment.set(\"reservationModifyReq-1M8\",JSON.stringify(jsonData));",
															"",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationModifyReq-1M8}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Reservation - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"1.31 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Success : Cancel Reservation by confirmationNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.variables.get(\"useCaseConfirmationNumber-1C1\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"confirmationNumber\": \"{{useCaseConfirmationNumber-1C1}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v3/reservation/cancel",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"reservation",
														"cancel"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"const moment = require('moment')",
													"// dates",
													"pm.environment.set(\"todayMinus3\", moment().subtract(3, 'day').format(\"YYYY-MM-DD\")) //pastDate",
													"pm.environment.set(\"today\", moment().format(\"YYYY-MM-DD\")) //presentDate",
													"pm.environment.set(\"todayPlus2\", moment().add(2, 'day').format(\"YYYY-MM-DD\")) //futureDatePlus2",
													"pm.environment.set(\"todayPlus5\", moment().add(5, 'day').format(\"YYYY-MM-DD\")) //futureDatePlus5",
													"pm.environment.set(\"todayPlus30\", moment().add(30, 'day').format(\"YYYY-MM-DD\"))//futureDatePlus30",
													"pm.environment.set(\"todayPlus42\", moment().add(42, 'day').format(\"YYYY-MM-DD\"))//futureDatePlus42",
													"pm.environment.set(\"todayPlus45\", moment().add(45, 'day').format(\"YYYY-MM-DD\"))//futureDatePlus45",
													"pm.environment.set(\"todayPlus46\", moment().add(46, 'day').format(\"YYYY-MM-DD\"))//futureDatePlus46",
													"pm.environment.set(\"todayPlus47\", moment().add(47, 'day').format(\"YYYY-MM-DD\"))//futureDatePlus47",
													"pm.environment.set(\"todayPlus48\", moment().add(48, 'day').format(\"YYYY-MM-DD\"))",
													"pm.environment.set(\"scenarioBasedCheckInDate\", moment().add(30, 'day').format(\"YYYY-MM-DD\"))//futureDatePlus30",
													"pm.environment.set(\"scenarioBasedCheckOutDate\", moment().add(32, 'day').format(\"YYYY-MM-DD\"))//futureDatePlus30",
													"pm.environment.set(\"modifiedCheckOutDate\", moment().add(34, 'day').format(\"YYYY-MM-DD\"))//futureDatePlus30",
													"",
													"",
													"pm.environment.set(\"numAdults\", 2)",
													"pm.environment.set(\"numChildren\", 1)"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "3.Transient User Reservation -With RI",
									"item": [
										{
											"name": "Single Availability-Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"3.1 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Reservation with RI Success : Single Availability with Checkin Date,Â Checkout Date, Property Id and Number of Adults\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.eq(jsonData.ratePlans[0]);\r",
															"  if(jsonData.ratePlans.length){\r",
															"      var ratePlanIndex =1;\r",
															"      \r",
															"    var itemizedList = jsonData.ratePlans[ratePlanIndex].rooms[0].price.itemized\r",
															"  pm.expect(0).not.equal(itemizedList.length);\r",
															"  //save booking object\r",
															"  var bookings = [];\r",
															"    for (var i = 0; i < itemizedList.length; i++) {\r",
															"        var itemized = itemizedList[i];\r",
															"        var booking = {};\r",
															"        booking.date = itemized.date;\r",
															"        booking.price = itemized.basePrice;\r",
															"        booking.programId =itemized.programId;\r",
															"        booking.overridePrice= -1; \r",
															"        bookings[i] = booking;\r",
															"    }\r",
															"   \r",
															"    pm.environment.set(\"useCaseRoomTypeId\",jsonData.ratePlans[ratePlanIndex].rooms[0].roomTypeId);\r",
															"    pm.environment.set(\"useCaseProgramId\",jsonData.ratePlans[ratePlanIndex].programId);\r",
															"      pm.environment.set(\"useCaseBookings\",JSON.stringify(bookings));  \r",
															"  }else{\r",
															"       pm.expect(1).not.equal(jsonData.ratePlans.length);\r",
															"  }\r",
															" \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v3/availability/trip?checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{scenarioBasedCheckOutDate}}&propertyId={{propertyId}}&numAdults=2",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"availability",
														"trip"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{scenarioBasedCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{propertyId}}"
														},
														{
															"key": "numAdults",
															"value": "2"
														},
														{
															"key": "programId",
															"value": "RPCD-v-ADVP-d-PROP-v-MV021",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Calculate Room Charges - Before Create Reservation Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"3.2 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Reservation with RI : Before Reservation with Profile, Booking, TripDetails, Billing and AgentInfo\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															" pm.environment.set(\"reservationPreModifyReq-3M1\",\"\");\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    //save response to  reservation Request in env for create reservation\r",
															"      pm.environment.set(\"reservationCreateReq-3M1\",JSON.stringify(jsonData));\r",
															"\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"propertyId\": \"{{propertyId}}\",\r\n    \"roomTypeId\": \"{{useCaseRoomTypeId}}\",\r\n    \"programId\": \"{{useCaseProgramId}}\",\r\n    \"itineraryId\": \"9323708418\",\r\n    \"customerId\": \"846558855426\",\r\n    \"guaranteeCode\": null,\r\n    \"tripDetails\": {\r\n        \"checkInDate\": \"{{scenarioBasedCheckInDate}}\",\r\n        \"checkOutDate\": \"{{scenarioBasedCheckOutDate}}\",\r\n        \"numAdults\": 1,\r\n        \"numChildren\": 0,\r\n        \"numRooms\": 1\r\n    },\r\n    \"bookings\": {{useCaseBookings}},\r\n    \"profile\": {\r\n        \"id\": 846558855426,\r\n        \"operaId\": null,\r\n        \"firstName\": \"Uttam\",\r\n        \"lastName\": \"Ghorai\",\r\n        \"phoneNumbers\": null,\r\n        \"emailAddress1\": null,\r\n        \"emailAddress2\": null,\r\n        \"dateOfBirth\": null,\r\n        \"hgpNo\": null,\r\n        \"swrrNo\": null,\r\n        \"addresses\": [\r\n            {\r\n                \"preferred\": false,\r\n                \"street1\": \"100 St\",\r\n                \"street2\": null,\r\n                \"city\": \"Las Vegas\",\r\n                \"state\": \"NV\",\r\n                \"country\": \"US\",\r\n                \"postalCode\": \"89102\",\r\n                \"type\": \"Home\"\r\n            }\r\n        ],\r\n        \"title\": null,\r\n        \"mlifeNo\": 0\r\n    }\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Reservation -With RI",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"3.3 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Reservation with RI : Create Transient Reservation with Profile, Booking, TripDetails, Billing and RI \", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.environment.set(\"variable_key\", \"variable_value\");  \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.booked);    \r",
															"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
															"    var reservationId = jsonData.roomReservation.id;\r",
															"    pm.expect(confirmationNumber).not.eq(null);\r",
															"    pm.expect(itineraryId).not.eq(null);\r",
															"    pm.expect(reservationId).not.eq(null);\r",
															"    pm.environment.set('useCaseConfirmationNumber3',  confirmationNumber);\r",
															"\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"    //Create reservation Request and save in env\r",
															"    // get response from charges before create saved into env\r",
															"    if(pm.environment.get(\"reservationCreateReq-3M1\")!==\"\"){\r",
															"     jsonData = JSON.parse( pm.environment.get(\"reservationCreateReq-3M1\"));\r",
															"\r",
															"    //set itinerary id\r",
															"    jsonData.itineraryId=\"1234\";\r",
															"    //set billing\r",
															"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));\r",
															"    billing[0].payment.amount=jsonData.depositDetails.amount;\r",
															"    jsonData.billing = billing;\r",
															"\r",
															"    //set profile\r",
															"    jsonData.customerId = postman.getEnvironmentVariable(\"iceNYNYCustomerId\")\r",
															"    jsonData.profile = JSON.parse(postman.getEnvironmentVariable(\"iceNYNYProfile\"));\r",
															"    \r",
															"    //set routing instructions\r",
															"        manualRI= JSON.parse(postman.getEnvironmentVariable(\"NYNYManualRI\"));\r",
															"    jsonData.routingInstructions = manualRI;\r",
															"        manualRI[0].startDate=jsonData.tripDetails.checkInDate;\r",
															"    manualRI[0].endDate=jsonData.tripDetails.checkOutDate;\r",
															"    jsonData.routingInstructions = manualRI;\r",
															"    //set depositPolicy\r",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));\r",
															"    jsonData.depositPolicy = depositPolicy;\r",
															"    // again save to same variable\r",
															"    pm.environment.set(\"reservationCreateReq-3M1\",JSON.stringify(jsonData));\r",
															"    }"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-123"
													},
													{
														"key": "",
														"type": "text",
														"value": ""
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationCreateReq-3M1}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 - Add Manual RI",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"3.4 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Success : Find reservation having Manual RI with cnfNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"pm.expect(0).not.equal(jsonData.roomReservation.routingInstructions.length);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation?confirmationNumber={{useCaseConfirmationNumber3}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{useCaseConfirmationNumber3}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Reservation - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"3.5 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Reservation with RI : Cancel Reservation by confirmationNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.variables.get(\"useCaseConfirmationNumber3\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"confirmationNumber\": \"{{useCaseConfirmationNumber3}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v3/reservation/cancel",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"reservation",
														"cancel"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "4.Transient User Reservation -With multi CC",
									"item": [
										{
											"name": "Single Availability-Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"4.1 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Reservation with multi CC : Single Availability with Checkin Date,Â Checkout Date, Property Id and Number of Adults\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.eq(jsonData.ratePlans[0]);\r",
															"  if(jsonData.ratePlans.length){\r",
															"      var ratePlanIndex =1;\r",
															"      \r",
															"    var itemizedList = jsonData.ratePlans[ratePlanIndex].rooms[0].price.itemized\r",
															"  pm.expect(0).not.equal(itemizedList.length);\r",
															"  //save booking object\r",
															"  var bookings = [];\r",
															"    for (var i = 0; i < itemizedList.length; i++) {\r",
															"        var itemized = itemizedList[i];\r",
															"        var booking = {};\r",
															"        booking.date = itemized.date;\r",
															"        booking.price = itemized.basePrice;\r",
															"        booking.programId =itemized.programId; \r",
															"        booking.overridePrice= -1;\r",
															"        bookings[i] = booking;\r",
															"    }\r",
															"   \r",
															"   pm.environment.set(\"useCaseRoomTypeId\",jsonData.ratePlans[ratePlanIndex].rooms[0].roomTypeId);\r",
															"    pm.environment.set(\"useCaseProgramId\",jsonData.ratePlans[ratePlanIndex].programId);\r",
															"      pm.environment.set(\"useCaseBookings\",JSON.stringify(bookings));  \r",
															"  }else{\r",
															"       pm.expect(1).not.equal(jsonData.ratePlans.length);\r",
															"  }\r",
															" \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v3/availability/trip?checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{scenarioBasedCheckOutDate}}&propertyId={{propertyId}}&numAdults=2",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"availability",
														"trip"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{scenarioBasedCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{propertyId}}"
														},
														{
															"key": "numAdults",
															"value": "2"
														},
														{
															"key": "programId",
															"value": "RPCD-v-ADVP-d-PROP-v-MV021",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Calculate Room Charges - Before Create Reservation Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"4.2 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Reservation with multi CC : Before Reservation with Profile, Booking, TripDetails, Billing and AgentInfo\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    //save response to  reservation Request in env for create reservation\r",
															"      pm.environment.set(\"reservationCreateReq-4\",JSON.stringify(jsonData));\r",
															"\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\r\n        \"propertyId\": \"{{propertyId}}\",\r\n        \"roomTypeId\": \"{{useCaseRoomTypeId}}\",\r\n        \"programId\": \"{{useCaseProgramId}}\",\r\n       \"itineraryId\": \"9323708418\",\r\n    \"customerId\": \"846558855426\",\r\n    \"guaranteeCode\": null,\r\n    \"tripDetails\": {\r\n        \"checkInDate\": \"{{scenarioBasedCheckInDate}}\",\r\n        \"checkOutDate\": \"{{scenarioBasedCheckOutDate}}\",\r\n        \"numAdults\": 1,\r\n        \"numChildren\": 0,\r\n        \"numRooms\": 1\r\n    },\r\n \r\n    \"bookings\": {{useCaseBookings}},\r\n\r\n \"profile\": {\r\n      \"id\": 846558855426,\r\n      \"operaId\": null,\r\n      \"firstName\": \"Uttam\",\r\n      \"lastName\": \"Ghorai\",\r\n      \"phoneNumbers\": null,\r\n      \"emailAddress1\": null,\r\n      \"emailAddress2\": null,\r\n      \"dateOfBirth\": null,\r\n      \"hgpNo\": null,\r\n      \"swrrNo\": null,\r\n      \"addresses\": [\r\n        {\r\n          \"preferred\": false,\r\n          \"street1\": \"100 St\",\r\n          \"street2\": null,\r\n          \"city\": \"Las Vegas\",\r\n          \"state\": \"NV\",\r\n          \"country\": \"US\",\r\n          \"postalCode\": \"89102\",\r\n          \"type\": \"Home\"\r\n        }\r\n      ],\r\n      \"title\": null,\r\n      \"mlifeNo\": 0\r\n    }\r\n\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Reservation -With multi CC",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"4.3 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Reservation with multi CC: Create Transient Reservation with multi CC \", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.environment.set(\"variable_key\", \"variable_value\");  \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.booked);    \r",
															"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
															"    var reservationId = jsonData.roomReservation.id;\r",
															"    pm.expect(confirmationNumber).not.eq(null);\r",
															"    pm.expect(itineraryId).not.eq(null);\r",
															"    pm.expect(reservationId).not.eq(null);\r",
															"     pm.environment.set('useCaseConfirmationNumber4',  confirmationNumber);\r",
															"     // save response in env for premodify charges\r",
															"      pm.environment.set(\"reservationModifyReq4\",JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"    //Create reservation Request and save in env\r",
															"    // get response from charges before create saved into env\r",
															"     jsonData = JSON.parse( pm.environment.get(\"reservationCreateReq-4\"));\r",
															"    //set itinerary id\r",
															"    jsonData.itineraryId=\"1234\";\r",
															"    //set billing with ulti CC\r",
															"    billing = JSON.parse(postman.getEnvironmentVariable(\"multiCC\"));\r",
															"    billing[0].payment.amount=jsonData.depositDetails.amount-1;\r",
															"    billing[1].payment.amount=1.0;\r",
															"    jsonData.billing = billing;\r",
															"\r",
															"    //set profile\r",
															"    jsonData.customerId = postman.getEnvironmentVariable(\"iceNYNYCustomerId\")\r",
															"    jsonData.profile = JSON.parse(postman.getEnvironmentVariable(\"iceNYNYProfile\"));\r",
															"    //set depositPolicy\r",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));\r",
															"    jsonData.depositPolicy = depositPolicy;\r",
															"      // again save to same variable\r",
															"    pm.environment.set(\"reservationCreateReq-4\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-123"
													},
													{
														"key": "",
														"type": "text",
														"value": ""
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationCreateReq-4}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Modify Reservation- Modify With CASH",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"4.4 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Reservation with multi CC : Modify Reservation with CASH\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.environment.set(\"useCaseConfirmationNumber4\",jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															"    //Modify reservation Request and save in env",
															"    // get response from charges before create saved into env",
															"    if(pm.environment.get(\"reservationModifyReq4\")){",
															"     jsonData = JSON.parse(pm.environment.get(\"reservationModifyReq4\"));",
															"    //set itinerary id",
															"    jsonData.itineraryId=\"1234\";",
															"    jsonData.state = \"Booked\",",
															"    //set billing cash",
															"    jsonData.billing = [];",
															"    //set depositPolicy",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));",
															"    jsonData.depositPolicy = depositPolicy;",
															"    // again save to same variable",
															"   pm.environment.set(\"reservationModifyReq4\",JSON.stringify(jsonData));",
															"",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationModifyReq4}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"4.5 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Success : Find reservation having Manual RI with cnfNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"pm.expect(3).equal(jsonData.roomReservation.payments.length);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation?confirmationNumber={{useCaseConfirmationNumber4}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{useCaseConfirmationNumber4}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Reservation - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"4.6 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Reservation with multi CC : Cancel Reservation by confirmationNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.variables.get(\"useCaseConfirmationNumber4\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"confirmationNumber\": \"{{useCaseConfirmationNumber4}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v3/reservation/cancel",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"reservation",
														"cancel"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "5.Transient User Reservation -With cash payment",
									"item": [
										{
											"name": "Single Availability-Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"5.1 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Reservation with cash payment : Single Availability with Checkin Date,Â Checkout Date, Property Id and Number of Adults\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.eq(jsonData.ratePlans[0]);\r",
															"  if(jsonData.ratePlans.length){\r",
															"      var ratePlanIndex =1;\r",
															"      \r",
															"    var itemizedList = jsonData.ratePlans[ratePlanIndex].rooms[0].price.itemized\r",
															"  pm.expect(0).not.equal(itemizedList.length);\r",
															"  //save booking object\r",
															"  var bookings = [];\r",
															"    for (var i = 0; i < itemizedList.length; i++) {\r",
															"        var itemized = itemizedList[i];\r",
															"        var booking = {};\r",
															"        booking.date = itemized.date;\r",
															"        booking.price = itemized.basePrice;\r",
															"        booking.programId =itemized.programId; \r",
															"        booking.overridePrice= -1;\r",
															"        bookings[i] = booking;\r",
															"    }\r",
															"   \r",
															"    pm.environment.set(\"useCaseRoomTypeId\",jsonData.ratePlans[ratePlanIndex].rooms[0].roomTypeId);\r",
															"    pm.environment.set(\"useCaseProgramId\",jsonData.ratePlans[ratePlanIndex].programId);\r",
															"      pm.environment.set(\"useCaseBookings\",JSON.stringify(bookings));  \r",
															"  }else{\r",
															"       pm.expect(1).not.equal(jsonData.ratePlans.length);\r",
															"  }\r",
															" \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v3/availability/trip?checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{scenarioBasedCheckOutDate}}&propertyId={{propertyId}}&numAdults=2",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"availability",
														"trip"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{scenarioBasedCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{propertyId}}"
														},
														{
															"key": "numAdults",
															"value": "2"
														},
														{
															"key": "programId",
															"value": "RPCD-v-ADVP-d-PROP-v-MV021",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Calculate Room Charges - Before Create Reservation Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"5.2 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Reservation with cash payment : Before Reservation with Profile, Booking, TripDetails, Billing and AgentInfo\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    //save response to  reservation Request in env for create reservation\r",
															"      pm.environment.set(\"reservationCreateReq-5C1\",JSON.stringify(jsonData));\r",
															"\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\r\n        \"propertyId\": \"{{propertyId}}\",\r\n        \"roomTypeId\": \"{{useCaseRoomTypeId}}\",\r\n        \"programId\": \"{{useCaseProgramId}}\",\r\n       \"itineraryId\": \"9323708418\",\r\n    \"customerId\": \"846558855426\",\r\n    \"guaranteeCode\": null,\r\n    \"tripDetails\": {\r\n        \"checkInDate\": \"{{scenarioBasedCheckInDate}}\",\r\n        \"checkOutDate\": \"{{scenarioBasedCheckOutDate}}\",\r\n        \"numAdults\": 1,\r\n        \"numChildren\": 0,\r\n        \"numRooms\": 1\r\n    },\r\n \r\n    \"bookings\": {{useCaseBookings}},\r\n\r\n \"profile\": {\r\n      \"id\": 846558855426,\r\n      \"operaId\": null,\r\n      \"firstName\": \"Uttam\",\r\n      \"lastName\": \"Ghorai\",\r\n      \"phoneNumbers\": null,\r\n      \"emailAddress1\": null,\r\n      \"emailAddress2\": null,\r\n      \"dateOfBirth\": null,\r\n      \"hgpNo\": null,\r\n      \"swrrNo\": null,\r\n      \"addresses\": [\r\n        {\r\n          \"preferred\": false,\r\n          \"street1\": \"100 St\",\r\n          \"street2\": null,\r\n          \"city\": \"Las Vegas\",\r\n          \"state\": \"NV\",\r\n          \"country\": \"US\",\r\n          \"postalCode\": \"89102\",\r\n          \"type\": \"Home\"\r\n        }\r\n      ],\r\n      \"title\": null,\r\n      \"mlifeNo\": 0\r\n    }\r\n\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Reservation -With cash",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"5.3 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Reservation with cash payment : Create Transient Reservation with Cash payment \", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.environment.set(\"variable_key\", \"variable_value\");  \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.booked);    \r",
															"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
															"    var reservationId = jsonData.roomReservation.id;\r",
															"    pm.expect(confirmationNumber).not.eq(null);\r",
															"    pm.expect(itineraryId).not.eq(null);\r",
															"    pm.expect(reservationId).not.eq(null);\r",
															"    pm.environment.set('useCaseConfirmationNumber5',  confirmationNumber);\r",
															"     // save response in env for premodify charges\r",
															"     pm.environment.set(\"reservationModifyReq-5M1\",JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"    //Create reservation Request and save in env\r",
															"    // get response from charges before create saved into env\r",
															"     jsonData = JSON.parse(pm.environment.get(\"reservationCreateReq-5C1\"));\r",
															"    //set itinerary id\r",
															"    jsonData.itineraryId=\"1234\";\r",
															"    //set profile\r",
															"    jsonData.customerId = postman.getEnvironmentVariable(\"iceNYNYCustomerId\");\r",
															"    jsonData.profile = JSON.parse(postman.getEnvironmentVariable(\"iceNYNYProfile\"));\r",
															"    //set billing with cash\r",
															"    jsonData.billing = [];\r",
															"    //set depositPolicy\r",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));\r",
															"    jsonData.depositPolicy = depositPolicy;\r",
															"      // again save to same variable\r",
															"    pm.environment.set(\"reservationCreateReq-5C1\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-123"
													},
													{
														"key": "",
														"type": "text",
														"value": ""
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationCreateReq-5C1}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"5.4 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Success : Find reservation with cnfNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation?confirmationNumber={{useCaseConfirmationNumber5}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{useCaseConfirmationNumber5}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Modify Reservation- Modify With multi CC",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"5.5 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Reservation with cash payment : Modify Reservation with multi CC\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    postman.setEnvironmentVariable(\"useCaseConfirmationNumber5\",jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															"    //Modify reservation Request and save in env",
															"    // get response from charges before create saved into env",
															"     jsonData = JSON.parse(pm.environment.get(\"reservationModifyReq-5M1\"));",
															"    //set itinerary id",
															"    jsonData.itineraryId=\"1234\";",
															"    jsonData.state = \"Booked\",",
															"    //set billing multi cc",
															"        billing = JSON.parse(postman.getEnvironmentVariable(\"multiCC\"));",
															"    billing[0].payment.amount=jsonData.depositDetails.amount-1;",
															"    billing[1].payment.amount=1.0;",
															"    jsonData.billing = billing;",
															"    //set depositPolicy",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));",
															"    jsonData.depositPolicy = depositPolicy;",
															"    // again save to same variable",
															"    postman.setEnvironmentVariable(\"reservationModifyReq-5M1\",JSON.stringify(jsonData));",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationModifyReq-5M1}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Reservation - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"5.6 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Reservation with cash payment : Cancel Reservation by confirmationNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.variables.get(\"useCaseConfirmationNumber5\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"confirmationNumber\": \"{{useCaseConfirmationNumber5}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v3/reservation/cancel",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"reservation",
														"cancel"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "6.Transient User Reservation -Overide Price and Program",
									"item": [
										{
											"name": "Single Availability",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"6.1 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Reservation with Override Price and Program : Single Availability with Checkin Date,Â Checkout Date, Property Id and Number of Adults\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.eq(jsonData.ratePlans[0]);\r",
															"  if(jsonData.ratePlans.length){\r",
															"      var ratePlanIndex =0;\r",
															"      \r",
															"    var itemizedList = jsonData.ratePlans[ratePlanIndex].rooms[0].price.itemized\r",
															"  pm.expect(0).not.equal(itemizedList.length);\r",
															"  //save booking object\r",
															"  var bookings = [];\r",
															"    for (var i = 0; i < itemizedList.length; i++) {\r",
															"        var itemized = itemizedList[i];\r",
															"        var booking = {};\r",
															"        booking.date = itemized.date;\r",
															"        booking.price = itemized.basePrice;\r",
															"        booking.programId =itemized.programId; \r",
															"        booking.overridePrice= -1;\r",
															"        bookings[i] = booking;\r",
															"    }\r",
															"   \r",
															"   pm.environment.set(\"useCaseRoomTypeId\",jsonData.ratePlans[ratePlanIndex].rooms[0].roomTypeId);\r",
															"   pm.environment.set(\"useCaseProgramId\",jsonData.ratePlans[ratePlanIndex].programId);\r",
															"    pm.environment.set(\"useCaseBookings\",JSON.stringify(bookings)); \r",
															"     if(jsonData.ratePlans.length>2){\r",
															"            postman.setEnvironmentVariable(\"scenarioBasedModifyProgramId\",jsonData.ratePlans[ratePlanIndex+1].programId);\r",
															"                  postman.setEnvironmentVariable(\"scenarioBasedModifyRoomId\",jsonData.ratePlans[ratePlanIndex+1].rooms[1].roomTypeId);   \r",
															"     }\r",
															"  }else{\r",
															"       pm.expect(1).not.equal(jsonData.ratePlans.length);\r",
															"  }\r",
															" \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v3/availability/trip?checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{scenarioBasedCheckOutDate}}&propertyId={{propertyId}}&numAdults=2",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"availability",
														"trip"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{scenarioBasedCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{propertyId}}"
														},
														{
															"key": "numAdults",
															"value": "2"
														},
														{
															"key": "programId",
															"value": "RPCD-v-ADVP-d-PROP-v-MV021",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Charges Before Create -Override program and price",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"6.2 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Reservation with Override Price and Program : PreModify Reservation with Profile, Booking, TripDetails, Billing and AgentInfo and overide price and program.\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    // save response in env for premodify charges\r",
															"     pm.environment.set(\"reservationCreateReq-6C1\",JSON.stringify(jsonData));\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// overide price and program\r",
															"    \r",
															" var bookings = JSON.parse(pm.environment.get(\"useCaseBookings\"));\r",
															"         bookings[0].overrideProgramId=postman.getEnvironmentVariable(\"scenarioBasedModifyProgramId\")\r",
															"        bookings[0].overridePrice = 10.0;\r",
															"pm.environment.set(\"useCaseBookings\",JSON.stringify(bookings));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\r\n        \"propertyId\": \"{{propertyId}}\",\r\n        \"roomTypeId\": \"{{useCaseRoomTypeId}}\",\r\n        \"programId\": \"{{useCaseProgramId}}\",\r\n       \"itineraryId\": \"9323708418\",\r\n    \"customerId\": \"846558855426\",\r\n    \"guaranteeCode\": null,\r\n    \"tripDetails\": {\r\n        \"checkInDate\": \"{{scenarioBasedCheckInDate}}\",\r\n        \"checkOutDate\": \"{{scenarioBasedCheckOutDate}}\",\r\n        \"numAdults\": 1,\r\n        \"numChildren\": 0,\r\n        \"numRooms\": 1\r\n    },\r\n \r\n    \"bookings\": {{useCaseBookings}},\r\n\r\n \"profile\": {\r\n      \"id\": 846558855426,\r\n      \"operaId\": null,\r\n      \"firstName\": \"Uttam\",\r\n      \"lastName\": \"Ghorai\",\r\n      \"phoneNumbers\": null,\r\n      \"emailAddress1\": null,\r\n      \"emailAddress2\": null,\r\n      \"dateOfBirth\": null,\r\n      \"hgpNo\": null,\r\n      \"swrrNo\": null,\r\n      \"addresses\": [\r\n        {\r\n          \"preferred\": false,\r\n          \"street1\": \"100 St\",\r\n          \"street2\": null,\r\n          \"city\": \"Las Vegas\",\r\n          \"state\": \"NV\",\r\n          \"country\": \"US\",\r\n          \"postalCode\": \"89102\",\r\n          \"type\": \"Home\"\r\n        }\r\n      ],\r\n      \"title\": null,\r\n      \"mlifeNo\": 0\r\n    }\r\n\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Reservation V2 - Override program and Price",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"6.3 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Reservation with Override Price and Program : Create Transient Reservation with Profile, Booking, TripDetails, Billing and overide price and program. \", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.environment.set(\"variable_key\", \"variable_value\");  \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"pm.environment.set('useCaseConfirmationNumber6',  \"\");\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.booked);    \r",
															"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
															"    var reservationId = jsonData.roomReservation.id;\r",
															"    pm.expect(confirmationNumber).not.eq(null);\r",
															"    pm.expect(itineraryId).not.eq(null);\r",
															"    pm.expect(reservationId).not.eq(null);\r",
															"          pm.expect(10).equal(jsonData.roomReservation.bookings[0].overridePrice);\r",
															"      \r",
															"      overrideProgram = pm.environment.get(\"scenarioBasedModifyProgramId\");\r",
															"       pm.expect(overrideProgram).equal(jsonData.roomReservation.bookings[0].overrideProgramId);\r",
															"   pm.environment.set('useCaseConfirmationNumber6',  confirmationNumber);\r",
															"\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"    //Create reservation Request and save in env\r",
															"    // get response from charges before create saved into env\r",
															"     jsonData = JSON.parse(pm.environment.get(\"reservationCreateReq-6C1\"));\r",
															"    //set itinerary id\r",
															"    jsonData.itineraryId=\"1234\";\r",
															"    //set billing\r",
															"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));\r",
															"    billing[0].payment.amount=jsonData.depositDetails.amount;\r",
															"    jsonData.billing = billing;\r",
															"      //set profile\r",
															"    jsonData.customerId = postman.getEnvironmentVariable(\"iceNYNYCustomerId\")\r",
															"    jsonData.profile = JSON.parse(postman.getEnvironmentVariable(\"iceNYNYProfile\"));\r",
															"    //set depositPolicy\r",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));\r",
															"    jsonData.depositPolicy = depositPolicy;\r",
															"   jsonData.bookings[0].overridePrice = 10.0;\r",
															"    // again save to same variable\r",
															"    pm.environment.set(\"reservationCreateReq-6C1\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-123",
														"type": "text"
													},
													{
														"key": "",
														"value": "",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationCreateReq-6C1}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Reservation - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"6.4 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Reservation with Override Price and Program : Cancel Reservation by confirmationNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.variables.get(\"useCaseConfirmationNumber6\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"confirmationNumber\": \"{{useCaseConfirmationNumber6}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v3/reservation/cancel",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"reservation",
														"cancel"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "7.Create Reservation in ICE and Find Reservation in Web",
									"item": [
										{
											"name": "Single Availability-Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"7.1 | RBS_ACRS_Integration | ICE-LasVegas-Create in ICE and LookUp in Web : Single Availability with Checkin Date,Â Checkout Date, Property Id and Number of Adults\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.eq(jsonData.ratePlans[0]);\r",
															"  if(jsonData.ratePlans.length){\r",
															"      var ratePlanIndex =1;\r",
															"      \r",
															"    var itemizedList = jsonData.ratePlans[ratePlanIndex].rooms[0].price.itemized\r",
															"  pm.expect(0).not.equal(itemizedList.length);\r",
															"  //save booking object\r",
															"  var bookings = [];\r",
															"    for (var i = 0; i < itemizedList.length; i++) {\r",
															"        var itemized = itemizedList[i];\r",
															"        var booking = {};\r",
															"        booking.date = itemized.date;\r",
															"        booking.price = itemized.basePrice;\r",
															"        booking.programId =itemized.programId; \r",
															"        booking.overridePrice= -1;\r",
															"        bookings[i] = booking;\r",
															"    }\r",
															"   \r",
															"   postman.setEnvironmentVariable(\"useCaseRoomTypeId\",jsonData.ratePlans[ratePlanIndex].rooms[0].roomTypeId);\r",
															"   postman.setEnvironmentVariable(\"useCaseProgramId\",jsonData.ratePlans[ratePlanIndex].programId);\r",
															"     postman.setEnvironmentVariable(\"useCaseBookings\",JSON.stringify(bookings));  \r",
															"  }else{\r",
															"       pm.expect(1).not.equal(jsonData.ratePlans.length);\r",
															"  }\r",
															" \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v3/availability/trip?checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{scenarioBasedCheckOutDate}}&propertyId={{propertyId}}&numAdults=2",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"availability",
														"trip"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{scenarioBasedCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{propertyId}}"
														},
														{
															"key": "numAdults",
															"value": "2"
														},
														{
															"key": "programId",
															"value": "RPCD-v-ADVP-d-PROP-v-MV021",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Calculate Room Charges - Before Create Reservation Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"7.2 | RBS_ACRS_Integration | ICE-LasVegas-Create in ICE and LookUp in Web : Before Reservation with Profile, Booking, TripDetails, Billing and AgentInfo\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    //save response to  reservation Request in env for create reservation\r",
															"     postman.setEnvironmentVariable(\"reservationCreateReq\",JSON.stringify(jsonData));\r",
															"\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"propertyId\": \"{{propertyId}}\",\r\n    \"roomTypeId\": \"{{useCaseRoomTypeId}}\",\r\n    \"programId\": \"{{useCaseProgramId}}\",\r\n    \"itineraryId\": \"9323708418\",\r\n    \"customerId\": \"846558855426\",\r\n    \"guaranteeCode\": null,\r\n    \"tripDetails\": {\r\n        \"checkInDate\": \"{{scenarioBasedCheckInDate}}\",\r\n        \"checkOutDate\": \"{{scenarioBasedCheckOutDate}}\",\r\n        \"numAdults\": 1,\r\n        \"numChildren\": 0,\r\n        \"numRooms\": 1\r\n    },\r\n    \"bookings\": {{useCaseBookings}},\r\n    \"profile\": {\r\n        \"id\": 846558855426,\r\n        \"operaId\": null,\r\n        \"firstName\": \"Uttam\",\r\n        \"lastName\": \"Ghorai\",\r\n        \"phoneNumbers\": null,\r\n        \"emailAddress1\": null,\r\n        \"emailAddress2\": null,\r\n        \"dateOfBirth\": null,\r\n        \"hgpNo\": null,\r\n        \"swrrNo\": null,\r\n        \"addresses\": [\r\n            {\r\n                \"preferred\": false,\r\n                \"street1\": \"100 St\",\r\n                \"street2\": null,\r\n                \"city\": \"Las Vegas\",\r\n                \"state\": \"NV\",\r\n                \"country\": \"US\",\r\n                \"postalCode\": \"89102\",\r\n                \"type\": \"Home\"\r\n            }\r\n        ],\r\n        \"title\": null,\r\n        \"mlifeNo\": 0\r\n    }\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Reservation V2 - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"7.3 | RBS_ACRS_Integration | ICE-LasVegas-Create in ICE and LookUp in Web : Create Transient Reservation with Profile, Booking, TripDetails, Billing \", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.environment.set(\"variable_key\", \"variable_value\");  \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.booked);    \r",
															"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
															"    var reservationId = jsonData.roomReservation.id;\r",
															"    pm.expect(confirmationNumber).not.eq(null);\r",
															"    pm.expect(itineraryId).not.eq(null);\r",
															"    pm.expect(reservationId).not.eq(null);\r",
															"    postman.setEnvironmentVariable('useCaseConfirmationNumber',  confirmationNumber);\r",
															"     // save response in env for premodify charges\r",
															"     postman.setEnvironmentVariable(\"reservationCreateReq\",JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"    //Create reservation Request and save in env\r",
															"    // get response from charges before create saved into env\r",
															"     jsonData = JSON.parse(postman.getEnvironmentVariable(\"reservationCreateReq\"));\r",
															"    //set itinerary id\r",
															"    jsonData.itineraryId=\"1234\";\r",
															"    //set billing\r",
															"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));\r",
															"    billing[0].amount=jsonData.depositDetails.amount;\r",
															"    jsonData.billing = billing;\r",
															"    //set profile\r",
															"    jsonData.customerId = postman.getEnvironmentVariable(\"iceNYNYCustomerId\")\r",
															"    jsonData.profile = JSON.parse(postman.getEnvironmentVariable(\"iceNYNYProfile\"));\r",
															"    //set depositPolicy\r",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));\r",
															"    jsonData.depositPolicy = depositPolicy;\r",
															"    // again save to same variable\r",
															"    postman.setEnvironmentVariable(\"reservationCreateReq\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-123",
														"type": "text"
													},
													{
														"key": "",
														"value": "",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationCreateReq}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"7.4 | RBS_ACRS_Integration | ICE-LasVegas-Create in ICE and LookUp in Web : Find reservation with cnfNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation?confirmationNumber={{useCaseConfirmationNumber}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{useCaseConfirmationNumber}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Reservation - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"7.5 | RBS_ACRS_Integration | ICE-LasVegas-Create in ICE and LookUp in Web : Cancel Reservation by confirmationNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.variables.get(\"useCaseConfirmationNumber\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"confirmationNumber\": \"{{useCaseConfirmationNumber}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v3/reservation/cancel",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"reservation",
														"cancel"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "9.Transient Reservation Profile Updation",
									"item": [
										{
											"name": "Single Availability-Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"9.1 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation Profile Updation : Single Availability with Checkin Date,Â Checkout Date, Property Id and Number of Adults\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.eq(jsonData.ratePlans[0]);\r",
															"  if(jsonData.ratePlans.length){\r",
															"      var ratePlanIndex =0;\r",
															"      \r",
															"    var itemizedList = jsonData.ratePlans[ratePlanIndex].rooms[0].price.itemized\r",
															"  pm.expect(0).not.equal(itemizedList.length);\r",
															"  //save booking object\r",
															"  var bookings = [];\r",
															"    for (var i = 0; i < itemizedList.length; i++) {\r",
															"        var itemized = itemizedList[i];\r",
															"        var booking = {};\r",
															"        booking.date = itemized.date;\r",
															"        booking.price = itemized.basePrice;\r",
															"        booking.programId =itemized.programId; \r",
															"        booking.overridePrice= -1;\r",
															"        bookings[i] = booking;\r",
															"    }\r",
															"   \r",
															"   pm.environment.set(\"useCaseRoomTypeId\",jsonData.ratePlans[ratePlanIndex].rooms[0].roomTypeId);\r",
															"    pm.environment.set(\"useCaseProgramId\",jsonData.ratePlans[ratePlanIndex].programId);\r",
															"      pm.environment.set(\"useCaseBookings\",JSON.stringify(bookings));  \r",
															"  }else{\r",
															"       pm.expect(1).not.equal(jsonData.ratePlans.length);\r",
															"  }\r",
															" \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v3/availability/trip?checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{scenarioBasedCheckOutDate}}&propertyId={{propertyId}}&numAdults=2",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"availability",
														"trip"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{scenarioBasedCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{propertyId}}"
														},
														{
															"key": "numAdults",
															"value": "2"
														},
														{
															"key": "programId",
															"value": "RPCD-v-ADVP-d-PROP-v-MV021",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Calculate Room Charges - Before Create Reservation Suiccess",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"9.2 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation Profile Updation : Before Reservation with Profile, Booking, TripDetails, Billing and AgentInfo\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    //save response to  reservation Request in env for create reservation\r",
															"      pm.environment.set(\"reservationCreateReq-9\",JSON.stringify(jsonData));\r",
															"\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\r\n        \"propertyId\": \"{{propertyId}}\",\r\n        \"roomTypeId\": \"{{useCaseRoomTypeId}}\",\r\n        \"programId\": \"{{useCaseProgramId}}\",\r\n       \"itineraryId\": \"9323708418\",\r\n    \"customerId\": \"846558855426\",\r\n    \"guaranteeCode\": null,\r\n    \"tripDetails\": {\r\n        \"checkInDate\": \"{{scenarioBasedCheckInDate}}\",\r\n        \"checkOutDate\": \"{{scenarioBasedCheckOutDate}}\",\r\n        \"numAdults\": 1,\r\n        \"numChildren\": 0,\r\n        \"numRooms\": 1\r\n    },\r\n \r\n    \"bookings\": {{useCaseBookings}},\r\n\r\n \"profile\": {\r\n      \"id\": 846558855426,\r\n      \"operaId\": null,\r\n      \"firstName\": \"Uttam\",\r\n      \"lastName\": \"Ghorai\",\r\n      \"phoneNumbers\": null,\r\n      \"emailAddress1\": null,\r\n      \"emailAddress2\": null,\r\n      \"dateOfBirth\": null,\r\n      \"hgpNo\": null,\r\n      \"swrrNo\": null,\r\n      \"addresses\": [\r\n        {\r\n          \"preferred\": false,\r\n          \"street1\": \"100 St\",\r\n          \"street2\": null,\r\n          \"city\": \"Las Vegas\",\r\n          \"state\": \"NV\",\r\n          \"country\": \"US\",\r\n          \"postalCode\": \"89102\",\r\n          \"type\": \"Home\"\r\n        }\r\n      ],\r\n      \"title\": null,\r\n      \"mlifeNo\": 0\r\n    }\r\n\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Reservation V2 - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"9.3 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation Profile Updation : Create Transient Reservation with Profile, Booking, TripDetails, Billing \", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.environment.set(\"variable_key\", \"variable_value\");  \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.booked);    \r",
															"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
															"    var reservationId = jsonData.roomReservation.id;\r",
															"    pm.expect(confirmationNumber).not.eq(null);\r",
															"    pm.expect(itineraryId).not.eq(null);\r",
															"    pm.expect(reservationId).not.eq(null);\r",
															"    pm.environment.set('useCaseConfirmationNumber9',  confirmationNumber);\r",
															"     // save response in env for premodify charges\r",
															"    pm.environment.set(\"reservationCreateRes-9\",JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"    //Create reservation Request and save in env\r",
															"    // get response from charges before create saved into env\r",
															"     jsonData = JSON.parse( pm.environment.get(\"reservationCreateReq-9\"));\r",
															"    //set itinerary id\r",
															"    jsonData.itineraryId=\"1234\";\r",
															"    //set billing\r",
															"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));\r",
															"    billing[0].payment.amount=jsonData.depositDetails.amount;\r",
															"    jsonData.billing = billing;\r",
															"\r",
															"    //set profile\r",
															"    jsonData.customerId = postman.getEnvironmentVariable(\"iceNYNYCustomerId\")\r",
															"    jsonData.profile = JSON.parse(postman.getEnvironmentVariable(\"iceNYNYProfile\"));\r",
															"    //set depositPolicy\r",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));\r",
															"    jsonData.depositPolicy = depositPolicy;\r",
															"    // again save to same variable\r",
															"    pm.environment.set(\"reservationCreateReq-9\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-123",
														"type": "text"
													},
													{
														"key": "",
														"value": "",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationCreateReq-9}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Reservation Profile Updation - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"9.4 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation Profile Updation : Reservation Profile Updation\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    \r",
															"    var firstName = jsonData.roomReservation.profile.firstName;\r",
															"    var lastName = jsonData.roomReservation.profile.lastName;\r",
															"    var email = jsonData.roomReservation.profile.emailAddress1;\r",
															"\r",
															"    pm.expect(firstName).not.eq(null);\r",
															"    pm.expect(lastName).not.eq(null);\r",
															"    pm.expect(email).not.eq(null);\r",
															"\r",
															"    pm.expect(firstName).eq(\"TestUserFName\");\r",
															"    pm.expect(lastName).eq(\"TestUserLName\");\r",
															"    pm.expect(email).eq(\"TestUserFName@nomail.com\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"itineraryId\": \"1234\",\r\n\t\"propertyId\": \"{{propertyId}}\",\r\n\t\"confirmationNumber\": \"{{useCaseConfirmationNumber9}}\",\r\n\t\"userProfile\": {\r\n\t\t\"id\": 0,\r\n\t\t\"title\": \"Mr\",\r\n\t\t\"firstName\": \"TestUserFName\",\r\n\t\t\"lastName\": \"TestUserLName\",\r\n\t\t\"phoneNumbers\": [\r\n\t\t\t{\r\n\t\t\t\t\"type\": \"Home\",\r\n\t\t\t\t\"number\": \"456638833\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"emailAddress1\": \"TestUserFName@nomail.com\",\r\n\t\t\"emailAddress2\": \"TestUserFName@nomail.com\",\r\n\t\t\"dateOfBirth\": \"1995-12-31\",\r\n\t\t\"mlifeNo\": 0,\r\n\t\t\"addresses\": [\r\n\t\t\t{\r\n\t\t\t\t\"type\": \"Home\",\r\n\t\t\t\t\"preferred\": true,\r\n\t\t\t\t\"street1\": \"234 W Main St\",\r\n\t\t\t\t\"street2\": \"Unit 415\",\r\n\t\t\t\t\"city\": \"Las Vegas\",\r\n\t\t\t\t\"state\": \"NV\",\r\n\t\t\t\t\"country\": \"US\",\r\n\t\t\t\t\"postalCode\": \"12345\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/profile",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"profile"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"9.5 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation Profile Updation : Find reservation with cnfNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"\r",
															"  var firstName = jsonData.roomReservation.profile.firstName;\r",
															"  var lastName = jsonData.roomReservation.profile.lastName;\r",
															"  var email = jsonData.roomReservation.profile.emailAddress1;\r",
															"\r",
															"  pm.expect(firstName).not.eq(null);\r",
															"  pm.expect(lastName).not.eq(null);\r",
															"  pm.expect(email).not.eq(null);\r",
															"  \r",
															"  pm.expect(firstName).eq(\"TestUserFName\");\r",
															"  pm.expect(lastName).eq(\"TestUserLName\");\r",
															"  pm.expect(email).eq(\"TestUserFName@nomail.com\");\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation?confirmationNumber={{useCaseConfirmationNumber9}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{useCaseConfirmationNumber9}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Reservation - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"9.6 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation Profile Updation : Cancel Reservation by confirmationNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.variables.get(\"useCaseConfirmationNumber9\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"confirmationNumber\": \"{{useCaseConfirmationNumber9}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v3/reservation/cancel",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"reservation",
														"cancel"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "10.Transient Reservation-Update profile to Mlife",
									"item": [
										{
											"name": "Single Availability-Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"10.1 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation Update Profile to Mlife : Single Availability with Checkin Date,Â Checkout Date, Property Id and Number of Adults\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.eq(jsonData.ratePlans[0]);\r",
															"  if(jsonData.ratePlans.length){\r",
															"      var ratePlanIndex =1;\r",
															"      \r",
															"    var itemizedList = jsonData.ratePlans[ratePlanIndex].rooms[0].price.itemized\r",
															"  pm.expect(0).not.equal(itemizedList.length);\r",
															"  //save booking object\r",
															"  var bookings = [];\r",
															"    for (var i = 0; i < itemizedList.length; i++) {\r",
															"        var itemized = itemizedList[i];\r",
															"        var booking = {};\r",
															"        booking.date = itemized.date;\r",
															"        booking.price = itemized.basePrice;\r",
															"        booking.programId =itemized.programId; \r",
															"        booking.overridePrice= -1;\r",
															"        bookings[i] = booking;\r",
															"    }\r",
															"   \r",
															"   pm.environment.set(\"useCaseRoomTypeId\",jsonData.ratePlans[ratePlanIndex].rooms[0].roomTypeId);\r",
															"   pm.environment.set(\"useCaseProgramId\",jsonData.ratePlans[ratePlanIndex].programId);\r",
															"     pm.environment.set(\"useCaseBookings\",JSON.stringify(bookings));  \r",
															"  }else{\r",
															"       pm.expect(1).not.equal(jsonData.ratePlans.length);\r",
															"  }\r",
															" \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v3/availability/trip?checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{scenarioBasedCheckOutDate}}&propertyId={{propertyId}}&numAdults=2",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"availability",
														"trip"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{scenarioBasedCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{propertyId}}"
														},
														{
															"key": "numAdults",
															"value": "2"
														},
														{
															"key": "programId",
															"value": "RPCD-v-ADVP-d-PROP-v-MV021",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Calculate Room Charges - Before Create Reservation Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"10.2 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation Update Profile to Mlife : Before Reservation with Profile, Booking, TripDetails, Billing and AgentInfo\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    //save response to  reservation Request in env for create reservation\r",
															"     pm.environment.set(\"reservationCreateReq-10\",JSON.stringify(jsonData));\r",
															"\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\r\n        \"propertyId\": \"{{propertyId}}\",\r\n        \"roomTypeId\": \"{{useCaseRoomTypeId}}\",\r\n        \"programId\": \"{{useCaseProgramId}}\",\r\n       \"itineraryId\": \"9323708418\",\r\n    \"customerId\": \"846558855426\",\r\n    \"guaranteeCode\": null,\r\n    \"tripDetails\": {\r\n        \"checkInDate\": \"{{scenarioBasedCheckInDate}}\",\r\n        \"checkOutDate\": \"{{scenarioBasedCheckOutDate}}\",\r\n        \"numAdults\": 1,\r\n        \"numChildren\": 0,\r\n        \"numRooms\": 1\r\n    },\r\n \r\n    \"bookings\": {{useCaseBookings}},\r\n\r\n \"profile\": {\r\n      \"id\": 846558855426,\r\n      \"operaId\": null,\r\n      \"firstName\": \"Uttam\",\r\n      \"lastName\": \"Ghorai\",\r\n      \"phoneNumbers\": null,\r\n      \"emailAddress1\": null,\r\n      \"emailAddress2\": null,\r\n      \"dateOfBirth\": null,\r\n      \"hgpNo\": null,\r\n      \"swrrNo\": null,\r\n      \"addresses\": [\r\n        {\r\n          \"preferred\": false,\r\n          \"street1\": \"100 St\",\r\n          \"street2\": null,\r\n          \"city\": \"Las Vegas\",\r\n          \"state\": \"NV\",\r\n          \"country\": \"US\",\r\n          \"postalCode\": \"89102\",\r\n          \"type\": \"Home\"\r\n        }\r\n      ],\r\n      \"title\": null,\r\n      \"mlifeNo\": 0\r\n    }\r\n\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Reservation with IATA",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"10.3 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation Update Profile to Mlife : Create Transient Reservation with Profile, Booking, TripDetails, Billing \", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.environment.set(\"variable_key\", \"variable_value\");  \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.booked);    \r",
															"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
															"    var reservationId = jsonData.roomReservation.id;\r",
															"    pm.expect(confirmationNumber).not.eq(null);\r",
															"    pm.expect(itineraryId).not.eq(null);\r",
															"    pm.expect(reservationId).not.eq(null);\r",
															"    pm.environment.set('useCaseConfirmationNumber',  confirmationNumber);\r",
															"     // save response in env for premodify charges\r",
															"    pm.environment.set(\"reservationCreateReq-11\",JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"    //Create reservation Request and save in env\r",
															"    // get response from charges before create saved into env\r",
															"     jsonData = JSON.parse(pm.environment.get(\"reservationCreateReq-10\"));\r",
															"    //set itinerary id\r",
															"    jsonData.itineraryId=\"1234\";\r",
															"    //set profile\r",
															"    jsonData.customerId = postman.getEnvironmentVariable(\"iceNYNYCustomerId\")\r",
															"    jsonData.profile = JSON.parse(postman.getEnvironmentVariable(\"iceNYNYProfile\"));\r",
															"    //set billing\r",
															"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));\r",
															"    billing[0].payment.amount=jsonData.depositDetails.amount;\r",
															"    jsonData.billing = billing;\r",
															"    //set depositPolicy\r",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));\r",
															"    jsonData.depositPolicy = depositPolicy;\r",
															"    // again save to same variable\r",
															"    pm.environment.set(\"reservationCreateReq-10\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-123"
													},
													{
														"key": "",
														"type": "text",
														"value": ""
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationCreateReq-10}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Reservation Profile Mlife Update - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"10.4 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation Update Profile to Mlife : Reservation Mlife Profile Update\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    \r",
															"    var firstName = jsonData.roomReservation.profile.firstName;\r",
															"    var lastName = jsonData.roomReservation.profile.lastName;\r",
															"    var email = jsonData.roomReservation.profile.emailAddress1;\r",
															"    var mlifeNo = jsonData.roomReservation.profile.mlifeNo;\r",
															"\r",
															"    pm.expect(firstName).not.eq(null);\r",
															"    pm.expect(lastName).not.eq(null);\r",
															"    pm.expect(email).not.eq(null);\r",
															"    pm.expect(mlifeNo).not.eq(null);\r",
															"   NYNYMlifeNo = JSON.parse(postman.getEnvironmentVariable(\"NYNYMlifeNo\"));\r",
															"    pm.expect(firstName).eq(\"Lakshmi\");\r",
															"    pm.expect(lastName).eq(\"Test\");\r",
															"    pm.expect(email).eq(\"tlntest3@yopmail.com\");\r",
															"    pm.expect(mlifeNo).eq(NYNYMlifeNo);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"itineraryId\": \"1234\",\r\n\t\"propertyId\": \"{{propertyId}}\",\r\n\t\"confirmationNumber\": \"{{useCaseConfirmationNumber}}\",\r\n\t\"userProfile\": {\r\n        \"id\": 923600551937,\r\n        \"mlifeNo\": {{NYNYMlifeNo}},\r\n        \"title\": \"MR\",\r\n        \"dateOfBirth\": \"1985-01-01\",\r\n        \"firstName\": \"Lakshmi\",\r\n        \"lastName\": \"Test\",\r\n        \"emailAddress1\": \"tlntest3@yopmail.com\",\r\n        \"emailAddress2\": \"tlntest3@yopmail.com\",\r\n        \"phoneNumbers\": [\r\n            {\r\n                \"type\": \"Home\",\r\n                \"number\": \"9611877000\"\r\n            }\r\n        ],\r\n        \"addresses\": [\r\n            {\r\n                \"type\": \"Home\",\r\n                \"preferred\": true,\r\n                \"street1\": \"234 W Main St\",\r\n                \"street2\": \"Unit 415\",\r\n                \"city\": \"Las Vegas\",\r\n                \"state\": \"NV\",\r\n                \"country\": \"US\",\r\n                \"postalCode\": \"12345\"\r\n            }\r\n        ]\r\n    }\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/profile",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"profile"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"10.5 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation Update Profile to Mlife : Find reservation with cnfNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"\r",
															"  var firstName = jsonData.roomReservation.profile.firstName;\r",
															"    var lastName = jsonData.roomReservation.profile.lastName;\r",
															"    var email = jsonData.roomReservation.profile.emailAddress1;\r",
															"    var mlifeNo = jsonData.roomReservation.profile.mlifeNo;\r",
															"\r",
															"    pm.expect(firstName).not.eq(null);\r",
															"    pm.expect(lastName).not.eq(null);\r",
															"    pm.expect(email).not.eq(null);\r",
															"    pm.expect(mlifeNo).not.eq(null);\r",
															"\r",
															"    pm.expect(firstName).eq(\"Lakshmi\");\r",
															"    pm.expect(lastName).eq(\"Test\");\r",
															"    pm.expect(email).eq(\"tlntest3@yopmail.com\");\r",
															"     NYNYMlifeNo = JSON.parse(postman.getEnvironmentVariable(\"NYNYMlifeNo\"));\r",
															"    pm.expect(mlifeNo).eq(NYNYMlifeNo);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation?confirmationNumber={{useCaseConfirmationNumber}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{useCaseConfirmationNumber}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Reservation - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"10.6 | RBS_ACRS_Integration | Test case 01 : Cancel Reservation by confirmationNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.environment.get(\"useCaseConfirmationNumber\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"confirmationNumber\": \"{{useCaseConfirmationNumber}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v3/reservation/cancel",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"reservation",
														"cancel"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "11.Transient Reservation create with IATA",
									"item": [
										{
											"name": "Single Availability-Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"11.1 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation create with IATA: Single Availability with Checkin Date,Â Checkout Date, Property Id and Number of Adults\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.eq(jsonData.ratePlans[0]);\r",
															"  if(jsonData.ratePlans.length){\r",
															"      var ratePlanIndex =1;\r",
															"      \r",
															"    var itemizedList = jsonData.ratePlans[ratePlanIndex].rooms[0].price.itemized\r",
															"  pm.expect(0).not.equal(itemizedList.length);\r",
															"  //save booking object\r",
															"  var bookings = [];\r",
															"    for (var i = 0; i < itemizedList.length; i++) {\r",
															"        var itemized = itemizedList[i];\r",
															"        var booking = {};\r",
															"        booking.date = itemized.date;\r",
															"        booking.price = itemized.basePrice;\r",
															"        booking.programId =itemized.programId; \r",
															"        booking.overridePrice= -1;\r",
															"        bookings[i] = booking;\r",
															"    }\r",
															"   \r",
															"   pm.environment.set(\"useCaseRoomTypeId\",jsonData.ratePlans[ratePlanIndex].rooms[0].roomTypeId);\r",
															"   pm.environment.set(\"useCaseProgramId\",jsonData.ratePlans[ratePlanIndex].programId);\r",
															"     pm.environment.set(\"useCaseBookings\",JSON.stringify(bookings));  \r",
															"  }else{\r",
															"       pm.expect(1).not.equal(jsonData.ratePlans.length);\r",
															"  }\r",
															" \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v3/availability/trip?checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{scenarioBasedCheckOutDate}}&propertyId={{propertyId}}&numAdults=2",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"availability",
														"trip"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{scenarioBasedCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{propertyId}}"
														},
														{
															"key": "numAdults",
															"value": "2"
														},
														{
															"key": "programId",
															"value": "RPCD-v-ADVP-d-PROP-v-MV021",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Calculate Room Charges - Before Create Reservation Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"11.2 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation create with IATA : Before Reservation with Profile, Booking, TripDetails, Billing and AgentInfo\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"        pm.environment.set(\"reservationCreateReq-11\",\"\");\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    //save response to  reservation Request in env for create reservation\r",
															"     pm.environment.set(\"reservationCreateReq-11\",JSON.stringify(jsonData));\r",
															"\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\r\n        \"propertyId\": \"{{propertyId}}\",\r\n        \"roomTypeId\": \"{{useCaseRoomTypeId}}\",\r\n        \"programId\": \"{{useCaseProgramId}}\",\r\n       \"itineraryId\": \"9323708418\",\r\n    \"customerId\": \"846558855426\",\r\n    \"guaranteeCode\": null,\r\n    \"tripDetails\": {\r\n        \"checkInDate\": \"{{scenarioBasedCheckInDate}}\",\r\n        \"checkOutDate\": \"{{scenarioBasedCheckOutDate}}\",\r\n        \"numAdults\": 1,\r\n        \"numChildren\": 0,\r\n        \"numRooms\": 1\r\n    },\r\n \r\n    \"bookings\": {{useCaseBookings}},\r\n\r\n \"profile\": {\r\n      \"id\": 846558855426,\r\n      \"operaId\": null,\r\n      \"firstName\": \"Uttam\",\r\n      \"lastName\": \"Ghorai\",\r\n      \"phoneNumbers\": null,\r\n      \"emailAddress1\": null,\r\n      \"emailAddress2\": null,\r\n      \"dateOfBirth\": null,\r\n      \"hgpNo\": null,\r\n      \"swrrNo\": null,\r\n      \"addresses\": [\r\n        {\r\n          \"preferred\": false,\r\n          \"street1\": \"100 St\",\r\n          \"street2\": null,\r\n          \"city\": \"Las Vegas\",\r\n          \"state\": \"NV\",\r\n          \"country\": \"US\",\r\n          \"postalCode\": \"89102\",\r\n          \"type\": \"Home\"\r\n        }\r\n      ],\r\n      \"title\": null,\r\n      \"mlifeNo\": 0\r\n    }\r\n\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Reservation with IATA",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"11.3 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation create with IATA : Create Transient with iata \", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.environment.set(\"variable_key\", \"variable_value\");  \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.booked);    \r",
															"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
															"    var reservationId = jsonData.roomReservation.id;\r",
															"    pm.expect(confirmationNumber).not.eq(null);\r",
															"    pm.expect(itineraryId).not.eq(null);\r",
															"    pm.expect(reservationId).not.eq(null);\r",
															"        agentId = JSON.parse(postman.getEnvironmentVariable(\"agentInfo\")).agentId;\r",
															"     pm.expect(agentId).to.equal(jsonData.roomReservation.agentInfo.agentId);\r",
															"    pm.environment.set('useCaseConfirmationNumber',  confirmationNumber);\r",
															"     // save response in env for premodify charges\r",
															"     pm.environment.set(\"reservationModifyReq-11\",JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"    //Create reservation Request and save in env\r",
															"    // get response from charges before create saved into env\r",
															"    if(pm.environment.get(\"reservationCreateReq-11\")){\r",
															"     jsonData = JSON.parse(pm.environment.get(\"reservationCreateReq-11\"));\r",
															"    //set itinerary id\r",
															"    jsonData.itineraryId=\"1234\";\r",
															"    //set profile\r",
															"    jsonData.customerId = postman.getEnvironmentVariable(\"iceNYNYCustomerId\")\r",
															"    jsonData.profile = JSON.parse(postman.getEnvironmentVariable(\"iceNYNYProfile\"));\r",
															"    // set agent\r",
															"      jsonData.agentInfo = JSON.parse(postman.getEnvironmentVariable(\"agentInfo\"));\r",
															"    //set billing\r",
															"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));\r",
															"    billing[0].payment.amount=jsonData.depositDetails.amount;\r",
															"    jsonData.billing = billing;\r",
															"    //set depositPolicy\r",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));\r",
															"    jsonData.depositPolicy = depositPolicy;\r",
															"    // again save to same variable\r",
															"   pm.environment.set(\"reservationCreateReq-11\",JSON.stringify(jsonData));\r",
															"    }"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-123"
													},
													{
														"key": "",
														"type": "text",
														"value": ""
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationCreateReq-11}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Reservation - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"11.4 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation create with IATA : Cancel Reservation by confirmationNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.variables.get(\"useCaseConfirmationNumber\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"confirmationNumber\": \"{{useCaseConfirmationNumber}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v3/reservation/cancel",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"reservation",
														"cancel"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "12.Transient Reservation with Alerts and Traces",
									"item": [
										{
											"name": "Single Availability-Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"12.1 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation with Alerts and Traces : Single Availability with Checkin Date,Â Checkout Date, Property Id and Number of Adults\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.eq(jsonData.ratePlans[0]);\r",
															"  if(jsonData.ratePlans.length){\r",
															"      var ratePlanIndex =0;\r",
															"      \r",
															"    var itemizedList = jsonData.ratePlans[ratePlanIndex].rooms[0].price.itemized\r",
															"  pm.expect(0).not.equal(itemizedList.length);\r",
															"  //save booking object\r",
															"  var bookings = [];\r",
															"    for (var i = 0; i < itemizedList.length; i++) {\r",
															"        var itemized = itemizedList[i];\r",
															"        var booking = {};\r",
															"        booking.date = itemized.date;\r",
															"        booking.price = itemized.basePrice;\r",
															"        booking.programId =itemized.programId;\r",
															"        booking.overridePrice= -1;\r",
															"        bookings[i] = booking;\r",
															"    }\r",
															"   \r",
															"   pm.environment.set(\"useCaseRoomTypeId\",jsonData.ratePlans[ratePlanIndex].rooms[0].roomTypeId);\r",
															"   pm.environment.set(\"useCaseProgramId\",jsonData.ratePlans[ratePlanIndex].programId);\r",
															"     pm.environment.set(\"useCaseBookings\",JSON.stringify(bookings)); \r",
															"     if(jsonData.ratePlans.length>2){\r",
															"            pm.environment.set(\"scenarioBasedModifyProgramId\",jsonData.ratePlans[ratePlanIndex+1].programId);\r",
															"                  pm.environment.set(\"scenarioBasedModifyRoomId\",jsonData.ratePlans[ratePlanIndex+1].rooms[1].roomTypeId);   \r",
															"     }\r",
															"  }else{\r",
															"       pm.expect(1).not.equal(jsonData.ratePlans.length);\r",
															"  }\r",
															" \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v3/availability/trip?checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{scenarioBasedCheckOutDate}}&propertyId={{propertyId}}&numAdults=2",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"availability",
														"trip"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{scenarioBasedCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{propertyId}}"
														},
														{
															"key": "numAdults",
															"value": "2"
														},
														{
															"key": "programId",
															"value": "RPCD-v-ADVP-d-PROP-v-MV021",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Calculate Room Charges - Before Create Reservation Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"12.2 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation with Alerts and Traces : Before Reservation with Profile, Booking, TripDetails, Billing and AgentInfo\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    //save response to  reservation Request in env for create reservation\r",
															"     pm.environment.set(\"reservationCreateReq-12\",JSON.stringify(jsonData));\r",
															"\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\r\n        \"propertyId\": \"{{propertyId}}\",\r\n        \"roomTypeId\": \"{{useCaseRoomTypeId}}\",\r\n        \"programId\": \"{{useCaseProgramId}}\",\r\n       \"itineraryId\": \"9323708418\",\r\n    \"customerId\": \"846558855426\",\r\n    \"guaranteeCode\": null,\r\n    \"tripDetails\": {\r\n        \"checkInDate\": \"{{scenarioBasedCheckInDate}}\",\r\n        \"checkOutDate\": \"{{scenarioBasedCheckOutDate}}\",\r\n        \"numAdults\": 1,\r\n        \"numChildren\": 0,\r\n        \"numRooms\": 1\r\n    },\r\n \r\n    \"bookings\": {{useCaseBookings}},\r\n\r\n \"profile\": {\r\n      \"id\": 846558855426,\r\n      \"operaId\": null,\r\n      \"firstName\": \"Uttam\",\r\n      \"lastName\": \"Ghorai\",\r\n      \"phoneNumbers\": null,\r\n      \"emailAddress1\": null,\r\n      \"emailAddress2\": null,\r\n      \"dateOfBirth\": null,\r\n      \"hgpNo\": null,\r\n      \"swrrNo\": null,\r\n      \"addresses\": [\r\n        {\r\n          \"preferred\": false,\r\n          \"street1\": \"100 St\",\r\n          \"street2\": null,\r\n          \"city\": \"Las Vegas\",\r\n          \"state\": \"NV\",\r\n          \"country\": \"US\",\r\n          \"postalCode\": \"89102\",\r\n          \"type\": \"Home\"\r\n        }\r\n      ],\r\n      \"title\": null,\r\n      \"mlifeNo\": 0\r\n    }\r\n\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Reservation with Alerts  - Success Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"12.3 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation with Alerts and Traces : Create Transient Reservation with Profile, Booking, TripDetails, Billing \", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.environment.set(\"variable_key\", \"variable_value\");  \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.booked);    \r",
															"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
															"    var reservationId = jsonData.roomReservation.id;\r",
															"    pm.expect(confirmationNumber).not.eq(null);\r",
															"    pm.expect(itineraryId).not.eq(null);\r",
															"    pm.expect(reservationId).not.eq(null);\r",
															"    pm.environment.set('useCaseConfirmationNumber',  confirmationNumber);\r",
															" \r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"    //Create reservation Request and save in env\r",
															"    // get response from charges before create saved into env\r",
															"    if(pm.environment.get(\"reservationCreateReq-12\")){\r",
															"     jsonData = JSON.parse(pm.environment.get(\"reservationCreateReq-12\"));\r",
															"    //set itinerary id\r",
															"    jsonData.itineraryId=\"1234\";\r",
															"    //set profile\r",
															"    jsonData.customerId = postman.getEnvironmentVariable(\"iceNYNYCustomerId\")\r",
															"    jsonData.profile = JSON.parse(postman.getEnvironmentVariable(\"iceNYNYProfile\"));\r",
															"    //set billing\r",
															"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));\r",
															"    billing[0].payment.amount=jsonData.depositDetails.amount;\r",
															"    jsonData.billing = billing;\r",
															"    //set alerts\r",
															"    alerts= JSON.parse(pm.environment.get(\"alertNYNY\"));\r",
															"    jsonData.alerts = alerts;\r",
															"    //set depositPolicy\r",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));\r",
															"    jsonData.depositPolicy = depositPolicy;\r",
															"    // again save to same variable\r",
															"    pm.environment.set(\"reservationCreateReq-12\",JSON.stringify(jsonData));\r",
															"    }"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}\"}]",
														"type": "text"
													},
													{
														"key": "",
														"value": "",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationCreateReq-12}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation Alerts V2 - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"12.4 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation with Alerts and Traces : Find reservation with cnfNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															" pm.expect(0).not.equal(jsonData.roomReservation.alerts.length);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation?confirmationNumber={{useCaseConfirmationNumber}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{useCaseConfirmationNumber}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Reservation Alerts- Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"12.5 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation with Alerts and Traces : Cancel Reservation by confirmationNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.environment.get(\"useCaseConfirmationNumber\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"confirmationNumber\": \"{{useCaseConfirmationNumber}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v3/reservation/cancel?confirmationNumber={{useCaseConfirmationNumber}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"reservation",
														"cancel"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{useCaseConfirmationNumber}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Reservation Traces V2 - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"12.6 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation with Alerts and Traces : Create Transient Reservation with Profile, Booking, TripDetails, Billing \", function () {\r",
															"    // if(pm.response.status !== 200) {\r",
															"    //     console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    // }\r",
															"    // pm.environment.set(\"variable_key\", \"variable_value\");  \r",
															"    // pm.response.to.have.status(200);\r",
															"    // pm.response.to.have.header(\"Content-Type\");\r",
															"    // pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    // var jsonData = JSON.parse(pm.response.stream);\r",
															"    // pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    // pm.expect(null).not.eq(jsonData);\r",
															"    // pm.expect(0).not.equal(jsonData.length);\r",
															"    // pm.expect(null).not.eq(jsonData.booked);    \r",
															"    // var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"    // var itineraryId = jsonData.roomReservation.itineraryId;\r",
															"    // var reservationId = jsonData.roomReservation.id;\r",
															"    // pm.expect(confirmationNumber).not.eq(null);\r",
															"    // pm.expect(itineraryId).not.eq(null);\r",
															"    // pm.expect(reservationId).not.eq(null);\r",
															"    // pm.environment.set('useCaseConfirmationNumber',  confirmationNumber);\r",
															"\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"    //Create reservation Request and save in env\r",
															"    // get response from charges before create saved into env\r",
															"    if(pm.environment.get(\"reservationCreateReq-12\")){\r",
															"     jsonData = JSON.parse(pm.environment.get(\"reservationCreateReq-12\"));\r",
															"    //set itinerary id\r",
															"    jsonData.itineraryId=\"1234\";\r",
															"    //set billing\r",
															"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));\r",
															"    billing[0].payment.amount=jsonData.depositDetails.amount;\r",
															"    jsonData.billing = billing;\r",
															"    //set alerts\r",
															"    traces= JSON.parse(postman.getEnvironmentVariable(\"traces\"));\r",
															"    jsonData.traces = traces;\r",
															"    //set depositPolicy\r",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));\r",
															"    jsonData.depositPolicy = depositPolicy;\r",
															"    // again save to same variable\r",
															"    pm.environment.set(\"reservationCreateReq-12\",JSON.stringify(jsonData));\r",
															"    }\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-123",
														"type": "text"
													},
													{
														"key": "",
														"value": "",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationCreateReq-12}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation Traces V2 - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"12.7 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation with Alerts and Traces : Find reservation with cnfNumber\", function () {\r",
															"//   pm.response.to.have.status(200);\r",
															"//   pm.response.to.have.header(\"Content-Type\");\r",
															"//   pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"//   var jsonData = JSON.parse(pm.response.stream);\r",
															"//   pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"//   pm.expect(null).not.eq(jsonData);\r",
															"//   pm.expect(0).not.equal(jsonData.length);\r",
															"//  pm.expect(0).not.equal(jsonData.roomReservation.alerts.length);\r",
															"//   pm.expect(0).not.equal(jsonData.roomReservation.traces.length);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation?confirmationNumber={{useCaseConfirmationNumber}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{useCaseConfirmationNumber}}"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "13.Find Reservation with first and last name",
									"item": [
										{
											"name": "Find Reservation V2 - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"13.1 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation Find Reserv with fname and lname : Find reservation with cnfNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation?confirmationNumber={{useCaseConfirmationNumber9}}&firstName={{firstName}}&lastName={{lastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{useCaseConfirmationNumber9}}"
														},
														{
															"key": "firstName",
															"value": "{{firstName}}"
														},
														{
															"key": "lastName",
															"value": "{{lastName}}"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "14.Transient User Reservation - Party",
									"item": [
										{
											"name": "Single Availability-Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"14.1 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation Party : Single Availability with Checkin Date,Â Checkout Date, Property Id and Number of Adults\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.eq(jsonData.ratePlans[0]);\r",
															"  if(jsonData.ratePlans.length){\r",
															"      var ratePlanIndex =0;\r",
															"      \r",
															"    var itemizedList = jsonData.ratePlans[ratePlanIndex].rooms[0].price.itemized\r",
															"  pm.expect(0).not.equal(itemizedList.length);\r",
															"  //save booking object\r",
															"  var bookings = [];\r",
															"    for (var i = 0; i < itemizedList.length; i++) {\r",
															"        var itemized = itemizedList[i];\r",
															"        var booking = {};\r",
															"        booking.date = itemized.date;\r",
															"        booking.price = itemized.basePrice;\r",
															"        booking.programId =itemized.programId; \r",
															"        booking.overridePrice= -1;\r",
															"        bookings[i] = booking;\r",
															"    }\r",
															"   \r",
															"   pm.environment.set(\"useCaseRoomTypeId\",jsonData.ratePlans[ratePlanIndex].rooms[0].roomTypeId);\r",
															"   pm.environment.set(\"useCaseProgramId\",jsonData.ratePlans[ratePlanIndex].programId);\r",
															"     postman.setEnvironmentVariable(\"useCaseBookings\",JSON.stringify(bookings)); \r",
															"     if(jsonData.ratePlans.length>2){\r",
															"            postman.setEnvironmentVariable(\"scenarioBasedModifyProgramId\",jsonData.ratePlans[ratePlanIndex+1].programId);\r",
															"                  postman.setEnvironmentVariable(\"scenarioBasedModifyRoomId\",jsonData.ratePlans[ratePlanIndex+1].rooms[1].roomTypeId);   \r",
															"     }\r",
															"  }else{\r",
															"       pm.expect(1).not.equal(jsonData.ratePlans.length);\r",
															"  }\r",
															" \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v3/availability/trip?checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{scenarioBasedCheckOutDate}}&propertyId={{propertyId}}&numAdults=2",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"availability",
														"trip"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{scenarioBasedCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{propertyId}}"
														},
														{
															"key": "numAdults",
															"value": "2"
														},
														{
															"key": "programId",
															"value": "RPCD-v-ADVP-d-PROP-v-MV021",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Calculate Room Charges - Before Create Reservation Success Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"14.2 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation Party : Before Reservation with Profile, Booking, TripDetails, Billing and AgentInfo\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    //save response to  reservation Request in env for create reservation\r",
															"    pm.environment.set(\"partyReservationCreateReq-14\",JSON.stringify(jsonData));\r",
															"\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\r\n        \"propertyId\": \"{{propertyId}}\",\r\n        \"roomTypeId\": \"{{useCaseRoomTypeId}}\",\r\n        \"programId\": \"{{useCaseProgramId}}\",\r\n       \"itineraryId\": \"9323708418\",\r\n    \"customerId\": \"846558855426\",\r\n    \"guaranteeCode\": null,\r\n    \"tripDetails\": {\r\n        \"checkInDate\": \"{{scenarioBasedCheckInDate}}\",\r\n        \"checkOutDate\": \"{{scenarioBasedCheckOutDate}}\",\r\n        \"numAdults\": 2,\r\n        \"numChildren\": 0,\r\n        \"numRooms\": {{partyRoomCount}}\r\n    },\r\n \r\n    \"bookings\": {{useCaseBookings}},\r\n\r\n \"profile\": {\r\n      \"id\": 846558855426,\r\n      \"operaId\": null,\r\n      \"firstName\": \"Uttam\",\r\n      \"lastName\": \"Ghorai\",\r\n      \"phoneNumbers\": null,\r\n      \"emailAddress1\": null,\r\n      \"emailAddress2\": null,\r\n      \"dateOfBirth\": null,\r\n      \"hgpNo\": null,\r\n      \"swrrNo\": null,\r\n      \"addresses\": [\r\n        {\r\n          \"preferred\": false,\r\n          \"street1\": \"100 St\",\r\n          \"street2\": null,\r\n          \"city\": \"Las Vegas\",\r\n          \"state\": \"NV\",\r\n          \"country\": \"US\",\r\n          \"postalCode\": \"89102\",\r\n          \"type\": \"Home\"\r\n        }\r\n      ],\r\n      \"title\": null,\r\n      \"mlifeNo\": 0\r\n    }\r\n\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Party Reservation V2 - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"14.3 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation Party: Create Transient Reservation with Profile, Booking, TripDetails, Billing \", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.environment.set(\"variable_key\", \"variable_value\");  \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"     var roomCount =JSON.parse(postman.getEnvironmentVariable(\"partyRoomCount\"));\r",
															"    \r",
															"     pm.expect(roomCount).equal(jsonData.roomReservations.length);\r",
															"    \r",
															"    pm.expect(null).not.eq(jsonData.booked);    \r",
															"    var confirmationNumber = jsonData.roomReservations[0].confirmationNumber;\r",
															"    var itineraryId = jsonData.roomReservations[0].itineraryId;\r",
															"    pm.expect(confirmationNumber).not.eq(null);\r",
															"    pm.expect(itineraryId).not.eq(null);\r",
															" \r",
															"    pm.environment.set('useCasePartyPrimaryConfirmationNumber-14',  jsonData.roomReservations[0].confirmationNumber);\r",
															"        pm.environment.set('useCasePartySecondaryConfirmationNumber-14',  jsonData.roomReservations[1].confirmationNumber);\r",
															"     // save response in env for premodify charges\r",
															"     pm.environment.set(\"reservationPrimaryModifyReq-14\",JSON.stringify(jsonData.roomReservations[0]));\r",
															"     pm.environment.set(\"reservationSecondaryModifyReq-14\",JSON.stringify(jsonData.roomReservations[1]));\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"    //Create reservation Request and save in env\r",
															"    // get response from charges before create saved into env\r",
															"     jsonData = JSON.parse(pm.environment.get(\"partyReservationCreateReq-14\"));\r",
															"    //set itinerary id\r",
															"    jsonData.itineraryId=\"1234\";\r",
															"    //set profile\r",
															"    jsonData.customerId = postman.getEnvironmentVariable(\"iceNYNYCustomerId\")\r",
															"    jsonData.profile = JSON.parse(postman.getEnvironmentVariable(\"iceNYNYProfile\"));\r",
															"    //set billing\r",
															"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));\r",
															"      billing[0].payment.amount=jsonData.depositDetails.amount;\r",
															"    jsonData.billing = billing;\r",
															"    //set depositPolicy\r",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));\r",
															"    jsonData.depositPolicy = depositPolicy;\r",
															"    // again save to same variable\r",
															"    pm.environment.set(\"partyReservationCreateReq-14\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-123"
													},
													{
														"key": "",
														"type": "text",
														"value": ""
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{partyReservationCreateReq-14}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/party",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"party"
													]
												}
											},
											"response": []
										},
										{
											"name": "Party Info - Primary Confirmation Number",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"14.4 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation Party: Party Info primary reservation with cnfNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"       var roomCount =JSON.parse(postman.getEnvironmentVariable(\"partyRoomCount\"));\r",
															"     pm.expect(roomCount).equal(jsonData.reservationAdditionalInfo.length);\r",
															"\r",
															" \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/party/info?confirmationNumber={{useCasePartyPrimaryConfirmationNumber-14}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"party",
														"info"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{useCasePartyPrimaryConfirmationNumber-14}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Party info - Secondary Confirmation Number",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"14.5 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation Party : Party Info reservation with secondary confirmation number\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"           var roomCount =JSON.parse(postman.getEnvironmentVariable(\"partyRoomCount\"));\r",
															"     pm.expect(roomCount).equal(jsonData.reservationAdditionalInfo.length);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/party/info?confirmationNumber={{useCasePartySecondaryConfirmationNumber-14}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"party",
														"info"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{useCasePartySecondaryConfirmationNumber-14}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation - Primary Confirmation Number",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"14.6 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation Party : Find reservation with party primary cnf number\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation?confirmationNumber={{useCasePartyPrimaryConfirmationNumber-14}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{useCasePartyPrimaryConfirmationNumber-14}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation - Secondary Confirmation Number",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"14.7 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation Party : Find reservation with party secondary cnf number\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation?confirmationNumber={{useCasePartySecondaryConfirmationNumber-14}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{useCasePartySecondaryConfirmationNumber-14}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Single Availability-Delete One Date",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"14.8 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation Party : Single Availability with deleting one date\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.eq(jsonData.ratePlans[0]);\r",
															"  if(jsonData.ratePlans.length){\r",
															"      var ratePlanIndex =1;\r",
															"      \r",
															"    var itemizedList = jsonData.ratePlans[ratePlanIndex].rooms[0].price.itemized\r",
															"  pm.expect(0).not.equal(itemizedList.length);\r",
															"  //save booking object\r",
															"  var bookings = [];\r",
															"    for (var i = 0; i < itemizedList.length; i++) {\r",
															"        var itemized = itemizedList[i];\r",
															"        var booking = {};\r",
															"        booking.date = itemized.date;\r",
															"        booking.price = itemized.basePrice;\r",
															"        booking.programId =itemized.programId; \r",
															"        booking.overridePrice= -1;\r",
															"        bookings[i] = booking;\r",
															"    }\r",
															"     postman.setEnvironmentVariable(\"useCaseModifiedBookings\",JSON.stringify(bookings)); \r",
															"\r",
															"  }else{\r",
															"       pm.expect(1).not.equal(jsonData.ratePlans.length);\r",
															"  }\r",
															" \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var moment = require('moment');\r",
															"\r",
															"oldCheckOutDate = moment(pm.variables.get(\"scenarioBasedCheckOutDate\")).format('YYYY-MM-DD');\r",
															"\r",
															"modifiedCheckOutDate = moment(oldCheckOutDate).add(-1, 'days').format('YYYY-MM-DD');\r",
															"  postman.setEnvironmentVariable(\"modifiedCheckOutDate\",modifiedCheckOutDate);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v3/availability/trip?checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{modifiedCheckOutDate}}&propertyId={{propertyId}}&numAdults=2",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"availability",
														"trip"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{modifiedCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{propertyId}}"
														},
														{
															"key": "numAdults",
															"value": "2"
														},
														{
															"key": "programId",
															"value": "RPCD-v-ADVP-d-PROP-v-MV021",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Charges Before Secondary party Modify - Delete One Date",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"14.9 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation Party : PreModify Reservation charges with adding new dates\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    // save response in env for premodify charges\r",
															"     pm.environment.set(\"reservationSecondaryModifyReq-14\",JSON.stringify(jsonData));\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var moment = require('moment');\r",
															"\r",
															"oldCheckOutDate = moment(pm.environment.get(\"scenarioBasedCheckOutDate\")).format('YYYY-MM-DD');\r",
															"\r",
															"modifiedCheckOutDate = moment(oldCheckOutDate).add(-1, 'days').format('YYYY-MM-DD');\r",
															" if(pm.environment.get(\"reservationSecondaryModifyReq-14\")){\r",
															"//get existing modify request\r",
															" jsonData = JSON.parse(pm.environment.get(\"reservationSecondaryModifyReq-14\"));\r",
															" //Modify Checkout date +2\r",
															" console.log(jsonData);\r",
															"jsonData.tripDetails.checkOutDate = modifiedCheckOutDate;\r",
															"\r",
															"  // add booking obj\r",
															"   jsonData.bookings = JSON.parse(pm.environment.get(\"useCaseModifiedBookings\"));\r",
															" \r",
															" \r",
															"pm.environment.set(\"reservationSecondaryModifyReq-14\",JSON.stringify(jsonData));\r",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{reservationSecondaryModifyReq-14}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "Split Party Reservation- Delete One Date",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"14.10 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation Party : Split party Modify Reservation new added dates\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															"    //Modify reservation Request and save in env",
															"    // get response from charges before create saved into env",
															"     jsonData = JSON.parse(pm.environment.get(\"reservationSecondaryModifyReq-14\"));",
															"    //set itinerary id",
															"    jsonData.itineraryId=\"1234\";",
															"    jsonData.state = \"Booked\",",
															"    //set billing",
															"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));",
															"      billing[0].payment.amount=jsonData.depositDetails.amount;",
															"    jsonData.billing = billing;",
															"    //set depositPolicy",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));",
															"    jsonData.depositPolicy = depositPolicy;",
															"    // again save to same variable",
															"    pm.environment.set(\"reservationSecondaryModifyReq-14\",JSON.stringify(jsonData));",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationSecondaryModifyReq-14}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Party Info - Primary Confirmation Number",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"14.11 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation Party : Party info reservation with primary cnfNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"       var roomCount =JSON.parse(postman.getEnvironmentVariable(\"partyRoomCount\"));\r",
															"     pm.expect(roomCount).equal(jsonData.reservationAdditionalInfo.length);\r",
															" \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/party/info?confirmationNumber={{useCasePartyPrimaryConfirmationNumber-14}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"party",
														"info"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{useCasePartyPrimaryConfirmationNumber-14}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Single Availability-Add Date",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"14.12 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation Party : Single Availability with adding new dates\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.eq(jsonData.ratePlans[0]);\r",
															"  if(jsonData.ratePlans.length){\r",
															"      var ratePlanIndex =1;\r",
															"      \r",
															"    var itemizedList = jsonData.ratePlans[ratePlanIndex].rooms[0].price.itemized\r",
															"  pm.expect(0).not.equal(itemizedList.length);\r",
															"  //save booking object\r",
															"  var bookings = [];\r",
															"    for (var i = 0; i < itemizedList.length; i++) {\r",
															"        var itemized = itemizedList[i];\r",
															"        var booking = {};\r",
															"        booking.date = itemized.date;\r",
															"        booking.price = itemized.basePrice;\r",
															"        booking.programId =itemized.programId; \r",
															"        booking.overridePrice= -1;\r",
															"        bookings[i] = booking;\r",
															"    }\r",
															"     pm.environment.set(\"useCaseModifiedBookings\",JSON.stringify(bookings)); \r",
															"\r",
															"  }else{\r",
															"       pm.expect(1).not.equal(jsonData.ratePlans.length);\r",
															"  }\r",
															" \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var moment = require('moment');\r",
															"\r",
															"oldCheckOutDate = moment(pm.environment.get(\"scenarioBasedCheckOutDate\")).format('YYYY-MM-DD');\r",
															"\r",
															"modifiedCheckOutDate = moment(oldCheckOutDate).add(2, 'days').format('YYYY-MM-DD');\r",
															"  pm.environment.set(\"modifiedCheckOutDate\",modifiedCheckOutDate);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v3/availability/trip?checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{modifiedCheckOutDate}}&propertyId={{propertyId}}&numAdults=2",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"availability",
														"trip"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{modifiedCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{propertyId}}"
														},
														{
															"key": "numAdults",
															"value": "2"
														},
														{
															"key": "programId",
															"value": "RPCD-v-ADVP-d-PROP-v-MV021",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Charges Before Secondary party Modify - Add New Date",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"14.13 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation Party : PreModify Reservation charges with adding new dates\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    // save response in env for premodify charges\r",
															"     pm.environment.set(\"reservationSecondaryModifyReq\",JSON.stringify(jsonData));\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var moment = require('moment');\r",
															"\r",
															"//get existing modify request\r",
															" jsonData = JSON.parse(pm.environment.get(\"reservationSecondaryModifyReq-14\"));\r",
															" //Modify Checkout date +2\r",
															" console.log(jsonData);\r",
															"jsonData.tripDetails.checkOutDate = pm.environment.get(\"modifiedCheckOutDate\");\r",
															"\r",
															"  // add booking obj\r",
															"   jsonData.bookings = JSON.parse(pm.environment.get(\"useCaseModifiedBookings\"));\r",
															" \r",
															" \r",
															"pm.environment.set(\"reservationSecondaryModifyReq-14\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{reservationSecondaryModifyReq-14}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "Split Party Reservation- Add New Date",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"14.14 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation Party: Modify Reservation new added dates\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															"    //Modify reservation Request and save in env",
															"    // get response from charges before create saved into env",
															"     jsonData = JSON.parse(pm.environment.get(\"reservationSecondaryModifyReq-14\"));",
															"    //set itinerary id",
															"    jsonData.itineraryId=\"1234\";",
															"    jsonData.state = \"Booked\",",
															"    //set billing",
															"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));",
															"      billing[0].payment.amount=jsonData.depositDetails.amount;",
															"    jsonData.billing = billing;",
															"    //set depositPolicy",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));",
															"    jsonData.depositPolicy = depositPolicy;",
															"    // again save to same variable",
															"    pm.environment.get(\"reservationSecondaryModifyReq-14\",JSON.stringify(jsonData));",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationSecondaryModifyReq-14}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Party Info - Primary Confirmation Number",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"14.15 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation Party : Party info reservation with primary cnfNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"       var roomCount =JSON.parse(postman.getEnvironmentVariable(\"partyRoomCount\"));\r",
															"     pm.expect(roomCount-1).equal(jsonData.reservationAdditionalInfo.length);\r",
															" \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/party/info?confirmationNumber={{useCasePartyPrimaryConfirmationNumber-14}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"party",
														"info"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{useCasePartyPrimaryConfirmationNumber-14}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Party info - Secondary Confirmation Number",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"14.16 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation Party : Party Info reservation with secondary cnfNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(400);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"Bad Request\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"   pm.expect(0).not.equal(jsonData.error.length);\r",
															"  \r",
															"    \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/party/info?confirmationNumber={{useCasePartySecondaryConfirmationNumber-14}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"party",
														"info"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{useCasePartySecondaryConfirmationNumber-14}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Reservation - Primary",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"14.17 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation Party : Cancel Reservation by party primary confirmationNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.variables.get(\"useCasePartyPrimaryConfirmationNumber-14\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"confirmationNumber\": \"{{useCasePartyPrimaryConfirmationNumber-14}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v3/reservation/cancel",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"reservation",
														"cancel"
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Reservation - Secondary",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"14.18 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation Party : Cancel Reservation by party secondary confirmationNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.variables.get(\"useCasePartySecondaryConfirmationNumber-14\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"confirmationNumber\": \"{{useCasePartySecondaryConfirmationNumber-14}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v3/reservation/cancel",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"reservation",
														"cancel"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "15.Reservation with Add_ons",
									"item": [
										{
											"name": "Single Availability",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"15.1 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation With Add Ons : Single Availability with Checkin Date,Â Checkout Date, Property Id and Number of Adults\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.eq(jsonData.ratePlans[0]);\r",
															"  if(jsonData.ratePlans.length){\r",
															"      var ratePlanIndex =0;\r",
															"      \r",
															"    var itemizedList = jsonData.ratePlans[ratePlanIndex].rooms[0].price.itemized\r",
															"  pm.expect(0).not.equal(itemizedList.length);\r",
															"  //save booking object\r",
															"  var bookings = [];\r",
															"    for (var i = 0; i < itemizedList.length; i++) {\r",
															"        var itemized = itemizedList[i];\r",
															"        var booking = {};\r",
															"        booking.date = itemized.date;\r",
															"        booking.price = itemized.basePrice;\r",
															"        booking.programId =itemized.programId; \r",
															"        booking.overridePrice= -1;\r",
															"        bookings[i] = booking;\r",
															"    }\r",
															"   \r",
															"   pm.environment.set(\"useCaseRoomTypeId\",jsonData.ratePlans[ratePlanIndex].rooms[0].roomTypeId);\r",
															"   pm.environment.set(\"useCaseProgramId\",jsonData.ratePlans[ratePlanIndex].programId);\r",
															"     pm.environment.set(\"useCaseBookings\",JSON.stringify(bookings)); \r",
															"     if(jsonData.ratePlans.length>2){\r",
															"            postman.setEnvironmentVariable(\"scenarioBasedModifyProgramId\",jsonData.ratePlans[ratePlanIndex+1].programId);\r",
															"                  postman.setEnvironmentVariable(\"scenarioBasedModifyRoomId\",jsonData.ratePlans[ratePlanIndex+1].rooms[1].roomTypeId);   \r",
															"     }\r",
															"  }else{\r",
															"       pm.expect(1).not.equal(jsonData.ratePlans.length);\r",
															"  }\r",
															" \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v3/availability/trip?checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{scenarioBasedCheckOutDate}}&propertyId={{propertyId}}&numAdults=2",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"availability",
														"trip"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{scenarioBasedCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{propertyId}}"
														},
														{
															"key": "numAdults",
															"value": "2"
														},
														{
															"key": "programId",
															"value": "RPCD-v-ADVP-d-PROP-v-MV021",
															"disabled": true
														},
														{
															"key": "perpetualPricing",
															"value": "true",
															"disabled": true
														},
														{
															"key": "mlifeNumber",
															"value": "{{NYNYMlifeNo}}",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Spl Request and Components",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"15.2 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation With Add Ons : Get component list\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"   pm.environment.set(\"useCaseCreateAddOns\",null); \r",
															"\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"      for (var i = 0; i < jsonData.length; i++) {\r",
															"        if(jsonData[i].id.includes(\"Component\") || jsonData[i].id.includes(\"COMPONENT\")){\r",
															"            pm.environment.set(\"useCaseCreateAddOns\",jsonData[i].id); \r",
															"        }\r",
															"    }\r",
															" \r",
															" \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															" "
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/availability/components?programId={{scenarioBasedModifyProgramId}}&propertyId={{propertyId}}&checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{scenarioBasedCheckOutDate}}&roomTypeId={{scenarioBasedModifyRoomId}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"availability",
														"components"
													],
													"query": [
														{
															"key": "programId",
															"value": "{{scenarioBasedModifyProgramId}}"
														},
														{
															"key": "propertyId",
															"value": "{{propertyId}}"
														},
														{
															"key": "checkInDate",
															"value": "{{scenarioBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{scenarioBasedCheckOutDate}}"
														},
														{
															"key": "roomTypeId",
															"value": "{{scenarioBasedModifyRoomId}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Calculate Room Charges - Before Create with AddOns",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"15.3 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation With Add Ons: Charges API with addons \", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.environment.set(\"reservationCreateReq-Addon\",\"\");\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    //save response to  reservation Request in env for create reservation\r",
															"     pm.environment.set(\"reservationCreateReq-Addon\",JSON.stringify(jsonData));\r",
															"\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" var specialRequestsArr =[];",
															" specialRequestsArr[0] = pm.environment.get(\"useCaseCreateAddOns\");",
															"",
															" ",
															"pm.environment.set(\"specialRequestsArr\",JSON.stringify(specialRequestsArr));",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\r\n        \"propertyId\": \"{{propertyId}}\",\r\n        \"roomTypeId\": \"{{useCaseRoomTypeId}}\",\r\n        \"programId\": \"{{useCaseProgramId}}\",\r\n       \"itineraryId\": \"9323708418\",\r\n    \"customerId\": \"846558855426\",\r\n    \"guaranteeCode\": null,\r\n    \"tripDetails\": {\r\n        \"checkInDate\": \"{{scenarioBasedCheckInDate}}\",\r\n        \"checkOutDate\": \"{{scenarioBasedCheckOutDate}}\",\r\n        \"numAdults\": 1,\r\n        \"numChildren\": 0,\r\n        \"numRooms\": 1\r\n    },\r\n \"specialRequests\":{{specialRequestsArr}},\r\n    \"bookings\": {{useCaseBookings}},\r\n\r\n \"profile\": {\r\n      \"id\": 846558855426,\r\n      \"operaId\": null,\r\n      \"firstName\": \"Dale\",\r\n      \"lastName\": \"Steyn\",\r\n      \"phoneNumbers\": null,\r\n      \"emailAddress1\": null,\r\n      \"emailAddress2\": null,\r\n      \"dateOfBirth\": null,\r\n      \"hgpNo\": null,\r\n      \"swrrNo\": null,\r\n      \"addresses\": [\r\n        {\r\n          \"preferred\": false,\r\n          \"street1\": \"100 St\",\r\n          \"street2\": null,\r\n          \"city\": \"Las Vegas\",\r\n          \"state\": \"NV\",\r\n          \"country\": \"US\",\r\n          \"postalCode\": \"89102\",\r\n          \"type\": \"Home\"\r\n        }\r\n      ],\r\n      \"title\": null,\r\n      \"mlifeNo\": {{NYNYMlifeNo}}\r\n    }\r\n\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Reservation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"15.4 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation With Add Ons :  Create resv \", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.environment.set(\"variable_key\", \"variable_value\");  \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.booked);    \r",
															"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
															"    var reservationId = jsonData.roomReservation.id;\r",
															"    pm.expect(confirmationNumber).not.eq(null);\r",
															"    pm.expect(itineraryId).not.eq(null);\r",
															"    pm.expect(reservationId).not.eq(null);\r",
															"    pm.environment.set('useCaseConfirmationNumber',  confirmationNumber);\r",
															"\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"    //Create reservation Request and save in env\r",
															"    // get response from charges before create saved into env\r",
															"     jsonData = JSON.parse(pm.environment.get(\"reservationCreateReq-Addon\"));\r",
															"    //set itinerary id\r",
															"    jsonData.itineraryId=\"1234\";\r",
															"    //set profile\r",
															"    jsonData.customerId = postman.getEnvironmentVariable(\"iceNYNYCustomerId\")\r",
															"    jsonData.profile = JSON.parse(postman.getEnvironmentVariable(\"iceNYNYProfile\"));\r",
															"    //set billing\r",
															"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));\r",
															"    billing[0].payment.amount=jsonData.depositDetails.amount;\r",
															"    jsonData.billing = billing;\r",
															"    //set depositPolicy\r",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));\r",
															"    jsonData.depositPolicy = depositPolicy;\r",
															"    // again save to same variable\r",
															"    pm.environment.set(\"reservationCreateReq-Addon\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-123"
													},
													{
														"key": "",
														"type": "text",
														"value": ""
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationCreateReq-Addon}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"15.5 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation With Add Ons : Find reservation with cnfNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"\r",
															"  var charges = jsonData.roomReservation.chargesAndTaxes.charges;\r",
															"  pm.expect(charges[0].itemized.length).greaterThan(2);\r",
															"  pm.expect(charges[1].itemized.length).greaterThan(2);\r",
															"\r",
															"  var taxesAndFees = jsonData.roomReservation.chargesAndTaxes.taxesAndFees;\r",
															"  pm.expect(taxesAndFees[0].itemized.length).greaterThan(2);\r",
															"  pm.expect(taxesAndFees[1].itemized.length).greaterThan(2);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation?confirmationNumber={{useCaseConfirmationNumber}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{useCaseConfirmationNumber}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Reservation - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"15.6 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation With Add Ons : Cancel Reservation by confirmationNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.environment.get(\"useCaseConfirmationNumber\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"confirmationNumber\": \"{{useCaseConfirmationNumber}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v3/reservation/cancel",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"reservation",
														"cancel"
													]
												}
											},
											"response": []
										},
										{
											"name": "Party Reservation with Addons-split card",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"15.7 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation With Add Ons : Party reservation with add ons \", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.environment.set(\"variable_key\", \"variable_value\");  \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"\r",
															"     pm.expect(2).equal(jsonData.roomReservations.length);\r",
															"    \r",
															"    pm.expect(null).not.eq(jsonData.booked);    \r",
															"    var confirmationNumber = jsonData.roomReservations[0].confirmationNumber;\r",
															"    var itineraryId = jsonData.roomReservations[0].itineraryId;\r",
															"    pm.expect(confirmationNumber).not.eq(null);\r",
															"    pm.expect(itineraryId).not.eq(null);\r",
															" \r",
															"    pm.environment.set('useCasePartyPrimaryConfirmationNumber',  jsonData.roomReservations[0].confirmationNumber);\r",
															"         pm.environment.set('useCasePartySecondaryConfirmationNumber',  jsonData.roomReservations[1].confirmationNumber);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"    //Create reservation Request and save in env\r",
															"    // get response from charges before create saved into env\r",
															"     jsonData = JSON.parse(pm.environment.get(\"reservationCreateReq-Addon\"));\r",
															"    //set itinerary id\r",
															"    jsonData.itineraryId=\"1234\";\r",
															"    //set profile\r",
															"    jsonData.customerId = postman.getEnvironmentVariable(\"iceNYNYCustomerId\")\r",
															"    jsonData.profile = JSON.parse(postman.getEnvironmentVariable(\"iceNYNYProfile\"));\r",
															"    //set billing\r",
															"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));\r",
															"    billing[0].payment.amount=jsonData.depositDetails.amount;\r",
															"    jsonData.billing = billing;\r",
															"    //set depositPolicy\r",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));\r",
															"    jsonData.depositPolicy = depositPolicy;\r",
															"    // change room count\r",
															"    jsonData.tripDetails.numRooms =2;\r",
															"    // again save to same variable\r",
															"    pm.environment.set(\"reservationCreateReq-Addon\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-123"
													},
													{
														"key": "",
														"type": "text",
														"value": ""
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"splitCreditCardDetails\": true,\n\t\"roomReservation\":{{reservationCreateReq-Addon}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/party",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"party"
													]
												}
											},
											"response": []
										},
										{
											"name": "Party Info - Primary Confirmation Number",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"15.8 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation With Add Ons : PartyInfo reservation with primary cnfNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(2).equal(jsonData.reservationAdditionalInfo.length);\r",
															"\r",
															" \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/party/info?confirmationNumber={{useCasePartyPrimaryConfirmationNumber}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"party",
														"info"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{useCasePartyPrimaryConfirmationNumber}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Party info - Secondary Confirmation Number",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"15.9 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation With Add Ons : Find reservation with secondary cnfNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(2).equal(jsonData.reservationAdditionalInfo.length);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/party/info?confirmationNumber={{useCasePartySecondaryConfirmationNumber}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"party",
														"info"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{useCasePartySecondaryConfirmationNumber}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation primary confirmation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"15.10 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation With Add Ons : Find reservation with cnfNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation?confirmationNumber={{useCasePartyPrimaryConfirmationNumber}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{useCasePartyPrimaryConfirmationNumber}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Reservation - Primary",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"15.11 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation With Add Ons : Cancel Reservation by confirmationNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.environment.get(\"useCasePartyPrimaryConfirmationNumber\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"confirmationNumber\": \"{{useCasePartyPrimaryConfirmationNumber}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v3/reservation/cancel",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"reservation",
														"cancel"
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Reservation - Secondary",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"15.12 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation With Add Ons : Cancel Reservation by confirmationNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.environment.get(\"useCasePartySecondaryConfirmationNumber\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"confirmationNumber\": \"{{useCasePartySecondaryConfirmationNumber}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v3/reservation/cancel",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"reservation",
														"cancel"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "16.Reservation with Add_ons and Spl Requests",
									"item": [
										{
											"name": "Single Availability",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"16.1 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation With Add Ons and Spl Requests : Single Availability with Checkin Date,Â Checkout Date, Property Id and Number of Adults\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.eq(jsonData.ratePlans[0]);\r",
															"  if(jsonData.ratePlans.length){\r",
															"      var ratePlanIndex =1;\r",
															"      \r",
															"    var itemizedList = jsonData.ratePlans[ratePlanIndex].rooms[0].price.itemized\r",
															"  pm.expect(0).not.equal(itemizedList.length);\r",
															"  //save booking object\r",
															"  var bookings = [];\r",
															"    for (var i = 0; i < itemizedList.length; i++) {\r",
															"        var itemized = itemizedList[i];\r",
															"        var booking = {};\r",
															"        booking.date = itemized.date;\r",
															"        booking.price = itemized.basePrice;\r",
															"        booking.programId =itemized.programId;\r",
															"        booking.overridePrice= -1; \r",
															"        bookings[i] = booking;\r",
															"    }\r",
															"   \r",
															"   pm.environment.set(\"useCaseRoomTypeId\",jsonData.ratePlans[ratePlanIndex].rooms[0].roomTypeId);\r",
															"   pm.environment.set(\"useCaseProgramId\",jsonData.ratePlans[ratePlanIndex].programId);\r",
															"     postman.setEnvironmentVariable(\"useCaseBookings\",JSON.stringify(bookings)); \r",
															"     if(jsonData.ratePlans.length>2){\r",
															"            pm.environment.set(\"scenarioBasedModifyProgramId\",jsonData.ratePlans[ratePlanIndex+1].programId);\r",
															"                  pm.environment.set(\"scenarioBasedModifyRoomId\",jsonData.ratePlans[ratePlanIndex+1].rooms[1].roomTypeId);   \r",
															"     }\r",
															"  }else{\r",
															"       pm.expect(1).not.equal(jsonData.ratePlans.length);\r",
															"  }\r",
															" \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v3/availability/trip?checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{scenarioBasedCheckOutDate}}&propertyId={{propertyId}}&numAdults=2",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"availability",
														"trip"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{scenarioBasedCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{propertyId}}"
														},
														{
															"key": "numAdults",
															"value": "2"
														},
														{
															"key": "programId",
															"value": "RPCD-v-ADVP-d-PROP-v-MV021",
															"disabled": true
														},
														{
															"key": "perpetualPricing",
															"value": "true",
															"disabled": true
														},
														{
															"key": "mlifeNumber",
															"value": "{{NYNYMlifeNo}}",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Spl Request and Components",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"16.2 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation With Add Ons and Spl Requests : Get component list\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"   pm.environment.set(\"useCaseCreateAddOns\",null); \r",
															"    pm.environment.set(\"useCaseCreateSplReq\",null); \r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"      for (var i = 0; i < jsonData.length; i++) {\r",
															"        if(jsonData[i].id.includes(\"Component\") || jsonData[i].id.includes(\"COMPONENT\")){\r",
															"             pm.environment.set(\"useCaseCreateAddOns\",jsonData[i].id); \r",
															"        }\r",
															"    }\r",
															" \r",
															" \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															" "
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/availability/components?programId={{scenarioBasedModifyProgramId}}&propertyId={{propertyId}}&checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{scenarioBasedCheckOutDate}}&roomTypeId={{scenarioBasedModifyRoomId}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"availability",
														"components"
													],
													"query": [
														{
															"key": "programId",
															"value": "{{scenarioBasedModifyProgramId}}"
														},
														{
															"key": "propertyId",
															"value": "{{propertyId}}"
														},
														{
															"key": "checkInDate",
															"value": "{{scenarioBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{scenarioBasedCheckOutDate}}"
														},
														{
															"key": "roomTypeId",
															"value": "{{scenarioBasedModifyRoomId}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Calculate Room Charges - Before Create with AddOns",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"16.3 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation With Add Ons and Spl Requests : Before  Reservation \", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"     pm.environment.set(\"reservationCreateReq-16\",\"\");\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    //save response to  reservation Request in env for create reservation\r",
															"     pm.environment.set(\"reservationCreateReq-16\",JSON.stringify(jsonData));\r",
															"\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" var specialRequestsArr =[];",
															"",
															"     specialRequestsArr[0] = \"b3f872e9-3e89-4f52-bb88-38dfa951ea3c\";",
															"    specialRequestsArr[1] = \"59e6ad43-bd6c-41f6-b96e-24a02a13eb8d\";",
															" specialRequestsArr[2] = pm.environment.get(\"useCaseCreateAddOns\");",
															" ",
															"pm.environment.set(\"specialRequestsArr\",JSON.stringify(specialRequestsArr));",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\r\n        \"propertyId\": \"{{propertyId}}\",\r\n        \"roomTypeId\": \"{{useCaseRoomTypeId}}\",\r\n        \"programId\": \"{{useCaseProgramId}}\",\r\n       \"itineraryId\": \"9323708418\",\r\n    \"customerId\": \"846558855426\",\r\n    \"guaranteeCode\": null,\r\n    \"tripDetails\": {\r\n        \"checkInDate\": \"{{scenarioBasedCheckInDate}}\",\r\n        \"checkOutDate\": \"{{scenarioBasedCheckOutDate}}\",\r\n        \"numAdults\": 1,\r\n        \"numChildren\": 0,\r\n        \"numRooms\": 1\r\n    },\r\n \"specialRequests\":{{specialRequestsArr}},\r\n    \"bookings\": {{useCaseBookings}},\r\n\r\n \"profile\": {\r\n      \"id\": 846558855426,\r\n      \"operaId\": null,\r\n      \"firstName\": \"Dale\",\r\n      \"lastName\": \"Steyn\",\r\n      \"phoneNumbers\": null,\r\n      \"emailAddress1\": null,\r\n      \"emailAddress2\": null,\r\n      \"dateOfBirth\": null,\r\n      \"hgpNo\": null,\r\n      \"swrrNo\": null,\r\n      \"addresses\": [\r\n        {\r\n          \"preferred\": false,\r\n          \"street1\": \"100 St\",\r\n          \"street2\": null,\r\n          \"city\": \"Las Vegas\",\r\n          \"state\": \"NV\",\r\n          \"country\": \"US\",\r\n          \"postalCode\": \"89102\",\r\n          \"type\": \"Home\"\r\n        }\r\n      ],\r\n      \"title\": null,\r\n      \"mlifeNo\": {{NYNYMlifeNo}}\r\n    }\r\n\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Reservation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"16.4 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation With Add Ons and Spl Requests :  Create reservation \", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.environment.set(\"variable_key\", \"variable_value\");  \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.booked);    \r",
															"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
															"    var reservationId = jsonData.roomReservation.id;\r",
															"    pm.expect(confirmationNumber).not.eq(null);\r",
															"    pm.expect(itineraryId).not.eq(null);\r",
															"    pm.expect(reservationId).not.eq(null);\r",
															"    pm.environment.set('useCaseConfirmationNumber',  confirmationNumber);\r",
															"\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"    //Create reservation Request and save in env\r",
															"    // get response from charges before create saved into env\r",
															"     jsonData = JSON.parse(pm.environment.get(\"reservationCreateReq-16\"));\r",
															"    //set itinerary id\r",
															"    jsonData.itineraryId=\"1234\";\r",
															"    //set profile\r",
															"    jsonData.customerId = postman.getEnvironmentVariable(\"iceNYNYCustomerId\")\r",
															"    jsonData.profile = JSON.parse(postman.getEnvironmentVariable(\"iceNYNYProfile\"));\r",
															"    //set billing\r",
															"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));\r",
															"    billing[0].payment.amount=jsonData.depositDetails.amount;\r",
															"    jsonData.billing = billing;\r",
															"    //set depositPolicy\r",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));\r",
															"    jsonData.depositPolicy = depositPolicy;\r",
															"    // again save to same variable\r",
															"    pm.environment.set(\"reservationCreateReq-16\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-123"
													},
													{
														"key": "",
														"type": "text",
														"value": ""
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationCreateReq-16}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"16.5 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation With Add Ons and Spl Requests : Find reservation with cnfNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  \r",
															"  var charges = jsonData.roomReservation.chargesAndTaxes.charges;\r",
															"  pm.expect(charges[0].itemized.length).greaterThan(2);\r",
															"  pm.expect(charges[1].itemized.length).greaterThan(2);\r",
															"\r",
															"  var taxesAndFees = jsonData.roomReservation.chargesAndTaxes.taxesAndFees;\r",
															"  pm.expect(taxesAndFees[0].itemized.length).greaterThan(2);\r",
															"  pm.expect(taxesAndFees[1].itemized.length).greaterThan(2);\r",
															"\r",
															"  var specialRequestsArr = jsonData.roomReservation.specialRequests;\r",
															"  pm.expect(3).equal(specialRequestsArr.length);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation?confirmationNumber={{useCaseConfirmationNumber}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{useCaseConfirmationNumber}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Reservation - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"16.6 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation With Add Ons and Spl Requests : Cancel Reservation by confirmationNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.environment.get(\"useCaseConfirmationNumber\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"confirmationNumber\": \"{{useCaseConfirmationNumber}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v3/reservation/cancel",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"reservation",
														"cancel"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "17.Reservation with non PO Promo",
									"item": [
										{
											"name": "Single Availability PO False - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"17.1 | RBS_ACRS_Integration | ICE-LasVegas-Reservation with non PO Promo : Single Availability with Checkin Date,Â Checkout Date, Property Id, Promo and PO = true and Number of Adults\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.eq(jsonData.ratePlans[0]);\r",
															"  if(jsonData.ratePlans.length){\r",
															"      var ratePlanIndex =0;\r",
															"      \r",
															"    var itemizedList = jsonData.ratePlans[ratePlanIndex].rooms[0].price.itemized\r",
															"  pm.expect(0).not.equal(itemizedList.length);\r",
															"  //save booking object\r",
															"  var bookings = [];\r",
															"    for (var i = 0; i < itemizedList.length; i++) {\r",
															"        var itemized = itemizedList[i];\r",
															"        var booking = {};\r",
															"        booking.date = itemized.date;\r",
															"        booking.price = itemized.basePrice;\r",
															"        booking.programId =itemized.programId; \r",
															"        booking.overridePrice= -1;\r",
															"        bookings[i] = booking;\r",
															"    }\r",
															"   \r",
															"   postman.setEnvironmentVariable(\"useCaseRoomTypeId\",jsonData.ratePlans[ratePlanIndex].rooms[0].roomTypeId);\r",
															"   postman.setEnvironmentVariable(\"useCaseProgramId\",jsonData.ratePlans[ratePlanIndex].programId);\r",
															"     postman.setEnvironmentVariable(\"useCaseBookings\",JSON.stringify(bookings)); \r",
															"     if(jsonData.ratePlans.length>2){\r",
															"            postman.setEnvironmentVariable(\"scenarioBasedModifyProgramId\",jsonData.ratePlans[ratePlanIndex+1].programId);\r",
															"                  postman.setEnvironmentVariable(\"scenarioBasedModifyRoomId\",jsonData.ratePlans[ratePlanIndex+1].rooms[1].roomTypeId);   \r",
															"     }\r",
															"  }else{\r",
															"       pm.expect(1).not.equal(jsonData.ratePlans.length);\r",
															"  }\r",
															" \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v3/availability/trip?checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{scenarioBasedCheckOutDate}}&propertyId={{propertyId}}&numAdults=2&perpetualPricing=false&mlifeNumber={{NYNYMlifeNo}}&promo={{nonPOPromo}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"availability",
														"trip"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{scenarioBasedCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{propertyId}}"
														},
														{
															"key": "numAdults",
															"value": "2"
														},
														{
															"key": "perpetualPricing",
															"value": "false"
														},
														{
															"key": "mlifeNumber",
															"value": "{{NYNYMlifeNo}}"
														},
														{
															"key": "promo",
															"value": "{{nonPOPromo}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Calculate Room Charges PO False - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"17.2 | RBS_ACRS_Integration | ICE-LasVegas-Reservation with non PO Promo : Calculate Room Charges Non PO with Promo \", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.environment.set(\"variable_key\", \"variable_value\");  \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.booked);    \r",
															"    var promo = jsonData.promo;\r",
															"    pm.expect(promo).not.eq(null);\r",
															"    pm.expect(promo).eq(postman.getEnvironmentVariable('nonPOPromo'));\r",
															"    postman.setEnvironmentVariable(\"reservationCreateReq\",JSON.stringify(jsonData));\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"propertyId\": \"{{propertyId}}\",\r\n    \"roomTypeId\": \"{{useCaseRoomTypeId}}\",\r\n    \"programId\": \"{{useCaseProgramId}}\",\r\n    \"promo\": \"{{nonPOPromo}}\",\r\n    \"itineraryId\": \"9323708418\",\r\n    \"customerId\": \"846558855426\",\r\n    \"guaranteeCode\": null,\r\n    \"tripDetails\": {\r\n        \"checkInDate\": \"{{scenarioBasedCheckInDate}}\",\r\n        \"checkOutDate\": \"{{scenarioBasedCheckOutDate}}\",\r\n        \"numAdults\": 1,\r\n        \"numChildren\": 0,\r\n        \"numRooms\": 1\r\n    },\r\n    \"profile\": {\r\n        \"id\": 846558855426,\r\n        \"operaId\": null,\r\n        \"firstName\": \"Dale\",\r\n        \"lastName\": \"Steyn\",\r\n        \"phoneNumbers\": null,\r\n        \"emailAddress1\": null,\r\n        \"emailAddress2\": null,\r\n        \"dateOfBirth\": null,\r\n        \"hgpNo\": null,\r\n        \"swrrNo\": null,\r\n        \"addresses\": [\r\n            {\r\n                \"preferred\": false,\r\n                \"street1\": \"100 St\",\r\n                \"street2\": null,\r\n                \"city\": \"Las Vegas\",\r\n                \"state\": \"NV\",\r\n                \"country\": \"US\",\r\n                \"postalCode\": \"89102\",\r\n                \"type\": \"Home\"\r\n            }\r\n        ],\r\n        \"title\": null,\r\n        \"mlifeNo\": {{NYNYMlifeNo}}\r\n    },\r\n    \"bookings\": {{useCaseBookings}},\r\n    \"perpetualPricing\": false\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Reservation - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"17.3 | RBS_ACRS_Integration | ICE-LasVegas-Reservation with non PO Promo :  Create non PO Reservation with Promo \", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.environment.set(\"variable_key\", \"variable_value\");  \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.booked);    \r",
															"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
															"    var reservationId = jsonData.roomReservation.id;\r",
															"    pm.expect(confirmationNumber).not.eq(null);\r",
															"    pm.expect(itineraryId).not.eq(null);\r",
															"    pm.expect(reservationId).not.eq(null);\r",
															"    postman.setEnvironmentVariable('useCaseConfirmationNumber',  confirmationNumber);\r",
															"    var promo = jsonData.roomReservation.promo;\r",
															"    pm.expect(promo).not.eq(null);\r",
															"    pm.expect(promo).eq(postman.getEnvironmentVariable('nonPOPromo'));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"    //Create reservation Request and save in env\r",
															"    // get response from charges before create saved into env\r",
															"     jsonData = JSON.parse(postman.getEnvironmentVariable(\"reservationCreateReq\"));\r",
															"    //set itinerary id\r",
															"    jsonData.itineraryId=\"1234\";\r",
															"    //set profile\r",
															"    jsonData.customerId = postman.getEnvironmentVariable(\"iceNYNYCustomerId\")\r",
															"    jsonData.profile = JSON.parse(postman.getEnvironmentVariable(\"iceNYNYProfile\"));\r",
															"    jsonData.profile.mlifeNo = postman.getEnvironmentVariable(\"NYNYMlifeNo\");\r",
															"    //set billing\r",
															"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));\r",
															"    billing[0].payment.amount=jsonData.depositDetails.amount;\r",
															"    jsonData.billing = billing;\r",
															"    //set depositPolicy\r",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));\r",
															"    jsonData.depositPolicy = depositPolicy;\r",
															"    // again save to same variable\r",
															"    postman.setEnvironmentVariable(\"reservationCreateReq\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-123"
													},
													{
														"key": "",
														"type": "text",
														"value": ""
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationCreateReq}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"17.4 | RBS_ACRS_Integration | ICE-LasVegas-Reservation with non PO Promo : Find reservation with cnfNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  var promo = jsonData.roomReservation.promo;\r",
															"  pm.expect(promo).not.eq(null);\r",
															"  pm.expect(promo).eq(postman.getEnvironmentVariable('nonPOPromo'));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation?confirmationNumber={{useCaseConfirmationNumber}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{useCaseConfirmationNumber}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Reservation - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"17.5 | RBS_ACRS_Integration | ICE-LasVegas-Reservation with non PO Promo : Cancel Reservation by confirmationNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.variables.get(\"useCaseConfirmationNumber\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"confirmationNumber\": \"{{useCaseConfirmationNumber}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v3/reservation/cancel",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"reservation",
														"cancel"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "18.FindReservationOperaCnfNumber",
									"item": [
										{
											"name": "Find Reservation V2 OperaCnfNumber - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"18.1 | RBS_ACRS_Integration | ICE-LasVegas-Find Reservation with OperaCnfNumber : Find reservation with opera cnfNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"\r",
															"  var operaCnfNbr = jsonData.roomReservation.operaConfirmationNumber;\r",
															"  pm.expect(operaCnfNbr).not.eq(null);\r",
															"  pm.expect(operaCnfNbr).eq(postman.getEnvironmentVariable(\"operaConfirmationNumber\"));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation?confirmationNumber={{operaConfirmationNumber}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{operaConfirmationNumber}}"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "19.Transient User Reservation - With RRUpSell",
									"item": [
										{
											"name": "Single Availability-Add RRUpSell",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"19.1 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Reservation with RRUpSell : Single Availability - Add RRUpSell\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.eq(jsonData.ratePlans[0]);\r",
															"  if(jsonData.ratePlans.length){\r",
															"      var ratePlanIndex =1;\r",
															"      \r",
															"    var itemizedList = jsonData.ratePlans[ratePlanIndex].rooms[0].price.itemized\r",
															"  pm.expect(0).not.equal(itemizedList.length);\r",
															"  //save booking object\r",
															"  var bookings = [];\r",
															"    for (var i = 0; i < itemizedList.length; i++) {\r",
															"        var itemized = itemizedList[i];\r",
															"        var booking = {};\r",
															"        booking.date = itemized.date;\r",
															"        booking.price = itemized.basePrice;\r",
															"        booking.programId =itemized.programId; \r",
															"        booking.overridePrice= -1;\r",
															"        bookings[i] = booking;\r",
															"    }\r",
															"   \r",
															"   postman.setEnvironmentVariable(\"useCaseRoomTypeId\",jsonData.ratePlans[ratePlanIndex].rooms[0].roomTypeId);\r",
															"   postman.setEnvironmentVariable(\"useCaseProgramId\",jsonData.ratePlans[ratePlanIndex].programId);\r",
															"     postman.setEnvironmentVariable(\"useCaseBookings\",JSON.stringify(bookings)); \r",
															"     if(jsonData.ratePlans.length>2){\r",
															"            postman.setEnvironmentVariable(\"scenarioBasedModifyProgramId\",jsonData.ratePlans[ratePlanIndex+1].programId);\r",
															"                  postman.setEnvironmentVariable(\"scenarioBasedModifyRoomId\",jsonData.ratePlans[ratePlanIndex+1].rooms[1].roomTypeId);   \r",
															"     }\r",
															"  }else{\r",
															"       pm.expect(1).not.equal(jsonData.ratePlans.length);\r",
															"  }\r",
															" \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v3/availability/trip?checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{scenarioBasedCheckOutDate}}&propertyId={{propertyId}}&numAdults=2",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"availability",
														"trip"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{scenarioBasedCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{propertyId}}"
														},
														{
															"key": "numAdults",
															"value": "2"
														},
														{
															"key": "programId",
															"value": "RPCD-v-ADVP-d-PROP-v-MV021",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Calculate Room Charges - Add RRUpSell",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"19.2 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Reservation with RRUpSell : Calculate Room Charges - Add RRUpSell\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    jsonData.rrUpSell = \"Test\" ;\r",
															"    //save response to  reservation Request in env for create reservation\r",
															"     pm.environment.set(\"reservationCreateReqUpSell\",JSON.stringify(jsonData));\r",
															"\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\r\n        \"propertyId\": \"{{propertyId}}\",\r\n        \"roomTypeId\": \"{{useCaseRoomTypeId}}\",\r\n        \"programId\": \"{{useCaseProgramId}}\",\r\n       \"itineraryId\": \"9323708418\",\r\n    \"customerId\": \"846558855426\",\r\n    \"guaranteeCode\": null,\r\n    \"tripDetails\": {\r\n        \"checkInDate\": \"{{scenarioBasedCheckInDate}}\",\r\n        \"checkOutDate\": \"{{scenarioBasedCheckOutDate}}\",\r\n        \"numAdults\": 1,\r\n        \"numChildren\": 0,\r\n        \"numRooms\": 1\r\n    },\r\n \r\n    \"bookings\": {{useCaseBookings}},\r\n\r\n \"profile\": {\r\n      \"id\": 846558855426,\r\n      \"operaId\": null,\r\n      \"firstName\": \"Uttam\",\r\n      \"lastName\": \"Ghorai\",\r\n      \"phoneNumbers\": null,\r\n      \"emailAddress1\": null,\r\n      \"emailAddress2\": null,\r\n      \"dateOfBirth\": null,\r\n      \"hgpNo\": null,\r\n      \"swrrNo\": null,\r\n      \"addresses\": [\r\n        {\r\n          \"preferred\": false,\r\n          \"street1\": \"100 St\",\r\n          \"street2\": null,\r\n          \"city\": \"Las Vegas\",\r\n          \"state\": \"NV\",\r\n          \"country\": \"US\",\r\n          \"postalCode\": \"89102\",\r\n          \"type\": \"Home\"\r\n        }\r\n      ],\r\n      \"title\": null,\r\n      \"mlifeNo\": 0\r\n    }\r\n\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Reservation V2 - Add RRUpSell",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"19.3 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Reservation with RRUpSell : Create Reservation with RRUpSell\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.environment.set(\"variable_key\", \"variable_value\");  \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.booked);    \r",
															"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
															"    var reservationId = jsonData.roomReservation.id;\r",
															"    pm.expect(confirmationNumber).not.eq(null);\r",
															"    pm.expect(itineraryId).not.eq(null);\r",
															"    pm.expect(reservationId).not.eq(null);\r",
															"    postman.setEnvironmentVariable('useCaseConfirmationNumber',  confirmationNumber);\r",
															"     // save response in env for premodify charges\r",
															"     pm.environment.set(\"reservationCreateReqUpSell\",JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"    //Create reservation Request and save in env\r",
															"    // get response from charges before create saved into env\r",
															"     jsonData = JSON.parse(pm.environment.get(\"reservationCreateReqUpSell\"));\r",
															"    //set itinerary id\r",
															"    jsonData.itineraryId=\"1234\";\r",
															"        //set profile\r",
															"    jsonData.customerId = postman.getEnvironmentVariable(\"iceNYNYCustomerId\")\r",
															"    jsonData.profile = JSON.parse(postman.getEnvironmentVariable(\"iceNYNYProfile\"));\r",
															"    //set billing\r",
															"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));\r",
															"      billing[0].payment.amount=jsonData.depositDetails.amount;\r",
															"    jsonData.billing = billing;\r",
															"    //set depositPolicy\r",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));\r",
															"    jsonData.depositPolicy = depositPolicy;\r",
															"    // again save to same variable\r",
															"    pm.environment.set(\"reservationCreateReqUpSell\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-123"
													},
													{
														"key": "",
														"type": "text",
														"value": ""
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationCreateReqUpSell}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 - Add RRUpSell",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"19.4 | RBS_ACRS_Integration | ICE-LasVegas-Transient User Reservation with RRUpSell : Find Reservation Add with RRUpSell\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.eq(jsonData.rrUpSell);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation?confirmationNumber={{useCaseConfirmationNumber}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{useCaseConfirmationNumber}}"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "20.Reservation -With manual and system RI",
									"item": [
										{
											"name": "Single Availability-with mlife and PO",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"20.1 | RBS_ACRS_Integration | ICE-LasVegas-Reservation with manual and system RI | Test case : Single Availability with Checkin Date,Â Checkout Date, Property Id and Number of Adults and Mlife\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.eq(jsonData.ratePlans[0]);\r",
															"  if(jsonData.ratePlans.length){\r",
															"      var ratePlanIndex =0;\r",
															"      \r",
															"    var itemizedList = jsonData.ratePlans[ratePlanIndex].rooms[0].price.itemized\r",
															"  pm.expect(0).not.equal(itemizedList.length);\r",
															"  //save booking object\r",
															"  var bookings = [];\r",
															"    for (var i = 0; i < itemizedList.length; i++) {\r",
															"        var itemized = itemizedList[i];\r",
															"        var booking = {};\r",
															"        booking.date = itemized.date;\r",
															"        booking.price = itemized.basePrice;\r",
															"        booking.programId =itemized.programId; \r",
															"        booking.overridePrice= -1;\r",
															"        bookings[i] = booking;\r",
															"    }\r",
															"   \r",
															"   pm.environment.set(\"useCaseRoomTypeId\",jsonData.ratePlans[ratePlanIndex].rooms[0].roomTypeId);\r",
															"   pm.environment.set(\"useCaseProgramId\",jsonData.ratePlans[ratePlanIndex].programId);\r",
															"     pm.environment.set(\"useCaseBookings\",JSON.stringify(bookings));  \r",
															"  }else{\r",
															"       pm.expect(1).not.equal(jsonData.ratePlans.length);\r",
															"  }\r",
															" \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v3/availability/trip?checkInDate={{scenarioRIBasedCheckInDate}}&checkOutDate={{scenarioRIBasedCheckOutDate}}&propertyId={{propertyId}}&numAdults=2&mlifeNumber={{NYNYMlifeNo}}&perpetualPricing=true",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"availability",
														"trip"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioRIBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{scenarioRIBasedCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{propertyId}}"
														},
														{
															"key": "numAdults",
															"value": "2"
														},
														{
															"key": "programId",
															"value": "RPCD-v-ADVP-d-PROP-v-MV021",
															"disabled": true
														},
														{
															"key": "mlifeNumber",
															"value": "{{NYNYMlifeNo}}"
														},
														{
															"key": "perpetualPricing",
															"value": "true"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Calculate Room Charges - Before Create with Mlife-Comp rate",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"20.2 | RBS_ACRS_Integration | ICE-LasVegas-Reservation with manual and system RI |Test case : Get Comp price Before Reservation with Profile, Booking, TripDetails, Mlife \", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(undefined).equal(jsonData.error);\r",
															"    \r",
															"    //save response to  reservation Request in env for create reservation\r",
															"     pm.environment.set(\"reservationCreateReqRI\",JSON.stringify(jsonData));\r",
															"\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\r\n        \"propertyId\": \"{{propertyId}}\",\r\n        \"roomTypeId\": \"{{useCaseRoomTypeId}}\",\r\n        \"programId\": \"{{useCaseProgramId}}\",\r\n       \"itineraryId\": \"9323708418\",\r\n    \"customerId\": \"846558855426\",\r\n    \"guaranteeCode\": null,\r\n    \"tripDetails\": {\r\n        \"checkInDate\": \"{{scenarioRIBasedCheckInDate}}\",\r\n        \"checkOutDate\": \"{{scenarioRIBasedCheckOutDate}}\",\r\n        \"numAdults\": 1,\r\n        \"numChildren\": 0,\r\n        \"numRooms\": 1\r\n    },\r\n \r\n    \"bookings\": {{useCaseBookings}},\r\n\r\n \"profile\": {\r\n      \"id\": 846558855426,\r\n      \"operaId\": null,\r\n      \"firstName\": \"Uttam\",\r\n      \"lastName\": \"Ghorai\",\r\n      \"phoneNumbers\": null,\r\n      \"emailAddress1\": null,\r\n      \"emailAddress2\": null,\r\n      \"dateOfBirth\": null,\r\n      \"hgpNo\": null,\r\n      \"swrrNo\": null,\r\n      \"addresses\": [\r\n        {\r\n          \"preferred\": false,\r\n          \"street1\": \"100 St\",\r\n          \"street2\": null,\r\n          \"city\": \"Las Vegas\",\r\n          \"state\": \"NV\",\r\n          \"country\": \"US\",\r\n          \"postalCode\": \"89102\",\r\n          \"type\": \"Home\"\r\n        }\r\n      ],\r\n      \"title\": null,\r\n      \"mlifeNo\": {{NYNYMlifeNo}}\r\n    },\r\n    \"perpetualPricing\": true\r\n\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Reservation -with Mlife-Comp rate and manual RI",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"20.3 | RBS_ACRS_Integration | ICE-LasVegas-Reservation with manual and system RI| Test case  : Create Transient Reservation with Profile, Booking, TripDetails, Billing , mlife , comp rate and syatem and manual RI \", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.environment.set(\"variable_key\", \"variable_value\");  \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.booked);    \r",
															"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
															"    var reservationId = jsonData.roomReservation.id;\r",
															"    pm.expect(confirmationNumber).not.eq(null);\r",
															"    pm.expect(itineraryId).not.eq(null);\r",
															"    pm.expect(reservationId).not.eq(null);\r",
															"    pm.environment.set(\"useCaseRIConfirmationNumber\",  confirmationNumber);\r",
															"         // save response in env for premodify charges\r",
															"    pm.environment.set(\"reservationRIModifyReq\",JSON.stringify(jsonData.roomReservation));\r",
															"    var len = jsonData.roomReservation.routingInstructions.length;\r",
															"     pm.expect(len).eq(1);\r",
															"   \r",
															"    // check malual RI in response\r",
															"\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"    //Create reservation Request and save in env\r",
															"    // get response from charges before create saved into env\r",
															"     jsonData = JSON.parse(pm.environment.get(\"reservationCreateReqRI\"));\r",
															"    //set itinerary id\r",
															"    jsonData.itineraryId=\"1234\";\r",
															"    //set profile\r",
															"    jsonData.customerId = postman.getEnvironmentVariable(\"iceNYNYCustomerId\")\r",
															"    jsonData.profile = JSON.parse(postman.getEnvironmentVariable(\"iceNYNYProfile\"));\r",
															"    jsonData.profile.mlifeNo = postman.getEnvironmentVariable(\"NYNYMlifeNo\");\r",
															"    //set billing\r",
															"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));\r",
															"    billing[0].payment.amount=jsonData.depositDetails.amount;\r",
															"    jsonData.billing = billing;\r",
															"    //set depositPolicy\r",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));\r",
															"    jsonData.depositPolicy = depositPolicy;\r",
															"    //set routing instructions\r",
															"        manualRI= JSON.parse(postman.getEnvironmentVariable(\"NYNYManualRI\"));\r",
															"    jsonData.routingInstructions = manualRI;\r",
															"            manualRI[0].startDate = jsonData.tripDetails.checkInDate;\r",
															"        manualRI[0].endDate = jsonData.tripDetails.checkOutDate;\r",
															"    // again save to same variable\r",
															"   pm.environment.set(\"reservationCreateReqRI\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-123"
													},
													{
														"key": "",
														"type": "text",
														"value": ""
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationCreateReqRI}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation- With Sys and Manual RI",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"20.4 | RBS_ACRS_Integration | ICE-LasVegas-Reservation with manual and system RI| Test case  : Find reservation with cnfNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"    var len = jsonData.roomReservation.routingInstructions.length;\r",
															"     pm.expect(len).equal(1);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation?confirmationNumber={{useCaseRIConfirmationNumber}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{useCaseRIConfirmationNumber}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Single Availability-with non PO rate",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"20.5 | RBS_ACRS_Integration | ICE-LasVegas-Reservation with manual and system RI| Test  Single Availability with Checkin Date,Â Checkout Date, Property Id and Number of Adults\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.eq(jsonData.ratePlans[0]);\r",
															"  if(jsonData.ratePlans.length){\r",
															"      var ratePlanIndex =0;\r",
															"      \r",
															"    var itemizedList = jsonData.ratePlans[ratePlanIndex].rooms[0].price.itemized\r",
															"  pm.expect(0).not.equal(itemizedList.length);\r",
															"  //save booking object\r",
															"  var bookings = [];\r",
															"    for (var i = 0; i < itemizedList.length; i++) {\r",
															"        var itemized = itemizedList[i];\r",
															"        var booking = {};\r",
															"        booking.date = itemized.date;\r",
															"        booking.price = itemized.basePrice;\r",
															"        booking.programId =itemized.programId;\r",
															"        booking.overridePrice= -1;\r",
															"        bookings[i] = booking;\r",
															"    }\r",
															"   \r",
															"   postman.setEnvironmentVariable(\"useCaseRoomTypeId\",jsonData.ratePlans[ratePlanIndex].rooms[0].roomTypeId);\r",
															"   postman.setEnvironmentVariable(\"useCasePOProgramId\",jsonData.ratePlans[ratePlanIndex].programId);\r",
															"     postman.setEnvironmentVariable(\"useCaseBookings\",JSON.stringify(bookings));  \r",
															"  }else{\r",
															"       pm.expect(jsonData.ratePlans.length).gt(1);\r",
															"  }\r",
															" \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v3/availability/trip?checkInDate={{scenarioRIBasedCheckInDate}}&checkOutDate={{scenarioRIBasedCheckOutDate}}&propertyId={{propertyId}}&numAdults=2&mlifeNumber={{NYNYMlifeNo}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"availability",
														"trip"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioRIBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{scenarioRIBasedCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{propertyId}}"
														},
														{
															"key": "numAdults",
															"value": "2"
														},
														{
															"key": "programId",
															"value": "RPCD-v-ADVP-d-PROP-v-MV021",
															"disabled": true
														},
														{
															"key": "perpetualPricing",
															"value": "true",
															"disabled": true
														},
														{
															"key": "mlifeNumber",
															"value": "{{NYNYMlifeNo}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Charges Before Modification -With no PO rate, Remove Sys RI",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"20.6 | RBS_ACRS_Integration | ICE-LasVegas-Reservation with manual and system RI| Test case  : PreModify Reservation with modify program- Remove sys RI\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    // save response in env for premodify charges\r",
															"    pm.environment.set(\"reservationRIModifyReq\",JSON.stringify(jsonData));\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"//get existing reservation\r",
															" jsonData = JSON.parse(pm.environment.get(\"reservationRIModifyReq\"));\r",
															" //Modify programId\r",
															" jsonData.programId=pm.environment.get(\"useCasePOProgramId\");\r",
															" jsonData.perpetualPricing = true;\r",
															" // modify in booking obj\r",
															"    for (var i = 0; i < jsonData.bookings.length; i++) {\r",
															"       // jsonData.bookings[i].programId=jsonData.programId;\r",
															"    }\r",
															"    jsonData.tripDetails.numAdults=2;\r",
															"pm.environment.set(\"reservationRIModifyReq\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{reservationRIModifyReq}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "Modify Reservation- Modify With no PO rate, Remove Sys RI",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"20.7 | RBS_ACRS_Integration | ICE-LasVegas-Reservation with manual and system RI| Test case  : Modify Reservation with mlife Profile, Booking, TripDetails, Billing  and modified room and remove sys RI\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.environment.set(\"useCaseRIConfirmationNumber\",jsonData.roomReservation.confirmationNumber);\r",
															"        var len = jsonData.roomReservation.routingInstructions.length;\r",
															"     pm.expect(len).gte(1);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															"    //Modify reservation Request and save in env",
															"    // get response from charges before create saved into env",
															"     jsonData = JSON.parse(pm.environment.get(\"reservationRIModifyReq\"));",
															"    //set itinerary id",
															"    jsonData.itineraryId=\"1234\";",
															"    jsonData.state = \"Booked\",",
															"    //set billing",
															"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));",
															"    billing[0].payment.amount=jsonData.depositDetails.amount;",
															"    jsonData.billing = billing;",
															"    //set routing instructions",
															"        manualRI= JSON.parse(postman.getEnvironmentVariable(\"NYNYManualRI\"));",
															"        manualRI[0].startDate = jsonData.tripDetails.checkInDate;",
															"        manualRI[0].endDate = jsonData.tripDetails.checkOutDate;",
															"    jsonData.routingInstructions = manualRI;",
															"    //set depositPolicy",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));",
															"    jsonData.depositPolicy = depositPolicy;",
															"    // again save to same variable",
															"   pm.environment.set(\"reservationRIModifyReq\",JSON.stringify(jsonData));",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationRIModifyReq}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation- With Manual RI",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"20.8 | RBS_ACRS_Integration | ICE-LasVegas-Reservation with manual and system RI| Test case : Find reservation with cnfNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"        var len = jsonData.roomReservation.routingInstructions.length;\r",
															"     pm.expect(len).gte(1);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation?confirmationNumber={{useCaseRIConfirmationNumber}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{useCaseRIConfirmationNumber}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Single Availability-with PO flag",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"20.9 | RBS_ACRS_Integration | ICE-LasVegas-Reservation with manual and system RI| Test case  : Single Availability with Checkin Date,Â Checkout Date, Property Id and Number of Adults - With PO flag\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.eq(jsonData.ratePlans[0]);\r",
															"  if(jsonData.ratePlans.length){\r",
															"      var ratePlanIndex =0;\r",
															"      \r",
															"    var itemizedList = jsonData.ratePlans[ratePlanIndex].rooms[0].price.itemized\r",
															"  pm.expect(0).not.equal(itemizedList.length);\r",
															"  //save booking object\r",
															"  var bookings = [];\r",
															"    for (var i = 0; i < itemizedList.length; i++) {\r",
															"        var itemized = itemizedList[i];\r",
															"        var booking = {};\r",
															"        booking.date = itemized.date;\r",
															"        booking.price = itemized.basePrice;\r",
															"        booking.programId =itemized.programId; \r",
															"        booking.overridePrice= -1;\r",
															"        bookings[i] = booking;\r",
															"    }\r",
															"   \r",
															"   postman.setEnvironmentVariable(\"useCaseRoomTypeId\",jsonData.ratePlans[ratePlanIndex].rooms[0].roomTypeId);\r",
															"   postman.setEnvironmentVariable(\"useCasePOProgramId\",jsonData.ratePlans[ratePlanIndex].programId);\r",
															"     postman.setEnvironmentVariable(\"useCaseBookings\",JSON.stringify(bookings));  \r",
															"  }else{\r",
															"       pm.expect(1).not.equal(jsonData.ratePlans.length);\r",
															"  }\r",
															" \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v3/availability/trip?checkInDate={{scenarioRIBasedCheckInDate}}&checkOutDate={{scenarioRIBasedCheckOutDate}}&propertyId={{propertyId}}&numAdults=2&perpetualPricing=true&mlifeNumber={{NYNYMlifeNo}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"availability",
														"trip"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioRIBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{scenarioRIBasedCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{propertyId}}"
														},
														{
															"key": "numAdults",
															"value": "2"
														},
														{
															"key": "programId",
															"value": "RPCD-v-ADVP-d-PROP-v-MV021",
															"disabled": true
														},
														{
															"key": "perpetualPricing",
															"value": "true"
														},
														{
															"key": "mlifeNumber",
															"value": "{{NYNYMlifeNo}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Charges Before Modification -With PO program",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"20.10 | RBS_ACRS_Integration | ICE-LasVegas-Reservation with manual and system RI| Test case  : PreModify Reservation with PO program\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    // save response in env for premodify charges\r",
															"     postman.setEnvironmentVariable(\"reservationRIModifyReq\",JSON.stringify(jsonData));\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"//get existing reservation\r",
															" jsonData = JSON.parse(postman.getEnvironmentVariable(\"reservationRIModifyReq\"));\r",
															" //Modify programId\r",
															" jsonData.programId=postman.getEnvironmentVariable(\"useCasePOProgramId\");\r",
															" jsonData.perpetualPricing = true;\r",
															" // modify in booking obj\r",
															"    for (var i = 0; i < jsonData.bookings.length; i++) {\r",
															"        jsonData.bookings[i].programId=jsonData.programId;\r",
															"    }\r",
															"postman.setEnvironmentVariable(\"reservationRIModifyReq\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{reservationRIModifyReq}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "Modify Reservation- Modify to PO program",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"20.11 | RBS_ACRS_Integration | ICE-LasVegas-Reservation with manual and system RI| Test case  : Modify Reservation with mlife Profile, Booking, TripDetails, Billing  - with PO program\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    postman.setEnvironmentVariable(\"useCaseRIConfirmationNumber\",jsonData.roomReservation.confirmationNumber);\r",
															"            var len = jsonData.roomReservation.routingInstructions.length;\r",
															"     pm.expect(len).eq(1);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															"    //Modify reservation Request and save in env",
															"    // get response from charges before create saved into env",
															"     jsonData = JSON.parse(postman.getEnvironmentVariable(\"reservationRIModifyReq\"));",
															"    //set itinerary id",
															"    jsonData.itineraryId=\"1234\";",
															"    jsonData.state = \"Booked\",",
															"    //set billing",
															"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));",
															"    billing[0].payment.amount=jsonData.depositDetails.amount;",
															"    jsonData.billing = billing;",
															"    //set routing instructions",
															"        manualRI= JSON.parse(postman.getEnvironmentVariable(\"NYNYManualRI\"));",
															"        manualRI[0].startDate = jsonData.tripDetails.checkInDate;",
															"        manualRI[0].endDate = jsonData.tripDetails.checkOutDate;",
															"    jsonData.routingInstructions = manualRI;",
															"    //set depositPolicy",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));",
															"    jsonData.depositPolicy = depositPolicy;",
															"    // again save to same variable",
															"    postman.setEnvironmentVariable(\"reservationRIModifyReq\",JSON.stringify(jsonData));",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationRIModifyReq}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation- With Sys and Manual RI",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"20.12 | RBS_ACRS_Integration | ICE-LasVegas-Reservation with manual and system RI| Test case  : Find reservation with cnfNumber - with sys and manual RI\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"            var len = jsonData.roomReservation.routingInstructions.length;\r",
															"     pm.expect(len).gte(1);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation?confirmationNumber={{useCaseRIConfirmationNumber}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{useCaseRIConfirmationNumber}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Reservation - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"20.13 | RBS_ACRS_Integration | ICE-LasVegas-Reservation with manual and system RI| Test case : Cancel Reservation by confirmationNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.variables.get(\"useCaseRIConfirmationNumber\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"confirmationNumber\": \"{{useCaseRIConfirmationNumber}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v3/reservation/cancel",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"reservation",
														"cancel"
													]
												}
											},
											"response": []
										},
										{
											"name": "Single Availability-with mlife and PO",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"20.14 | RBS_ACRS_Integration | ICE-LasVegas-Reservation with manual and system RI | Test case : Single Availability with Checkin Date,Â Checkout Date, Property Id and Number of Adults and Mlife and PO\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.eq(jsonData.ratePlans[0]);\r",
															"  if(jsonData.ratePlans.length){\r",
															"      var ratePlanIndex =0;\r",
															"      \r",
															"    var itemizedList = jsonData.ratePlans[ratePlanIndex].rooms[0].price.itemized\r",
															"  pm.expect(0).not.equal(itemizedList.length);\r",
															"  //save booking object\r",
															"  var bookings = [];\r",
															"    for (var i = 0; i < itemizedList.length; i++) {\r",
															"        var itemized = itemizedList[i];\r",
															"        var booking = {};\r",
															"        booking.date = itemized.date;\r",
															"        booking.price = itemized.basePrice;\r",
															"        booking.programId =itemized.programId; \r",
															"        booking.overridePrice= -1;\r",
															"        bookings[i] = booking;\r",
															"    }\r",
															"   \r",
															"   postman.setEnvironmentVariable(\"useCaseRoomTypeId\",jsonData.ratePlans[ratePlanIndex].rooms[0].roomTypeId);\r",
															"   postman.setEnvironmentVariable(\"useCaseRIProgramId\",jsonData.ratePlans[ratePlanIndex].programId);\r",
															"     postman.setEnvironmentVariable(\"useCaseRIBookings\",JSON.stringify(bookings));  \r",
															"  }else{\r",
															"       pm.expect(jsonData.ratePlans.length).not.equal(0);\r",
															"  }\r",
															" \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v3/availability/trip?checkInDate={{scenarioRIBasedCheckInDate}}&checkOutDate={{scenarioRIBasedCheckOutDate}}&propertyId={{propertyId}}&numAdults=2&mlifeNumber={{NYNYMlifeNo}}&perpetualPricing=true",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"availability",
														"trip"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioRIBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{scenarioRIBasedCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{propertyId}}"
														},
														{
															"key": "numAdults",
															"value": "2"
														},
														{
															"key": "programId",
															"value": "RPCD-v-ADVP-d-PROP-v-MV021",
															"disabled": true
														},
														{
															"key": "mlifeNumber",
															"value": "{{NYNYMlifeNo}}"
														},
														{
															"key": "perpetualPricing",
															"value": "true"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Calculate Room Charges - Before Create with Mlife -PO rate",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"20.15 | RBS_ACRS_Integration | ICE-LasVegas-Reservation with manual and system RI| Test case  : Before Reservation with Profile, Booking, TripDetails, Mlife and po rate\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    //save response to  reservation Request in env for create reservation\r",
															"     postman.setEnvironmentVariable(\"reservationRICreateReq\",JSON.stringify(jsonData));\r",
															"\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\r\n        \"propertyId\": \"{{propertyId}}\",\r\n        \"roomTypeId\": \"{{useCaseRoomTypeId}}\",\r\n        \"programId\": \"{{useCaseRIProgramId}}\",\r\n       \"itineraryId\": \"9323708418\",\r\n    \"customerId\": \"846558855426\",\r\n    \"guaranteeCode\": null,\r\n    \"tripDetails\": {\r\n        \"checkInDate\": \"{{scenarioRIBasedCheckInDate}}\",\r\n        \"checkOutDate\": \"{{scenarioRIBasedCheckOutDate}}\",\r\n        \"numAdults\": 1,\r\n        \"numChildren\": 0,\r\n        \"numRooms\": 1\r\n    },\r\n \r\n    \"bookings\": {{useCaseRIBookings}},\r\n\r\n \"profile\": {\r\n      \"id\": 846558855426,\r\n      \"operaId\": null,\r\n      \"firstName\": \"Uttam\",\r\n      \"lastName\": \"Ghorai\",\r\n      \"phoneNumbers\": null,\r\n      \"emailAddress1\": null,\r\n      \"emailAddress2\": null,\r\n      \"dateOfBirth\": null,\r\n      \"hgpNo\": null,\r\n      \"swrrNo\": null,\r\n      \"addresses\": [\r\n        {\r\n          \"preferred\": false,\r\n          \"street1\": \"100 St\",\r\n          \"street2\": null,\r\n          \"city\": \"Las Vegas\",\r\n          \"state\": \"NV\",\r\n          \"country\": \"US\",\r\n          \"postalCode\": \"89102\",\r\n          \"type\": \"Home\"\r\n        }\r\n      ],\r\n      \"title\": null,\r\n      \"mlifeNo\": {{NYNYMlifeNo}}\r\n    },\r\n    \"perpetualPricing\": true\r\n\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Reservation -With system RI",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"20.16 | RBS_ACRS_Integration | ICE-LasVegas-Reservation with manual and system RI| Test case : Create Transient Reservation with Profile, Booking, TripDetails, Billing and system RI \", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.environment.set(\"variable_key\", \"variable_value\");  \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.booked);    \r",
															"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
															"    var reservationId = jsonData.roomReservation.id;\r",
															"    pm.expect(confirmationNumber).not.eq(null);\r",
															"    pm.expect(itineraryId).not.eq(null);\r",
															"    pm.expect(reservationId).not.eq(null);\r",
															"        postman.setEnvironmentVariable('useCaseRIConfirmationNumber',  confirmationNumber);\r",
															"                var len = jsonData.roomReservation.routingInstructions.length;\r",
															"     pm.expect(len).eq(0);\r",
															"\r",
															"     // save response in env for premodify charges\r",
															"     postman.setEnvironmentVariable(\"reservationRICreateReq\",JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"    //Create reservation Request and save in env\r",
															"    // get response from charges before create saved into env\r",
															"     jsonData = JSON.parse(postman.getEnvironmentVariable(\"reservationRICreateReq\"));\r",
															"    //set itinerary id\r",
															"    jsonData.itineraryId=\"1234\";\r",
															"    //set billing\r",
															"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));\r",
															"    billing[0].payment.amount=jsonData.depositDetails.amount;\r",
															"    jsonData.billing = billing;\r",
															"    //set depositPolicy\r",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));\r",
															"    jsonData.depositPolicy = depositPolicy;\r",
															"    // again save to same variable\r",
															"    postman.setEnvironmentVariable(\"reservationRICreateReq\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-123"
													},
													{
														"key": "",
														"type": "text",
														"value": ""
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"roomReservation\":{{reservationRICreateReq}}\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation- With system RI",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"20.17 | RBS_ACRS_Integration | ICE-LasVegas-Reservation with manual and system RI| Test case : Find reservation with cnfNumber with sys RI\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"                var len = jsonData.roomReservation.routingInstructions.length;\r",
															"     pm.expect(len).gte(0);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation?confirmationNumber={{useCaseRIConfirmationNumber}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{useCaseRIConfirmationNumber}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Reservation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"20.18 | RBS_ACRS_Integration | ICE-LasVegas-Reservation with manual and system RI |  Test case : Cancel Reservation by confirmationNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.variables.get(\"useCaseRIConfirmationNumber\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"confirmationNumber\": \"{{useCaseRIConfirmationNumber}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v3/reservation/cancel",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"reservation",
														"cancel"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "21.Negative Test Cases",
									"item": [
										{
											"name": "Find Reservation",
											"item": [
												{
													"name": "Find Reservation V2 - Invalid Confirmation Number",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"RBS_ACRS_Integration | Negative Test case 01 : Find reservation with invalid cnfNumber\", function () {\r",
																	"  pm.response.to.have.status(400);\r",
																	"  pm.response.to.have.header(\"Content-Type\");\r",
																	"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
																	"\r",
																	"  var jsonData = JSON.parse(pm.response.stream);\r",
																	"  pm.expect(\"Bad Request\").to.equal(pm.response.status);\r",
																	"  pm.expect(null).not.eq(jsonData);\r",
																	"  pm.expect(0).not.equal(jsonData.length);\r",
																	"\r",
																	"  var errorCode = jsonData.error.code;\r",
																	"  var errorMsg = jsonData.error.message;\r",
																	"  pm.expect(errorCode).not.eq(null);\r",
																	"  pm.expect(errorMsg).not.eq(null);\r",
																	"  pm.expect(errorCode).eq(\"632-2-242\");\r",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "x-mgm-source",
																"type": "text",
																"value": "{{source}}"
															},
															{
																"key": "x-mgm-channel",
																"type": "text",
																"value": "{{channel}}"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "{{JWT_Token}}"
															},
															{
																"key": "x-mgm-transaction-id",
																"type": "text",
																"value": "rbs-v2-integration-{{$timestamp}}"
															}
														],
														"url": {
															"raw": "{{env}}/booking/room/v2/reservation?confirmationNumber={{invalidConfirmationNumber}}",
															"host": [
																"{{env}}"
															],
															"path": [
																"booking",
																"room",
																"v2",
																"reservation"
															],
															"query": [
																{
																	"key": "confirmationNumber",
																	"value": "{{invalidConfirmationNumber}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Find Reservation V2 - No Confirmation Number",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"RBS_ACRS_Integration | Negative Test case 01 : Find reservation with no cnfNumber\", function () {\r",
																	"  pm.response.to.have.status(400);\r",
																	"  pm.response.to.have.header(\"Content-Type\");\r",
																	"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
																	"\r",
																	"  var jsonData = JSON.parse(pm.response.stream);\r",
																	"  pm.expect(\"Bad Request\").to.equal(pm.response.status);\r",
																	"  pm.expect(null).not.eq(jsonData);\r",
																	"  pm.expect(0).not.equal(jsonData.length);\r",
																	"\r",
																	"  var errorCode = jsonData.error.code;\r",
																	"  var errorMsg = jsonData.error.message;\r",
																	"  pm.expect(errorCode).not.eq(null);\r",
																	"  pm.expect(errorMsg).not.eq(null);\r",
																	"  pm.expect(errorCode).eq(\"632-1-143\");\r",
																	"  pm.expect(errorMsg).eq(\"No confirmation number\");\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "x-mgm-source",
																"type": "text",
																"value": "{{source}}"
															},
															{
																"key": "x-mgm-channel",
																"type": "text",
																"value": "{{channel}}"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "{{JWT_Token}}"
															},
															{
																"key": "x-mgm-transaction-id",
																"type": "text",
																"value": "rbs-v2-integration-{{$timestamp}}"
															}
														],
														"url": {
															"raw": "{{env}}/booking/room/v2/reservation",
															"host": [
																"{{env}}"
															],
															"path": [
																"booking",
																"room",
																"v2",
																"reservation"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Cancel Reservation",
											"item": [
												{
													"name": "Cancel Reservation - Cancelled confirmation number",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"RBS_ACRS_Integration | Negative Test case 02 : Cancel Reservation by already cancelled confirmationNumber\", function () {\r",
																	"    pm.response.to.have.status(400);\r",
																	"  pm.response.to.have.header(\"Content-Type\");\r",
																	"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
																	"\r",
																	"  var jsonData = JSON.parse(pm.response.stream);\r",
																	"  pm.expect(\"Bad Request\").to.equal(pm.response.status);\r",
																	"  pm.expect(null).not.eq(jsonData);\r",
																	"  pm.expect(0).not.equal(jsonData.length);\r",
																	"\r",
																	"  var errorCode = jsonData.error.code;\r",
																	"  var errorMsg = jsonData.error.message;\r",
																	"  pm.expect(errorCode).not.eq(null);\r",
																	"  pm.expect(errorMsg).not.eq(null);\r",
																	"  pm.expect(errorCode).eq(\"632-2-224\");\r",
																	"  pm.expect(errorMsg).eq(\"<_reservation_already_cancelled>[ The given reservation is already in cancelled state. ]\");\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "x-mgm-source",
																"value": "{{source}}",
																"type": "text"
															},
															{
																"key": "x-mgm-channel",
																"value": "{{channel}}",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "{{JWT_Token}}",
																"type": "text"
															},
															{
																"key": "x-mgm-transaction-id",
																"value": "rbs-v2-integration-{{$timestamp}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"confirmationNumber\": \"{{useCaseConfirmationNumber4}}\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{env}}/booking/room/v3/reservation/cancel",
															"host": [
																"{{env}}"
															],
															"path": [
																"booking",
																"room",
																"v3",
																"reservation",
																"cancel"
															]
														}
													},
													"response": []
												},
												{
													"name": "Cancel Reservation - Invalid Confirmation Number",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"RBS_ACRS_Integration | Negative Test case 02 : Cancel Reservation by invalid confirmationNumber\", function () {\r",
																	"    pm.response.to.have.status(400);\r",
																	"  pm.response.to.have.header(\"Content-Type\");\r",
																	"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
																	"\r",
																	"  var jsonData = JSON.parse(pm.response.stream);\r",
																	"  pm.expect(\"Bad Request\").to.equal(pm.response.status);\r",
																	"  pm.expect(null).not.eq(jsonData);\r",
																	"  pm.expect(0).not.equal(jsonData.length);\r",
																	"\r",
																	"  var errorCode = jsonData.error.code;\r",
																	"  var errorMsg = jsonData.error.message;\r",
																	"  pm.expect(errorCode).not.eq(null);\r",
																	"  pm.expect(errorMsg).not.eq(null);\r",
																	"  pm.expect(errorCode).eq(\"632-2-242\");\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "x-mgm-source",
																"value": "{{source}}",
																"type": "text"
															},
															{
																"key": "x-mgm-channel",
																"value": "{{channel}}",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "{{JWT_Token}}",
																"type": "text"
															},
															{
																"key": "x-mgm-transaction-id",
																"value": "rbs-v2-integration-{{$timestamp}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"confirmationNumber\": \"{{invalidConfirmationNumber}}\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{env}}/booking/room/v3/reservation/cancel",
															"host": [
																"{{env}}"
															],
															"path": [
																"booking",
																"room",
																"v3",
																"reservation",
																"cancel"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "Create Reservation",
											"item": [
												{
													"name": "Single Availability-Success",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"RBS_ACRS_Integration | Negative Test case 03 : Single Availability with Checkin Date,Â Checkout Date, Property Id and Number of Adults\", function () {\r",
																	"  pm.response.to.have.status(200);\r",
																	"  pm.response.to.have.header(\"Content-Type\");\r",
																	"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
																	"\r",
																	"  var jsonData = JSON.parse(pm.response.stream);\r",
																	"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
																	"  pm.expect(null).not.eq(jsonData);\r",
																	"  pm.expect(0).not.equal(jsonData.length);\r",
																	"  pm.expect(null).not.eq(jsonData.ratePlans[0]);\r",
																	"  if(jsonData.ratePlans.length){\r",
																	"      var ratePlanIndex =1;\r",
																	"      \r",
																	"    var itemizedList = jsonData.ratePlans[ratePlanIndex].rooms[0].price.itemized\r",
																	"  pm.expect(0).not.equal(itemizedList.length);\r",
																	"  //save booking object\r",
																	"  var bookings = [];\r",
																	"    for (var i = 0; i < itemizedList.length; i++) {\r",
																	"        var itemized = itemizedList[i];\r",
																	"        var booking = {};\r",
																	"        booking.date = itemized.date;\r",
																	"        booking.price = itemized.basePrice;\r",
																	"        booking.programId =itemized.programId; \r",
																	"        booking.overridePrice= -1;\r",
																	"        bookings[i] = booking;\r",
																	"    }\r",
																	"   \r",
																	"   postman.setEnvironmentVariable(\"useCaseRoomTypeId\",jsonData.ratePlans[ratePlanIndex].rooms[0].roomTypeId);\r",
																	"   postman.setEnvironmentVariable(\"useCaseProgramId\",jsonData.ratePlans[ratePlanIndex].programId);\r",
																	"     postman.setEnvironmentVariable(\"useCaseBookings\",JSON.stringify(bookings));  \r",
																	"  }else{\r",
																	"       pm.expect(1).not.equal(jsonData.ratePlans.length);\r",
																	"  }\r",
																	" \r",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "x-mgm-source",
																"value": "{{source}}",
																"type": "text"
															},
															{
																"key": "x-mgm-channel",
																"value": "{{channel}}",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "{{JWT_Token}}",
																"type": "text"
															},
															{
																"key": "x-mgm-transaction-id",
																"value": "rbs-v2-integration-{{$timestamp}}",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{env}}/booking/room/v3/availability/trip?checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{scenarioBasedCheckOutDate}}&propertyId={{propertyId}}&numAdults=2",
															"host": [
																"{{env}}"
															],
															"path": [
																"booking",
																"room",
																"v3",
																"availability",
																"trip"
															],
															"query": [
																{
																	"key": "checkInDate",
																	"value": "{{scenarioBasedCheckInDate}}"
																},
																{
																	"key": "checkOutDate",
																	"value": "{{scenarioBasedCheckOutDate}}"
																},
																{
																	"key": "propertyId",
																	"value": "{{propertyId}}"
																},
																{
																	"key": "numAdults",
																	"value": "2"
																},
																{
																	"key": "programId",
																	"value": "RPCD-v-ADVP-d-PROP-v-MV021",
																	"disabled": true
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Calculate Room Charges - Before Create Reservation Suiccess",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"RBS_ACRS_Integration | Negative Test case 03 : Before Reservation with Profile, Booking, TripDetails, Billing and AgentInfo\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"    pm.response.to.have.header(\"Content-Type\");\r",
																	"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
																	"\r",
																	"    var jsonData = JSON.parse(pm.response.stream);\r",
																	"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
																	"    pm.expect(null).not.eq(jsonData);\r",
																	"    pm.expect(0).not.equal(jsonData.length);\r",
																	"    //save response to  reservation Request in env for create reservation\r",
																	"     postman.setEnvironmentVariable(\"reservationCreateReq\",JSON.stringify(jsonData));\r",
																	"\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "x-mgm-source",
																"type": "text",
																"value": "{{source}}"
															},
															{
																"key": "x-mgm-channel",
																"type": "text",
																"value": "{{channel}}"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "{{JWT_Token}}"
															},
															{
																"key": "x-mgm-transaction-id",
																"type": "text",
																"value": "rbs-v2-integration-{{$timestamp}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\r\n        \"propertyId\": \"{{propertyId}}\",\r\n        \"roomTypeId\": \"{{useCaseRoomTypeId}}\",\r\n        \"programId\": \"{{useCaseProgramId}}\",\r\n       \"itineraryId\": \"9323708418\",\r\n    \"customerId\": \"846558855426\",\r\n    \"guaranteeCode\": null,\r\n    \"tripDetails\": {\r\n        \"checkInDate\": \"{{scenarioBasedCheckInDate}}\",\r\n        \"checkOutDate\": \"{{scenarioBasedCheckOutDate}}\",\r\n        \"numAdults\": 1,\r\n        \"numChildren\": 0,\r\n        \"numRooms\": 1\r\n    },\r\n \r\n    \"bookings\": {{useCaseBookings}},\r\n\r\n \"profile\": {\r\n      \"id\": 846558855426,\r\n      \"operaId\": null,\r\n      \"firstName\": \"Uttam\",\r\n      \"lastName\": \"Ghorai\",\r\n      \"phoneNumbers\": null,\r\n      \"emailAddress1\": null,\r\n      \"emailAddress2\": null,\r\n      \"dateOfBirth\": null,\r\n      \"hgpNo\": null,\r\n      \"swrrNo\": null,\r\n      \"addresses\": [\r\n        {\r\n          \"preferred\": false,\r\n          \"street1\": \"100 St\",\r\n          \"street2\": null,\r\n          \"city\": \"Las Vegas\",\r\n          \"state\": \"NV\",\r\n          \"country\": \"US\",\r\n          \"postalCode\": \"89102\",\r\n          \"type\": \"Home\"\r\n        }\r\n      ],\r\n      \"title\": null,\r\n      \"mlifeNo\": 0\r\n    }\r\n\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{env}}/booking/room/v2/reservation/charges",
															"host": [
																"{{env}}"
															],
															"path": [
																"booking",
																"room",
																"v2",
																"reservation",
																"charges"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Reservation V2 - Invalid Room Type",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"RBS_ACRS_Integration | Negative Test case 03 : Create Transient Reservation with invalid room \", function () {\r",
																	"    pm.response.to.have.status(400);\r",
																	"  pm.response.to.have.header(\"Content-Type\");\r",
																	"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
																	"\r",
																	"  var jsonData = JSON.parse(pm.response.stream);\r",
																	"  pm.expect(\"Bad Request\").to.equal(pm.response.status);\r",
																	"  pm.expect(null).not.eq(jsonData);\r",
																	"  pm.expect(0).not.equal(jsonData.length);\r",
																	"\r",
																	"  var errorCode = jsonData.error.code;\r",
																	"  var errorMsg = jsonData.error.message;\r",
																	"  pm.expect(errorCode).not.eq(null);\r",
																	"  pm.expect(errorMsg).not.eq(null);\r",
																	"  pm.expect(errorCode).eq(\"632-1-114\");\r",
																	"  pm.expect(errorMsg).eq(\"No room type id or invalid room type provided\");\r",
																	"\r",
																	"  jsonRequestData = JSON.parse(postman.getEnvironmentVariable(\"reservationCreateReq\"));\r",
																	"  jsonRequestData.roomTypeId = postman.getEnvironmentVariable(\"useCaseRoomTypeId\")\r",
																	"  postman.setEnvironmentVariable(\"reservationCreateReq\",JSON.stringify(jsonRequestData));\r",
																	"\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"    //Create reservation Request and save in env\r",
																	"    // get response from charges before create saved into env\r",
																	"     jsonData = JSON.parse(postman.getEnvironmentVariable(\"reservationCreateReq\"));\r",
																	"    //set itinerary id\r",
																	"    jsonData.itineraryId=\"1234\";\r",
																	"    jsonData.roomTypeId=postman.getEnvironmentVariable(\"invalidRoomType\");\r",
																	"    //set profile\r",
																	"    jsonData.customerId = postman.getEnvironmentVariable(\"iceNYNYCustomerId\")\r",
																	"    jsonData.profile = JSON.parse(postman.getEnvironmentVariable(\"iceNYNYProfile\"));\r",
																	"    //set billing\r",
																	"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));\r",
																	"    billing[0].amount=jsonData.depositDetails.amount;\r",
																	"    jsonData.billing = billing;\r",
																	"    //set depositPolicy\r",
																	"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));\r",
																	"    jsonData.depositPolicy = depositPolicy;\r",
																	"    // again save to same variable\r",
																	"    postman.setEnvironmentVariable(\"reservationCreateReq\",JSON.stringify(jsonData));"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "x-mgm-source",
																"type": "text",
																"value": "{{source}}"
															},
															{
																"key": "x-mgm-channel",
																"type": "text",
																"value": "{{channel}}"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "{{JWT_Token}}"
															},
															{
																"key": "x-mgm-transaction-id",
																"type": "text",
																"value": "rbs-v2-integration-123"
															},
															{
																"key": "",
																"type": "text",
																"value": ""
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"roomReservation\":{{reservationCreateReq}}\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{env}}/booking/room/v2/reservation",
															"host": [
																"{{env}}"
															],
															"path": [
																"booking",
																"room",
																"v2",
																"reservation"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Reservation V2 - Payment Authorization Failed",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"RBS_ACRS_Integration | Negative Test case 03 : Create Transient Reservation with payment authorization failure \", function () {\r",
																	"    pm.response.to.have.status(400);\r",
																	"  pm.response.to.have.header(\"Content-Type\");\r",
																	"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
																	"\r",
																	"  var jsonData = JSON.parse(pm.response.stream);\r",
																	"  pm.expect(\"Bad Request\").to.equal(pm.response.status);\r",
																	"  pm.expect(null).not.eq(jsonData);\r",
																	"  pm.expect(0).not.equal(jsonData.length);\r",
																	"\r",
																	"  var errorCode = jsonData.error.code;\r",
																	"  var errorMsg = jsonData.error.message;\r",
																	"  pm.expect(errorCode).not.eq(null);\r",
																	"  pm.expect(errorMsg).not.eq(null);\r",
																	"  pm.expect(errorCode).eq(\"632-2-243\");\r",
																	"  pm.expect(errorMsg).eq(\"<_payment_authorization_failed>[ Payment authorization failed ]\");\r",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"    //Create reservation Request and save in env\r",
																	"    // get response from charges before create saved into env\r",
																	"     jsonData = JSON.parse(postman.getEnvironmentVariable(\"reservationCreateReq\"));\r",
																	"    //set itinerary id\r",
																	"    jsonData.itineraryId=\"1234\";\r",
																	"    //set profile\r",
																	"    jsonData.customerId = postman.getEnvironmentVariable(\"iceNYNYCustomerId\")\r",
																	"    jsonData.profile = JSON.parse(postman.getEnvironmentVariable(\"iceNYNYProfile\"));\r",
																	"    //set billing\r",
																	"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));\r",
																	"    billing[0].amount=jsonData.depositDetails.amount;\r",
																	"    billing[0].payment.ccToken=postman.getEnvironmentVariable(\"invalidCCToken\");\r",
																	"    jsonData.billing = billing;\r",
																	"    //set depositPolicy\r",
																	"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));\r",
																	"    jsonData.depositPolicy = depositPolicy;\r",
																	"    // again save to same variable\r",
																	"    postman.setEnvironmentVariable(\"reservationCreateReq\",JSON.stringify(jsonData));"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "x-mgm-source",
																"value": "{{source}}",
																"type": "text"
															},
															{
																"key": "x-mgm-channel",
																"value": "{{channel}}",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "{{JWT_Token}}",
																"type": "text"
															},
															{
																"key": "x-mgm-transaction-id",
																"value": "rbs-v2-integration-123",
																"type": "text"
															},
															{
																"key": "",
																"value": "",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"roomReservation\":{{reservationCreateReq}}\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{env}}/booking/room/v2/reservation",
															"host": [
																"{{env}}"
															],
															"path": [
																"booking",
																"room",
																"v2",
																"reservation"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Reservation V2 - Invalid IATA Code",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"RBS_ACRS_Integration | Negative Test case 03 : Create Transient Reservation with invalid IATA Code \", function () {\r",
																	"    pm.response.to.have.status(400);\r",
																	"  pm.response.to.have.header(\"Content-Type\");\r",
																	"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
																	"\r",
																	"  var jsonData = JSON.parse(pm.response.stream);\r",
																	"  pm.expect(\"Bad Request\").to.equal(pm.response.status);\r",
																	"  pm.expect(null).not.eq(jsonData);\r",
																	"  pm.expect(0).not.equal(jsonData.length);\r",
																	"\r",
																	"  var errorCode = jsonData.error.code;\r",
																	"  var errorMsg = jsonData.error.message;\r",
																	"  pm.expect(errorCode).not.eq(null);\r",
																	"  pm.expect(errorMsg).not.eq(null);\r",
																	"\r",
																	"\r",
																	"  jsonRequestData = JSON.parse(postman.getEnvironmentVariable(\"reservationCreateReq\"));\r",
																	"  jsonRequestData.agentInfo = JSON.parse(postman.getEnvironmentVariable(\"agentInfo\"));\r",
																	"  postman.setEnvironmentVariable(\"reservationCreateReq\",JSON.stringify(jsonRequestData));\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"    //Create reservation Request and save in env\r",
																	"    // get response from charges before create saved into env\r",
																	"     jsonData = JSON.parse(postman.getEnvironmentVariable(\"reservationCreateReq\"));\r",
																	"    //set itinerary id\r",
																	"    jsonData.itineraryId=\"1234\";\r",
																	"    //set profile\r",
																	"    jsonData.customerId = postman.getEnvironmentVariable(\"iceNYNYCustomerId\")\r",
																	"    jsonData.profile = JSON.parse(postman.getEnvironmentVariable(\"iceNYNYProfile\"));\r",
																	"    //set billing\r",
																	"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));\r",
																	"    billing[0].amount=jsonData.depositDetails.amount;\r",
																	"    jsonData.billing = billing;\r",
																	"    //set depositPolicy\r",
																	"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));\r",
																	"    jsonData.depositPolicy = depositPolicy;\r",
																	"    jsonData.agentInfo = JSON.parse(postman.getEnvironmentVariable(\"agentInfo\"));\r",
																	"    jsonData.agentInfo.agentId = postman.getEnvironmentVariable(\"invalidAgentId\");\r",
																	"    // again save to same variable\r",
																	"    postman.setEnvironmentVariable(\"reservationCreateReq\",JSON.stringify(jsonData));"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "x-mgm-source",
																"value": "{{source}}",
																"type": "text"
															},
															{
																"key": "x-mgm-channel",
																"value": "{{channel}}",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "{{JWT_Token}}",
																"type": "text"
															},
															{
																"key": "x-mgm-transaction-id",
																"value": "rbs-v2-integration-123",
																"type": "text"
															},
															{
																"key": "",
																"value": "",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"roomReservation\":{{reservationCreateReq}}\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{env}}/booking/room/v2/reservation",
															"host": [
																"{{env}}"
															],
															"path": [
																"booking",
																"room",
																"v2",
																"reservation"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										}
									]
								},
								{
									"name": "22.Mlife User Transient Rate",
									"item": [
										{
											"name": "Single Availability-Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"22.1 | RBS_ACRS_Integration | ICE-LasVegas-Mlife User Transient Reservation  : Mlife Single Availability with Checkin Date,Â Checkout Date, Property Id and Number of Adults\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.eq(jsonData.ratePlans[0]);\r",
															"  if(jsonData.ratePlans.length){\r",
															"      var ratePlanIndex =0;\r",
															"      \r",
															"    var itemizedList = jsonData.ratePlans[ratePlanIndex].rooms[0].price.itemized\r",
															"  pm.expect(0).not.equal(itemizedList.length);\r",
															"  //save booking object\r",
															"  var bookings = [];\r",
															"    for (var i = 0; i < itemizedList.length; i++) {\r",
															"        var itemized = itemizedList[i];\r",
															"        var booking = {};\r",
															"        booking.date = itemized.date;\r",
															"        booking.price = itemized.basePrice;\r",
															"        booking.programId =itemized.programId; \r",
															"        booking.overridePrice= -1;\r",
															"        bookings[i] = booking;\r",
															"    }\r",
															"   \r",
															"   postman.setEnvironmentVariable(\"useCaseRoomTypeId\",jsonData.ratePlans[ratePlanIndex].rooms[0].roomTypeId);\r",
															"   postman.setEnvironmentVariable(\"useCaseProgramId\",jsonData.ratePlans[ratePlanIndex].programId);\r",
															"     postman.setEnvironmentVariable(\"useCaseBookings\",JSON.stringify(bookings));  \r",
															"  }else{\r",
															"       pm.expect(1).not.equal(jsonData.ratePlans.length);\r",
															"  }\r",
															" \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{JWT_Token}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v3/availability/trip?checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{scenarioBasedCheckOutDate}}&propertyId={{propertyId}}&numAdults=2&mlifeNumber=100041176",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"availability",
														"trip"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{scenarioBasedCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{propertyId}}"
														},
														{
															"key": "numAdults",
															"value": "2"
														},
														{
															"key": "mlifeNumber",
															"value": "RPCD-v-ADVP-d-PROP-v-MV021",
															"disabled": true
														},
														{
															"key": "mlifeNumber",
															"value": "100041176"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Calculate Room Charges - Before Create Reservation Suiccess Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"22.2 | RBS_ACRS_Integration | ICE-LasVegas-Mlife User Transient Reservation : Before Mlife Reservation with transient rate , Profile, Booking, TripDetails, Billing and AgentInfo\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    //save response to  reservation Request in env for create reservation\r",
															"    pm.environment.set(\"reservationCreateReqMlife\",JSON.stringify(jsonData));\r",
															"\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\r\n        \"propertyId\": \"{{propertyId}}\",\r\n        \"roomTypeId\": \"{{useCaseRoomTypeId}}\",\r\n        \"programId\": \"{{useCaseProgramId}}\",\r\n       \"itineraryId\": \"9323708418\",\r\n    \"customerId\": \"846558855426\",\r\n    \"guaranteeCode\": null,\r\n    \"tripDetails\": {\r\n        \"checkInDate\": \"{{scenarioBasedCheckInDate}}\",\r\n        \"checkOutDate\": \"{{scenarioBasedCheckOutDate}}\",\r\n        \"numAdults\": 1,\r\n        \"numChildren\": 0,\r\n        \"numRooms\": 1\r\n    },\r\n \r\n    \"bookings\": {{useCaseBookings}},\r\n\r\n \"profile\": {\r\n      \"id\": 846558855426,\r\n      \"operaId\": null,\r\n      \"firstName\": \"Dale\",\r\n      \"lastName\": \"Steyn\",\r\n      \"phoneNumbers\": null,\r\n      \"emailAddress1\": null,\r\n      \"emailAddress2\": null,\r\n      \"dateOfBirth\": null,\r\n      \"hgpNo\": null,\r\n      \"swrrNo\": null,\r\n      \"addresses\": [\r\n        {\r\n          \"preferred\": false,\r\n          \"street1\": \"100 St\",\r\n          \"street2\": null,\r\n          \"city\": \"Las Vegas\",\r\n          \"state\": \"NV\",\r\n          \"country\": \"US\",\r\n          \"postalCode\": \"89102\",\r\n          \"type\": \"Home\"\r\n        }\r\n      ],\r\n      \"title\": null,\r\n      \"mlifeNo\": {{NYNYMlifeNo}}\r\n    }\r\n\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Reservation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"22.3 | RBS_ACRS_Integration | ICE-LasVegas-Mlife User Transient Reservation :  Mlife Reservation with transient rate , Profile, Booking, TripDetails, Billing and AgentInfo \", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.environment.set(\"variable_key\", \"variable_value\");  \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.booked);    \r",
															"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
															"    var reservationId = jsonData.roomReservation.id;\r",
															"    pm.expect(confirmationNumber).not.eq(null);\r",
															"    pm.expect(itineraryId).not.eq(null);\r",
															"    pm.expect(reservationId).not.eq(null);\r",
															"    postman.setEnvironmentVariable('useCaseConfirmationNumber',  confirmationNumber);\r",
															"     // save response in env for premodify charges\r",
															"     pm.environment.set(\"reservationCreateReqMlife\",JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"    //Create reservation Request and save in env\r",
															"    // get response from charges before create saved into env\r",
															"     jsonData = JSON.parse(pm.environment.get(\"reservationCreateReqMlife\"));\r",
															"    //set itinerary id\r",
															"    jsonData.itineraryId=\"1234\";\r",
															"    //set profile\r",
															"    jsonData.customerId = postman.getEnvironmentVariable(\"iceNYNYCustomerId\")\r",
															"    jsonData.profile = JSON.parse(postman.getEnvironmentVariable(\"iceNYNYProfile\"));\r",
															"    jsonData.profile.mlifeNo = postman.getEnvironmentVariable(\"NYNYMlifeNo\");\r",
															"    //set billing\r",
															"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));\r",
															"    billing[0].payment.amount=jsonData.depositDetails.amount;\r",
															"    jsonData.billing = billing;\r",
															"    //set depositPolicy\r",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));\r",
															"    jsonData.depositPolicy = depositPolicy;\r",
															"    // again save to same variable\r",
															"    pm.environment.set(\"reservationCreateReqMlife\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-123"
													},
													{
														"key": "",
														"type": "text",
														"value": ""
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationCreateReqMlife}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Charges Before Modification-Modify room",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"22.4 | RBS_ACRS_Integration | ICE-LasVegas-Mlife User Transient Reservation : PreModify Reservation with mlife Profile, Booking, TripDetails, Billing  and modified room\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    // save response in env for premodify charges\r",
															"     postman.setEnvironmentVariable(\"reservationModifyReq\",JSON.stringify(jsonData));\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var moment = require('moment');\r",
															"\r",
															"preModifyCheckInDate = moment(pm.variables.get(\"checkInDate\")).format('YYYY-MM-DD');\r",
															"preModifyCheckOutDate = moment(pm.variables.get(\"checkOutDate\")).format('YYYY-MM-DD');\r",
															"\r",
															"postman.setEnvironmentVariable('preModifyCheckInDate',  preModifyCheckInDate);\r",
															"postman.setEnvironmentVariable('preModifyCheckOutDate',  preModifyCheckOutDate);\r",
															"//get existing reservation\r",
															" jsonData = JSON.parse(pm.environment.get(\"reservationCreateReqMlife\"));\r",
															" //Modify RoomId\r",
															" jsonData.roomTypeId=postman.getEnvironmentVariable(\"scenarioBasedModifyRoomId\");\r",
															" \r",
															"pm.environment.set(\"reservationCreateReqMlife\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{reservationCreateReqMlife}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"22.5 | RBS_ACRS_Integration | ICE-LasVegas-Mlife User Transient Reservation : Find reservation with cnfNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation?confirmationNumber={{useCaseConfirmationNumber}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{useCaseConfirmationNumber}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Reservation Profile Mlife Update - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"22.6 | RBS_ACRS_Integration | ICE-LasVegas-Mlife User Transient Reservation : Reservation Mlife Profile Update\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    \r",
															"    var firstName = jsonData.roomReservation.profile.firstName;\r",
															"    var lastName = jsonData.roomReservation.profile.lastName;\r",
															"    var email = jsonData.roomReservation.profile.emailAddress1;\r",
															"    var mlifeNo = jsonData.roomReservation.profile.mlifeNo;\r",
															"\r",
															"    pm.expect(firstName).not.eq(null);\r",
															"    pm.expect(lastName).not.eq(null);\r",
															"    pm.expect(email).not.eq(null);\r",
															"    pm.expect(mlifeNo).not.eq(null);\r",
															"   NYNYMlifeNo = JSON.parse(postman.getEnvironmentVariable(\"NYNYMlifeNo\"));\r",
															"    pm.expect(firstName).eq(\"Lakshmi\");\r",
															"    pm.expect(lastName).eq(\"Test\");\r",
															"    pm.expect(email).eq(\"tlntest3@yopmail.com\");\r",
															"    pm.expect(mlifeNo).eq(NYNYMlifeNo);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"itineraryId\": \"1234\",\r\n\t\"propertyId\": \"{{propertyId}}\",\r\n\t\"confirmationNumber\": \"{{useCaseConfirmationNumber}}\",\r\n\t\"userProfile\": {\r\n        \"id\": 923600551937,\r\n        \"mlifeNo\": {{NYNYMlifeNo}},\r\n        \"title\": \"MR\",\r\n        \"dateOfBirth\": \"1985-01-01\",\r\n        \"firstName\": \"Lakshmi\",\r\n        \"lastName\": \"Test\",\r\n        \"emailAddress1\": \"tlntest3@yopmail.com\",\r\n        \"emailAddress2\": \"tlntest3@yopmail.com\",\r\n        \"phoneNumbers\": [\r\n            {\r\n                \"type\": \"Home\",\r\n                \"number\": \"9611877000\"\r\n            }\r\n        ],\r\n        \"addresses\": [\r\n            {\r\n                \"type\": \"Home\",\r\n                \"preferred\": true,\r\n                \"street1\": \"234 W Main St\",\r\n                \"street2\": \"Unit 415\",\r\n                \"city\": \"Las Vegas\",\r\n                \"state\": \"NV\",\r\n                \"country\": \"US\",\r\n                \"postalCode\": \"12345\"\r\n            }\r\n        ]\r\n    }\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/profile",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"profile"
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Reservation - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"22.7 | RBS_ACRS_Integration | ICE-LasVegas-Mlife User Transient Reservation : Cancel Reservation by confirmationNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.variables.get(\"useCaseConfirmationNumber\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"confirmationNumber\": \"{{useCaseConfirmationNumber}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v3/reservation/cancel",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"reservation",
														"cancel"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "23.Mlife User PO Rate",
									"item": [
										{
											"name": "Single Availability-PO",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"23.1 | RBS_ACRS_Integration | ICE-LasVegas-Mlife User PO Rate : Single Availability with Mlife and PO flag\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.eq(jsonData.ratePlans[0]);\r",
															"  if(jsonData.ratePlans.length){\r",
															"      var ratePlanIndex =0;\r",
															"      \r",
															"    var itemizedList = jsonData.ratePlans[ratePlanIndex].rooms[0].price.itemized\r",
															"  pm.expect(0).not.equal(itemizedList.length);\r",
															"  //save booking object\r",
															"  var bookings = [];\r",
															"    for (var i = 0; i < itemizedList.length; i++) {\r",
															"        var itemized = itemizedList[i];\r",
															"        var booking = {};\r",
															"        booking.date = itemized.date;\r",
															"        booking.price = itemized.basePrice;\r",
															"        booking.programId =itemized.programId; \r",
															"        booking.overridePrice= -1;\r",
															"        bookings[i] = booking;\r",
															"    }\r",
															"   \r",
															"   postman.setEnvironmentVariable(\"useCaseRoomTypeId\",jsonData.ratePlans[ratePlanIndex].rooms[0].roomTypeId);\r",
															"   postman.setEnvironmentVariable(\"useCaseProgramId\",jsonData.ratePlans[ratePlanIndex].programId);\r",
															"     //postman.setEnvironmentVariable(\"useCaseBookings\",JSON.stringify(bookings)); \r",
															"     pm.environment.set(\"useCaseBookingsPO\",JSON.stringify(bookings));\r",
															"\r",
															"  }else{\r",
															"       pm.expect(1).not.equal(jsonData.ratePlans.length);\r",
															"  }\r",
															" \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v3/availability/trip?checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{scenarioBasedCheckOutDate}}&propertyId={{propertyId}}&numAdults=2&perpetualPricing=true&mlifeNumber={{NYNYMlifeNo}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"availability",
														"trip"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{scenarioBasedCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{propertyId}}"
														},
														{
															"key": "numAdults",
															"value": "2"
														},
														{
															"key": "programId",
															"value": "RPCD-v-ADVP-d-PROP-v-MV021",
															"disabled": true
														},
														{
															"key": "perpetualPricing",
															"value": "true"
														},
														{
															"key": "mlifeNumber",
															"value": "{{NYNYMlifeNo}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Calculate Room Charges - Before Create with PO program",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"23.2 | RBS_ACRS_Integration | ICE-LasVegas-Mlife User PO Rate : Before Mlife Reservation with PO rate , Profile, Booking, TripDetails, Billing \", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    //save response to  reservation Request in env for create reservation\r",
															"     pm.environment.set(\"reservationCreateReqMlifePO\",JSON.stringify(jsonData));\r",
															"\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"propertyId\": \"{{propertyId}}\",\r\n    \"roomTypeId\": \"{{useCaseRoomTypeId}}\",\r\n    \"programId\": \"{{useCaseProgramId}}\",\r\n    \"itineraryId\": \"9323708418\",\r\n    \"customerId\": \"846558855426\",\r\n    \"guaranteeCode\": null,\r\n    \"tripDetails\": {\r\n        \"checkInDate\": \"{{scenarioBasedCheckInDate}}\",\r\n        \"checkOutDate\": \"{{scenarioBasedCheckOutDate}}\",\r\n        \"numAdults\": 1,\r\n        \"numChildren\": 0,\r\n        \"numRooms\": 1\r\n    },\r\n    \"bookings\": {{useCaseBookingsPO}},\r\n    \"profile\": {\r\n        \"id\": 846558855426,\r\n        \"operaId\": null,\r\n        \"firstName\": \"Dale\",\r\n        \"lastName\": \"Steyn\",\r\n        \"phoneNumbers\": null,\r\n        \"emailAddress1\": null,\r\n        \"emailAddress2\": null,\r\n        \"dateOfBirth\": null,\r\n        \"hgpNo\": null,\r\n        \"swrrNo\": null,\r\n        \"addresses\": [\r\n            {\r\n                \"preferred\": false,\r\n                \"street1\": \"100 St\",\r\n                \"street2\": null,\r\n                \"city\": \"Las Vegas\",\r\n                \"state\": \"NV\",\r\n                \"country\": \"US\",\r\n                \"postalCode\": \"89102\",\r\n                \"type\": \"Home\"\r\n            }\r\n        ],\r\n        \"title\": null,\r\n        \"mlifeNo\": {{NYNYMlifeNo}}\r\n    },\r\n    \"perpetualPricing\": true\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Reservation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"23.3 | RBS_ACRS_Integration | ICE-LasVegas-Mlife User PO Rate :  Mlife Reservation with transient rate , Profile, Booking, TripDetails, Billing , Mlife and PO rate \", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.environment.set(\"variable_key\", \"variable_value\");  \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.booked);    \r",
															"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
															"    var reservationId = jsonData.roomReservation.id;\r",
															"    pm.expect(confirmationNumber).not.eq(null);\r",
															"    pm.expect(itineraryId).not.eq(null);\r",
															"    pm.expect(reservationId).not.eq(null);\r",
															"    postman.setEnvironmentVariable('useCaseConfirmationNumber',  confirmationNumber);\r",
															"     // save response in env for premodify charges\r",
															"     pm.environment.set(\"reservationModifyReqPO\",JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"    //Create reservation Request and save in env\r",
															"    // get response from charges before create saved into env\r",
															"     jsonData = JSON.parse(pm.environment.get(\"reservationCreateReqMlifePO\"));\r",
															"    //set itinerary id\r",
															"    jsonData.itineraryId=\"1234\";\r",
															"        //set profile\r",
															"    jsonData.customerId = postman.getEnvironmentVariable(\"iceNYNYCustomerId\")\r",
															"    jsonData.profile = JSON.parse(postman.getEnvironmentVariable(\"iceNYNYProfile\"));\r",
															"    jsonData.profile.mlifeNo = postman.getEnvironmentVariable(\"NYNYMlifeNo\");\r",
															"    //set billing\r",
															"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));\r",
															"    billing[0].payment.amount=jsonData.depositDetails.amount;\r",
															"    jsonData.billing = billing;\r",
															"    //set depositPolicy\r",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));\r",
															"    jsonData.depositPolicy = depositPolicy;\r",
															"    // again save to same variable\r",
															"    pm.environment.set(\"reservationCreateReqMlifePO\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-123"
													},
													{
														"key": "",
														"type": "text",
														"value": ""
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationCreateReqMlifePO}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Charges Before Modification-Modify room",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"23.4 | RBS_ACRS_Integration | ICE-LasVegas-Mlife User PO Rate : PreModify Reservation with mlife Profile, Booking, TripDetails, Billing  and modified room\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    // save response in env for premodify charges\r",
															"     pm.environment.set(\"reservationModifyReqPO\",JSON.stringify(jsonData));\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var moment = require('moment');\r",
															"\r",
															"preModifyCheckInDate = moment(pm.variables.get(\"checkInDate\")).format('YYYY-MM-DD');\r",
															"preModifyCheckOutDate = moment(pm.variables.get(\"checkOutDate\")).format('YYYY-MM-DD');\r",
															"\r",
															"postman.setEnvironmentVariable('preModifyCheckInDate',  preModifyCheckInDate);\r",
															"postman.setEnvironmentVariable('preModifyCheckOutDate',  preModifyCheckOutDate);\r",
															"//get existing reservation\r",
															" jsonData = JSON.parse(pm.environment.get(\"reservationModifyReqPO\"));\r",
															" //Modify RoomId\r",
															" jsonData.roomTypeId=postman.getEnvironmentVariable(\"scenarioBasedModifyRoomId\");\r",
															" \r",
															"pm.environment.set(\"reservationModifyReqPO\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{reservationModifyReqPO}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"23.5 | RBS_ACRS_Integration | ICE-LasVegas-Mlife User PO Rate : Find reservation with cnfNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation?confirmationNumber={{useCaseConfirmationNumber}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{useCaseConfirmationNumber}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Modify Reservation- Modify room",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"23.6 | RBS_ACRS_Integration | ICE-LasVegas-Mlife User PO Rate : Modify Reservation with mlife Profile, Booking, TripDetails, Billing  and modified room\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    postman.setEnvironmentVariable(\"useCaseConfirmationNumber\",jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"",
															"    //Modify reservation Request and save in env",
															"    // get response from charges before create saved into env",
															"     jsonData = JSON.parse(pm.environment.get(\"reservationModifyReqPO\"));",
															"    //set itinerary id",
															"    jsonData.itineraryId=\"1234\";",
															"    jsonData.state = \"Booked\",",
															"    //set billing",
															"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));",
															"    billing[0].payment.amount=jsonData.depositDetails.amount;",
															"    jsonData.billing = billing;",
															"    //set depositPolicy",
															"    depositPolicy = JSON.parse(postman.getEnvironmentVariable(\"depositPolicy\"));",
															"    jsonData.depositPolicy = depositPolicy;",
															"    // again save to same variable",
															"    pm.environment.set(\"reservationModifyReqPO\",JSON.stringify(jsonData));",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationModifyReqPO}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v2/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v2",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Reservation - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"23.7 | RBS_ACRS_Integration | ICE-LasVegas-Mlife User PO Rate : Cancel Reservation by confirmationNumber\", function () {\r",
															"    if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.variables.get(\"useCaseConfirmationNumber\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"type": "text",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"type": "text",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"type": "text",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"confirmationNumber\": \"{{useCaseConfirmationNumber}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/booking/room/v3/reservation/cancel",
													"host": [
														"{{env}}"
													],
													"path": [
														"booking",
														"room",
														"v3",
														"reservation",
														"cancel"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"  // set the variables for the flow",
									"",
									"    postman.setEnvironmentVariable(\"propertyId\",postman.getEnvironmentVariable(\"NYNY_PropertyId\"));",
									"",
									"    postman.setEnvironmentVariable(\"JWT_Token\",postman.getEnvironmentVariable(\"ICE_JWT_Token\"));",
									"",
									"    postman.setEnvironmentVariable(\"channel\",postman.getEnvironmentVariable(\"channel-ice\"));",
									"",
									"    postman.setEnvironmentVariable(\"source\",postman.getEnvironmentVariable(\"source-ice\"));",
									"        //set spl req, alert, traces",
									"     postman.setEnvironmentVariable(\"roomfea\",postman.getEnvironmentVariable(\"NYNYROOMFEA\"));",
									"      postman.setEnvironmentVariable(\"splreq\",postman.getEnvironmentVariable(\"NYNYSPLREQ\"));",
									"       postman.setEnvironmentVariable(\"alerts\",postman.getEnvironmentVariable(\"NYNYalerts\"));",
									"       postman.setEnvironmentVariable(\"traces\",postman.getEnvironmentVariable(\"NYNYtraces\"));"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"const moment = require('moment')",
					"// dates",
					"pm.environment.set(\"todayMinus3\", moment().subtract(3, 'day').format(\"YYYY-MM-DD\")) //pastDate",
					"pm.environment.set(\"today\", moment().format(\"YYYY-MM-DD\")) //presentDate",
					"pm.environment.set(\"todayPlus2\", moment().add(2, 'day').format(\"YYYY-MM-DD\")) //futureDatePlus2",
					"pm.environment.set(\"todayPlus5\", moment().add(5, 'day').format(\"YYYY-MM-DD\")) //futureDatePlus5",
					"pm.environment.set(\"todayPlus30\", moment().add(30, 'day').format(\"YYYY-MM-DD\"))//futureDatePlus30",
					"pm.environment.set(\"todayPlus42\", moment().add(42, 'day').format(\"YYYY-MM-DD\"))//futureDatePlus42",
					"pm.environment.set(\"todayPlus45\", moment().add(45, 'day').format(\"YYYY-MM-DD\"))//futureDatePlus45",
					"pm.environment.set(\"todayPlus46\", moment().add(46, 'day').format(\"YYYY-MM-DD\"))//futureDatePlus46",
					"pm.environment.set(\"todayPlus47\", moment().add(47, 'day').format(\"YYYY-MM-DD\"))//futureDatePlus47",
					"pm.environment.set(\"todayPlus48\", moment().add(48, 'day').format(\"YYYY-MM-DD\"))",
					"pm.environment.set(\"scenarioBasedCheckInDate\", moment().add(30, 'day').format(\"YYYY-MM-DD\"))//futureDatePlus30",
					"pm.environment.set(\"scenarioBasedCheckOutDate\", moment().add(32, 'day').format(\"YYYY-MM-DD\"))//futureDatePlus30",
					"",
					"",
					"pm.environment.set(\"numAdults\", 2)",
					"pm.environment.set(\"numChildren\", 1)"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}