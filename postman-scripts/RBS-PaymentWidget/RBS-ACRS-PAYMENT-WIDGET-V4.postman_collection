{
	"info": {
		"_postman_id": "2c6ff00b-9a2c-4ac1-b681-29e461b61171",
		"name": "RBS-ACRS-PAYMENT-WIDGET-V4",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30552355"
	},
	"item": [
		{
			"name": "ICE",
			"item": [
				{
					"name": "ICE_Token",
					"item": [
						{
							"name": "OKTA_Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"\r",
											"/*Construct Random Dates [for availability] from 60 days to 360*/\r",
											"start = new Date(moment().add(20, 'days'));\r",
											"end = new Date(moment().add(30, 'days'));\r",
											"\r",
											"options = { day: '2-digit', month: '2-digit', year: 'numeric' };\r",
											"//setting options to overcome single digit for dates/month.\r",
											"\r",
											"checkInDate = randomDate(start, end).toLocaleDateString(\"en-US\", options);\r",
											"checkOutDate = moment(checkInDate).add(2, 'days').format('MM/DD/YYYY');\r",
											"\r",
											"pm.globals.set('checkInDate',  checkInDate);\r",
											"pm.globals.set('checkOutDate',  checkOutDate);\r",
											"\r",
											"pm.globals.set(\"todayMinus3\", moment().subtract(3, 'day').format(\"YYYY-MM-DD\")) //pastDate\r",
											"pm.globals.set(\"today\", moment().format(\"YYYY-MM-DD\")) //presentDate\r",
											"pm.globals.set(\"todayPlus2\", moment().add(2, 'day').format(\"YYYY-MM-DD\")) //futureDatePlus2\r",
											"pm.globals.set(\"todayPlus30\", moment().add(30, 'day').format(\"YYYY-MM-DD\"))//futureDatePlus30\r",
											"pm.globals.set(\"todayPlus42\", moment().add(42, 'day').format(\"YYYY-MM-DD\"))//futureDatePlus42\r",
											"pm.globals.set(\"todayPlus46\", moment().add(46, 'day').format(\"YYYY-MM-DD\"))//futureDatePlus46\r",
											"pm.globals.set(\"todayPlus47\", moment().add(47, 'day').format(\"YYYY-MM-DD\"))//futureDatePlus47\r",
											"pm.globals.set(\"todayPlus48\", moment().add(48, 'day').format(\"YYYY-MM-DD\"))\r",
											"\r",
											"pm.globals.set('invalidCheckInDate',   moment().add(-1, 'days').format('MM/DD/YYYY'));\r",
											"pm.globals.set('invalidCheckOutDate',  moment().add(-2, 'days').format('MM/DD/YYYY'));\r",
											"\r",
											"checkInDate_v2 = randomDate(start, end).toLocaleDateString(\"fr-CA\", options);\r",
											"checkInDate_v2_format = moment(checkInDate_v2).format('YYYY-MM-DD');\r",
											"checkOutDate_v2 = moment(checkInDate_v2_format).add(2, 'days').format('YYYY-MM-DD');\r",
											"\r",
											"pm.globals.set('checkInDate_v2',  checkInDate_v2_format);\r",
											"pm.globals.set('checkOutDate_v2',  checkOutDate_v2);\r",
											"\r",
											"pm.globals.set('invalidCheckInDate_v2',   moment().add(-1, 'days').format('YYYY-MM-DD'));\r",
											"pm.globals.set('invalidCheckOutDate_v2',  moment().add(-2, 'days').format('YYYY-MM-DD'));\r",
											"\r",
											"pm.globals.set(\"scenarioBasedCheckInDate\", checkInDate_v2_format);\r",
											"pm.globals.set(\"scenarioBasedCheckOutDate\", checkOutDate_v2);\r",
											"\r",
											"pm.globals.set(\"scenarioRIBasedCheckInDate\", checkInDate_v2_format);\r",
											"pm.globals.set(\"scenarioRIBasedCheckOutDate\", checkOutDate_v2);\r",
											"\r",
											"pm.globals.set(\"noAvailCheckInDate\", moment().add(60, 'days').format('YYYY-MM-DD'));\r",
											"pm.globals.set(\"noAvailCheckOutDate\", moment().add(62, 'days').format('YYYY-MM-DD'));\r",
											"\r",
											"pm.globals.set(\"minMaxLosCheckOutDate\", moment().add(60, 'days').format('YYYY-MM-DD'));\r",
											"\r",
											"function randomDate(start, end) {\r",
											"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()))\r",
											"}\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"JWT auth | Status code is 200 with valid response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.expect(jsonData).to.have.property(\"token_type\");\r",
											"    pm.expect(jsonData).to.have.property(\"access_token\");\r",
											"});\r",
											"\r",
											"pm.globals.set(\"ICE_JWT_Token\", \"Bearer \" + pm.response.json().access_token);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{{clientId}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{clientSecret}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "{{grantType}}",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "{{scope}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{identity_endpoint}}",
									"host": [
										"{{identity_endpoint}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Transient",
					"item": [
						{
							"name": "Single",
							"item": [
								{
									"name": "create",
									"item": [
										{
											"name": "Single Availability-V3-Success",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"//resetting values\r",
															"pm.globals.set(\"transientRoomTypeId\",null);\r",
															"pm.globals.set(\"transientProgramId\",null);\r",
															"pm.globals.set(\"paymentWidgetTransientBookings\",null);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment_Widget_Transient_Create | ice-Transient User Successs : Single Availability with Checkin Date,Â Checkout Date, Property Id and Number of Adults\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.ratePlans[0]);\r",
															"\r",
															"    var ratePlanIndex = 0;\r",
															"    var itemizedList = jsonData.ratePlans[ratePlanIndex].rooms[0].price.itemized;\r",
															"    pm.expect(0).not.equal(itemizedList.length);\r",
															"\r",
															"    //save booking object\r",
															"    var bookings = [];\r",
															"    for (var i = 0; i < itemizedList.length; i++) {\r",
															"        var itemized = itemizedList[i];\r",
															"        var booking = {};\r",
															"        booking.date = itemized.date;\r",
															"        booking.price = itemized.basePrice;\r",
															"        booking.programId = itemized.programId;\r",
															"        booking.overridePrice = -1;\r",
															"        pm.expect(null).not.equal(itemized.isComp);\r",
															"        booking.isComp = itemized.isComp;\r",
															"        bookings[i] = booking;\r",
															"    }\r",
															"      \r",
															"      pm.globals.set(\"transientRoomTypeId\",jsonData.ratePlans[ratePlanIndex].rooms[0].roomTypeId);\r",
															"      pm.globals.set(\"transientProgramId\",jsonData.ratePlans[ratePlanIndex].programId);\r",
															"      pm.globals.set(\"paymentWidgetTransientBookings\",JSON.stringify(bookings)); \r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration{{$timestamp}}"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": []
												},
												"url": {
													"raw": "{{env}}/v3/availability/trip?checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{scenarioBasedCheckOutDate}}&propertyId={{transientPropertyId}}&numAdults=2",
													"host": [
														"{{env}}"
													],
													"path": [
														"v3",
														"availability",
														"trip"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{scenarioBasedCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{transientPropertyId}}"
														},
														{
															"key": "numAdults",
															"value": "2"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Calculate Room Charges - Before Create Reservation -V2- Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment_Widget_Transient_Create | ice-Transient User Success : Charges Before Reservation with Profile, Booking, TripDetails\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"\r",
															"    //save response to  reservation Request in global for create reservation\r",
															"     pm.globals.set(\"createTransientReservationReq\",JSON.stringify(jsonData));\r",
															"\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"//resetting values\r",
															"pm.globals.set(\"transientFirstName\",null);\r",
															"pm.globals.set(\"transientLastName\",null);\r",
															"pm.globals.set(\"transientCustomerId\",null)\r",
															"pm.globals.set(\"createTransientReservationReq\",null);\r",
															"\r",
															"// setting transient User profile from request in global variable\r",
															"var transientProfile = JSON.parse(pm.environment.get(\"transientCustomerProfile\"));\r",
															"pm.globals.set(\"transientFirstName\", transientProfile.firstName);\r",
															"pm.globals.set(\"transientLastName\", transientProfile.lastName);\r",
															"pm.globals.set(\"transientCustomerId\", transientProfile.id);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"propertyId\": \"{{transientPropertyId}}\",\r\n    \"roomTypeId\": \"{{transientRoomTypeId}}\",\r\n    \"programId\": \"{{transientProgramId}}\",\r\n    \"itineraryId\": \"9323708418\",\r\n    \"customerId\": \"846558855426\",\r\n    \"guaranteeCode\": null,\r\n    \"tripDetails\": {\r\n        \"checkInDate\": \"{{scenarioBasedCheckInDate}}\",\r\n        \"checkOutDate\": \"{{scenarioBasedCheckOutDate}}\",\r\n        \"numAdults\": 1,\r\n        \"numChildren\": 0,\r\n        \"numRooms\": 1\r\n    },\r\n    \"bookings\": {{paymentWidgetTransientBookings}},\r\n    \"profile\": {{transientCustomerProfile}}\r\n    }",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateReservation-V4-Success",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"//Create reservation Request and save in global\r",
															"// get response from charges before create saved into global\r",
															"jsonData = JSON.parse(pm.globals.get(\"createTransientReservationReq\"));\r",
															"//set itinerary id\r",
															"jsonData.itineraryId=\"1234\";\r",
															"//set billing\r",
															"billing = JSON.parse(pm.environment.get(\"SingleVISACard\"));\r",
															"billing[0].payment.amount=jsonData.depositDetails.amount;\r",
															"billing[0].payment.authId = \"abcd\";\r",
															"jsonData.billing = billing;\r",
															"//set profile for transient User\r",
															"jsonData.customerId = pm.globals.get(\"transientCustomerId\");\r",
															"jsonData.profile = JSON.parse(pm.environment.get(\"transientCustomerProfile\"));\r",
															"// again save to same variable\r",
															"pm.globals.set(\"createTransientReservationReq\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment_Widget_Transient_Create | ice-Transient User Success : Transient Create Reservation with Profile, Booking, TripDetails\", function () {\r",
															"    pm.globals.set(\"variable_key\", \"variable_value\");  \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"   \r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.booked);\r",
															"        \r",
															"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
															"    var reservationId = jsonData.roomReservation.id;\r",
															"    pm.expect(confirmationNumber).not.eq(null);\r",
															"    pm.expect(itineraryId).not.eq(null);\r",
															"    pm.expect(reservationId).not.eq(null);\r",
															"    pm.globals.set(\"transientConfirmationNumber\", confirmationNumber);\r",
															"\r",
															"    pm.globals.set(\"createTransientReservationReq\",JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"roomReservation\":{{createTransientReservationReq}}\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "FindReservation-V2-success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment_Widget_Transient | ice-Transient User Success : Transient Find reservation with cnfNumber\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.payments)\r",
															" var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"  pm.globals.set(\"reservationModifyTransientReq\", JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});;"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{transientConfirmationNumber}}&firstName={{transientFirstName}}&lastName={{transientLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{transientConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{transientFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{transientLastName}}"
														}
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"packages": {},
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"packages": {},
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "modify",
									"item": [
										{
											"name": "Single Availability V3-Adding new dates",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var moment = require('moment');\r",
															"previousCheckOutDate = moment(pm.variables.get(\"scenarioBasedCheckOutDate\")).format('YYYY-MM-DD');\r",
															"modifiedCheckOutDate = moment(previousCheckOutDate).add(2, 'days').format('YYYY-MM-DD');\r",
															"pm.globals.set(\"modifiedCheckOutDate\",modifiedCheckOutDate);\r",
															" //resetting values\r",
															"pm.globals.set(\"paymentWidgetModifiedBookings\",null);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment_Widget_Transient_Modify | ice-Transient User Successs : Single Availability with adding new dates\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.ratePlans[0]);\r",
															"\r",
															"    var ratePlanIndex = 0;\r",
															"    var itemizedList = jsonData.ratePlans[ratePlanIndex].rooms[0].price.itemized;\r",
															"    pm.expect(0).not.equal(itemizedList.length);\r",
															"\r",
															"    //save booking object\r",
															"    var bookings = [];\r",
															"    for (var i = 0; i < itemizedList.length; i++) {\r",
															"        var itemized = itemizedList[i];\r",
															"        var booking = {};\r",
															"        booking.date = itemized.date;\r",
															"        booking.price = itemized.basePrice;\r",
															"        booking.programId = itemized.programId;\r",
															"        booking.overridePrice = -1;\r",
															"        pm.expect(null).not.equal(itemized.isComp);\r",
															"        booking.isComp = itemized.isComp;\r",
															"        bookings[i] = booking;\r",
															"    }\r",
															"      \r",
															"     pm.globals.set(\"paymentWidgetModifiedBookings\",JSON.stringify(bookings)); \r",
															" \r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"url": {
													"raw": "{{env}}/v3/availability/trip?checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{modifiedCheckOutDate}}&propertyId={{transientPropertyId}}&numAdults=2",
													"host": [
														"{{env}}"
													],
													"path": [
														"v3",
														"availability",
														"trip"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{modifiedCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{transientPropertyId}}"
														},
														{
															"key": "numAdults",
															"value": "2"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Charges-V2-Before Modifying dates",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// get create response req from global\r",
															"var jsonData = JSON.parse(pm.globals.get(\"reservationModifyTransientReq\"));\r",
															"\r",
															"//set billing as empty\r",
															"jsonData.billing = null;\r",
															"//set payments as null\r",
															"jsonData.payments = null;\r",
															"\r",
															"var moment = require('moment');\r",
															"previousCheckOutDate = moment(pm.globals.get(\"scenarioBasedCheckOutDate\")).format('YYYY-MM-DD');\r",
															"modifiedCheckOutDate = moment(previousCheckOutDate).add(2, 'days').format('YYYY-MM-DD');\r",
															"\r",
															" //Modify Checkout date +2\r",
															" jsonData.tripDetails.checkOutDate = modifiedCheckOutDate;\r",
															"  // add booking obj\r",
															"   jsonData.bookings = JSON.parse(pm.globals.get(\"paymentWidgetModifiedBookings\"));\r",
															"//set customerId for transient User\r",
															"jsonData.customerId = pm.globals.get(\"transientCustomerId\");\r",
															"\r",
															"// save modify response req in global\r",
															"pm.globals.set(\"reservationModifyTransientReq\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment_Widget_Transient | ice-Transient User Success : PreModify transient Reservation with adding new dates\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    \r",
															"    //save response to modify Transient req in global\r",
															"    pm.globals.set(\"reservationModifyTransientReq\",JSON.stringify(jsonData));\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{reservationModifyTransientReq}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "ModifyPending-V4-Adding dates",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(pm.globals.get(\"reservationModifyTransientReq\"));\r",
															"// set itinerary id\r",
															"jsonData.itineraryId=\"1234\";\r",
															"jsonData.state = \"Booked\",\r",
															"// set billing as empty\r",
															"jsonData.billing = [];\r",
															"//set customerId for transient User\r",
															"jsonData.customerId = pm.globals.get(\"transientCustomerId\");\r",
															"// save jsondata in modify transient req in global\r",
															"pm.globals.set(\"reservationModifyTransientReq\",JSON.stringify(jsonData));\r",
															"// resetting value of changeInDeposit\r",
															"pm.globals.set(\"changeInDepositModifyTransient\", null);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment_Widget_Transient | ice-Transient User:  Modify | Modify Pending with adding new dates\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation);\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.ratesSummary);\r",
															"    \r",
															"    var changeInDeposit = jsonData.roomReservation.ratesSummary.changeInDeposit;\r",
															"    pm.expect(null).not.equal(changeInDeposit);\r",
															"\r",
															"    // additional deposit usecase\r",
															"    if(changeInDeposit < 0) {\r",
															"        pm.sendRequest(null);\r",
															"        pm.expect.fail(\"changeInDeposit should be positive in case of no refund\");\r",
															"    }\r",
															"\r",
															"    pm.globals.set(\"changeInDepositModifyTransient\", changeInDeposit);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"roomReservation\": {{reservationModifyTransientReq}}\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/pending",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"pending"
													]
												}
											},
											"response": []
										},
										{
											"name": "ModifyCommit-V4-Adding dates",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// creating a json request object for commit api\r",
															"var commitReq = {};\r",
															"// set confirmation number\r",
															"commitReq.confirmationNumber = pm.globals.get(\"transientConfirmationNumber\");\r",
															"// set firstName & lastName\r",
															"commitReq.firstName = pm.globals.get(\"transientFirstName\");\r",
															"commitReq.lastName = pm.globals.get(\"transientLastName\");\r",
															"// set billing\r",
															"var billing = JSON.parse(pm.environment.get(\"SingleVISACard\"));\r",
															"billing[0].payment.amount = pm.globals.get(\"changeInDepositModifyTransient\");\r",
															"billing[0].payment.authId = \"abcd\";\r",
															"commitReq.billing = billing;\r",
															"// save jsondata in modify Transient req in global\r",
															"pm.globals.set(\"commitTransientReq\",JSON.stringify(commitReq));"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment_Widget_Transient | ice-Transient User: | Modify | Commit with adding new dates\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    \r",
															"    pm.globals.set(\"transientConfirmationNumber\", jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{commitTransientReq}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/commit",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"commit"
													]
												}
											},
											"response": []
										},
										{
											"name": "FindReservation-V2-After modifying dates",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"reservationModifyTransientReq\", null);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment_Widget_Transient | ice-Transient User: | Create | Find Reservation with confirmationNumber with new dates\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"  pm.globals.set(\"reservationModifyTransientReq\", JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{transientConfirmationNumber}}&firstName={{transientFirstName}}&lastName={{transientLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{transientConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{transientFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{transientLastName}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Charges-V2-Before Modify-Remove dates",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// get create response req from global\r",
															"var jsonData = JSON.parse(pm.globals.get(\"reservationModifyTransientReq\"));\r",
															"\r",
															"//set billing as empty\r",
															"jsonData.billing = null;\r",
															"//set payments as null\r",
															"jsonData.payments = null;\r",
															"// removing dates\r",
															"var moment = require('moment');\r",
															"previousCheckOutDate = moment(pm.globals.get(\"scenarioBasedCheckOutDate\")).format('YYYY-MM-DD');\r",
															"\r",
															" //Modify Checkout date -2\r",
															"jsonData.tripDetails.checkOutDate = previousCheckOutDate;\r",
															" //removing bookings obj\r",
															"  jsonData.bookings.splice(2);\r",
															"  // save in global modify transient req\r",
															"pm.globals.set(\"reservationModifyTransientReq\", JSON.stringify(jsonData));"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment_Widget_Transient | ice-Transient User Success : PreModify transient Reservation Charges before Modify with removing modified dates\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    \r",
															"    //save response to  reservation Request in global for transient create reservation \r",
															"    pm.globals.set(\"reservationModifyTransientReq\",JSON.stringify(jsonData));\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{reservationModifyTransientReq}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "ModifyPending-V4-Removing dates",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(pm.globals.get(\"reservationModifyTransientReq\"));\r",
															"// set itinerary id\r",
															"jsonData.itineraryId=\"1234\";\r",
															"jsonData.state = \"Booked\",\r",
															"// set billing as empty\r",
															"jsonData.billing = [];\r",
															"//set customerId for transient User\r",
															"jsonData.customerId = pm.globals.get(\"transientCustomerId\");\r",
															"// save jsondata in modify transient req in global\r",
															"pm.globals.set(\"reservationModifyTransientReq\",JSON.stringify(jsonData));\r",
															"// resetting value of changeInDeposit\r",
															"pm.globals.set(\"changeInDepositModifyTransient\", null);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment_Widget_Transient | ice-Transient User:  Modify | Modify Pending with removing modified dates\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation);\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.ratesSummary);\r",
															"    \r",
															"    var changeInDeposit = jsonData.roomReservation.ratesSummary.changeInDeposit;\r",
															"    pm.expect(null).not.equal(changeInDeposit);\r",
															"\r",
															"    // additional deposit usecase\r",
															"    if(changeInDeposit < 0) {\r",
															"        pm.sendRequest(null);\r",
															"        pm.expect.fail(\"changeInDeposit should be positive in case of no refund\");\r",
															"    }\r",
															"\r",
															"    pm.globals.set(\"changeInDepositModifyTransient\", changeInDeposit);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"roomReservation\": {{reservationModifyTransientReq}}\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/pending",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"pending"
													]
												}
											},
											"response": []
										},
										{
											"name": "ModifyCommit-V4-Removing dates",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// creating a json request object for commit api\r",
															"var commitReq = {};\r",
															"// set confirmation number\r",
															"commitReq.confirmationNumber = pm.globals.get(\"transientConfirmationNumber\");\r",
															"// set firstName & lastName\r",
															"commitReq.firstName = pm.globals.get(\"transientFirstName\");\r",
															"commitReq.lastName = pm.globals.get(\"transientLastName\");\r",
															"// set billing\r",
															"var billing = JSON.parse(pm.environment.get(\"SingleVISACard\"));\r",
															"billing[0].payment.amount = pm.globals.get(\"changeInDepositModifyTransient\");\r",
															"billing[0].payment.authId = \"abcd\";\r",
															"commitReq.billing = billing;\r",
															"// save jsondata in modify Transient req in global\r",
															"pm.globals.set(\"commitTransientReq\",JSON.stringify(commitReq));"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment_Widget_Transient | ice-Transient User: | Modify | Commit with removing modified dates\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    \r",
															"    pm.globals.set(\"transientConfirmationNumber\", jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{commitTransientReq}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/commit",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"commit"
													]
												}
											},
											"response": []
										},
										{
											"name": "FindReservation-V2-Removing dates",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"reservationModifyTransientReq\", null);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment_Widget_Transient | ice-Transient User: | Create | Find Reservation with confirmationNumber with removing modified dates\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"  pm.globals.set(\"reservationModifyTransientReq\", JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{transientConfirmationNumber}}&firstName={{transientFirstName}}&lastName={{transientLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{transientConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{transientFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{transientLastName}}"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "cancel",
									"item": [
										{
											"name": "FindReservation-V2-Before Cancel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment_Widget_Transient | ice-Transient User: | Create | Find Reservation with confirmationNumber before cancel transient reservation\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"var refundAmount = jsonData.roomReservation.depositDetails.refundAmount;\r",
															"  // create a json request object for cancel commit api\r",
															"  var cancelCommitTransientReq = {};\r",
															"  // set confirmation number\r",
															"  cancelCommitTransientReq.confirmationNumber = pm.globals.get(\"transientConfirmationNumber\");\r",
															"  // set firstName & lastName\r",
															"  cancelCommitTransientReq.firstName = pm.globals.get(\"transientFirstName\");\r",
															"  cancelCommitTransientReq.lastName = pm.globals.get(\"transientLastName\");\r",
															"  // set billing\r",
															"  var billing = JSON.parse(pm.environment.get(\"SingleVISACard\"));\r",
															"  billing[0].payment.amount = 0 - refundAmount;\r",
															"  billing[0].payment.authId = \"abcd\";\r",
															"  cancelCommitTransientReq.billing = billing;\r",
															"  // save in cancel commit Transient req in global\r",
															"  pm.globals.set(\"cancelCommitTransientReq\", JSON.stringify(cancelCommitTransientReq));\r",
															"  \r",
															"  // if refundAmount=0, skip cancel preview API\r",
															"  if(refundAmount === 0) {\r",
															"    pm.execution.setNextRequest(\"Cancel Commit V4 - Transient\");\r",
															"  }\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration{{$timestamp}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{transientConfirmationNumber}}&firstName={{transientFirstName}}&lastName={{transientLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{transientConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{transientFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{transientLastName}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Preview-V4",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment_Widget_Transient | ice-Transient User: | Cancel | Cancel Preview by confirmationNumber\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.globals.get(\"transientConfirmationNumber\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration{{$timestamp}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"confirmationNumber\": \"{{transientConfirmationNumber}}\",\r\n    \"firstName\": \"{{transientFirstName}}\",\r\n    \"lastName\": \"{{transientLastName}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/cancel/preview",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"cancel",
														"preview"
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Commit-V4-Transient",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment_Widget_Transient | ice-Transient User: | Cancel | Cancel Commit by confirmationNumber\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.globals.get(\"transientConfirmationNumber\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration{{$timestamp}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{cancelCommitTransientReq}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/cancel/commit",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"cancel",
														"commit"
													]
												}
											},
											"response": []
										},
										{
											"name": "FindReservation-V2-After Cancel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment_Widget_Transient | ice-Transient User: | Create | Find Reservation with confirmationNumber before cancel transient reservation\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration{{$timestamp}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{transientConfirmationNumber}}&firstName={{transientFirstName}}&lastName={{transientLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{transientConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{transientFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{transientLastName}}"
														}
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "shared",
							"item": [
								{
									"name": "create",
									"item": [
										{
											"name": "Single Availability V3 - ShareWith",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient ShareWith | Create | Single Availability\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.ratePlans[0]);\r",
															"\r",
															"    var ratePlanIndex = 0;    \r",
															"    var itemizedList = null;\r",
															"\r",
															"    for(var i = 0; i < jsonData.ratePlans.length; i++) {\r",
															"      if(jsonData.ratePlans[i].startingPrice.isComp == false) {\r",
															"        ratePlanIndex = i;\r",
															"        itemizedList = jsonData.ratePlans[ratePlanIndex].rooms[0].price.itemized;\r",
															"\r",
															"        pm.globals.set(\"roomTypeIdShareWith\", jsonData.ratePlans[ratePlanIndex].rooms[0].roomTypeId);\r",
															"        pm.globals.set(\"programIdShareWith\", jsonData.ratePlans[ratePlanIndex].programId);\r",
															"        \r",
															"        break;\r",
															"      }\r",
															"    }\r",
															"  \r",
															"  pm.expect(null).not.equal(itemizedList);\r",
															"  pm.expect(0).not.equal(itemizedList.length);\r",
															"  \r",
															"  //save booking object\r",
															"  var bookings = [];\r",
															"  for (var i = 0; i < itemizedList.length; i++) {\r",
															"    var itemized = itemizedList[i];\r",
															"    var booking = {};\r",
															"    booking.date = itemized.date;\r",
															"    booking.price = itemized.basePrice;\r",
															"    booking.programId = itemized.programId;\r",
															"    booking.overridePrice = -1;\r",
															"    booking.isComp = itemized.isComp;\r",
															"    bookings[i] = booking;\r",
															"  }\r",
															"  \r",
															"  pm.globals.set(\"bookingsShareWith\", JSON.stringify(bookings));\r",
															"\r",
															"  // set modify room & program in global\r",
															"  if(jsonData.ratePlans.length > ratePlanIndex+1) {\r",
															"    pm.globals.set(\"modifyProgramIdShareWith\", jsonData.ratePlans[ratePlanIndex+1].programId);\r",
															"\r",
															"    var modifyRooms = jsonData.ratePlans[ratePlanIndex+1].rooms;\r",
															"    for(var i=0; i<modifyRooms.length; i++) {\r",
															"        if(!(modifyRooms[i].roomTypeId === pm.globals.get(\"roomTypeIdShareWith\"))) {\r",
															"            pm.globals.set(\"modifyRoomTypeIdShareWith\", modifyRooms[i].roomTypeId);\r",
															"            break;\r",
															"        }\r",
															"    }\r",
															"  }\r",
															"  \r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Resetting values \r",
															"pm.globals.set(\"roomTypeIdShareWith\", null);\r",
															"pm.globals.set(\"programIdShareWith\", null);\r",
															"pm.globals.set(\"bookingsShareWith\", null);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v3/availability/trip?checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{scenarioBasedCheckOutDate}}&propertyId={{propertyId}}&numAdults=2",
													"host": [
														"{{env}}"
													],
													"path": [
														"v3",
														"availability",
														"trip"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{scenarioBasedCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{propertyId}}"
														},
														{
															"key": "numAdults",
															"value": "2"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Calculate Room Charges V2 - Before Create SW Reservation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient ShareWith | Create | Charges before Create ShareWith Reservation\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    \r",
															"    //save response to  reservation Request in global for create reservation ShareWith\r",
															"    pm.globals.set(\"reservationCreateShareWithReq\",JSON.stringify(jsonData));\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Resetting values \r",
															"pm.globals.set(\"reservationCreateShareWithReq\", null);\r",
															"\r",
															"// setting ShareWith primary User details in request from environment \r",
															"var shareWithPrimaryProfile = JSON.parse(pm.environment.get(\"ShareWithPrimaryUserProfile\"));\r",
															"pm.globals.set(\"ShareWithPrimaryUserFirstName\", shareWithPrimaryProfile.firstName);\r",
															"pm.globals.set(\"ShareWithPrimaryUserLastName\", shareWithPrimaryProfile.lastName);\r",
															"pm.globals.set(\"ShareWithPrimaryUserCustomerId\", shareWithPrimaryProfile.id);\r",
															"\r",
															"\r",
															"// setting ShareWith secondary User details in request from environment \r",
															"var shareWithSecondaryProfile = JSON.parse(pm.environment.get(\"ShareWithSecondaryUserProfile\"));\r",
															"pm.globals.set(\"ShareWithSecondaryUserFirstName\", shareWithSecondaryProfile.firstName);\r",
															"pm.globals.set(\"ShareWithSecondaryUserLastName\", shareWithSecondaryProfile.lastName);\r",
															"pm.globals.set(\"ShareWithSecondaryUserCustomerId\", shareWithSecondaryProfile.id);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"propertyId\": \"{{propertyId}}\",\r\n    \"roomTypeId\": \"{{roomTypeIdShareWith}}\",\r\n    \"programId\": \"{{programIdShareWith}}\",\r\n    \"itineraryId\": \"9323708418\",\r\n    \"customerId\": {{ShareWithPrimaryUserCustomerId}},\r\n    \"guaranteeCode\": null,\r\n    \"tripDetails\": {\r\n        \"checkInDate\": \"{{scenarioBasedCheckInDate}}\",\r\n        \"checkOutDate\": \"{{scenarioBasedCheckOutDate}}\",\r\n        \"numAdults\": 2,\r\n        \"numChildren\": 0,\r\n        \"numRooms\": 1\r\n    },\r\n    \"bookings\": {{bookingsShareWith}},\r\n    \"profile\": null\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Reservation V4 - ShareWith",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient ShareWith | Create | Create Reservation V4\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.booked);    \r",
															"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
															"    var reservationId = jsonData.roomReservation.id;\r",
															"    pm.expect(itineraryId).not.eq(null);\r",
															"    pm.expect(reservationId).not.eq(null);\r",
															"\r",
															"    //set primaryConfirmationNumber in global\r",
															"    var primaryConfirmationNumber = jsonData.roomReservation.primarySharerConfirmationNumber;\r",
															"    pm.expect(primaryConfirmationNumber).not.eq(null);\r",
															"    pm.globals.set('ShareWithPrimaryConfirmationNumber',  primaryConfirmationNumber);\r",
															"\r",
															"    //set secondary onfirmationNumber from shareWiths in global\r",
															"    var shareWiths = jsonData.roomReservation.shareWiths;\r",
															"    pm.expect(shareWiths).not.eq(null);\r",
															"    pm.expect(0).not.equal(shareWiths.length);\r",
															"    var secondaryConfirmationNumber = shareWiths[0];\r",
															"    pm.globals.set('ShareWithSecondaryConfirmationNumber',  secondaryConfirmationNumber);\r",
															"\r",
															"    // wait for 3 seconds\r",
															"    setTimeout(function(){}, 3000);\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"//Create reservation Request and save in global\r",
															"// get response from charges before create saved into global\r",
															"jsonData = JSON.parse(pm.globals.get(\"reservationCreateShareWithReq\"));\r",
															"//set itinerary id\r",
															"jsonData.itineraryId=\"1234\";\r",
															"//set billing\r",
															"billing = JSON.parse(pm.environment.get(\"SingleVISACard\"));\r",
															"billing[0].payment.amount=jsonData.depositDetails.amount;\r",
															"billing[0].payment.authId = \"abcd\";\r",
															"jsonData.billing = billing;\r",
															"//set primary user profile\r",
															"jsonData.customerId = pm.globals.get(\"ShareWithPrimaryUserCustomerId\");\r",
															"jsonData.profile = JSON.parse(pm.environment.get(\"ShareWithPrimaryUserProfile\"));\r",
															"// set secondary (sharewith) user profile\r",
															"var shareWithCustomersArr = []\r",
															"shareWithCustomersArr[0] = JSON.parse(pm.environment.get(\"ShareWithSecondaryUserProfile\"));\r",
															"jsonData.shareWithCustomers = shareWithCustomersArr;\r",
															"\r",
															"// again save to same variable\r",
															"pm.globals.set(\"reservationCreateShareWithReq\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{reservationCreateShareWithReq}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Party Info V2- ShareWith",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient ShareWith | Create | Party Info with primary confirmationNumber\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.reservationAdditionalInfo);\r",
															"\r",
															"  var responseArr = jsonData.reservationAdditionalInfo;\r",
															"  // 2 sharewith reservations must be there as per usecase\r",
															"  pm.expect(2).equal(responseArr.length);\r",
															"\r",
															"  // primary cnf no on 0th index\r",
															"  var confirmationNumber = responseArr[0].confNo;\r",
															"  pm.expect(confirmationNumber).equal(pm.globals.get(\"ShareWithPrimaryConfirmationNumber\"));\r",
															"\r",
															"  // sharewith cnf no on 1th index\r",
															"  var shareWithConfirmationNumber = responseArr[1].confNo;\r",
															"  pm.expect(shareWithConfirmationNumber).equal(pm.globals.get(\"ShareWithSecondaryConfirmationNumber\"));\r",
															"\r",
															"  // primary resType should be \"CC\"\r",
															"  pm.expect(\"CC\").equal(responseArr[0].resType);\r",
															"\r",
															"  // sharewith resType should be \"SH\"\r",
															"  pm.expect(\"SH\").equal(responseArr[1].resType);\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation/party/info?confirmationNumber={{ShareWithSecondaryConfirmationNumber}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation",
														"party",
														"info"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{ShareWithSecondaryConfirmationNumber}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 - Primary ShareWith",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient ShareWith | Create | Find Reservation with primary confirmationNumber\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.confirmationNumber);\r",
															"\r",
															"  var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"  pm.expect(confirmationNumber).equal(pm.globals.get(\"ShareWithPrimaryConfirmationNumber\"));\r",
															"\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.shareWiths);\r",
															"  var shareWiths = jsonData.roomReservation.shareWiths;\r",
															"  pm.expect(0).not.equal(shareWiths.length);\r",
															"\r",
															"  var shareWithConfirmationNumber = shareWiths[0];\r",
															"  pm.expect(shareWithConfirmationNumber).equal(pm.globals.get(\"ShareWithSecondaryConfirmationNumber\"));\r",
															"\r",
															"  pm.globals.set(\"modifyShareWithReservationReq\", JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{ShareWithPrimaryConfirmationNumber}}&firstName={{ShareWithPrimaryUserFirstName}}&lastName={{ShareWithPrimaryUserLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{ShareWithPrimaryConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{ShareWithPrimaryUserFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{ShareWithPrimaryUserLastName}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 - Secondary ShareWith",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient ShareWith | Create | Find Reservation with secondary confirmationNumber\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.confirmationNumber);\r",
															"\r",
															"  var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"  pm.expect(confirmationNumber).equal(pm.globals.get(\"ShareWithSecondaryConfirmationNumber\"));\r",
															"\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.shareWiths);\r",
															"  var shareWiths = jsonData.roomReservation.shareWiths;\r",
															"  pm.expect(0).not.equal(shareWiths.length);\r",
															"\r",
															"  var shareWithConfirmationNumber = shareWiths[0];\r",
															"  pm.expect(shareWithConfirmationNumber).equal(pm.globals.get(\"ShareWithPrimaryConfirmationNumber\"));\r",
															"\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"  \r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{ShareWithSecondaryConfirmationNumber}}&firstName={{ShareWithSecondaryUserFirstName}}&lastName={{ShareWithSecondaryUserLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{ShareWithSecondaryConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{ShareWithSecondaryUserFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{ShareWithSecondaryUserLastName}}"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "modify",
									"item": [
										{
											"name": "Single Availability V3 - ShareWith Add new date",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient ShareWith | Modify | Single Availability before adding new Date\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.ratePlans[0]);\r",
															"\r",
															"    var ratePlanIndex = 0;    \r",
															"    var itemizedList = null;\r",
															"\r",
															"    for(var i = 0; i < jsonData.ratePlans.length; i++) {\r",
															"      if(jsonData.ratePlans[i].startingPrice.isComp == false) {\r",
															"        ratePlanIndex = i;\r",
															"        itemizedList = jsonData.ratePlans[ratePlanIndex].rooms[0].price.itemized;\r",
															"\r",
															"        pm.globals.set(\"roomTypeIdShareWith\", jsonData.ratePlans[ratePlanIndex].rooms[0].roomTypeId);\r",
															"        pm.globals.set(\"programIdShareWith\", jsonData.ratePlans[ratePlanIndex].programId);\r",
															"        \r",
															"        break;\r",
															"      }\r",
															"    }\r",
															"  \r",
															"  pm.expect(null).not.equal(itemizedList);\r",
															"  pm.expect(0).not.equal(itemizedList.length);\r",
															"  \r",
															"  //save booking object\r",
															"  var bookings = [];\r",
															"  for (var i = 0; i < itemizedList.length; i++) {\r",
															"    var itemized = itemizedList[i];\r",
															"    var booking = {};\r",
															"    booking.date = itemized.date;\r",
															"    booking.price = itemized.basePrice;\r",
															"    booking.programId = itemized.programId;\r",
															"    booking.overridePrice = -1;\r",
															"    booking.isComp = itemized.isComp;\r",
															"    bookings[i] = booking;\r",
															"  }\r",
															"  \r",
															"  pm.globals.set(\"shareWithModifyBookings\", JSON.stringify(bookings));\r",
															"  \r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var moment = require('moment');\r",
															"\r",
															"oldCheckOutDate = moment(pm.variables.get(\"scenarioBasedCheckOutDate\")).format('YYYY-MM-DD');\r",
															"\r",
															"modifiedCheckOutDate = moment(oldCheckOutDate).add(2, 'days').format('YYYY-MM-DD');\r",
															"pm.globals.set(\"modifiedCheckOutDate\",modifiedCheckOutDate);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v3/availability/trip?checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{modifiedCheckOutDate}}&propertyId={{propertyId}}&numAdults=2",
													"host": [
														"{{env}}"
													],
													"path": [
														"v3",
														"availability",
														"trip"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{modifiedCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{propertyId}}"
														},
														{
															"key": "numAdults",
															"value": "2"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Charges V2 - Before Modify Add new date SW",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient ShareWith | Modify | Charges before Modify with additional deposit\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    \r",
															"    //save response to modify SW req in global\r",
															"    pm.globals.set(\"modifyShareWithReservationReq\",JSON.stringify(jsonData));\r",
															"\r",
															"    pm.globals.set(\"changeInDepositModifyShareWith\", 0);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// get modify res req from global\r",
															"var jsonData = JSON.parse(pm.globals.get(\"modifyShareWithReservationReq\"));\r",
															"// set empty billing\r",
															"jsonData.billing = null;\r",
															"// set empty payments\r",
															"jsonData.payments = null;\r",
															"// modify checkout date\r",
															"var newCheckOutDate = pm.globals.get(\"modifiedCheckOutDate\");\r",
															"jsonData.tripDetails.checkOutDate = newCheckOutDate;\r",
															"// save modified bookings\r",
															"var newBookings = JSON.parse(pm.globals.get(\"shareWithModifyBookings\"));\r",
															"jsonData.bookings = newBookings;\r",
															"// save modify res req in global\r",
															"pm.globals.set(\"modifyShareWithReservationReq\", JSON.stringify(jsonData));"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{modifyShareWithReservationReq}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "Modify Pending V4 - Add new date SW",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient ShareWith | Modify | Modify Pending Add new date\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation);\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.ratesSummary);\r",
															"    \r",
															"    var changeInDeposit = jsonData.roomReservation.ratesSummary.changeInDeposit;\r",
															"    pm.expect(null).not.equal(changeInDeposit);\r",
															"\r",
															"    // additional deposit usecase\r",
															"    if(changeInDeposit < 0) {\r",
															"        pm.sendRequest(null);\r",
															"        pm.expect.fail(\"changeInDeposit should be positive in case of no refund\");\r",
															"    }\r",
															"\r",
															"    pm.globals.set(\"changeInDepositModifyShareWith\", changeInDeposit);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(pm.globals.get(\"modifyShareWithReservationReq\"));\r",
															"// set itinerary id\r",
															"jsonData.itineraryId=\"1234\";\r",
															"jsonData.state = \"Booked\",\r",
															"// set empty billing\r",
															"jsonData.billing = [];\r",
															"//set customerId for primy SW User\r",
															"jsonData.customerId = pm.globals.get(\"ShareWithPrimaryUserCustomerId\");\r",
															"// save jsondata in modify sharewith req in global\r",
															"pm.globals.set(\"modifyShareWithReservationReq\",JSON.stringify(jsonData));\r",
															"// resetting value of changeInDeposit\r",
															"pm.globals.set(\"changeInDepositModifyShareWith\", null);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "{{channelHeaderKey}}",
														"value": "{{channel}}"
													},
													{
														"key": "{{sourceHeaderKey}}",
														"value": "{{source}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"roomReservation\": {{modifyShareWithReservationReq}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/pending",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"pending"
													]
												}
											},
											"response": []
										},
										{
											"name": "Commit V4 - Add new date SW",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient ShareWith | Modify | Commit with additional deposit\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    \r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// create a json request object for commit api\r",
															"var commitReq = {};\r",
															"// set confirmation number\r",
															"commitReq.confirmationNumber = pm.globals.get(\"ShareWithPrimaryConfirmationNumber\");\r",
															"// set firstName & lastName\r",
															"commitReq.firstName = pm.globals.get(\"ShareWithPrimaryUserFirstName\");\r",
															"commitReq.lastName = pm.globals.get(\"ShareWithPrimaryUserLastName\");\r",
															"// set billing\r",
															"var billing = JSON.parse(pm.environment.get(\"SingleVISACard\"));\r",
															"billing[0].payment.amount = pm.globals.get(\"changeInDepositModifyShareWith\");\r",
															"billing[0].payment.authId = \"abcd\";\r",
															"commitReq.billing = billing;\r",
															"// save jsondata in modify sharewith req in global\r",
															"pm.globals.set(\"shareWithCommitReq\",JSON.stringify(commitReq));"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "{{sourceHeaderKey}}",
														"value": "{{source}}"
													},
													{
														"key": "{{channelHeaderKey}}",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{shareWithCommitReq}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/commit",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"commit"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 Primary - After Modify Add new date SW",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient ShareWith | Modify | Find Reservation with confirmationNumber\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"  // updated checkOutDate validation\r",
															"  var checkOutDate = jsonData.roomReservation.tripDetails.checkOutDate;\r",
															"  pm.expect(checkOutDate).equal(pm.globals.get(\"modifiedCheckOutDate\"));\r",
															"\r",
															"  // trip Length validation\r",
															"  \r",
															"  // calculate total no. of nights \r",
															"  checkInDate = jsonData.roomReservation.tripDetails.checkInDate;\r",
															"  var timeDifference = Math.floor(new Date(checkOutDate).getTime() - new Date(checkInDate).getTime());\r",
															"  var daysDifference = timeDifference / (1000 * 60 * 60 * 24);\r",
															"  \r",
															"  // there must exist a booking object for each date reserved\r",
															"  if(jsonData.roomReservation.bookings.length != daysDifference) {\r",
															"    pm.expect().fail(\"Invalid bookings length\");\r",
															"  }\r",
															"\r",
															"  // save response in global\r",
															"  pm.globals.set(\"modifyShareWithReservationReq\", JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"modifyShareWithReservationReq\", null);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{ShareWithPrimaryConfirmationNumber}}&firstName={{ShareWithPrimaryUserFirstName}}&lastName={{ShareWithPrimaryUserLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{ShareWithPrimaryConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{ShareWithPrimaryUserFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{ShareWithPrimaryUserLastName}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 Secondary - After Add new date SW",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient ShareWith | Modify | Find Reservation with secondary confirmationNumber\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.confirmationNumber);\r",
															"\r",
															"  var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"  pm.expect(confirmationNumber).equal(pm.globals.get(\"ShareWithSecondaryConfirmationNumber\"));\r",
															"\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.shareWiths);\r",
															"  var shareWiths = jsonData.roomReservation.shareWiths;\r",
															"  pm.expect(0).not.equal(shareWiths.length);\r",
															"\r",
															"  var shareWithConfirmationNumber = shareWiths[0];\r",
															"  pm.expect(shareWithConfirmationNumber).equal(pm.globals.get(\"ShareWithPrimaryConfirmationNumber\"));\r",
															"\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"  // updated checkOutDate validation\r",
															"  var checkOutDate = jsonData.roomReservation.tripDetails.checkOutDate;\r",
															"  pm.expect(checkOutDate).equal(pm.globals.get(\"modifiedCheckOutDate\"));\r",
															"\r",
															"  // trip Length validation\r",
															"  \r",
															"  // calculate total no. of nights \r",
															"  checkInDate = jsonData.roomReservation.tripDetails.checkInDate;\r",
															"  var timeDifference = Math.floor(new Date(checkOutDate).getTime() - new Date(checkInDate).getTime());\r",
															"  var daysDifference = timeDifference / (1000 * 60 * 60 * 24);\r",
															"  \r",
															"  // there must exist a booking object for each date reserved\r",
															"  if(jsonData.roomReservation.bookings.length != daysDifference) {\r",
															"    pm.expect().fail(\"Invalid bookings length\");\r",
															"  }\r",
															"  \r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{ShareWithSecondaryConfirmationNumber}}&firstName={{ShareWithSecondaryUserFirstName}}&lastName={{ShareWithSecondaryUserLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{ShareWithSecondaryConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{ShareWithSecondaryUserFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{ShareWithSecondaryUserLastName}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Charges V2 - Before Modify Program ShareWith",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient ShareWith | Modify | Charges before Modify Program\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    \r",
															"    //save response to  modify sharewith Request in global\r",
															"    pm.globals.set(\"modifyShareWithReservationReq\",JSON.stringify(jsonData));\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(pm.globals.get(\"modifyShareWithReservationReq\"));\r",
															"// set empty billing\r",
															"jsonData.billing = null;\r",
															"// set empty payments\r",
															"jsonData.payments = null;\r",
															"// modify programId\r",
															"var modifiedProgramId = pm.globals.get(\"modifyProgramIdShareWith\");\r",
															"jsonData.programId = modifiedProgramId;\r",
															"// modify in booking obj\r",
															"for (var i = 0; i < jsonData.bookings.length; i++) {\r",
															"    jsonData.bookings[i].programId=jsonData.programId;\r",
															"}\r",
															"// save in global modify SW req\r",
															"pm.globals.set(\"modifyShareWithReservationReq\", JSON.stringify(jsonData));\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{modifyShareWithReservationReq}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "Modify Pending V4 - Modify Program ShareWith",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient ShareWith | Modify | Modify Pending for Program\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation);\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.ratesSummary);\r",
															"    \r",
															"    var changeInDeposit = jsonData.roomReservation.ratesSummary.changeInDeposit;\r",
															"    pm.expect(null).not.equal(changeInDeposit);\r",
															"\r",
															"    // additional deposit usecase\r",
															"    if(changeInDeposit < 0) {\r",
															"        pm.sendRequest(null);\r",
															"        pm.expect.fail(\"changeInDeposit should be positive in case of no refund\");\r",
															"    }\r",
															"    \r",
															"    pm.globals.set(\"changeInDepositModifyShareWith\", changeInDeposit);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(pm.globals.get(\"modifyShareWithReservationReq\"));\r",
															"// set itinerary id\r",
															"jsonData.itineraryId=\"1234\";\r",
															"jsonData.state = \"Booked\",\r",
															"// set billing\r",
															"jsonData.billing = [];\r",
															"// set customerId for SW primary User\r",
															"jsonData.customerId = pm.globals.get(\"ShareWithPrimaryUserCustomerId\");\r",
															"// save jsondata in modify SW req in global\r",
															"pm.globals.set(\"modifyShareWithReservationReq\",JSON.stringify(jsonData));\r",
															"// resetting changeInDeposit value\r",
															"pm.globals.set(\"changeInDepositModifyShareWith\", null);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "{{channelHeaderKey}}",
														"value": "{{channel}}"
													},
													{
														"key": "{{sourceHeaderKey}}",
														"value": "{{source}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"roomReservation\": {{modifyShareWithReservationReq}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/pending",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"pending"
													]
												}
											},
											"response": []
										},
										{
											"name": "Commit V4 - Modify Program ShareWith",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient ShareWith | Modify | Commit deposit\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    \r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// create a json request object for commit api\r",
															"var commitReq = {};\r",
															"// set confirmation number\r",
															"commitReq.confirmationNumber = pm.globals.get(\"ShareWithPrimaryConfirmationNumber\");\r",
															"// set firstName & lastName\r",
															"commitReq.firstName = pm.globals.get(\"ShareWithPrimaryUserFirstName\");\r",
															"commitReq.lastName = pm.globals.get(\"ShareWithPrimaryUserLastName\");\r",
															"// set billing\r",
															"var billing = JSON.parse(pm.environment.get(\"SingleVISACard\"));\r",
															"billing[0].payment.amount = pm.globals.get(\"changeInDepositModifyShareWith\");\r",
															"billing[0].payment.authId = \"abcd\";\r",
															"commitReq.billing = billing;\r",
															"// save jsondata in modify sharewith req in global\r",
															"pm.globals.set(\"shareWithCommitReq\",JSON.stringify(commitReq));"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "{{sourceHeaderKey}}",
														"value": "{{source}}"
													},
													{
														"key": "{{channelHeaderKey}}",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{shareWithCommitReq}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/commit",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"commit"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 Primary - After Modify Program SW",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient ShareWith | Modify | Find Reservation with primary confirmationNumber\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"  // program change validation\r",
															"  var expectedProgramId = pm.globals.get(\"modifyProgramIdShareWith\");\r",
															"  var bookings = jsonData.roomReservation.bookings;\r",
															"  pm.expect(expectedProgramId).equal(jsonData.roomReservation.programId);\r",
															"  for(var i=0; i<bookings.length; i++) {\r",
															"    if(bookings[i].programId != expectedProgramId) {\r",
															"        pm.expect().fail(\"Invalid programId in bookings response\");\r",
															"    }\r",
															"  }\r",
															"\r",
															"  // save response in global \r",
															"  pm.globals.set(\"modifyShareWithReservationReq\", JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"modifyShareWithReservationReq\", null);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{ShareWithPrimaryConfirmationNumber}}&firstName={{ShareWithPrimaryUserFirstName}}&lastName={{ShareWithPrimaryUserLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{ShareWithPrimaryConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{ShareWithPrimaryUserFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{ShareWithPrimaryUserLastName}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 Secondary - After Modify Program SW",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient ShareWith | Modify | Find Reservation with secondary confirmationNumber\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.confirmationNumber);\r",
															"\r",
															"  var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"  pm.expect(confirmationNumber).equal(pm.globals.get(\"ShareWithSecondaryConfirmationNumber\"));\r",
															"\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.shareWiths);\r",
															"  var shareWiths = jsonData.roomReservation.shareWiths;\r",
															"  pm.expect(0).not.equal(shareWiths.length);\r",
															"\r",
															"  var shareWithConfirmationNumber = shareWiths[0];\r",
															"  pm.expect(shareWithConfirmationNumber).equal(pm.globals.get(\"ShareWithPrimaryConfirmationNumber\"));\r",
															"\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"  // program change validation\r",
															"  var expectedProgramId = pm.globals.get(\"modifyProgramIdShareWith\");\r",
															"  var bookings = jsonData.roomReservation.bookings;\r",
															"  pm.expect(expectedProgramId).equal(jsonData.roomReservation.programId);\r",
															"  for(var i=0; i<bookings.length; i++) {\r",
															"    if(bookings[i].programId != expectedProgramId) {\r",
															"        pm.expect().fail(\"Invalid programId in bookings response\");\r",
															"    }\r",
															"  }\r",
															"  \r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{ShareWithSecondaryConfirmationNumber}}&firstName={{ShareWithSecondaryUserFirstName}}&lastName={{ShareWithSecondaryUserLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{ShareWithSecondaryConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{ShareWithSecondaryUserFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{ShareWithSecondaryUserLastName}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Charges V2 - Before Modify Room ShareWith",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient ShareWith | Modify | Charges before Modify Room\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    \r",
															"    //save response to modify PO req in global\r",
															"    pm.globals.set(\"modifyShareWithReservationReq\",JSON.stringify(jsonData));\r",
															"\r",
															"    pm.globals.set(\"changeInDepositModifyShareWith\", 0);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// get modify res req from global\r",
															"var jsonData = JSON.parse(pm.globals.get(\"modifyShareWithReservationReq\"));\r",
															"// set empty billing\r",
															"jsonData.billing = null;\r",
															"// set empty payments\r",
															"jsonData.payments = null;\r",
															"// modify room\r",
															"var modifiedRoomTypeId = pm.globals.get(\"modifyRoomTypeIdShareWith\");\r",
															"jsonData.roomTypeId = modifiedRoomTypeId;\r",
															"// save modify res req in global\r",
															"pm.globals.set(\"modifyShareWithReservationReq\", JSON.stringify(jsonData));"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{modifyShareWithReservationReq}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "Modify Pending V4 - Modify Room ShareWith",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | ShareWith Flow | Modify | Modify Pending for Room\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation);\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.ratesSummary);\r",
															"    \r",
															"    var changeInDeposit = jsonData.roomReservation.ratesSummary.changeInDeposit;\r",
															"    pm.expect(null).not.equal(changeInDeposit);\r",
															"\r",
															"    // additional deposit usecase\r",
															"    if(changeInDeposit < 0) {\r",
															"        pm.sendRequest(null);\r",
															"        pm.expect.fail(\"changeInDeposit should be positive in case of no refund\");\r",
															"    }\r",
															"\r",
															"    pm.globals.set(\"changeInDepositModifyShareWith\", changeInDeposit);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(pm.globals.get(\"modifyShareWithReservationReq\"));\r",
															"// set itinerary id\r",
															"jsonData.itineraryId=\"1234\";\r",
															"jsonData.state = \"Booked\",\r",
															"// set empty billing\r",
															"jsonData.billing = [];\r",
															"//set customerId for primy SW User\r",
															"jsonData.customerId = pm.globals.get(\"ShareWithPrimaryUserCustomerId\");\r",
															"// save jsondata in modify sharewith req in global\r",
															"pm.globals.set(\"modifyShareWithReservationReq\",JSON.stringify(jsonData));\r",
															"// resetting value of changeInDeposit\r",
															"pm.globals.set(\"changeInDepositModifyShareWith\", null);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "{{channelHeaderKey}}",
														"value": "{{channel}}"
													},
													{
														"key": "{{sourceHeaderKey}}",
														"value": "{{source}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"roomReservation\": {{modifyShareWithReservationReq}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/pending",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"pending"
													]
												}
											},
											"response": []
										},
										{
											"name": "Commit V4 - Modify Room ShareWith",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient ShareWith | Modify | Commit modify room\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    \r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// create a json request object for commit api\r",
															"var commitReq = {};\r",
															"// set confirmation number\r",
															"commitReq.confirmationNumber = pm.globals.get(\"ShareWithPrimaryConfirmationNumber\");\r",
															"// set firstName & lastName\r",
															"commitReq.firstName = pm.globals.get(\"ShareWithPrimaryUserFirstName\");\r",
															"commitReq.lastName = pm.globals.get(\"ShareWithPrimaryUserLastName\");\r",
															"// set billing\r",
															"var billing = JSON.parse(pm.environment.get(\"SingleVISACard\"));\r",
															"billing[0].payment.amount = pm.globals.get(\"changeInDepositModifyShareWith\");\r",
															"billing[0].payment.authId = \"abcd\";\r",
															"commitReq.billing = billing;\r",
															"// save jsondata in modify sharewith req in global\r",
															"pm.globals.set(\"shareWithCommitReq\",JSON.stringify(commitReq));"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "{{sourceHeaderKey}}",
														"value": "{{source}}"
													},
													{
														"key": "{{channelHeaderKey}}",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{shareWithCommitReq}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/commit",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"commit"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 Primary - After Modify Room SW",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient ShareWith | Modify | Find Reservation with primary confirmationNumber\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"  // room change validation\r",
															"  var expectedRoomTypeId = pm.globals.get(\"modifyRoomTypeIdShareWith\");\r",
															"  pm.expect(expectedRoomTypeId).equal(jsonData.roomReservation.roomTypeId);\r",
															"\r",
															"  // save response in global\r",
															"  pm.globals.set(\"modifyShareWithReservationReq\", JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"modifyShareWithReservationReq\", null);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{ShareWithPrimaryConfirmationNumber}}&firstName={{ShareWithPrimaryUserFirstName}}&lastName={{ShareWithPrimaryUserLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{ShareWithPrimaryConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{ShareWithPrimaryUserFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{ShareWithPrimaryUserLastName}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 Secondary - After Modify Room SW",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient ShareWith | Modify | Find Reservation with secondary confirmationNumber\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.confirmationNumber);\r",
															"\r",
															"  var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"  pm.expect(confirmationNumber).equal(pm.globals.get(\"ShareWithSecondaryConfirmationNumber\"));\r",
															"\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.shareWiths);\r",
															"  var shareWiths = jsonData.roomReservation.shareWiths;\r",
															"  pm.expect(0).not.equal(shareWiths.length);\r",
															"\r",
															"  var shareWithConfirmationNumber = shareWiths[0];\r",
															"  pm.expect(shareWithConfirmationNumber).equal(pm.globals.get(\"ShareWithPrimaryConfirmationNumber\"));\r",
															"\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"  // room change validation\r",
															"  var expectedRoomTypeId = pm.globals.get(\"modifyRoomTypeIdShareWith\");\r",
															"  pm.expect(expectedRoomTypeId).equal(jsonData.roomReservation.roomTypeId);\r",
															"\r",
															"  \r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{ShareWithSecondaryConfirmationNumber}}&firstName={{ShareWithSecondaryUserFirstName}}&lastName={{ShareWithSecondaryUserLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{ShareWithSecondaryConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{ShareWithSecondaryUserFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{ShareWithSecondaryUserLastName}}"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "cancel",
									"item": [
										{
											"name": "Find Reservation V2 - Before Cancel Primary SW",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient ShareWith | Cancel | Find Reservation with primary confirmationNumber before Cancel Primary ShareWith\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(pm.globals.get(\"ShareWithPrimaryConfirmationNumber\")).equal(jsonData.roomReservation.confirmationNumber);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"  var refundAmount = jsonData.roomReservation.depositDetails.refundAmount;\r",
															"  // create a json request object for cancel commit api\r",
															"  var cancelCommitReq = {};\r",
															"  // set confirmation number\r",
															"  cancelCommitReq.confirmationNumber = pm.globals.get(\"ShareWithPrimaryConfirmationNumber\");\r",
															"  // set firstName & lastName\r",
															"  cancelCommitReq.firstName = pm.globals.get(\"ShareWithPrimaryUserFirstName\");\r",
															"  cancelCommitReq.lastName = pm.globals.get(\"ShareWithPrimaryUserLastName\");\r",
															"  // set billing\r",
															"  var billing = JSON.parse(pm.environment.get(\"SingleVISACard\"));\r",
															"  billing[0].payment.amount = 0 - refundAmount;\r",
															"  billing[0].payment.authId = \"abcd\";\r",
															"  cancelCommitReq.billing = billing;\r",
															"  // save in cancel commit SW req in global\r",
															"  pm.globals.set(\"iceShareWithCancelCommitReq\", JSON.stringify(cancelCommitReq));\r",
															"  \r",
															"  // if refundAmount=0, skip cancel preview API\r",
															"  if(refundAmount === 0) {\r",
															"    pm.execution.setNextRequest(\"Cancel Commit V4 - Primary SW ICE\");\r",
															"  }\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{ShareWithPrimaryConfirmationNumber}}&firstName={{ShareWithPrimaryUserFirstName}}&lastName={{ShareWithPrimaryUserLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{ShareWithPrimaryConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{ShareWithPrimaryUserFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{ShareWithPrimaryUserLastName}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Preview V4 - Primary SW",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient ShareWith | Cancel | Cancel Preview with primary confirmationNumber\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.globals.get(\"ShareWithPrimaryConfirmationNumber\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// if refundAmount is 0, skip this request"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "{{sourceHeaderKey}}",
														"value": "{{source}}"
													},
													{
														"key": "{{channelHeaderKey}}",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"confirmationNumber\": \"{{ShareWithPrimaryConfirmationNumber}}\",\r\n    \"firstName\": \"{{ShareWithPrimaryUserFirstName}}\",\r\n    \"lastName\": \"{{ShareWithPrimaryUserLastName}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/cancel/preview",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"cancel",
														"preview"
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Commit V4 - Primary SW ICE",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient ShareWith | Cancel | Cancel Commit with primary confirmationNumber and billing\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.globals.get(\"ShareWithPrimaryConfirmationNumber\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "{{sourceHeaderKey}}",
														"value": "{{source}}"
													},
													{
														"key": "{{channelHeaderKey}}",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{iceShareWithCancelCommitReq}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/cancel/commit",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"cancel",
														"commit"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 - After Cancel Primary SW",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient ShareWith | Cancel | Find Reservation with primary confirmationNumber after Cancel primary ShareWith\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{ShareWithSecondaryConfirmationNumber}}&firstName={{ShareWithSecondaryUserFirstName}}&lastName={{ShareWithSecondaryUserLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{ShareWithSecondaryConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{ShareWithSecondaryUserFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{ShareWithSecondaryUserLastName}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 - Before Cancel Secondary SW",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient ShareWith | Cancel | Find Reservation with secondary confirmationNumber before Cancel secondary ShareWith\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(pm.globals.get(\"ShareWithSecondaryConfirmationNumber\")).equal(jsonData.roomReservation.confirmationNumber);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"  var refundAmount = jsonData.roomReservation.depositDetails.refundAmount;\r",
															"  // create a json request object for cancel commit api\r",
															"  var cancelCommitReq = {};\r",
															"  // set confirmation number\r",
															"  cancelCommitReq.confirmationNumber = pm.globals.get(\"ShareWithPrimaryConfirmationNumber\");\r",
															"  // set firstName & lastName\r",
															"  cancelCommitReq.firstName = pm.globals.get(\"ShareWithPrimaryUserFirstName\");\r",
															"  cancelCommitReq.lastName = pm.globals.get(\"ShareWithPrimaryUserLastName\");\r",
															"  // set billing\r",
															"  var billing = JSON.parse(pm.environment.get(\"SingleVISACard\"));\r",
															"  billing[0].payment.amount = 0 - refundAmount;\r",
															"  billing[0].payment.authId = \"abcd\";\r",
															"  cancelCommitReq.billing = billing;\r",
															"  // save in cancel commit SW req in global\r",
															"  pm.globals.set(\"iceShareWithCancelCommitReq\", JSON.stringify(cancelCommitReq));\r",
															"  \r",
															"  // if refundAmount=0, skip cancel preview API\r",
															"  if(refundAmount === 0) {\r",
															"    pm.execution.setNextRequest(\"Cancel Commit V4 - Secondary SW ICE\");\r",
															"  }\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{ShareWithSecondaryConfirmationNumber}}&firstName={{ShareWithSecondaryUserFirstName}}&lastName={{ShareWithSecondaryUserLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{ShareWithSecondaryConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{ShareWithSecondaryUserFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{ShareWithSecondaryUserLastName}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Preview V4 - Secondary SW",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient ShareWith | Cancel | Cancel Preview with secondary confirmationNumber\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.globals.get(\"ShareWithSecondaryConfirmationNumber\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// if refundAmount is 0, skip this request"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "{{sourceHeaderKey}}",
														"value": "{{source}}"
													},
													{
														"key": "{{channelHeaderKey}}",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"confirmationNumber\": \"{{ShareWithSecondaryConfirmationNumber}}\",\r\n    \"firstName\": \"{{ShareWithSecondaryUserFirstName}}\",\r\n    \"lastName\": \"{{ShareWithSecondaryUserLastName}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/cancel/preview",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"cancel",
														"preview"
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Commit V4 - Secondary SW ICE",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient ShareWith | Cancel | Cancel Commit with secondary confirmationNumber and billing\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.globals.get(\"ShareWithSecondaryConfirmationNumber\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "{{sourceHeaderKey}}",
														"value": "{{source}}"
													},
													{
														"key": "{{channelHeaderKey}}",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{iceShareWithCancelCommitReq}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/cancel/commit",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"cancel",
														"commit"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 - After Cancel Secondary SW",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient ShareWith | Cancel | Find Reservation with secondary confirmationNumber after Cancel secondary ShareWith\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{ShareWithSecondaryConfirmationNumber}}&firstName={{ShareWithSecondaryUserFirstName}}&lastName={{ShareWithSecondaryUserLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{ShareWithSecondaryConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{ShareWithSecondaryUserFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{ShareWithSecondaryUserLastName}}"
														}
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "party",
							"item": [
								{
									"name": "create",
									"item": [
										{
											"name": "Single Availability-Success",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"partyRoomTypeId\",null);\r",
															"pm.globals.set(\"partyProgramId\",null);\r",
															"pm.globals.set(\"paymentWidgetPartytBookings\",null);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment_Widget_Party_Create | ice-Party User Successs : Single Availability with Checkin Date,Â Checkout Date, Property Id and Number of Adults\", function () { \r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.eq(jsonData.ratePlans[0]);\r",
															"  if(jsonData.ratePlans.length){\r",
															"      var ratePlanIndex =0;\r",
															"      \r",
															"    var itemizedList = jsonData.ratePlans[ratePlanIndex].rooms[0].price.itemized\r",
															"  pm.expect(0).not.equal(itemizedList.length);\r",
															"  //save booking object\r",
															"  var bookings = [];\r",
															"    for (var i = 0; i < itemizedList.length; i++) {\r",
															"        var itemized = itemizedList[i];\r",
															"        var booking = {};\r",
															"        booking.date = itemized.date;\r",
															"        booking.price = itemized.basePrice;\r",
															"        booking.programId =itemized.programId; \r",
															"        booking.overridePrice= -1;\r",
															"        bookings[i] = booking;\r",
															"    }\r",
															"   \r",
															"pm.globals.set(\"partyRoomTypeId\",jsonData.ratePlans[ratePlanIndex].rooms[0].roomTypeId);\r",
															"pm.globals.set(\"partyProgramId\",jsonData.ratePlans[ratePlanIndex].programId);\r",
															"pm.globals.set(\"paymentWidgetPartytBookings\",JSON.stringify(bookings));\r",
															"  }\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration{{$timestamp}}"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": []
												},
												"url": {
													"raw": "{{env}}/v3/availability/trip?checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{scenarioBasedCheckOutDate}}&propertyId={{partyPropertyId}}&numAdults=2",
													"host": [
														"{{env}}"
													],
													"path": [
														"v3",
														"availability",
														"trip"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{scenarioBasedCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{partyPropertyId}}"
														},
														{
															"key": "numAdults",
															"value": "2"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Calculate Room Charges - Before Create Reservation - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment_Widget_Party_Create | ice-Party User Success : Charges Before Reservation with Profile, Booking, TripDetails, Billing and AgentInfo\", function (){\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"\r",
															"    var requestBody = JSON.parse(pm.request.body.raw);\r",
															"    // setting transient User profile from request in global variable\r",
															"    pm.globals.set(\"partyFirstName\", requestBody.profile.firstName);\r",
															"    pm.globals.set(\"partyLastName\", requestBody.profile.lastName);\r",
															"    pm.globals.set(\"partyCustomerId\", requestBody.customerId);\r",
															"    pm.globals.set(\"createPartyProfile\", JSON.stringify(requestBody.profile));\r",
															"    //save response to  reservation Request in env for create reservation\r",
															"    pm.globals.set(\"createPartyReservationReq\",JSON.stringify(jsonData));\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"partyFirstName\",null);\r",
															"pm.globals.set(\"partyLastName\",null);\r",
															"pm.globals.set(\"partyCustomerId\",null);\r",
															"pm.globals.set(\"createPartyProfile\",null);\r",
															"pm.globals.set(\"createPartyReservationReq\",null);\r",
															"\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"propertyId\": \"{{partyPropertyId}}\",\r\n  \"roomTypeId\": \"{{partyRoomTypeId}}\",\r\n  \"programId\": \"{{partyProgramId}}\",\r\n  \"itineraryId\": \"9323708418\",\r\n  \"customerId\": \"846558855426\",\r\n  \"guaranteeCode\": null,\r\n  \"tripDetails\": {\r\n    \"checkInDate\": \"{{scenarioBasedCheckInDate}}\",\r\n    \"checkOutDate\": \"{{scenarioBasedCheckOutDate}}\",\r\n    \"numAdults\": 2,\r\n    \"numChildren\": 0,\r\n    \"numRooms\": {{partyRoomCount}}\r\n  },\r\n  \"bookings\": {{paymentWidgetPartytBookings}},\r\n  \"profile\": {{createPartyProfile}}\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Party Reservation V4 - Success",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"    //Create reservation Request and save in env\r",
															"    // get response from charges before create saved into env\r",
															"    jsonData = JSON.parse(pm.globals.get(\"createPartyReservationReq\"));\r",
															"    //set itinerary id\r",
															"    jsonData.itineraryId=\"1234\";\r",
															"    //set billing\r",
															"    billing = JSON.parse(postman.getEnvironmentVariable(\"SingleVISACard\"));\r",
															"    billing[0].payment.amount=jsonData.depositDetails.amount;\r",
															"    jsonData.billing = billing;\r",
															"    //set profile\r",
															"    jsonData.customerId = postman.getEnvironmentVariable(\"partyCustomerId\")\r",
															"    jsonData.profile = JSON.parse(postman.getEnvironmentVariable(\"createPartyProfile\"));\r",
															"\r",
															"    // again save to same variable\r",
															"    pm.globals.set(\"createPartyReservationReq\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment_Widget_Party_Create | ice-Party User Success : Create Party Reservation with Profile, Booking, TripDetails, Billing and AgentInfo \", function () {\r",
															"    pm.environment.set(\"variable_key\", \"variable_value\");  \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"     var roomCount =JSON.parse(postman.getEnvironmentVariable(\"partyRoomCount\"));\r",
															"    \r",
															"     pm.expect(roomCount).equal(jsonData.roomReservations.length);\r",
															"    \r",
															"    pm.expect(null).not.eq(jsonData.booked);    \r",
															"    var confirmationNumber = jsonData.roomReservations[0].confirmationNumber;\r",
															"    var itineraryId = jsonData.roomReservations[0].itineraryId;\r",
															"    pm.expect(confirmationNumber).not.eq(null);\r",
															"    pm.expect(itineraryId).not.eq(null);\r",
															"    pm.globals.set('partyConfirmationNumber',  confirmationNumber);\r",
															" \r",
															"    pm.globals.set('partyPrimaryConfirmationNumber',  jsonData.roomReservations[0].confirmationNumber);\r",
															"    pm.globals.set('partySecondaryConfirmationNumber',  jsonData.roomReservations[1].confirmationNumber);\r",
															"    pm.globals.set(\"partyReservationSecondaryModifyReq\", \r",
															"     JSON.stringify(jsonData.roomReservations[1]));\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"roomReservation\":{{createPartyReservationReq}}\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/party",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"party"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation - Primary Confirmation Number",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment_Widget_Party | ICE-Party Reservation Party: Party Info primary reservation with cnfNumber\", function () {\r",
															"    \r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.payments)\r",
															"  var roomCount =JSON.parse(postman.getEnvironmentVariable(\"partyRoomCount\"));\r",
															" \r",
															"pm.expect(roomCount).equal(jsonData.reservationAdditionalInfo.length); \r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{PartyPrimaryConfirmationNumber}}&firstName={{partyFirstName}}&lastName={{partyLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{PartyPrimaryConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{partyFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{partyLastName}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation - Secondary Confirmation Number",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment_Widget_Party | ICE-Party Reservation Party: Party Info reservation with secondary confirmation number\", function () {    \r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  var roomCount =JSON.parse(postman.getEnvironmentVariable(\"partyRoomCount\"));\r",
															"pm.expect(roomCount).equal(jsonData.reservationAdditionalInfo.length);\r",
															"pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"}\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{PartySecondaryConfir\nmationNumber}}&firstName={{partyFirstName}}&lastName={{partyLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{PartySecondaryConfir\nmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{partyFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{partyLastName}}"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "modify",
									"item": [
										{
											"name": "Single Availability V3-deleting dates for party",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var moment = require('moment');\r",
															"\r",
															"oldCheckOutDate = moment(pm.globals.get(\"scenarioBasedCheckOutDate\")).format('YYYY-MM-DD');\r",
															"\r",
															"modifiedCheckOutDate = moment(oldCheckOutDate).add(-1, 'days').format('YYYY-MM-DD');\r",
															"pm.globals.set(\"modifiedPartyCheckOutDate\",modifiedCheckOutDate);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment_Widget_Party_Modify | ice-Party User Successs : Reservation Party Single Availability with deleting one date\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.eq(jsonData.ratePlans[0]);\r",
															"  if(jsonData.ratePlans.length){\r",
															"      var ratePlanIndex =1;\r",
															"      \r",
															"    var itemizedList = jsonData.ratePlans[ratePlanIndex].rooms[0].price.itemized\r",
															"  pm.expect(0).not.equal(itemizedList.length);\r",
															"  //save booking object\r",
															"  var bookings = [];\r",
															"    for (var i = 0; i < itemizedList.length; i++) {\r",
															"        var itemized = itemizedList[i];\r",
															"        var booking = {};\r",
															"        booking.date = itemized.date;\r",
															"        booking.price = itemized.basePrice;\r",
															"        booking.programId =itemized.programId; \r",
															"        booking.overridePrice= -1;\r",
															"        bookings[i] = booking;\r",
															"    }\r",
															"     pm.globals.set(\"partyModifiedBookings\",JSON.stringify(bookings)); \r",
															"  }\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v3/availability/trip?checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{modifiedCheckOutDate}}&propertyId={{partyPropertyId}}&numAdults=2",
													"host": [
														"{{env}}"
													],
													"path": [
														"v3",
														"availability",
														"trip"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{modifiedCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{partyPropertyId}}"
														},
														{
															"key": "numAdults",
															"value": "2"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Charges Before Secondary party Modify - Delete One Date",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"14.9 | RBS_ACRS_Integration | ICE-LasVegas-Transient Reservation Party : PreModify Reservation charges with adding new dates\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    // save response in env for premodify charges\r",
															"    pm.globals.set(\"partyReservationSecondaryModifyReq\",JSON.stringify(jsonData));\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// get create res req from global\r",
															"var jsonData = JSON.parse(pm.globals.get(\"partyReservationSecondaryModifyReq\"));\r",
															"// set empty billing\r",
															"jsonData.billing = null;\r",
															"// set empty payments\r",
															"jsonData.payments = null;\r",
															"// add spl req\r",
															"var specialRequestsArr = [];\r",
															"specialRequestsArr[0] = pm.environment.get(\"ComponentDOGFEE\");\r",
															"jsonData.specialRequests = specialRequestsArr;\r",
															"// save modify res req in global\r",
															"  \r",
															"pm.globals.set(\"partyReservationSecondaryModifyReq\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{partyReservationSecondaryModifyReq}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "ModifyPending-V4-Removing dates Party",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Party Flow | Modify | Modify Pending with additional deposit\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation);\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.ratesSummary);\r",
															"    \r",
															"    var changeInDeposit = jsonData.roomReservation.ratesSummary.changeInDeposit;\r",
															"    pm.expect(null).not.equal(changeInDeposit);\r",
															"\r",
															"    // additional deposit usecase\r",
															"    if(changeInDeposit < 0) {\r",
															"        pm.sendRequest(null);\r",
															"        pm.expect.fail(\"changeInDeposit should be positive in case of no refund\");\r",
															"    }\r",
															"    pm.globals.set(\"changeInDepositModifyParty\", changeInDeposit);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(pm.globals.get(\"partyReservationSecondaryModifyReq\"));\r",
															"// set itinerary id\r",
															"jsonData.itineraryId=\"1234\";\r",
															"jsonData.state = \"Booked\",\r",
															"// set empty billing\r",
															"jsonData.billing = [];\r",
															"//set customerId for PO User\r",
															"jsonData.customerId = pm.globals.get(\"partyCustomerId\");\r",
															"// jsonData.profile = JSON.parse(pm.environment.get(\"POUserProfile\"));\r",
															"// save jsondata in modify PO req in global\r",
															"pm.globals.set(\"partyReservationSecondaryModifyReq\",JSON.stringify(jsonData));\r",
															"// resetting value of changeInDeposit\r",
															"pm.globals.set(\"changeInDepositModifyParty\", null);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "{{sourceHeaderKey}}",
														"value": "{{source}}"
													},
													{
														"key": "{{channelHeaderKey}}",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"roomReservation\": {{partyReservationSecondaryModifyReq}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/pending",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"pending"
													]
												}
											},
											"response": []
										},
										{
											"name": "ModifyCommit-V4-Removing dates Party",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Party Flow | Modify | Commit with additional deposit\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    \r",
															"    pm.globals.set(\"partyConfirmationNumber\", jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// create a json request object for commit api\r",
															"var commitReq = {};\r",
															"// set confirmation number\r",
															"commitReq.confirmationNumber = pm.globals.get(\"partyConfirmationNumber\");\r",
															"// set firstName & lastName\r",
															"commitReq.firstName = pm.globals.get(\"partyFirstName\");\r",
															"commitReq.lastName = pm.globals.get(\"partyLastName\");\r",
															"// set billing\r",
															"var billing = JSON.parse(pm.environment.get(\"SingleVISACard\"));\r",
															"billing[0].payment.amount = pm.globals.get(\"changeInDepositModifyParty\");\r",
															"billing[0].payment.authId = \"abcd\";\r",
															"commitReq.billing = billing;\r",
															"// save jsondata in modify PO req in global\r",
															"pm.globals.set(\"commitPartyReq\",JSON.stringify(commitReq));"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "{{sourceHeaderKey}}",
														"value": "mgmri"
													},
													{
														"key": "{{channelHeaderKey}}",
														"value": "web"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{commitPartyReq}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/commit",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"commit"
													]
												}
											},
											"response": []
										},
										{
											"name": "FindReservation-V2-Removing dates for party",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Party Flow | Create | Find Reservation with confirmationNumber\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															" \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"  // Define the check-in and check-out dates\r",
															"var checkinDate = pm.globals.get(scenarioBasedCheckInDate);\r",
															"var checkoutDate = pm.globals.get(scenarioBasedCheckOutDate);\r",
															"\r",
															"// Calculate the difference between check-out and check-in dates in milliseconds\r",
															"var timeDifference = checkoutDate.getTime() - checkinDate.getTime();\r",
															"\r",
															"// Convert the time difference from milliseconds to days\r",
															"var daysDifference = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\r",
															"\r",
															"// Assuming bookings is an array of bookings\r",
															"var bookings = jsonData.roomReservation.bookings;\r",
															"\r",
															"// Compare the length of bookings with the difference in days\r",
															"if (bookings.length < daysDifference) {\r",
															"    console.log(\"Succesfully deleated one date.\");\r",
															"} \r",
															"\r",
															"pm.globals.set(\"partyReservationSecondaryModifyReq\", JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{partyConfirmationNumber}}&firstName={{partyFirstName}}&lastName={{partyLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{partyConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{partyFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{partyLastName}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Single Availability V3-Adding new dates for party",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Party Flow | ICE-LasVegas-Transient Reservation Party : Single Availability with adding new dates\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.eq(jsonData.ratePlans[0]);\r",
															"  if(jsonData.ratePlans.length){\r",
															"      var ratePlanIndex =1;\r",
															"      \r",
															"    var itemizedList = jsonData.ratePlans[ratePlanIndex].rooms[0].price.itemized\r",
															"  pm.expect(0).not.equal(itemizedList.length);\r",
															"  //save booking object\r",
															"  var bookings = [];\r",
															"    for (var i = 0; i < itemizedList.length; i++) {\r",
															"        var itemized = itemizedList[i];\r",
															"        var booking = {};\r",
															"        booking.date = itemized.date;\r",
															"        booking.price = itemized.basePrice;\r",
															"        booking.programId =itemized.programId; \r",
															"        booking.overridePrice= -1;\r",
															"        bookings[i] = booking;\r",
															"    }\r",
															"     pm.globals.set(\"partyModifiedBookings\",JSON.stringify(bookings)); \r",
															"\r",
															"  }else{\r",
															"       pm.expect(1).not.equal(jsonData.ratePlans.length);\r",
															"  }\r",
															" \r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var moment = require('moment');\r",
															"\r",
															"oldCheckOutDate = moment(pm.globals.get(\"scenarioBasedCheckOutDate\")).format('YYYY-MM-DD');\r",
															"\r",
															"modifiedCheckOutDate = moment(oldCheckOutDate).add(2, 'days').format('YYYY-MM-DD');\r",
															"pm.globals.set(\"modifiedCheckOutDate\",modifiedCheckOutDate);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v3/availability/trip?checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{modifiedPartyCheckOutDate}}&propertyId={{propertyId}}&numAdults=2",
													"host": [
														"{{env}}"
													],
													"path": [
														"v3",
														"availability",
														"trip"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{modifiedPartyCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{propertyId}}"
														},
														{
															"key": "numAdults",
															"value": "2"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Charges Before Secondary party Modify - Add New Date",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Party Flow | ICE-LasVegas-Transient Reservation Party : PreModify Reservation charges with adding new dates\", function () {\r",
															"    \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    // save response in env for premodify charges\r",
															"     pm.environment.set(\"partyReservationSecondaryModifyReq\",JSON.stringify(jsonData));\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var moment = require('moment');\r",
															"\r",
															"//get existing modify request\r",
															"jsonData = JSON.parse(pm.globals.get(\"partyReservationSecondaryModifyReq\"));\r",
															" //Modify Checkout date +2\r",
															"console.log(jsonData);\r",
															"jsonData.tripDetails.checkOutDate = pm.globals.get(\"modifiedPartyCheckOutDate\");\r",
															"\r",
															"  // add booking obj\r",
															"jsonData.bookings = JSON.parse(pm.globals.get(\"partyModifiedBookings\"));\r",
															" \r",
															"pm.globals.set(\"partyReservationSecondaryModifyReq\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{partyReservationSecondaryModifyReq}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "ModifyPending-V4-Adding dates party",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Party Flow | Modify | Modify Pending with Refund additional deposit\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation);\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.ratesSummary);\r",
															"    \r",
															"    var changeInDeposit = jsonData.roomReservation.ratesSummary.changeInDeposit;\r",
															"    pm.expect(null).not.equal(changeInDeposit);\r",
															"\r",
															"    if(changeInDeposit > 0) {\r",
															"        pm.sendRequest(null);\r",
															"        pm.expect.fail(\"changeInDeposit should be negative if there is some refund amount\");\r",
															"    }\r",
															"    \r",
															"    pm.globals.set(\"changeInDepositModifyParty\", changeInDeposit);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(pm.globals.get(\"partyReservationSecondaryModifyReq\"));\r",
															"// set itinerary id\r",
															"jsonData.itineraryId=\"1234\";\r",
															"jsonData.state = \"Booked\",\r",
															"// set specialRequests\r",
															"jsonData.specialRequests = [];\r",
															"// set billing\r",
															"jsonData.billing = [];\r",
															"// set customerId for PO User\r",
															"jsonData.customerId = pm.globals.get(\"partyCustomerId\");\r",
															"// save jsondata in modify PO req in global\r",
															"pm.globals.set(\"partyReservationSecondaryModifyReq\",JSON.stringify(jsonData));\r",
															"// resetting changeInDeposit value\r",
															"pm.globals.set(\"changeInDepositModifyParty\", null);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "{{sourceHeaderKey}}",
														"value": "mgmri"
													},
													{
														"key": "{{channelHeaderKey}}",
														"value": "web"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"roomReservation\": {{partyReservationSecondaryModifyReq}}   \n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/pending",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"pending"
													]
												}
											},
											"response": []
										},
										{
											"name": "ModifyCommit-V4-Adding dates party",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Party Flow | Modify | Commit with Refund deposit\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    \r",
															"    pm.globals.set(\"partyConfirmationNumber\", jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// create a json request object for commit api\r",
															"var commitReq = {};\r",
															"// set confirmation number\r",
															"commitReq.confirmationNumber = pm.globals.get(\"partyConfirmationNumber\");\r",
															"// set firstName & lastName\r",
															"commitReq.firstName = pm.globals.get(\"partyFirstName\");\r",
															"commitReq.lastName = pm.globals.get(\"partyLastName\");\r",
															"// set billing\r",
															"var billing = JSON.parse(pm.environment.get(\"SingleVISACard\"));\r",
															"billing[0].payment.amount = pm.globals.get(\"changeInDepositModifyParty\");\r",
															"billing[0].payment.authId = \"abcd\";\r",
															"commitReq.billing = billing;\r",
															"// save jsondata in modify PO req in global\r",
															"pm.globals.set(\"commitPartyReq\",JSON.stringify(commitReq));"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "{{sourceHeaderKey}}",
														"value": "mgmri"
													},
													{
														"key": "{{channelHeaderKey}}",
														"value": "web"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{commitPartyReq}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/commit",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"commit"
													]
												}
											},
											"response": []
										},
										{
											"name": "FindReservation-V2-After Addinging dates party",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Party Flow | Create | Find Reservation with confirmationNumber\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"}\r",
															"\r",
															"// Define the check-in and check-out dates\r",
															"var checkinDate = pm.globals.get(scenarioBasedCheckInDate);\r",
															"var checkoutDate = pm.globals.get(scenarioBasedCheckOutDate);\r",
															"\r",
															"// Calculate the difference between check-out and check-in dates in milliseconds\r",
															"var timeDifference = checkoutDate.getTime() - checkinDate.getTime();\r",
															"\r",
															"// Convert the time difference from milliseconds to days\r",
															"var daysDifference = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\r",
															"\r",
															"// Assuming bookings is an array of bookings\r",
															"var bookings = jsonData.roomReservation.depositDetails.bookings;\r",
															"\r",
															"// Compare the length of bookings with the difference in days\r",
															"if (bookings.length > daysDifference) {\r",
															"    console.log(\"Succesfully added one date.\");\r",
															"} \r",
															"\r",
															"pm.globals.set(\"partyReservationSecondaryModifyReq\", JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"partyReservationSecondaryModifyReq\", null);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{partyConfirmationNumber}}&firstName={{partyFirstName}}&lastName={{partyLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{partyConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{partyFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{partyLastName}}"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "cancel",
									"item": [
										{
											"name": "Find Reservation V2 - Before Cancel Party",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Party Flow | Create | Find Reservation with confirmationNumber\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(pm.globals.get(\"partyConfirmationNumber\")).equal(jsonData.roomReservation.confirmationNumber);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"  var refundAmount = jsonData.roomReservation.depositDetails.refundAmount;\r",
															"  // create a json request object for cancel commit api\r",
															"  var cancelCommitReq = {};\r",
															"  // set confirmation number\r",
															"  cancelCommitReq.confirmationNumber = pm.globals.get(\"partyConfirmationNumber\");\r",
															"  // set firstName & lastName\r",
															"  cancelCommitReq.firstName = pm.globals.get(\"partyFirstName\");\r",
															"  cancelCommitReq.lastName = pm.globals.get(\"partyLastName\");\r",
															"  // set billing\r",
															"  var billing = JSON.parse(pm.environment.get(\"SingleVISACard\"));\r",
															"  billing[0].payment.amount = 0 - refundAmount;\r",
															"  billing[0].payment.authId = \"abcd\";\r",
															"  cancelCommitReq.billing = billing;\r",
															"  // save in cancel commit Party req in global\r",
															"  pm.globals.set(\"partyCommitPartyReq\", JSON.stringify(cancelCommitReq));\r",
															"  \r",
															"  // if refundAmount=0, skip cancel preview API\r",
															"  if(refundAmount === 0) {\r",
															"    pm.execution.setNextRequest(\"Cancel Commit V4 - Party\");\r",
															"  }\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{partyConfirmationNumber}}&firstName={{partyFirstName}}&lastName={{partyLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{partyConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{partyFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{partyLastName}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Preview V4 - Party",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Party Flow | Cancel | Cancel Preview by confirmationNumber\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.globals.get(\"partyConfirmationNumber\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// if refundAmount is 0, skip this request"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "{{sourceHeaderKey}}",
														"value": "{{source}}"
													},
													{
														"key": "{{channelHeaderKey}}",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"confirmationNumber\": \"{{partyConfirmationNumber}}\",\r\n    \"firstName\": \"{{partyFirstName}}\",\r\n    \"lastName\": \"{{partyLastName}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/cancel/preview",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"cancel",
														"preview"
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Commit V4 - Party",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Party Flow | Cancel | Cancel Commit with confirmationNumber and billing\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.globals.get(\"partyConfirmationNumber\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "{{sourceHeaderKey}}",
														"value": "{{source}}"
													},
													{
														"key": "{{channelHeaderKey}}",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{partyCommitPartyReq}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/cancel/commit",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"cancel",
														"commit"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 - After Cancel Party",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Party Flow | Create | Find Reservation with confirmationNumber\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{partyConfirmationNumber}}&firstName={{partyFirstName}}&lastName={{partyLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{partyConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{partyFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{partyLastName}}"
														}
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Single to Shared",
							"item": [
								{
									"name": "create",
									"item": [
										{
											"name": "Single Availability V3 - Single to Shared",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"roomTypeIdSingleToShared\",null);\r",
															"pm.globals.set(\"programIdSingleToShared\",null);\r",
															"pm.globals.set(\"bookingsSingleToShared\",null);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient Single to Shared | Create | Single Availability\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.eq(jsonData.ratePlans[0]);\r",
															"\r",
															"  var ratePlanIndex = 0;    \r",
															"  var itemizedList = null;\r",
															"\r",
															"    for(var i = 0; i < jsonData.ratePlans.length; i++) {\r",
															"      if(jsonData.ratePlans[i].startingPrice.isComp == false) {\r",
															"        ratePlanIndex = i;\r",
															"        itemizedList = jsonData.ratePlans[ratePlanIndex].rooms[0].price.itemized;\r",
															"\r",
															"        pm.globals.set(\"roomTypeIdSingleToShared\", jsonData.ratePlans[ratePlanIndex].rooms[0].roomTypeId);\r",
															"        pm.globals.set(\"programIdSingleToShared\", jsonData.ratePlans[ratePlanIndex].programId);\r",
															"        \r",
															"        break;\r",
															"      }\r",
															"    }\r",
															"  \r",
															"  pm.expect(null).not.equal(itemizedList);\r",
															"  pm.expect(0).not.equal(itemizedList.length);\r",
															"  \r",
															"  //save booking object\r",
															"  var bookings = [];\r",
															"  for (var i = 0; i < itemizedList.length; i++) {\r",
															"    var itemized = itemizedList[i];\r",
															"    var booking = {};\r",
															"    booking.date = itemized.date;\r",
															"    booking.price = itemized.basePrice;\r",
															"    booking.programId = itemized.programId;\r",
															"    booking.overridePrice = -1;\r",
															"    booking.isComp = itemized.isComp;\r",
															"    bookings[i] = booking;\r",
															"  }\r",
															"  \r",
															"  pm.globals.set(\"bookingsSingleToShared\", JSON.stringify(bookings));\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration{{$timestamp}}"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": []
												},
												"url": {
													"raw": "{{env}}/v3/availability/trip?checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{scenarioBasedCheckOutDate}}&propertyId={{propertyId}}&numAdults=2",
													"host": [
														"{{env}}"
													],
													"path": [
														"v3",
														"availability",
														"trip"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{scenarioBasedCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{propertyId}}"
														},
														{
															"key": "numAdults",
															"value": "2"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Charges V2 - Before Create Single Reservation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient Single to Shared | Create | Calculate Charges before creating a Single Reservation\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"\r",
															"    //save response to  reservation Request in global for create reservation\r",
															"    pm.globals.set(\"createReservationReqSingleToShared\",JSON.stringify(jsonData));\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Resetting values \r",
															"pm.globals.set(\"createReservationReqSingleToShared\", null);\r",
															"\r",
															"// setting primary User details in request from environment \r",
															"var shareWithPrimaryProfile = JSON.parse(pm.environment.get(\"ShareWithPrimaryUserProfile\"));\r",
															"pm.globals.set(\"SingleToSharedFirstName\", shareWithPrimaryProfile.firstName);\r",
															"pm.globals.set(\"SingleToSharedLastName\", shareWithPrimaryProfile.lastName);\r",
															"pm.globals.set(\"SingleToSharedCustomerId\", shareWithPrimaryProfile.id);\r",
															"\r",
															"// setting secondary User details in request from environment \r",
															"var shareWithSecondaryProfile = JSON.parse(pm.environment.get(\"ShareWithSecondaryUserProfile\"));\r",
															"pm.globals.set(\"SingleToSharedSecondaryUserFirstName\", shareWithSecondaryProfile.firstName);\r",
															"pm.globals.set(\"SingleToSharedSecondaryUserLastName\", shareWithSecondaryProfile.lastName);\r",
															"pm.globals.set(\"SingleToSharedSecondaryUserCustomerId\", shareWithSecondaryProfile.id);\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"propertyId\": \"{{propertyId}}\",\r\n    \"roomTypeId\": \"{{roomTypeIdSingleToShared}}\",\r\n    \"programId\": \"{{programIdSingleToShared}}\",\r\n    \"itineraryId\": \"9323708418\",\r\n    \"customerId\": \"{{SingleToSharedCustomerId}}\",\r\n    \"guaranteeCode\": null,\r\n    \"tripDetails\": {\r\n        \"checkInDate\": \"{{scenarioBasedCheckInDate}}\",\r\n        \"checkOutDate\": \"{{scenarioBasedCheckOutDate}}\",\r\n        \"numAdults\": 1,\r\n        \"numChildren\": 0,\r\n        \"numRooms\": 1\r\n    },\r\n    \"bookings\": {{bookingsSingleToShared}},\r\n    \"profile\": {{ShareWithPrimaryUserProfile}}\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Reservation V4 - Single",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"    //Create reservation Request and save in global\r",
															"    // get response from charges before create saved into global\r",
															"    jsonData = JSON.parse(pm.globals.get(\"createReservationReqSingleToShared\"));\r",
															"    //set itinerary id\r",
															"    jsonData.itineraryId=\"1234\";\r",
															"    //set billing\r",
															"    var billing = JSON.parse(pm.environment.get(\"SingleVISACard\"));\r",
															"    billing[0].payment.amount = jsonData.depositDetails.amount;\r",
															"    billing[0].payment.authId = \"abcd\";\r",
															"    jsonData.billing = billing;\r",
															"    //set profile\r",
															"    jsonData.customerId = pm.globals.get(\"SingleToSharedCustomerId\");\r",
															"    jsonData.profile = JSON.parse(pm.environment.get(\"ShareWithPrimaryUserProfile\"));\r",
															"    // again save to same variable\r",
															"    pm.globals.set(\"SingleToSharedPrimaryConfirmationNumber\",null);\r",
															"    pm.globals.set(\"createReservationReqSingleToShared\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient Single to Shared | Create | Create Single Reservation\", function () {\r",
															"    pm.globals.set(\"variable_key\", \"variable_value\");  \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"   \r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.booked);\r",
															"        \r",
															"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
															"    var reservationId = jsonData.roomReservation.id;\r",
															"    pm.expect(confirmationNumber).not.eq(null);\r",
															"    pm.expect(itineraryId).not.eq(null);\r",
															"    pm.expect(reservationId).not.eq(null);\r",
															"    pm.globals.set(\"SingleToSharedPrimaryConfirmationNumber\", confirmationNumber);\r",
															"\r",
															"     pm.globals.set(\"createReservationReqSingleToShared\",JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"roomReservation\":{{createReservationReqSingleToShared}}\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 - After Create",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient Single to Shared | Create | Find Reservation with cnf no. after Create Reservation\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"  pm.globals.set(\"modifyResReqSingleToShareWith\", JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v2-integration{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{SingleToSharedPrimaryConfirmationNumber}}&firstName={{SingleToSharedFirstName}}&lastName={{SingleToSharedLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{SingleToSharedPrimaryConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{SingleToSharedFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{SingleToSharedLastName}}"
														}
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"packages": {},
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"packages": {},
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "modify",
									"item": [
										{
											"name": "Modify Pending V4 - Add ShareWith User",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient Single to Shared | Modify | Modify Pending - Add ShareWith User\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation);\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.ratesSummary);\r",
															"    \r",
															"    var changeInDeposit = jsonData.roomReservation.ratesSummary.changeInDeposit;\r",
															"    pm.expect(null).not.equal(changeInDeposit);\r",
															"\r",
															"    // additional deposit usecase\r",
															"    if(changeInDeposit < 0) {\r",
															"        pm.sendRequest(null);\r",
															"        pm.expect.fail(\"changeInDeposit should be positive in case of no refund\");\r",
															"    }\r",
															"\r",
															"    pm.globals.set(\"changeInDepositModifySingleToSharedICE\", changeInDeposit);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(pm.globals.get(\"modifyResReqSingleToShareWith\"));\r",
															"// set itinerary id\r",
															"jsonData.itineraryId=\"1234\";\r",
															"jsonData.state = \"Booked\";\r",
															"// set empty billing\r",
															"jsonData.billing = [];\r",
															"//set customerId for primary User\r",
															"jsonData.customerId = pm.globals.get(\"SingleToSharedCustomerId\");\r",
															"// set secondary (sharewith) user profile\r",
															"var shareWithCustomersArr = []\r",
															"shareWithCustomersArr[0] = JSON.parse(pm.environment.get(\"ShareWithSecondaryUserProfile\"));\r",
															"jsonData.shareWithCustomers = shareWithCustomersArr;\r",
															"// save jsondata in modify req in global\r",
															"pm.globals.set(\"modifyResReqSingleToShareWith\",JSON.stringify(jsonData));\r",
															"// resetting value of changeInDeposit\r",
															"pm.globals.set(\"changeInDepositModifySingleToSharedICE\", null);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "{{channelHeaderKey}}",
														"value": "{{channel}}"
													},
													{
														"key": "{{sourceHeaderKey}}",
														"value": "{{source}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"roomReservation\": {{modifyResReqSingleToShareWith}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/pending",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"pending"
													]
												}
											},
											"response": []
										},
										{
											"name": "Commit V4 - Add ShareWith User",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient Single to Shared | Modify | Commit with additional deposit\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"\r",
															"    //set secondary confirmationNumber from shareWiths in global\r",
															"    var shareWiths = jsonData.roomReservation.shareWiths;\r",
															"    pm.expect(shareWiths).not.eq(null);\r",
															"    pm.expect(0).not.equal(shareWiths.length);\r",
															"    var secondaryConfirmationNumber = shareWiths[0];\r",
															"    pm.globals.set('SingleToSharedSecondaryConfirmationNumber',  secondaryConfirmationNumber);\r",
															"    \r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// create a json request object for commit api\r",
															"var commitReq = {};\r",
															"// set confirmation number\r",
															"commitReq.confirmationNumber = pm.globals.get(\"SingleToSharedPrimaryConfirmationNumber\");\r",
															"// set firstName & lastName\r",
															"commitReq.firstName = pm.globals.get(\"SingleToSharedFirstName\");\r",
															"commitReq.lastName = pm.globals.get(\"SingleToSharedLastName\");\r",
															"// set billing\r",
															"var billing = JSON.parse(pm.environment.get(\"SingleVISACard\"));\r",
															"billing[0].payment.amount = pm.globals.get(\"changeInDepositModifySingleToSharedICE\");\r",
															"billing[0].payment.authId = \"abcd\";\r",
															"commitReq.billing = billing;\r",
															"// save jsondata in modify PO req in global\r",
															"pm.globals.set(\"iceSingleToSharedcommitReq\",JSON.stringify(commitReq));"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "{{sourceHeaderKey}}",
														"value": "{{source}}"
													},
													{
														"key": "{{channelHeaderKey}}",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{iceSingleToSharedcommitReq}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/commit",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"commit"
													]
												}
											},
											"response": []
										},
										{
											"name": "Party Info V2- ShareWith Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient Single to Shared | Modify | Party Info with primary confirmationNumber\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.reservationAdditionalInfo);\r",
															"\r",
															"  var responseArr = jsonData.reservationAdditionalInfo;\r",
															"  // 2 sharewith reservations must be there as per usecase\r",
															"  pm.expect(2).equal(responseArr.length);\r",
															"\r",
															"  // primary cnf no on 0th index\r",
															"  var confirmationNumber = responseArr[0].confNo;\r",
															"  pm.expect(confirmationNumber).equal(pm.globals.get(\"SingleToSharedPrimaryConfirmationNumber\"));\r",
															"\r",
															"  // sharewith cnf no on 1th index\r",
															"  var shareWithConfirmationNumber = responseArr[1].confNo;\r",
															"  pm.expect(shareWithConfirmationNumber).equal(pm.globals.get(\"SingleToSharedSecondaryConfirmationNumber\"));\r",
															"\r",
															"  // primary resType should be \"CC\"\r",
															"  pm.expect(\"CC\").equal(responseArr[0].resType);\r",
															"\r",
															"  // sharewith resType should be \"SH\"\r",
															"  pm.expect(\"SH\").equal(responseArr[1].resType);\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation/party/info?confirmationNumber={{SingleToSharedPrimaryConfirmationNumber}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation",
														"party",
														"info"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{SingleToSharedPrimaryConfirmationNumber}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 Primary - After Adding ShareWith user",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient Single to Shared | Modify | Find Reservation with confirmationNumber after modifying single to shared\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"//   var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"//   if(depositAmount > 0) {\r",
															"//     pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"//     pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"//   }\r",
															"\r",
															"  //set secondary confirmationNumber from shareWiths in global\r",
															"  var shareWithsArray = jsonData.roomReservation.shareWiths;\r",
															"  pm.expect(null).not.equal(shareWithsArray);\r",
															"  pm.expect(0).not.equal(shareWithsArray.length);\r",
															"  var secondaryConfirmationNumber = shareWithsArray[0];\r",
															"  pm.globals.set('SingleToSharedSecondaryConfirmationNumber',  secondaryConfirmationNumber);\r",
															"\r",
															"  pm.globals.set(\"modifyResReqSingleToShareWith\", JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"modifyResReqSingleToShareWith\", null);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{SingleToSharedPrimaryConfirmationNumber}}&firstName={{SingleToSharedFirstName}}&lastName={{SingleToSharedLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{SingleToSharedPrimaryConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{SingleToSharedFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{SingleToSharedLastName}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 Secondary - After adding ShareWith user",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient Single to Shared | Cancel | Find Reservation with secondary confirmationNumber after Cancel secondary resv\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"  //check for secondary confirmationNumber \r",
															"  var shareWithsArray = jsonData.roomReservation.shareWiths;\r",
															"  pm.expect(null).not.equal(shareWithsArray);\r",
															"  pm.expect(0).not.equal(shareWithsArray.length);\r",
															"  var secondaryConfirmationNumber = shareWithsArray[0];\r",
															"  pm.expect(secondaryConfirmationNumber).equal(pm.globals.set('SingleToSharedSecondaryConfirmationNumber'));\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{SingleToSharedSecondaryConfirmationNumber}}&firstName={{SingleToSharedSecondaryUserFirstName}}&lastName={{SingleToSharedSecondaryUserLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{SingleToSharedSecondaryConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{SingleToSharedSecondaryUserFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{SingleToSharedSecondaryUserLastName}}"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "cancel",
									"item": [
										{
											"name": "Find Reservation V2 - Before Cancel Primary",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient Single to Shared | Cancel | Find Reservation with primary confirmationNumber before Cancel Primary resv\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(pm.globals.get(\"SingleToSharedPrimaryConfirmationNumber\")).equal(jsonData.roomReservation.confirmationNumber);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"  var refundAmount = jsonData.roomReservation.depositDetails.refundAmount;\r",
															"  // create a json request object for cancel commit api\r",
															"  var cancelCommitReq = {};\r",
															"  // set confirmation number\r",
															"  cancelCommitReq.confirmationNumber = pm.globals.get(\"SingleToSharedPrimaryConfirmationNumber\");\r",
															"  // set firstName & lastName\r",
															"  cancelCommitReq.firstName = pm.globals.get(\"SingleToSharedFirstName\");\r",
															"  cancelCommitReq.lastName = pm.globals.get(\"SingleToSharedLastName\");\r",
															"  // set billing\r",
															"  var billing = JSON.parse(pm.environment.get(\"SingleVISACard\"));\r",
															"  billing[0].payment.amount = 0 - refundAmount;\r",
															"  billing[0].payment.authId = \"abcd\";\r",
															"  cancelCommitReq.billing = billing;\r",
															"  // save in cancel commit SW req in global\r",
															"  pm.globals.set(\"iceSingleToSharedCancelCommitReq\", JSON.stringify(cancelCommitReq));\r",
															"  \r",
															"  // if refundAmount=0, skip cancel preview API\r",
															"  if(refundAmount === 0) {\r",
															"    pm.execution.setNextRequest(\"Cancel Commit V4 - Single to Shared primary\");\r",
															"  }\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{SingleToSharedPrimaryConfirmationNumber}}&firstName={{SingleToSharedFirstName}}&lastName={{SingleToSharedLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{SingleToSharedPrimaryConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{SingleToSharedFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{SingleToSharedLastName}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Preview V4 - Single to Shared primary",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient Single to Shared | Cancel | Cancel Preview with primary confirmationNumber\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.globals.get(\"SingleToSharedPrimaryConfirmationNumber\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// if refundAmount is 0, skip this request"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "{{sourceHeaderKey}}",
														"value": "{{source}}"
													},
													{
														"key": "{{channelHeaderKey}}",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"confirmationNumber\": \"{{SingleToSharedPrimaryConfirmationNumber}}\",\r\n    \"firstName\": \"{{SingleToSharedFirstName}}\",\r\n    \"lastName\": \"{{SingleToSharedLastName}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/cancel/preview",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"cancel",
														"preview"
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Commit V4 - Single to Shared primary",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient Single to Shared | Cancel | Cancel Commit with primary confirmationNumber and billing\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.globals.get(\"SingleToSharedPrimaryConfirmationNumber\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "{{sourceHeaderKey}}",
														"value": "{{source}}"
													},
													{
														"key": "{{channelHeaderKey}}",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{iceSingleToSharedCancelCommitReq}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/cancel/commit",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"cancel",
														"commit"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 - After Cancel Primary",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient Single to Shared | Cancel | Find Reservation with primary confirmationNumber after Cancel primary resv\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{SingleToSharedPrimaryConfirmationNumber}}&firstName={{SingleToSharedFirstName}}&lastName={{SingleToSharedLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{SingleToSharedPrimaryConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{SingleToSharedFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{SingleToSharedLastName}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 - Before Cancel Secondary SW",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient Single to Shared | Cancel | Find Reservation with secondary confirmationNumber before Cancel secondary resv\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(pm.globals.get(\"SingleToSharedSecondaryConfirmationNumber\")).equal(jsonData.roomReservation.confirmationNumber);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"//   var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"//   if(depositAmount > 0) {\r",
															"//     pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"//     pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"//   }\r",
															"\r",
															"  var refundAmount = jsonData.roomReservation.depositDetails.refundAmount;\r",
															"  // create a json request object for cancel commit api\r",
															"  var cancelCommitReq = {};\r",
															"  // set confirmation number\r",
															"  cancelCommitReq.confirmationNumber = pm.globals.get(\"SingleToSharedSecondaryConfirmationNumber\");\r",
															"  // set firstName & lastName\r",
															"  cancelCommitReq.firstName = pm.globals.get(\"SingleToSharedSecondaryUserFirstName\");\r",
															"  cancelCommitReq.lastName = pm.globals.get(\"SingleToSharedSecondaryUserLastName\");\r",
															"  // set billing\r",
															"  var billing = JSON.parse(pm.environment.get(\"SingleVISACard\"));\r",
															"  billing[0].payment.amount = 0 - refundAmount;\r",
															"  billing[0].payment.authId = \"abcd\";\r",
															"  cancelCommitReq.billing = billing;\r",
															"  // save in cancel commit SW req in global\r",
															"  pm.globals.set(\"iceSingleToSharedCancelCommitReq\", JSON.stringify(cancelCommitReq));\r",
															"  \r",
															"  // if refundAmount=0, skip cancel preview API\r",
															"  if(refundAmount === 0) {\r",
															"    pm.execution.setNextRequest(\"Cancel Commit V4 - Single to Shared secondary\");\r",
															"  }\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// reset cancel commit request\r",
															"pm.globals.set(\"iceSingleToSharedCancelCommitReq\", null);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{SingleToSharedSecondaryConfirmationNumber}}&firstName={{SingleToSharedSecondaryUserFirstName}}&lastName={{SingleToSharedSecondaryUserLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{SingleToSharedSecondaryConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{SingleToSharedSecondaryUserFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{SingleToSharedSecondaryUserLastName}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Preview V4 - Single to Shared secondary",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient Single to Shared | Cancel | Cancel Preview with secondary confirmationNumber\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.globals.get(\"SingleToSharedSecondaryConfirmationNumber\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// if refundAmount is 0, skip this request"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "{{sourceHeaderKey}}",
														"value": "{{source}}"
													},
													{
														"key": "{{channelHeaderKey}}",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"confirmationNumber\": \"{{SingleToSharedSecondaryConfirmationNumber}}\",\r\n    \"firstName\": \"{{SingleToSharedSecondaryUserFirstName}}\",\r\n    \"lastName\": \"{{SingleToSharedSecondaryUserLastName}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/cancel/preview",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"cancel",
														"preview"
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Commit V4 - Single to Shared secondary",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient Single to Shared | Cancel | Cancel Commit with secondary confirmationNumber and billing\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.globals.get(\"SingleToSharedSecondaryConfirmationNumber\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "{{sourceHeaderKey}}",
														"value": "{{source}}"
													},
													{
														"key": "{{channelHeaderKey}}",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{iceSingleToSharedCancelCommitReq}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/cancel/commit",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"cancel",
														"commit"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 - After Cancel Secondary",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | Transient Single to Shared | Cancel | Find Reservation with secondary confirmationNumber after Cancel secondary resv\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{SingleToSharedSecondaryConfirmationNumber}}&firstName={{SingleToSharedSecondaryUserFirstName}}&lastName={{SingleToSharedSecondaryUserLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{SingleToSharedSecondaryConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{SingleToSharedSecondaryUserFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{SingleToSharedSecondaryUserLastName}}"
														}
													]
												}
											},
											"response": []
										}
									]
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "PO",
					"item": [
						{
							"name": "Single Copy",
							"item": [
								{
									"name": "create",
									"item": [
										{
											"name": "Single Availability V3 - PO",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | PO Flow | Create | Single Availability with Comp Off\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.ratePlans[0]);\r",
															"\r",
															"    var ratePlanIndex = 0;\r",
															"\r",
															"    // filtering out rateplans with Comp Off \r",
															"    var compRatePlans = jsonData.ratePlans.filter(\r",
															"        (ratePlan) => ratePlan.startingPrice.isComp === true\r",
															"    );\r",
															"    \r",
															"    // if there is no comp off available, then fail test & stop testing further apis\r",
															"    if(compRatePlans.length === 0) {\r",
															"        pm.execution.setNextRequest(null);\r",
															"        pm.expect.fail(\"No Comp Off available for given propertyId\");\r",
															"    }\r",
															"\r",
															"    var itemizedList = compRatePlans[ratePlanIndex].rooms[0].price.itemized\r",
															"    pm.expect(0).not.equal(itemizedList.length);\r",
															"\r",
															"    //save booking object\r",
															"    var bookings = [];\r",
															"    for (var i = 0; i < itemizedList.length; i++) {\r",
															"        var itemized = itemizedList[i];\r",
															"        var booking = {};\r",
															"        booking.date = itemized.date;\r",
															"        booking.price = itemized.basePrice;\r",
															"        booking.programId = itemized.programId;\r",
															"        booking.overridePrice = -1;\r",
															"        pm.expect(null).not.equal(itemized.isComp);\r",
															"        booking.isComp = itemized.isComp;\r",
															"        bookings[i] = booking;\r",
															"    }\r",
															"\r",
															"    pm.globals.set(\"roomTypeIdPOIce\", compRatePlans[ratePlanIndex].rooms[0].roomTypeId);\r",
															"    pm.globals.set(\"programIdPOIce\", compRatePlans[ratePlanIndex].programId);\r",
															"    pm.globals.set(\"bookingsPOIce\", JSON.stringify(bookings));\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Resetting values \r",
															"pm.globals.set(\"mlifeNumber\", null);\r",
															"pm.globals.set(\"roomTypeIdPOIce\", null);\r",
															"pm.globals.set(\"programIdPOIce\", null);\r",
															"pm.globals.set(\"bookingsPOIce\", null);\r",
															"\r",
															"// setting mlife number in global\r",
															"pm.globals.set(\"mlifeNumber\", JSON.parse(pm.environment.get(\"POUserProfile\")).mlifeNo);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v3/availability/trip?checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{scenarioBasedCheckOutDate}}&propertyId={{propertyId}}&numAdults=2&mlifeNumber={{mlifeNumber}}&perpetualPricing=true",
													"host": [
														"{{env}}"
													],
													"path": [
														"v3",
														"availability",
														"trip"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{scenarioBasedCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{propertyId}}"
														},
														{
															"key": "numAdults",
															"value": "2"
														},
														{
															"key": "mlifeNumber",
															"value": "{{mlifeNumber}}"
														},
														{
															"key": "perpetualPricing",
															"value": "true"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Calculate Room Charges V2 - Before Create PO Reservation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | PO Flow | Create | Charges before Create Reservation\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    \r",
															"    //save response to  reservation Request in global for create reservation PO\r",
															"    pm.globals.set(\"icePOCreateReservationReq\",JSON.stringify(jsonData));\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Resetting values \r",
															"pm.globals.set(\"icePOCreateReservationReq\", null);\r",
															"pm.globals.set(\"POIceUserFirstName\", null);\r",
															"pm.globals.set(\"POIceUserLastName\", null);\r",
															"pm.globals.set(\"POIceUserCustomerId\", null);\r",
															"\r",
															"// setting PO User details in request from environment \r",
															"var poProfile = JSON.parse(pm.environment.get(\"POUserProfile\"));\r",
															"pm.globals.set(\"POIceUserFirstName\", poProfile.firstName);\r",
															"pm.globals.set(\"POIceUserLastName\", poProfile.lastName);\r",
															"pm.globals.set(\"POIceUserCustomerId\", poProfile.id);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"propertyId\": \"{{propertyId}}\",\r\n    \"roomTypeId\": \"{{roomTypeIdPOIce}}\",\r\n    \"programId\": \"{{programIdPOIce}}\",\r\n    \"itineraryId\": \"9323708418\",\r\n    \"customerId\": {{POIceUserCustomerId}},\r\n    \"guaranteeCode\": null,\r\n    \"tripDetails\": {\r\n        \"checkInDate\": \"{{scenarioBasedCheckInDate}}\",\r\n        \"checkOutDate\": \"{{scenarioBasedCheckOutDate}}\",\r\n        \"numAdults\": 1,\r\n        \"numChildren\": 0,\r\n        \"numRooms\": 1\r\n    },\r\n    \"bookings\": {{bookingsPOIce}},\r\n    \"profile\": {{POUserProfile}},\r\n    \"perpetualPricing\": true\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Reservation V4 - PO",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | PO Flow | Create | Create Reservation V4\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.booked);    \r",
															"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
															"    pm.expect(confirmationNumber).not.eq(null);\r",
															"    pm.expect(itineraryId).not.eq(null);\r",
															"    pm.globals.set('POIceConfirmationNumber',  confirmationNumber);\r",
															"\r",
															"    // wait for 3 seconds\r",
															"    setTimeout(function(){}, 3000);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"//Create reservation Request and save in global\r",
															"// get response from charges before create saved into global\r",
															"jsonData = JSON.parse(pm.globals.get(\"icePOCreateReservationReq\"));\r",
															"//set itinerary id\r",
															"jsonData.itineraryId=\"1234\";\r",
															"//set billing\r",
															"billing = JSON.parse(pm.environment.get(\"SingleVISACard\"));\r",
															"billing[0].payment.amount=jsonData.depositDetails.amount;\r",
															"billing[0].payment.authId = \"abcd\";\r",
															"jsonData.billing = billing;\r",
															"//set profile for PO User\r",
															"jsonData.customerId = pm.globals.get(\"POIceUserCustomerId\");\r",
															"jsonData.profile = JSON.parse(pm.environment.get(\"POUserProfile\"));\r",
															"// again save to same variable\r",
															"pm.globals.set(\"icePOCreateReservationReq\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{icePOCreateReservationReq}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 - After Create PO",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | PO Flow | Create | Find Reservation with confirmationNumber\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"  pm.globals.set(\"icePOModifyReservationReq\", JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"icePOModifyReservationReq\", null);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{POIceConfirmationNumber}}&firstName={{POIceUserFirstName}}&lastName={{POIceUserLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{POIceConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{POIceUserFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{POIceUserLastName}}"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "modify",
									"item": [
										{
											"name": "Charges V2 - Before Modify Add Spl Req PO",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | PO Flow | Modify | Charges before Modify with additional deposit\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    \r",
															"    //save response to modify PO req in global\r",
															"    pm.globals.set(\"icePOModifyReservationReq\",JSON.stringify(jsonData));\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// get modify res req from global\r",
															"var jsonData = JSON.parse(pm.globals.get(\"icePOModifyReservationReq\"));\r",
															"// set customerId\r",
															"jsonData.customerId = pm.globals.get(\"POIceUserCustomerId\");\r",
															"// set empty billing\r",
															"jsonData.billing = null;\r",
															"// set empty payments\r",
															"jsonData.payments = null;\r",
															"// add spl req\r",
															"var specialRequestsArr = [];\r",
															"specialRequestsArr[0] = pm.environment.get(\"ComponentDOGFEE\");\r",
															"jsonData.specialRequests = specialRequestsArr;\r",
															"// save modify res req in global\r",
															"pm.globals.set(\"icePOModifyReservationReq\", JSON.stringify(jsonData));"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{icePOModifyReservationReq}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "Modify Pending V4 - Add Spl Req PO",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | PO Flow | Modify | Modify Pending with additional deposit\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation);\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.ratesSummary);\r",
															"    \r",
															"    var changeInDeposit = jsonData.roomReservation.ratesSummary.changeInDeposit;\r",
															"    pm.expect(null).not.equal(changeInDeposit);\r",
															"\r",
															"    // additional deposit usecase\r",
															"    if(changeInDeposit < 0) {\r",
															"        pm.sendRequest(null);\r",
															"        pm.expect.fail(\"changeInDeposit should be positive in case of no refund\");\r",
															"    }\r",
															"\r",
															"    pm.globals.set(\"changeInDepositModifyPOIce\", changeInDeposit);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(pm.globals.get(\"icePOModifyReservationReq\"));\r",
															"// set itinerary id\r",
															"jsonData.itineraryId=\"1234\";\r",
															"jsonData.state = \"Booked\",\r",
															"// set empty billing\r",
															"jsonData.billing = [];\r",
															"//set customerId for PO User\r",
															"jsonData.customerId = pm.globals.get(\"POIceUserCustomerId\");\r",
															"// jsonData.profile = JSON.parse(pm.environment.get(\"POUserProfile\"));\r",
															"// save jsondata in modify PO req in global\r",
															"pm.globals.set(\"icePOModifyReservationReq\",JSON.stringify(jsonData));\r",
															"// resetting value of changeInDeposit\r",
															"pm.globals.set(\"changeInDepositModifyPOIce\", null);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "{{channelHeaderKey}}",
														"value": "{{channel}}"
													},
													{
														"key": "{{sourceHeaderKey}}",
														"value": "{{source}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"roomReservation\": {{icePOModifyReservationReq}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/pending",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"pending"
													]
												}
											},
											"response": []
										},
										{
											"name": "Commit V4 - Add Spl Req PO",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | PO Flow | Modify | Commit with additional deposit\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    \r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// create a json request object for commit api\r",
															"var commitReq = {};\r",
															"// set confirmation number\r",
															"commitReq.confirmationNumber = pm.globals.get(\"POIceConfirmationNumber\");\r",
															"// set firstName & lastName\r",
															"commitReq.firstName = pm.globals.get(\"POIceUserFirstName\");\r",
															"commitReq.lastName = pm.globals.get(\"POIceUserLastName\");\r",
															"// set billing\r",
															"var billing = JSON.parse(pm.environment.get(\"SingleVISACard\"));\r",
															"billing[0].payment.amount = pm.globals.get(\"changeInDepositModifyPOIce\");\r",
															"billing[0].payment.authId = \"abcd\";\r",
															"commitReq.billing = billing;\r",
															"// save jsondata in modify PO req in global\r",
															"pm.globals.set(\"icePOcommitReq\",JSON.stringify(commitReq));"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "{{sourceHeaderKey}}",
														"value": "{{source}}"
													},
													{
														"key": "{{channelHeaderKey}}",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{icePOcommitReq}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/commit",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"commit"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 - After Modify Add Spl Req PO",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | PO Flow | Modify | Find Reservation with confirmationNumber\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"  var splReq = jsonData.roomReservation.specialRequests;\r",
															"  pm.expect(null).not.equal(splReq);\r",
															"  pm.expect(0).not.equal(splReq.length);\r",
															"  \r",
															"  pm.globals.set(\"icePOModifyReservationReq\", JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"icePOModifyReservationReq\", null);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{POIceConfirmationNumber}}&firstName={{POIceUserFirstName}}&lastName={{POIceUserLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{POIceConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{POIceUserFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{POIceUserLastName}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Charges V2 - Before Modify Remove Spl Req PO",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | PO Flow | Modify | Charges before Modify with refund deposit\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    \r",
															"    //save response to  reservation Request in global for create reservation PO\r",
															"    pm.globals.set(\"icePOModifyReservationReq\",JSON.stringify(jsonData));\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(pm.globals.get(\"icePOModifyReservationReq\"));\r",
															"// set customerId\r",
															"jsonData.customerId = pm.globals.get(\"POIceUserCustomerId\");\r",
															"// set empty billing\r",
															"jsonData.billing = null;\r",
															"// set empty payments\r",
															"jsonData.payments = null;\r",
															"// remove special request\r",
															"jsonData.specialRequests = [];\r",
															"// save in global modify PO req\r",
															"pm.globals.set(\"icePOModifyReservationReq\", JSON.stringify(jsonData));\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{icePOModifyReservationReq}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v2/reservation/charges",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation",
														"charges"
													]
												}
											},
											"response": []
										},
										{
											"name": "Modify Pending V4 - Remove Spl Req PO",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | PO Flow | Modify | Modify Pending with Refund additional deposit\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation);\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.ratesSummary);\r",
															"    \r",
															"    var changeInDeposit = jsonData.roomReservation.ratesSummary.changeInDeposit;\r",
															"    pm.expect(null).not.equal(changeInDeposit);\r",
															"\r",
															"    if(changeInDeposit > 0) {\r",
															"        pm.sendRequest(null);\r",
															"        pm.expect.fail(\"changeInDeposit should be negative if there is some refund amount\");\r",
															"    }\r",
															"    \r",
															"    pm.globals.set(\"changeInDepositModifyPOIce\", changeInDeposit);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(pm.globals.get(\"icePOModifyReservationReq\"));\r",
															"// set itinerary id\r",
															"jsonData.itineraryId=\"1234\";\r",
															"jsonData.state = \"Booked\",\r",
															"// set billing\r",
															"jsonData.billing = [];\r",
															"// set customerId for PO User\r",
															"jsonData.customerId = pm.globals.get(\"POIceUserCustomerId\");\r",
															"// save jsondata in modify PO req in global\r",
															"pm.globals.set(\"icePOModifyReservationReq\",JSON.stringify(jsonData));\r",
															"// resetting changeInDeposit value\r",
															"pm.globals.set(\"changeInDepositModifyPOIce\", null);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "{{channelHeaderKey}}",
														"value": "{{channel}}"
													},
													{
														"key": "{{sourceHeaderKey}}",
														"value": "{{source}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"roomReservation\": {{icePOModifyReservationReq}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/pending",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"pending"
													]
												}
											},
											"response": []
										},
										{
											"name": "Commit V4 - Refund/Remove Spl Req PO",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | PO Flow | Modify | Commit with Refund deposit\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    \r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// create a json request object for commit api\r",
															"var commitReq = {};\r",
															"// set confirmation number\r",
															"commitReq.confirmationNumber = pm.globals.get(\"POIceConfirmationNumber\");\r",
															"// set firstName & lastName\r",
															"commitReq.firstName = pm.globals.get(\"POIceUserFirstName\");\r",
															"commitReq.lastName = pm.globals.get(\"POIceUserLastName\");\r",
															"// set billing\r",
															"var billing = JSON.parse(pm.environment.get(\"SingleVISACard\"));\r",
															"billing[0].payment.amount = pm.globals.get(\"changeInDepositModifyPOIce\");\r",
															"billing[0].payment.authId = \"abcd\";\r",
															"commitReq.billing = billing;\r",
															"// save jsondata in modify PO req in global\r",
															"pm.globals.set(\"icePOcommitReq\",JSON.stringify(commitReq));"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "{{sourceHeaderKey}}",
														"value": "{{source}}"
													},
													{
														"key": "{{channelHeaderKey}}",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{icePOcommitReq}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/commit",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"commit"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 - After Modify Remove Spl Req PO",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | PO Flow | Modify | Find Reservation with confirmationNumber\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"  var splReq = jsonData.roomReservation.specialRequests;\r",
															"  pm.expect(null).not.equal(splReq);\r",
															"  pm.expect(0).equal(splReq.length);\r",
															"\r",
															"  pm.globals.set(\"icePOModifyReservationReq\", JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"icePOModifyReservationReq\", null);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{POIceConfirmationNumber}}&firstName={{POIceUserFirstName}}&lastName={{POIceUserLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{POIceConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{POIceUserFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{POIceUserLastName}}"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "cancel",
									"item": [
										{
											"name": "Find Reservation V2 - Before Cancel PO",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | PO Flow | Create | Find Reservation with confirmationNumber\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(pm.globals.get(\"POIceConfirmationNumber\")).equal(jsonData.roomReservation.confirmationNumber);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"  var refundAmount = jsonData.roomReservation.depositDetails.refundAmount;\r",
															"  // create a json request object for cancel commit api\r",
															"  var cancelCommitReq = {};\r",
															"  // set confirmation number\r",
															"  cancelCommitReq.confirmationNumber = pm.globals.get(\"POIceConfirmationNumber\");\r",
															"  // set firstName & lastName\r",
															"  cancelCommitReq.firstName = pm.globals.get(\"POIceUserFirstName\");\r",
															"  cancelCommitReq.lastName = pm.globals.get(\"POIceUserLastName\");\r",
															"  // set billing\r",
															"  var billing = JSON.parse(pm.environment.get(\"SingleVISACard\"));\r",
															"  billing[0].payment.amount = 0 - refundAmount;\r",
															"  billing[0].payment.authId = \"abcd\";\r",
															"  cancelCommitReq.billing = billing;\r",
															"  // save in cancel commit PO req in global\r",
															"  pm.globals.set(\"icePOCancelCommitReq\", JSON.stringify(cancelCommitReq));\r",
															"  \r",
															"  // if refundAmount=0, skip cancel preview API\r",
															"  if(refundAmount === 0) {\r",
															"    pm.execution.setNextRequest(\"Cancel Commit V4 - PO ICE\");\r",
															"  }\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{POIceConfirmationNumber}}&firstName={{POIceUserFirstName}}&lastName={{POIceUserLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{POIceConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{POIceUserFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{POIceUserLastName}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Preview V4 - PO",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | PO Flow | Cancel | Cancel Preview by confirmationNumber\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.globals.get(\"POIceConfirmationNumber\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// if refundAmount is 0, skip this request"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "{{sourceHeaderKey}}",
														"value": "{{source}}"
													},
													{
														"key": "{{channelHeaderKey}}",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"confirmationNumber\": \"{{POIceConfirmationNumber}}\",\r\n    \"firstName\": \"{{POIceUserFirstName}}\",\r\n    \"lastName\": \"{{POIceUserLastName}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/cancel/preview",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"cancel",
														"preview"
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Commit V4 - PO ICE",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | PO Flow | Cancel | Cancel Commit with confirmationNumber and billing\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.globals.get(\"POIceConfirmationNumber\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "{{sourceHeaderKey}}",
														"value": "{{source}}"
													},
													{
														"key": "{{channelHeaderKey}}",
														"value": "{{channel}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{icePOCancelCommitReq}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/cancel/commit",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"cancel",
														"commit"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 - After Cancel PO",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | PO Flow | Create | Find Reservation with confirmationNumber\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel}}"
													},
													{
														"key": "Authorization",
														"value": "{{ICE_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{POIceConfirmationNumber}}&firstName={{POIceUserFirstName}}&lastName={{POIceUserLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{POIceConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{POIceUserFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{POIceUserLastName}}"
														}
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "shared Copy",
							"item": [
								{
									"name": "create Copy",
									"item": []
								},
								{
									"name": "modify Copy",
									"item": []
								},
								{
									"name": "cancel Copy",
									"item": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "WEB",
			"item": [
				{
					"name": "WEB_Token",
					"item": [
						{
							"name": "OKTA_Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"\r",
											"/*Construct Random Dates [for availability] from 60 days to 360*/\r",
											"start = new Date(moment().add(20, 'days'));\r",
											"end = new Date(moment().add(30, 'days'));\r",
											"\r",
											"options = { day: '2-digit', month: '2-digit', year: 'numeric' };\r",
											"//setting options to overcome single digit for dates/month.\r",
											"\r",
											"checkInDate = randomDate(start, end).toLocaleDateString(\"en-US\", options);\r",
											"checkOutDate = moment(checkInDate).add(2, 'days').format('MM/DD/YYYY');\r",
											"\r",
											"pm.globals.set('checkInDate',  checkInDate);\r",
											"pm.globals.set('checkOutDate',  checkOutDate);\r",
											"\r",
											"pm.globals.set(\"todayMinus3\", moment().subtract(3, 'day').format(\"YYYY-MM-DD\")) //pastDate\r",
											"pm.globals.set(\"today\", moment().format(\"YYYY-MM-DD\")) //presentDate\r",
											"pm.globals.set(\"todayPlus2\", moment().add(2, 'day').format(\"YYYY-MM-DD\")) //futureDatePlus2\r",
											"pm.globals.set(\"todayPlus30\", moment().add(30, 'day').format(\"YYYY-MM-DD\"))//futureDatePlus30\r",
											"pm.globals.set(\"todayPlus42\", moment().add(42, 'day').format(\"YYYY-MM-DD\"))//futureDatePlus42\r",
											"pm.globals.set(\"todayPlus46\", moment().add(46, 'day').format(\"YYYY-MM-DD\"))//futureDatePlus46\r",
											"pm.globals.set(\"todayPlus47\", moment().add(47, 'day').format(\"YYYY-MM-DD\"))//futureDatePlus47\r",
											"pm.globals.set(\"todayPlus48\", moment().add(48, 'day').format(\"YYYY-MM-DD\"))\r",
											"\r",
											"pm.globals.set('invalidCheckInDate',   moment().add(-1, 'days').format('MM/DD/YYYY'));\r",
											"pm.globals.set('invalidCheckOutDate',  moment().add(-2, 'days').format('MM/DD/YYYY'));\r",
											"\r",
											"checkInDate_v2 = randomDate(start, end).toLocaleDateString(\"fr-CA\", options);\r",
											"checkInDate_v2_format = moment(checkInDate_v2).format('YYYY-MM-DD');\r",
											"checkOutDate_v2 = moment(checkInDate_v2_format).add(2, 'days').format('YYYY-MM-DD');\r",
											"\r",
											"pm.globals.set('checkInDate_v2',  checkInDate_v2_format);\r",
											"pm.globals.set('checkOutDate_v2',  checkOutDate_v2);\r",
											"\r",
											"pm.globals.set('invalidCheckInDate_v2',   moment().add(-1, 'days').format('YYYY-MM-DD'));\r",
											"pm.globals.set('invalidCheckOutDate_v2',  moment().add(-2, 'days').format('YYYY-MM-DD'));\r",
											"\r",
											"pm.globals.set(\"scenarioBasedCheckInDate\", checkInDate_v2_format);\r",
											"pm.globals.set(\"scenarioBasedCheckOutDate\", checkOutDate_v2);\r",
											"\r",
											"pm.globals.set(\"scenarioRIBasedCheckInDate\", checkInDate_v2_format);\r",
											"pm.globals.set(\"scenarioRIBasedCheckOutDate\", checkOutDate_v2);\r",
											"\r",
											"pm.globals.set(\"noAvailCheckInDate\", moment().add(60, 'days').format('YYYY-MM-DD'));\r",
											"pm.globals.set(\"noAvailCheckOutDate\", moment().add(62, 'days').format('YYYY-MM-DD'));\r",
											"\r",
											"pm.globals.set(\"minMaxLosCheckOutDate\", moment().add(60, 'days').format('YYYY-MM-DD'));\r",
											"\r",
											"function randomDate(start, end) {\r",
											"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()))\r",
											"}\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"JWT auth | Status code is 200 with valid response body\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.expect(jsonData).to.have.property(\"token_type\");\r",
											"    pm.expect(jsonData).to.have.property(\"access_token\");\r",
											"});\r",
											"\r",
											"pm.globals.set(\"WEB_JWT_Token\", \"Bearer \" + pm.response.json().access_token);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{{clientId}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{clientSecret}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "{{grantType}}",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "{{scope}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{identity_endpoint}}",
									"host": [
										"{{identity_endpoint}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Transient",
					"item": [
						{
							"name": "Single",
							"item": [
								{
									"name": "create",
									"item": [
										{
											"name": "Single Availability V3 - Transient",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget WEB | Transient Flow | Create | Single Availability\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.ratePlans[0]);\r",
															"\r",
															"    var ratePlanIndex = 1;\r",
															"    var itemizedList = jsonData.ratePlans[ratePlanIndex].rooms[0].price.itemized;\r",
															"    pm.expect(0).not.equal(itemizedList.length);\r",
															"\r",
															"    //save booking object\r",
															"    var bookings = [];\r",
															"    for (var i = 0; i < itemizedList.length; i++) {\r",
															"        var itemized = itemizedList[i];\r",
															"        var booking = {};\r",
															"        booking.date = itemized.date;\r",
															"        booking.price = itemized.basePrice;\r",
															"        booking.programId = itemized.programId;\r",
															"        booking.overridePrice = -1;\r",
															"        bookings[i] = booking;\r",
															"    }\r",
															"     \r",
															"  pm.globals.set(\"webTransientRoomTypeId\",jsonData.ratePlans[ratePlanIndex].rooms[0].roomTypeId);\r",
															"  pm.globals.set(\"webTransientProgramId\",jsonData.ratePlans[ratePlanIndex].programId);\r",
															"  pm.globals.set(\"WebTransientBookings\",JSON.stringify(bookings)); \r",
															" \r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// resetting global variables\r",
															"pm.globals.set(\"webTransientRoomTypeId\",null);\r",
															"pm.globals.set(\"webTransientProgramId\",null);\r",
															"pm.globals.set(\"WebTransientBookings\",null);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source-web}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel-web}}"
													},
													{
														"key": "Authorization",
														"value": "{{WEB_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration{{$timestamp}}"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": []
												},
												"url": {
													"raw": "{{env}}/v3/availability/trip?checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{scenarioBasedCheckOutDate}}&propertyId={{transientPropertyId}}&numAdults=2",
													"host": [
														"{{env}}"
													],
													"path": [
														"v3",
														"availability",
														"trip"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{scenarioBasedCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{transientPropertyId}}"
														},
														{
															"key": "numAdults",
															"value": "2"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Web Hold - Before Create Transient Reservation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget WEB | Transient Flow | Create | Hold API (add to cart)\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"\r",
															"    //save response to  reservation Request in global for create reservation\r",
															"    pm.globals.set(\"webCreateTransientReservationReq\",JSON.stringify(jsonData));\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// resetting req value\r",
															"pm.globals.set(\"webCreateTransientReservationReq\",null);\r",
															"\r",
															"// setting transient User details in request from environment \r",
															"var transientProfile = JSON.parse(pm.environment.get(\"transientCustomerProfile\"));\r",
															"pm.globals.set(\"webTransientFirstName\", transientProfile.firstName);\r",
															"pm.globals.set(\"webTransientLastName\", transientProfile.lastName);\r",
															"pm.globals.set(\"webTransientCustomerId\", transientProfile.id);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel-web}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{WEB_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"propertyId\": \"{{transientPropertyId}}\",\r\n    \"roomTypeId\": \"{{webTransientRoomTypeId}}\",\r\n    \"programId\": \"{{webTransientProgramId}}\",\r\n    \"itineraryId\": \"9323708418\",\r\n    \"customerId\": \"{{webTransientCustomerId}}\",\r\n    \"guaranteeCode\": null,\r\n    \"tripDetails\": {\r\n        \"checkInDate\": \"{{scenarioBasedCheckInDate}}\",\r\n        \"checkOutDate\": \"{{scenarioBasedCheckOutDate}}\",\r\n        \"numAdults\": 1,\r\n        \"numChildren\": 0,\r\n        \"numRooms\": 1\r\n    },\r\n    \"bookings\": {{WebTransientBookings}},\r\n    \"profile\": {{transientCustomerProfile}}\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v2/reservation/hold",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation",
														"hold"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Reservation V4 - Transient",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget WEB | Transient Flow | Create | Create Reservation V4\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"   \r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.booked);\r",
															"        \r",
															"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
															"    var reservationId = jsonData.roomReservation.id;\r",
															"    pm.expect(confirmationNumber).not.eq(null);\r",
															"    pm.expect(itineraryId).not.eq(null);\r",
															"    pm.expect(reservationId).not.eq(null);\r",
															"    pm.globals.set(\"webTransientConfirmationNumber\", confirmationNumber);\r",
															"\r",
															"     pm.globals.set(\"webCreateTransientReservationReq\",JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"    //Create reservation Request and save in global\r",
															"    // get response from charges before create saved into global\r",
															"    jsonData = JSON.parse(pm.globals.get(\"webCreateTransientReservationReq\"));\r",
															"    //set itinerary id\r",
															"    jsonData.itineraryId=\"1234\";\r",
															"    //set billing\r",
															"    billing = JSON.parse(pm.environment.get(\"SingleVISACard\"));\r",
															"    billing[0].payment.amount=jsonData.depositDetails.amount;\r",
															"    billing[0].payment.authId =pm.environment.get(\"transientAuthId\");\r",
															"    jsonData.billing = billing;\r",
															"    //set profile\r",
															"    jsonData.customerId = pm.globals.get(\"webTransientCustomerId\");\r",
															"    jsonData.profile = JSON.parse(pm.environment.get(\"transientCustomerProfile\"));\r",
															"    // again save to same variable\r",
															"    pm.globals.set(\"webTransientConfirmationNumber\",null);\r",
															"    pm.globals.set(\"webCreateTransientReservationReq\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source-web}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel-web}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{WEB_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"roomReservation\":{{webCreateTransientReservationReq}}\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 - Transient",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget WEB | Transient Flow | Create | Find transient reservation with cnfNumber\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.payments)\r",
															"\r",
															"  var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"  pm.expect(confirmationNumber).equal(pm.globals.get(\"webTransientConfirmationNumber\"));\r",
															"\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"  pm.globals.set(\"webModifyTransientResReq\", JSON.stringify(jsonData.roomReservation));\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// reset modify req\r",
															"pm.globals.set(\"webModifyTransientResReq\", null);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source-web}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel-web}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{WEB_JWT_Token}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{webTransientConfirmationNumber}}&firstName={{webTransientFirstName}}&lastName={{webTransientLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{webTransientConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{webTransientFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{webTransientLastName}}"
														}
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"packages": {},
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"packages": {},
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "modify",
									"item": [
										{
											"name": "Get SpecialRequestsV2",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"//resetting values\r",
															" pm.globals.set(\"webModifyAddOns\",null); "
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget WEB | Transient Flow | Modify  | get component list\", function () {\r",
															"pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"      for (var i = 0; i < jsonData.length; i++) {\r",
															"        if(jsonData[i].id.includes(\"Component\") || jsonData[i].id.includes(\"COMPONENT\")){\r",
															"            pm.globals.set(\"webModifyAddOns\",jsonData[i].id); \r",
															"        }\r",
															"    }\r",
															" \r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source-web}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel-web}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration{{$timestamp}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{WEB_JWT_Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v2/availability/components?checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{scenarioBasedCheckOutDate}}&propertyId={{transientPropertyId}}&roomTypeId={{webTransientRoomTypeId}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"availability",
														"components"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{scenarioBasedCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{transientPropertyId}}"
														},
														{
															"key": "roomTypeId",
															"value": "{{webTransientRoomTypeId}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "PreviewV2-Addons added",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget WEB | Transient Flow | Modify: Preview Reservation with addons added \", function () {\r",
															"\r",
															"    pm.globals.set(\"variable_key\", \"variable_value\");  \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.booked);    \r",
															"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
															"    var reservationId = jsonData.roomReservation.id;\r",
															"    pm.expect(confirmationNumber).not.eq(null);\r",
															"    pm.expect(itineraryId).not.eq(null);\r",
															"    pm.expect(reservationId).not.eq(null);\r",
															"    var value = pm.globals.get(\"webTransientConfirmationNumber\");\r",
															"    pm.expect(value).eq(confirmationNumber);\r",
															"\r",
															"    var reservationTotal = jsonData.roomReservation.ratesSummary.reservationTotal;\r",
															"    var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"\r",
															"    pm.expect(reservationTotal).not.eq(null);\r",
															"    pm.expect(depositAmount).not.eq(null);\r",
															"\r",
															"    pm.globals.set('previewReservationTotal',  reservationTotal);\r",
															"    pm.globals.set('previewDepositAmount',  depositAmount);\r",
															"    pm.globals.set(\"webModifyTransientResReq\", JSON.stringify(jsonData.roomReservation));\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// get create res req from global\r",
															"var jsonData = JSON.parse(pm.globals.get(\"webModifyTransientResReq\"));\r",
															"// set empty billing\r",
															"jsonData.billing = null;\r",
															"// set empty payments\r",
															"jsonData.payments = null;\r",
															"// add spl req\r",
															"var specialRequestsArr = [];\r",
															"specialRequestsArr[0] = pm.environment.get(\"ComponentDOGFEE\");\r",
															"jsonData.specialRequests = specialRequestsArr;\r",
															"// save modify res req in global\r",
															"pm.globals.set(\"webModifyTransientResReq\", JSON.stringify(jsonData));"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source-web}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel-web}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration{{$timestamp}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{WEB_JWT_Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"source\": null,\r\n    \"channel\": null,\r\n    \"customerId\": 0,\r\n    \"mlifeNumber\": null,\r\n    \"customerTier\": null,\r\n    \"perpetualPricing\": false,\r\n    \"confirmationNumber\": \"{{webTransientConfirmationNumber}}\",\r\n    \"tripDetails\": {\r\n        \"checkInDate\": \"{{scenarioBasedCheckInDate}}\",\r\n        \"checkOutDate\": \"{{scenarioBasedCheckOutDate}}\",\r\n        \"numAdults\": 2,\r\n        \"numChildren\": 0,\r\n        \"numRooms\": 1,\r\n        \"numAdultsValid\": true\r\n    },\r\n    \"propertyId\": \"{{transientPropertyId}}\",\r\n    \"roomRequests\": [\"{{webModifyAddOns}}\"],\r\n    \"firstName\": \"{{webTransientFirstName}}\",\r\n    \"lastName\": \"{{webTransientLastName}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v2/reservation/preview",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation",
														"preview"
													]
												}
											},
											"response": []
										},
										{
											"name": "ModifyPreviewPendingV4-Addons added",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(pm.globals.get(\"webModifyTransientResReq\"));\r",
															"// set itinerary id\r",
															"jsonData.itineraryId=\"1234\";\r",
															"jsonData.state = \"Booked\",\r",
															"// set empty billing\r",
															"jsonData.billing = [];\r",
															"//set customerId for Web transient User\r",
															"jsonData.customerId = pm.globals.get(\"webTransientCustomerId\");\r",
															"// save jsondata in modify Web req in global\r",
															"pm.globals.set(\"webModifyTransientResReq\",JSON.stringify(jsonData));\r",
															"// resetting value of changeInDeposit\r",
															"pm.globals.set(\"changeInDepositWebModifyTransient\", null);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget WEB | Transient Flow | Modify | Modify Preview Pending with addons added\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"   var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.booked);    \r",
															"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
															"    var reservationId = jsonData.roomReservation.id;\r",
															"    pm.expect(confirmationNumber).not.eq(null);\r",
															"    pm.expect(itineraryId).not.eq(null);\r",
															"    pm.expect(reservationId).not.eq(null);\r",
															"    var value = pm.globals.get(\"webTransientConfirmationNumber\");\r",
															"    pm.expect(value).eq(confirmationNumber);\r",
															"var changeInDeposit = jsonData.roomReservation.ratesSummary.changeInDeposit;\r",
															"    pm.expect(null).not.equal(changeInDeposit);\r",
															"\r",
															"    // additional deposit usecase\r",
															"    if(changeInDeposit < 0) {\r",
															"        pm.sendRequest(null);\r",
															"        pm.expect.fail(\"changeInDeposit should be positive in case of no refund\");\r",
															"    }\r",
															"\r",
															"    pm.globals.set(\"changeInDepositWebModifyTransient\", changeInDeposit);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source-web}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel-web}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration{{$timestamp}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{WEB_JWT_Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"source\": null,\r\n    \"channel\": null,\r\n    \"customerId\": 0,\r\n    \"mlifeNumber\": null,\r\n    \"customerTier\": null,\r\n    \"perpetualPricing\": false,\r\n    \"confirmationNumber\": \"{{webTransientConfirmationNumber}}\",\r\n    \"tripDetails\": {\r\n        \"checkInDate\": \"{{scenarioBasedCheckInDate}}\",\r\n        \"checkOutDate\": \"{{scenarioBasedCheckOutDate}}\",\r\n        \"numAdults\": 2,\r\n        \"numChildren\": 0,\r\n        \"numRooms\": 1,\r\n        \"numAdultsValid\": true\r\n    },\r\n    \"propertyId\": \"{{transientPropertyId}}\",\r\n    \"roomRequests\": [\"{{webModifyAddOns}}\"],\r\n    \"firstName\": \"{{webTransientFirstName}}\",\r\n    \"lastName\": \"{{webTransientLastName}}\",\r\n    \"previewReservationTotal\":{{previewReservationTotal}},\r\n    \"previewReservationDeposit\":{{previewDepositAmount}}\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/preview/pending",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"preview",
														"pending"
													]
												}
											},
											"response": []
										},
										{
											"name": "ModifyCommitV4-addons added",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// create a json request object for commit web transient api\r",
															"var commitWebReq = {};\r",
															"// set confirmation number\r",
															"commitWebReq.confirmationNumber = pm.globals.get(\"webTransientConfirmationNumber\");\r",
															"// set firstName & lastName\r",
															"commitWebReq.firstName = pm.globals.get(\"webTransientFirstName\");\r",
															"commitWebReq.lastName = pm.globals.get(\"webTransientLastName\");\r",
															"// set billing\r",
															"var billing = JSON.parse(pm.environment.get(\"SingleVISACard\"));\r",
															"billing[0].payment.amount = pm.globals.get(\"changeInDepositWebModifyTransient\");\r",
															"billing[0].payment.authId = \"abcd\";\r",
															"commitWebReq.billing = billing;\r",
															"// save jsondata in modify Web transient req in global\r",
															"pm.globals.set(\"commitWebTransientReq\",JSON.stringify(commitWebReq));"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget WEB | Transient Flow | Modify | Commit with addons added\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    \r",
															"    pm.globals.set(\"webTransientConfirmationNumber\", jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source-web}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel-web}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration{{$timestamp}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{WEB_JWT_Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{commitWebTransientReq}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/commit",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"commit"
													]
												}
											},
											"response": []
										},
										{
											"name": "FindReservationvV2-with Addons",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"webModifyTransientResReq\", null);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget WEB | Transient Flow | Modify  | Find Reservation with confirmationNumber\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"  pm.globals.set(\"webModifyTransientResReq\", JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source-web}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel-web}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v-integration{{$timestamp}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{WEB_JWT_Token}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{webTransientConfirmationNumber}}&firstName={{webTransientFirstName}}&lastName={{webTransientLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{webTransientConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{webTransientFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{webTransientLastName}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "GetSpecialRequests",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"//resetting values\r",
															" pm.globals.set(\"webModifyAddOns\",null); "
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget WEB | Transient Flow | Modify  | get component list\", function () {\r",
															"pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"      for (var i = 0; i < jsonData.length; i++) {\r",
															"        if(jsonData[i].id.includes(\"Component\") || jsonData[i].id.includes(\"COMPONENT\")){\r",
															"            pm.globals.set(\"webModifyAddOns\",jsonData[i].id); \r",
															"        }\r",
															"    }\r",
															" \r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source-web}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel-web}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration{{$timestamp}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{WEB_JWT_Token}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{env}}/v2/availability/components?checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{scenarioBasedCheckOutDate}}&propertyId={{transientPropertyId}}&roomTypeId={{webTransientRoomTypeId}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"availability",
														"components"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{scenarioBasedCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{transientPropertyId}}"
														},
														{
															"key": "roomTypeId",
															"value": "{{webTransientRoomTypeId}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "PreviewV2-Addons removed",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(pm.globals.get(\"webModifyTransientResReq\"));\r",
															"// set empty billing\r",
															"jsonData.billing = null;\r",
															"// set empty payments\r",
															"jsonData.payments = null;\r",
															"// remove special request\r",
															"jsonData.specialRequests = [];\r",
															"// save in global modify PO req\r",
															"pm.globals.set(\"webModifyTransientResReq\", JSON.stringify(jsonData));\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget WEB | Transient Flow | Modify: Preview Reservation with addons removed \", function () {\r",
															"    pm.globals.set(\"variable_key\", \"variable_value\");  \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.booked);    \r",
															"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
															"    var reservationId = jsonData.roomReservation.id;\r",
															"    pm.expect(confirmationNumber).not.eq(null);\r",
															"    pm.expect(itineraryId).not.eq(null);\r",
															"    pm.expect(reservationId).not.eq(null);\r",
															"    var value = pm.globals.get(\"webTransientConfirmationNumber\");\r",
															"    pm.expect(value).eq(confirmationNumber);\r",
															"\r",
															"    var reservationTotal = jsonData.roomReservation.ratesSummary.reservationTotal;\r",
															"    var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"\r",
															"    pm.expect(reservationTotal).not.eq(null);\r",
															"    pm.expect(depositAmount).not.eq(null);\r",
															"\r",
															"    pm.globals.set('previewReservationTotal',  reservationTotal);\r",
															"    pm.globals.set('previewDepositAmount',  depositAmount);\r",
															"     pm.globals.set(\"webModifyTransientResReq\", JSON.stringify(jsonData.roomReservation));\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source-web}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel-web}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration{{$timestamp}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{WEB_JWT_Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"source\": null,\r\n    \"channel\": null,\r\n    \"customerId\": 0,\r\n    \"mlifeNumber\": null,\r\n    \"customerTier\": null,\r\n    \"perpetualPricing\": false,\r\n    \"confirmationNumber\": \"{{webTransientConfirmationNumber}}\",\r\n    \"tripDetails\": {\r\n        \"checkInDate\": \"{{scenarioBasedCheckInDate}}\",\r\n        \"checkOutDate\": \"{{scenarioBasedCheckOutDate}}\",\r\n        \"numAdults\": 2,\r\n        \"numChildren\": 0,\r\n        \"numRooms\": 1,\r\n        \"numAdultsValid\": true\r\n    },\r\n    \"propertyId\": \"{{transientPropertyId}}\",\r\n    \"roomRequests\": [],\r\n    \"firstName\": \"{{webTransientFirstName}}\",\r\n    \"lastName\": \"{{webTransientLastName}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v2/reservation/preview",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation",
														"preview"
													]
												}
											},
											"response": []
										},
										{
											"name": "ModifyPreview Pending-V4-Addons removed",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(pm.globals.get(\"webModifyTransientResReq\"));\r",
															"// set itinerary id\r",
															"jsonData.itineraryId=\"1234\";\r",
															"jsonData.state = \"Booked\",\r",
															"// set empty billing\r",
															"jsonData.billing = [];\r",
															"//set customerId for Web transient User\r",
															"jsonData.customerId = pm.globals.get(\"webTransientCustomerId\");\r",
															"// save jsondata in modify Web req in global\r",
															"pm.globals.set(\"webModifyTransientResReq\",JSON.stringify(jsonData));\r",
															"// resetting value of changeInDeposit\r",
															"pm.globals.set(\"changeInDepositWebModifyTransient\", null);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget WEB | Transient Flow | Modify | Modify Preview Pending with addons removed\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"   var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.booked);    \r",
															"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
															"    var reservationId = jsonData.roomReservation.id;\r",
															"    pm.expect(confirmationNumber).not.eq(null);\r",
															"    pm.expect(itineraryId).not.eq(null);\r",
															"    pm.expect(reservationId).not.eq(null);\r",
															"    var value = pm.globals.get(\"webTransientConfirmationNumber\");\r",
															"    pm.expect(value).eq(confirmationNumber);\r",
															"    var changeInDeposit = jsonData.roomReservation.ratesSummary.changeInDeposit;\r",
															"    pm.expect(null).not.equal(changeInDeposit);\r",
															"\r",
															"    // additional deposit usecase\r",
															"    if(changeInDeposit < 0) {\r",
															"        pm.sendRequest(null);\r",
															"        pm.expect.fail(\"changeInDeposit should be positive in case of no refund\");\r",
															"    }\r",
															"\r",
															"    pm.globals.set(\"changeInDepositWebModifyTransient\", changeInDeposit);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source-web}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel-web}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration{{$timestamp}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{WEB_JWT_Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"source\": null,\r\n    \"channel\": null,\r\n    \"customerId\": 0,\r\n    \"mlifeNumber\": null,\r\n    \"customerTier\": null,\r\n    \"perpetualPricing\": false,\r\n    \"confirmationNumber\": \"{{webTransientConfirmationNumber}}\",\r\n    \"tripDetails\": {\r\n        \"checkInDate\": \"{{scenarioBasedCheckInDate}}\",\r\n        \"checkOutDate\": \"{{scenarioBasedCheckOutDate}}\",\r\n        \"numAdults\": 2,\r\n        \"numChildren\": 0,\r\n        \"numRooms\": 1,\r\n        \"numAdultsValid\": true\r\n    },\r\n    \"propertyId\": \"{{transientPropertyId}}\",\r\n    \"roomRequests\": [],\r\n    \"firstName\": \"{{webTransientFirstName}}\",\r\n    \"lastName\": \"{{webTransientLastName}}\",\r\n    \"previewReservationTotal\":{{previewReservationTotal}},\r\n    \"previewReservationDeposit\":{{previewDepositAmount}}\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/preview/pending",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"preview",
														"pending"
													]
												}
											},
											"response": []
										},
										{
											"name": "ModifyCommit-V4-Addons removed",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// create a json request object for commit web transient api\r",
															"var commitWebReq = {};\r",
															"// set confirmation number\r",
															"commitWebReq.confirmationNumber = pm.globals.get(\"webTransientConfirmationNumber\");\r",
															"// set firstName & lastName\r",
															"commitWebReq.firstName = pm.globals.get(\"webTransientFirstName\");\r",
															"commitWebReq.lastName = pm.globals.get(\"webTransientLastName\");\r",
															"// set billing\r",
															"var billing = JSON.parse(pm.environment.get(\"SingleVISACard\"));\r",
															"billing[0].payment.amount = pm.globals.get(\"changeInDepositWebModifyTransient\");\r",
															"billing[0].payment.authId = \"abcd\";\r",
															"commitWebReq.billing = billing;\r",
															"// save jsondata in modify Web transient req in global\r",
															"pm.globals.set(\"commitWebTransientReq\",JSON.stringify(commitWebReq));"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget WEB | Transient Flow | Modify | Commit with addons removed\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    \r",
															"    pm.globals.set(\"webTransientConfirmationNumber\", jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source-web}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel-web}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration{{$timestamp}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{WEB_JWT_Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{commitWebTransientReq}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/commit",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"commit"
													]
												}
											},
											"response": []
										},
										{
											"name": "FindReservation-V2-Addons removed",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"//resetting values\r",
															"pm.globals.set(\"webModifyTransientResReq\", null);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget WEB | Transient Flow | Modify  | Find Reservation with confirmationNumber after addons removed\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"  pm.globals.set(\"webModifyTransientResReq\", JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source-web}}",
														"type": "text"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel-web}}",
														"type": "text"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration{{$timestamp}}",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{WEB_JWT_Token}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{webTransientConfirmationNumber}}&firstName={{webTransientFirstName}}&lastName={{webTransientLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{webTransientConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{webTransientFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{webTransientLastName}}"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "cancel",
									"item": [
										{
											"name": "Find Reservation V2 - Before Cancel Transient",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget WEB | Transient Flow | Cancel | Find Reservation with confirmationNumber (before cancel)\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(pm.globals.get(\"webTransientConfirmationNumber\")).equal(jsonData.roomReservation.confirmationNumber);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"  var refundAmount = jsonData.roomReservation.depositDetails.refundAmount;\r",
															"  // create a json request object for cancel commit api\r",
															"  var cancelCommitReq = {};\r",
															"  // set confirmation number\r",
															"  cancelCommitReq.confirmationNumber = pm.globals.get(\"webTransientConfirmationNumber\");\r",
															"  // set firstName & lastName\r",
															"  cancelCommitReq.firstName = pm.globals.get(\"webTransientFirstName\");\r",
															"  cancelCommitReq.lastName = pm.globals.get(\"webTransientLastName\");\r",
															"  // set billing\r",
															"  var billing = JSON.parse(pm.environment.get(\"SingleVISACard\"));\r",
															"  billing[0].payment.amount = 0 - refundAmount;\r",
															"  billing[0].payment.authId = pm.environment.get(\"transientAuthId\");\r",
															"  cancelCommitReq.billing = billing;\r",
															"  // save in cancel commit transient req in global\r",
															"  pm.globals.set(\"webCancelCommitTransientReq\", JSON.stringify(cancelCommitReq));\r",
															"  \r",
															"  // if refundAmount=0, skip cancel preview API\r",
															"  if(refundAmount === 0) {\r",
															"    pm.execution.setNextRequest(\"Cancel Commit V4 - Transient Web\");\r",
															"  }\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source-web}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel-web}}"
													},
													{
														"key": "Authorization",
														"value": "{{WEB_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{webTransientConfirmationNumber}}&firstName={{webTransientFirstName}}&lastName={{webTransientLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{webTransientConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{webTransientFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{webTransientLastName}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Preview V4 - Transient",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget ICE | PO Flow | Cancel | Cancel Preview by confirmationNumber\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.globals.get(\"webTransientConfirmationNumber\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// if refundAmount is 0, skip this request"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "{{sourceHeaderKey}}",
														"value": "{{source-web}}"
													},
													{
														"key": "{{channelHeaderKey}}",
														"value": "{{channel-web}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{WEB_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"confirmationNumber\": \"{{webTransientConfirmationNumber}}\",\r\n    \"firstName\": \"{{webTransientFirstName}}\",\r\n    \"lastName\": \"{{webTransientLastName}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/cancel/preview",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"cancel",
														"preview"
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Commit V4 - Transient Web",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget WEB | Transient Flow | Cancel | Cancel Commit with confirmationNumber and billing\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.globals.get(\"webTransientConfirmationNumber\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "{{sourceHeaderKey}}",
														"value": "{{source-web}}"
													},
													{
														"key": "{{channelHeaderKey}}",
														"value": "{{channel-web}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{WEB_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{webCancelCommitTransientReq}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/cancel/commit",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"cancel",
														"commit"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 - After Cancel Transient",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget WEB | Transient Flow | Cancel | Find Reservation with confirmationNumber (after Cancel)\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source-web}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel-web}}"
													},
													{
														"key": "Authorization",
														"value": "{{WEB_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{webTransientConfirmationNumber}}&firstName={{webTransientFirstName}}&lastName={{webTransientLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{webTransientConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{webTransientFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{webTransientLastName}}"
														}
													]
												}
											},
											"response": []
										}
									]
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "PO",
					"item": [
						{
							"name": "Single",
							"item": [
								{
									"name": "create",
									"item": [
										{
											"name": "Single Availability V3 - PO",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget WEB | PO Flow | Create | Single Availability with Mlife and PO flag\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.eq(jsonData.ratePlans[0]);\r",
															"  if(jsonData.ratePlans.length){\r",
															"    var ratePlanIndex =0;\r",
															"      \r",
															"    var itemizedList = jsonData.ratePlans[ratePlanIndex].rooms[0].price.itemized\r",
															"  pm.expect(0).not.equal(itemizedList.length);\r",
															"  //save booking object\r",
															"  var bookings = [];\r",
															"    for (var i = 0; i < itemizedList.length; i++) {\r",
															"        var itemized = itemizedList[i];\r",
															"        var booking = {};\r",
															"        booking.date = itemized.date;\r",
															"        booking.price = itemized.basePrice;\r",
															"        booking.programId =itemized.programId; \r",
															"        booking.overridePrice= -1;\r",
															"        bookings[i] = booking;\r",
															"    }\r",
															"   \r",
															"   pm.globals.set(\"webRoomTypeIdPO\",jsonData.ratePlans[ratePlanIndex].rooms[0].roomTypeId);\r",
															"   pm.globals.set(\"webProgramIdPO\",jsonData.ratePlans[ratePlanIndex].programId);\r",
															"   pm.globals.set(\"webBookingsPO\",JSON.stringify(bookings)); \r",
															"\r",
															"  }else{\r",
															"       pm.expect(1).not.equal(jsonData.ratePlans.length);\r",
															"  }\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// resetting global variables\r",
															"pm.globals.set(\"webRoomTypeIdPO\",null);\r",
															"pm.globals.set(\"webProgramIdPO\",null);\r",
															"pm.globals.set(\"WebBookingsPO\",null);\r",
															"pm.globals.set(\"mlifeNumber\", null);\r",
															"\r",
															"// setting mlife number in global\r",
															"pm.globals.set(\"mlifeNumber\", JSON.parse(pm.environment.get(\"POUserProfile\")).mlifeNo);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source-web}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel-web}}"
													},
													{
														"key": "Authorization",
														"value": "{{WEB_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v3/availability/trip?checkInDate={{scenarioBasedCheckInDate}}&checkOutDate={{scenarioBasedCheckOutDate}}&propertyId={{propertyId}}&numAdults=2&perpetualPricing=true&mlifeNumber={{mlifeNumber}}&includeDefaultRatePlans=true",
													"host": [
														"{{env}}"
													],
													"path": [
														"v3",
														"availability",
														"trip"
													],
													"query": [
														{
															"key": "checkInDate",
															"value": "{{scenarioBasedCheckInDate}}"
														},
														{
															"key": "checkOutDate",
															"value": "{{scenarioBasedCheckOutDate}}"
														},
														{
															"key": "propertyId",
															"value": "{{propertyId}}"
														},
														{
															"key": "numAdults",
															"value": "2"
														},
														{
															"key": "perpetualPricing",
															"value": "true"
														},
														{
															"key": "mlifeNumber",
															"value": "{{mlifeNumber}}"
														},
														{
															"key": "includeDefaultRatePlans",
															"value": "true"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Web Hold - Before Create - PO",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget WEB | PO Flow | Create | Hold API (add to cart)\", function () {    \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    \r",
															"    pm.globals.set(\"webCreatePOReservationReq\",JSON.stringify(jsonData));\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// resetting req value",
															"pm.globals.set(\"webCreatePOReservationReq\",null);",
															"",
															"// setting PO User details in request from environment ",
															"var POProfile = JSON.parse(pm.environment.get(\"POUserProfile\"));",
															"pm.globals.set(\"webPOFirstName\", POProfile.firstName);",
															"pm.globals.set(\"webPOLastName\", POProfile.lastName);",
															"pm.globals.set(\"webPOCustomerId\", POProfile.id);",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source-web}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel-web}}"
													},
													{
														"key": "Authorization",
														"value": "{{WEB_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"customerId\": {{webPOCustomerId}},\r\n    \"mlifeNumber\": {{mlifeNumber}},\r\n    \"customerTier\": null,\r\n    \"perpetualPricing\": true,\r\n    \"propertyId\": \"{{propertyId}}\",\r\n    \"roomTypeId\": \"{{webRoomTypeIdPO}}\",\r\n    \"programId\": \"{{webProgramIdPO}}\",\r\n    \"guaranteeCode\": null,\r\n    \"promo\": null,\r\n    \"ignoreChannelMargins\": false,\r\n    \"customerDominantPlay\": null,\r\n    \"customerRank\": 0,\r\n    \"excludeNonOffer\": false,\r\n    \"shoppedItineraryIds\": null,\r\n    \"profile\":{{POUserProfile}},\r\n    \"tripDetails\": {\r\n        \"checkInDate\": \"{{scenarioBasedCheckInDate}}\",\r\n        \"checkOutDate\": \"{{scenarioBasedCheckOutDate}}\",\r\n        \"numAdults\": 2,\r\n        \"numChildren\": 0,\r\n        \"numRooms\": 1,\r\n        \"numAdultsValid\": true\r\n    },\r\n    \"confirmationNumber\": null,\r\n    \"redemptionCode\": null,\r\n    \"roomValid\": true,\r\n    \"propertyValid\": true,\r\n    \"groupCode\": false\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v2/reservation/hold",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation",
														"hold"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Reservation V4 - PO",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget WEB | PO Flow | Create Reservation V4 Mlife User PO Rate , Profile, Booking, TripDetails, Billing , Mlife and PO rate \", function () {\r",
															"        \r",
															"    pm.globals.set(\"variable_key\", \"variable_value\");  \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.booked);    \r",
															"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
															"    var reservationId = jsonData.roomReservation.id;\r",
															"    pm.expect(confirmationNumber).not.eq(null);\r",
															"    pm.expect(itineraryId).not.eq(null);\r",
															"    pm.expect(reservationId).not.eq(null);\r",
															"    pm.globals.set(\"WebPOConfirmationNumber\", confirmationNumber);\r",
															"     // save response in env for premodify charges\r",
															"    pm.globals.set(\"webCreatePOReservationReq\",JSON.stringify(jsonData.roomReservation));\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"//Create reservation Request and save in env\r",
															"    // get response from charges before create saved into env\r",
															"     jsonData = JSON.parse(pm.globals.get(\"webCreatePOReservationReq\"));\r",
															"    //set itinerary id\r",
															"    jsonData.itineraryId=\"1234\";\r",
															"    //set billing\r",
															"    billing = JSON.parse(pm.environment.get(\"SingleVISACard\"));\r",
															"    billing[0].payment.amount=jsonData.depositDetails.amount;\r",
															"    jsonData.billing = billing;\r",
															"    //set profile\r",
															"    jsonData.customerId = pm.globals.get(\"webPOCustomerId\");\r",
															"    jsonData.profile = JSON.parse(pm.environment.get(\"POUserProfile\"));\r",
															"    delete jsonData.availableComponents;\r",
															"    delete jsonData.ratesSummary;\r",
															"    // again save to same variable\r",
															"   pm.globals.set(\"WebPOConfirmationNumber\",null);\r",
															"   pm.globals.set(\"webCreatePOReservationReq\",JSON.stringify(jsonData));"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source-web}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel-web}}"
													},
													{
														"key": "Authorization",
														"value": "{{WEB_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"roomReservation\":{{webCreatePOReservationReq}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 - PO",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget WEB | PO Flow | Create | Find transient reservation with cnfNumber : Find reservation with cnfNumber,first name and last name\", function () {\r",
															"        \r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"\r",
															"  var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"  pm.expect(confirmationNumber).equal(pm.globals.get(\"WebPOConfirmationNumber\"));\r",
															"\r",
															"//   pm.globals.set(\"webModifyPOResReq\", jsonData.roomReservation);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"webModifyPOResReq\", null);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source-web}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel-web}}"
													},
													{
														"key": "Authorization",
														"value": "{{WEB_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{WebPOConfirmationNumber}}&firstName={{webPOFirstName}}&lastName={{webPOLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{WebPOConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{webPOFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{webPOLastName}}"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "modify",
									"item": [
										{
											"name": "Preview V2 - Before Modify Add Component",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget WEB | PO Flow | Modify | Preview Add new component\", function () {\r",
															"        if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.booked);    \r",
															"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
															"    var reservationId = jsonData.roomReservation.id;\r",
															"    pm.expect(confirmationNumber).not.eq(null);\r",
															"    pm.expect(itineraryId).not.eq(null);\r",
															"    pm.expect(reservationId).not.eq(null);\r",
															"    var value = pm.variables.get(\"WebPOConfirmationNumber\");\r",
															"    pm.expect(value).eq(confirmationNumber);\r",
															"\r",
															"    var reservationTotal = jsonData.roomReservation.ratesSummary.reservationTotal;\r",
															"    var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"\r",
															"    pm.expect(reservationTotal).not.eq(null);\r",
															"    pm.expect(depositAmount).not.eq(null);\r",
															"\r",
															"    pm.globals.set('previewReservationTotalPOWeb',  reservationTotal);\r",
															"    pm.globals.set('previewDepositAmountPOWeb',  depositAmount);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source-web}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel-web}}"
													},
													{
														"key": "Authorization",
														"value": "{{mlife_access_token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"confirmationNumber\": \"{{WebPOConfirmationNumber}}\",\r\n    \"tripDetails\": {\r\n        \"checkInDate\": \"{{scenarioBasedCheckInDate}}\",\r\n        \"checkOutDate\": \"{{scenarioBasedCheckOutDate}}\",\r\n        \"numAdults\": 2,\r\n        \"numChildren\": 0,\r\n        \"numRooms\": 1,\r\n        \"numAdultsValid\": true\r\n    },\r\n    \"firstName\": \"{{webPOFirstName}}\",\r\n    \"lastName\": \"{{webPOLastName}}\",\r\n    \"mlifeNumber\": {{mlifeNumber}},\r\n    \"roomRequests\": [\r\n        \"{{ComponentDOGFEE}}\"\r\n    ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v2/reservation/preview",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation",
														"preview"
													]
												}
											},
											"response": []
										},
										{
											"name": "Preview Pending V4 - Modify Add component",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget WEB | PO Flow | Modify | Preview Pending Add new component\", function () {\r",
															"        if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.booked);    \r",
															"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
															"    var reservationId = jsonData.roomReservation.id;\r",
															"    pm.expect(confirmationNumber).not.eq(null);\r",
															"    pm.expect(itineraryId).not.eq(null);\r",
															"    pm.expect(reservationId).not.eq(null);\r",
															"    var value = pm.variables.get(\"WebPOConfirmationNumber\");\r",
															"    pm.expect(value).eq(confirmationNumber);\r",
															"\r",
															"    var changeInDeposit = jsonData.roomReservation.ratesSummary.changeInDeposit;\r",
															"    pm.expect(changeInDeposit).not.eq(null);\r",
															"\r",
															"    pm.globals.set(\"changeInDepositModifyPOWeb\", changeInDeposit);\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source-web}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel-web}}"
													},
													{
														"key": "Authorization",
														"value": "{{mlife_access_token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"confirmationNumber\": \"{{WebPOConfirmationNumber}}\",\r\n    \"tripDetails\": {\r\n        \"checkInDate\": \"{{scenarioBasedCheckInDate}}\",\r\n        \"checkOutDate\": \"{{scenarioBasedCheckOutDate}}\",\r\n        \"numAdults\": 2,\r\n        \"numChildren\": 0,\r\n        \"numRooms\": 1,\r\n        \"numAdultsValid\": true\r\n    },\r\n    \"firstName\": \"{{webPOFirstName}}\",\r\n    \"lastName\": \"{{webPOLastName}}\",\r\n    \"roomRequests\": [\r\n        \"{{ComponentDOGFEE}}\"\r\n    ],\r\n    \"previewReservationTotal\": {{previewReservationTotalPOWeb}},\r\n    \"previewReservationDeposit\": {{previewDepositAmountPOWeb}}\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/preview/pending",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"preview",
														"pending"
													]
												}
											},
											"response": []
										},
										{
											"name": "Commit V4 - Add Component",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget WEB | PO Flow | Modify | Commit with additional deposit\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    \r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// create a json request object for commit api\r",
															"var commitReq = {};\r",
															"// set confirmation number\r",
															"commitReq.confirmationNumber = pm.globals.get(\"WebPOConfirmationNumber\");\r",
															"// set firstName & lastName\r",
															"commitReq.firstName = pm.globals.get(\"webPOFirstName\");\r",
															"commitReq.lastName = pm.globals.get(\"webPOLastName\");\r",
															"// set billing\r",
															"var billing = JSON.parse(pm.environment.get(\"SingleVISACard\"));\r",
															"billing[0].payment.amount = pm.globals.get(\"changeInDepositModifyPOWeb\");\r",
															"// billing[0].payment.authId = \"abcd\";\r",
															"commitReq.billing = billing;\r",
															"// save jsondata in modify PO req in global\r",
															"pm.globals.set(\"webPOcommitReq\",JSON.stringify(commitReq));"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "{{sourceHeaderKey}}",
														"value": "{{source-web}}"
													},
													{
														"key": "{{channelHeaderKey}}",
														"value": "{{channel-web}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{WEB_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{webPOcommitReq}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/commit",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"commit"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 - After Add new component",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget WEB | PO Flow | Modify | Find Reservation with confirmationNumber after adding new component\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"  var splReq = jsonData.roomReservation.specialRequests;\r",
															"  pm.expect(null).not.equal(splReq);\r",
															"  pm.expect(0).not.equal(splReq.length);\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source-web}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel-web}}"
													},
													{
														"key": "Authorization",
														"value": "{{WEB_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{WebPOConfirmationNumber}}&firstName={{webPOFirstName}}&lastName={{webPOLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{WebPOConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{webPOFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{webPOLastName}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Preview V2 - Before Modify Remove Component",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget WEB | PO Flow | Modify | Preview Modify Remove component\", function () {\r",
															"        if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.booked);    \r",
															"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
															"    var reservationId = jsonData.roomReservation.id;\r",
															"    pm.expect(confirmationNumber).not.eq(null);\r",
															"    pm.expect(itineraryId).not.eq(null);\r",
															"    pm.expect(reservationId).not.eq(null);\r",
															"    var value = pm.variables.get(\"WebPOConfirmationNumber\");\r",
															"    pm.expect(value).eq(confirmationNumber);\r",
															"\r",
															"    var reservationTotal = jsonData.roomReservation.ratesSummary.reservationTotal;\r",
															"    var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"\r",
															"    pm.expect(reservationTotal).not.eq(null);\r",
															"    pm.expect(depositAmount).not.eq(null);\r",
															"\r",
															"    pm.globals.set('previewReservationTotalPOWeb',  reservationTotal);\r",
															"    pm.globals.set('previewDepositAmountPOWeb',  depositAmount);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source-web}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel-web}}"
													},
													{
														"key": "Authorization",
														"value": "{{mlife_access_token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"confirmationNumber\": \"{{WebPOConfirmationNumber}}\",\r\n    \"tripDetails\": {\r\n        \"checkInDate\": \"{{scenarioBasedCheckInDate}}\",\r\n        \"checkOutDate\": \"{{scenarioBasedCheckOutDate}}\",\r\n        \"numAdults\": 2,\r\n        \"numChildren\": 0,\r\n        \"numRooms\": 1,\r\n        \"numAdultsValid\": true\r\n    },\r\n    \"firstName\": \"{{webPOFirstName}}\",\r\n    \"lastName\": \"{{webPOLastName}}\",\r\n    \"roomRequests\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v2/reservation/preview",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation",
														"preview"
													]
												}
											},
											"response": []
										},
										{
											"name": "Preview Pending V4 - Modify Remove component",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget WEB | PO Flow | Modify | Preview Pending Remove component\", function () {\r",
															"        if(pm.response.status !== 200) {\r",
															"        console.log(\"correlation-id: \" + pm.response.headers.get(\"x-mgm-correlation-id\"));\r",
															"    }\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    pm.expect(null).not.eq(jsonData.booked);    \r",
															"    var confirmationNumber = jsonData.roomReservation.confirmationNumber;\r",
															"    var itineraryId = jsonData.roomReservation.itineraryId;\r",
															"    var reservationId = jsonData.roomReservation.id;\r",
															"    pm.expect(confirmationNumber).not.eq(null);\r",
															"    pm.expect(itineraryId).not.eq(null);\r",
															"    pm.expect(reservationId).not.eq(null);\r",
															"    var value = pm.variables.get(\"WebPOConfirmationNumber\");\r",
															"    pm.expect(value).eq(confirmationNumber);\r",
															"\r",
															"    var changeInDeposit = jsonData.roomReservation.ratesSummary.changeInDeposit;\r",
															"    pm.expect(changeInDeposit).not.eq(null);\r",
															"\r",
															"    pm.globals.set(\"changeInDepositModifyPOWeb\", changeInDeposit);\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source-web}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel-web}}"
													},
													{
														"key": "Authorization",
														"value": "{{mlife_access_token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"confirmationNumber\": \"{{WebPOConfirmationNumber}}\",\r\n    \"tripDetails\": {\r\n        \"checkInDate\": \"{{scenarioBasedCheckInDate}}\",\r\n        \"checkOutDate\": \"{{scenarioBasedCheckOutDate}}\",\r\n        \"numAdults\": 2,\r\n        \"numChildren\": 0,\r\n        \"numRooms\": 1,\r\n        \"numAdultsValid\": true\r\n    },\r\n    \"firstName\": \"{{webPOFirstName}}\",\r\n    \"lastName\": \"{{webPOLastName}}\",\r\n    \"roomRequests\": [],\r\n    \"previewReservationTotal\": {{previewReservationTotalPOWeb}},\r\n    \"previewReservationDeposit\": {{previewDepositAmountPOWeb}}\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/preview/pending",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"preview",
														"pending"
													]
												}
											},
											"response": []
										},
										{
											"name": "Commit V4 - Remove Component",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget WEB | PO Flow | Modify | Commit refund\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    \r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// create a json request object for commit api\r",
															"var commitReq = {};\r",
															"// set confirmation number\r",
															"commitReq.confirmationNumber = pm.globals.get(\"WebPOConfirmationNumber\");\r",
															"// set firstName & lastName\r",
															"commitReq.firstName = pm.globals.get(\"webPOFirstName\");\r",
															"commitReq.lastName = pm.globals.get(\"webPOLastName\");\r",
															"// set billing\r",
															"var billing = JSON.parse(pm.environment.get(\"SingleVISACard\"));\r",
															"billing[0].payment.amount = pm.globals.get(\"changeInDepositModifyPOWeb\");\r",
															"// billing[0].payment.authId = \"abcd\";\r",
															"commitReq.billing = billing;\r",
															"// save jsondata in modify PO req in global\r",
															"pm.globals.set(\"webPOcommitReq\",JSON.stringify(commitReq));"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "{{sourceHeaderKey}}",
														"value": "{{source-web}}"
													},
													{
														"key": "{{channelHeaderKey}}",
														"value": "{{channel-web}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{WEB_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{webPOcommitReq}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/commit",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"commit"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 - After Remove component",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget WEB | PO Flow | Modify | Find Reservation with confirmationNumber after removing component\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"  var splReq = jsonData.roomReservation.specialRequests;\r",
															"  pm.expect(null).not.equal(splReq);\r",
															"  pm.expect(0).equal(splReq.length);\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source-web}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel-web}}"
													},
													{
														"key": "Authorization",
														"value": "{{WEB_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{WebPOConfirmationNumber}}&firstName={{webPOFirstName}}&lastName={{webPOLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{WebPOConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{webPOFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{webPOLastName}}"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "cancel",
									"item": [
										{
											"name": "Find Reservation V2 - Before Cancel PO",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget WEB | PO Flow | Cancel | Find Reservation with confirmationNumber (before cancel)\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(pm.globals.get(\"WebPOConfirmationNumber\")).equal(jsonData.roomReservation.confirmationNumber);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"  var refundAmount = jsonData.roomReservation.depositDetails.refundAmount;\r",
															"  // create a json request object for cancel commit api\r",
															"  var cancelCommitReq = {};\r",
															"  // set confirmation number\r",
															"  cancelCommitReq.confirmationNumber = pm.globals.get(\"WebPOConfirmationNumber\");\r",
															"  // set firstName & lastName\r",
															"  cancelCommitReq.firstName = pm.globals.get(\"webPOFirstName\");\r",
															"  cancelCommitReq.lastName = pm.globals.get(\"webPOLastName\");\r",
															"  // set billing\r",
															"  var billing = JSON.parse(pm.environment.get(\"SingleVISACard\"));\r",
															"  billing[0].payment.amount = 0 - refundAmount;\r",
															"//   billing[0].payment.authId = \"abcd\";\r",
															"  cancelCommitReq.billing = billing;\r",
															"  // save in cancel commit transient req in global\r",
															"  pm.globals.set(\"webCancelCommitPOReq\", JSON.stringify(cancelCommitReq));\r",
															"  \r",
															"  // if refundAmount=0, skip cancel preview API\r",
															"  if(refundAmount === 0) {\r",
															"    pm.execution.setNextRequest(\"Cancel Commit V4 - PO Web\");\r",
															"  }\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source-web}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel-web}}"
													},
													{
														"key": "Authorization",
														"value": "{{WEB_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{WebPOConfirmationNumber}}&firstName={{webPOFirstName}}&lastName={{webPOLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{WebPOConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{webPOFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{webPOLastName}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Preview V4 - PO",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget WEB | PO Flow | Cancel | Cancel Preview by confirmationNumber\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.globals.get(\"WebPOConfirmationNumber\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// if refundAmount is 0, skip this request"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "{{sourceHeaderKey}}",
														"value": "{{source-web}}"
													},
													{
														"key": "{{channelHeaderKey}}",
														"value": "{{channel-web}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{WEB_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"confirmationNumber\": \"{{WebPOConfirmationNumber}}\",\r\n    \"firstName\": \"{{webPOFirstName}}\",\r\n    \"lastName\": \"{{webPOLastName}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/cancel/preview",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"cancel",
														"preview"
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Commit V4 - PO Web",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget WEB | PO Flow | Cancel | Cancel Commit with confirmationNumber and billing\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"    pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"    var jsonData = JSON.parse(pm.response.stream);\r",
															"    pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"    pm.expect(null).not.eq(jsonData);\r",
															"    pm.expect(0).not.equal(jsonData.length);\r",
															"    var value = pm.globals.get(\"WebPOConfirmationNumber\");\r",
															"    pm.expect(value).eq(jsonData.roomReservation.confirmationNumber);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "{{sourceHeaderKey}}",
														"value": "{{source-web}}"
													},
													{
														"key": "{{channelHeaderKey}}",
														"value": "{{channel-web}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													},
													{
														"key": "Authorization",
														"value": "{{WEB_JWT_Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{webCancelCommitPOReq}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{env}}/v4/reservation/cancel/commit",
													"host": [
														"{{env}}"
													],
													"path": [
														"v4",
														"reservation",
														"cancel",
														"commit"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Reservation V2 - After Cancel PO",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Payment Widget WEB | PO Flow | Cancel | Find Reservation with confirmationNumber (after Cancel)\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"  pm.response.to.have.header(\"Content-Type\");\r",
															"  pm.expect(postman.getResponseHeader(\"Content-Type\")).to.equal(\"application/json\");\r",
															"\r",
															"  var jsonData = JSON.parse(pm.response.stream);\r",
															"  pm.expect(\"OK\").to.equal(pm.response.status);\r",
															"  pm.expect(null).not.eq(jsonData);\r",
															"  pm.expect(0).not.equal(jsonData.length);\r",
															"  pm.expect(null).not.equal(jsonData.roomReservation.depositDetails);\r",
															"  var depositAmount = jsonData.roomReservation.depositDetails.amount;\r",
															"  \r",
															"  if(depositAmount > 0) {\r",
															"    pm.expect(null).not.equal(jsonData.roomReservation.payments);\r",
															"    pm.expect(0).not.equal(jsonData.roomReservation.payments.length, \"payments[] cannot be empty if depositAmount is greater than 0\");\r",
															"  }\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-mgm-source",
														"value": "{{source-web}}"
													},
													{
														"key": "x-mgm-channel",
														"value": "{{channel-web}}"
													},
													{
														"key": "Authorization",
														"value": "{{WEB_JWT_Token}}"
													},
													{
														"key": "x-mgm-transaction-id",
														"value": "rbs-v4-integration-{{$timestamp}}"
													}
												],
												"url": {
													"raw": "{{env}}/v2/reservation?confirmationNumber={{WebPOConfirmationNumber}}&firstName={{webPOFirstName}}&lastName={{webPOLastName}}",
													"host": [
														"{{env}}"
													],
													"path": [
														"v2",
														"reservation"
													],
													"query": [
														{
															"key": "confirmationNumber",
															"value": "{{WebPOConfirmationNumber}}"
														},
														{
															"key": "firstName",
															"value": "{{webPOFirstName}}"
														},
														{
															"key": "lastName",
															"value": "{{webPOLastName}}"
														}
													]
												}
											},
											"response": []
										}
									]
								}
							]
						}
					]
				}
			]
		}
	]
}