<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="MGMPerformanceSuite" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="proto" elementType="Argument">
            <stringProp name="Argument.name">proto</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host-v2" elementType="Argument">
            <stringProp name="Argument.name">host-v2</stringProp>
            <stringProp name="Argument.value">azdeapi-dev.mgmresorts.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="propertyId" elementType="Argument">
            <stringProp name="Argument.name">propertyId</stringProp>
            <stringProp name="Argument.value">66964e2b-2550-4476-84c3-1a4c0c5c067f</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="commonPath" elementType="Argument">
            <stringProp name="Argument.name">commonPath</stringProp>
            <stringProp name="Argument.value">/booking/room</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sourceHeaderKey" elementType="Argument">
            <stringProp name="Argument.name">sourceHeaderKey</stringProp>
            <stringProp name="Argument.value">x-mgm-source</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="channelHeaderKey" elementType="Argument">
            <stringProp name="Argument.name">channelHeaderKey</stringProp>
            <stringProp name="Argument.value">x-mgm-channel</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transactionIdHeaderKey" elementType="Argument">
            <stringProp name="Argument.name">transactionIdHeaderKey</stringProp>
            <stringProp name="Argument.value">x-mgm-transaction-id</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sourceValue" elementType="Argument">
            <stringProp name="Argument.name">sourceValue</stringProp>
            <stringProp name="Argument.value">ice</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="channelValue" elementType="Argument">
            <stringProp name="Argument.name">channelValue</stringProp>
            <stringProp name="Argument.value">ice</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="transactionIdValue" elementType="Argument">
            <stringProp name="Argument.name">transactionIdValue</stringProp>
            <stringProp name="Argument.value">${__time(/1000,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputNumAdults" elementType="Argument">
            <stringProp name="Argument.name">inputNumAdults</stringProp>
            <stringProp name="Argument.value">2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="customerId" elementType="Argument">
            <stringProp name="Argument.name">customerId</stringProp>
            <stringProp name="Argument.value">977787289857</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="cancellationRatio" elementType="Argument">
            <stringProp name="Argument.name">cancellationRatio</stringProp>
            <stringProp name="Argument.value">10</stringProp>
            <stringProp name="Argument.desc">use in %</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="apigeeEndpoint" elementType="Argument">
            <stringProp name="Argument.name">apigeeEndpoint</stringProp>
            <stringProp name="Argument.value">mgm-nonprod-preprod.apigee.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mlifeNumber" elementType="Argument">
            <stringProp name="Argument.name">mlifeNumber</stringProp>
            <stringProp name="Argument.value">100041176</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="totalNights" elementType="Argument">
            <stringProp name="Argument.name">totalNights</stringProp>
            <stringProp name="Argument.value">4</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="setUp Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">60</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </SetupThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0 IDMS token API" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">client_id=room_booking_service&amp;client_secret=fpw7jOqwWExQqxlx_PAGy10bECgWXomhj7PSOvn_&amp;grant_type=client_credentials&amp;scope=rooms.availability:read rooms.program:read rooms.reservation:create rooms.reservation:read rooms.reservation:update rooms.reservation:override rooms.reservation.charges:read rooms.reservation.charges:override rooms.reservation:read:elevated rooms.reservation:update:elevated payments.pet:exchangetoken</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host-v2}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">${proto}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/int/identity/authorization/v1/mgmsvc/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">extractedAccessToken</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">.access_token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.jmeter.util.JMeterUtils;
JMeterUtils.setProperty(&quot;propAccessToken&quot;, vars.get(&quot;extractedAccessToken&quot;));</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="RBS V2 API-Transient" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">100</stringProp>
        <stringProp name="ThreadGroup.ramp_time">120</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">1800</stringProp>
        <stringProp name="ThreadGroup.delay">30</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Date Utility" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Locale;


        Calendar cal = Calendar.getInstance();
        DateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;, Locale.ENGLISH);

        for (int i = 0; i &lt; 80; i++) {
            cal.add(Calendar.DAY_OF_YEAR, 1);
            System.out.println(&quot;Date &quot; + i + &quot;--&gt;&quot; + dateFormat.format(cal.getTime()));
            vars.put(&quot;todayPlus&quot;+i,dateFormat.format(cal.getTime()));
        }
</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1 Customer offers API" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="propertyId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${propertyId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">propertyId</stringProp>
              </elementProp>
              <elementProp name="customerId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${customerId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">customerId</stringProp>
              </elementProp>
              <elementProp name="notRolledToSegments" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">notRolledToSegments</stringProp>
              </elementProp>
              <elementProp name="notSorted" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">notSorted</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${apigeeEndpoint}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">${proto}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${commonPath}/v3/customer/offers</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import org.apache.jmeter.util.JMeterUtils;
vars.put(&quot;accessToken&quot;,JMeterUtils.getProperty(&quot;propAccessToken&quot;));</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${sourceHeaderKey}</stringProp>
                <stringProp name="Header.value">${sourceValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${channelHeaderKey}</stringProp>
                <stringProp name="Header.value">${channelValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${transactionIdHeaderKey}</stringProp>
                <stringProp name="Header.value">Jmeter-trans-${__threadNum}-${transactionIdValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2 Applicable programs API" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="propertyId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${propertyId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">propertyId</stringProp>
              </elementProp>
              <elementProp name="filterBookable" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">filterBookable</stringProp>
              </elementProp>
              <elementProp name="filterViewable" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">filterViewable</stringProp>
              </elementProp>
              <elementProp name="checkInDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${todayPlus45}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">checkInDate</stringProp>
              </elementProp>
              <elementProp name="checkOutDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${todayPlus46}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">checkOutDate</stringProp>
              </elementProp>
              <elementProp name="numAdults" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${inputNumAdults}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">numAdults</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${apigeeEndpoint}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">${proto}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${commonPath}/v2/programs/applicable</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import org.apache.jmeter.util.JMeterUtils;
vars.put(&quot;accessToken&quot;,JMeterUtils.getProperty(&quot;propAccessToken&quot;));</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${sourceHeaderKey}</stringProp>
                <stringProp name="Header.value">${sourceValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${channelHeaderKey}</stringProp>
                <stringProp name="Header.value">${channelValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${transactionIdHeaderKey}</stringProp>
                <stringProp name="Header.value">Jmeter-trans-${__threadNum}-${transactionIdValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="ProgramId Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">programId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">.programIds[0]</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3 Calendar Availability API" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${todayPlus10}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">startDate</stringProp>
              </elementProp>
              <elementProp name="endDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${todayPlus40}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">endDate</stringProp>
              </elementProp>
              <elementProp name="numAdults" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${inputNumAdults}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">numAdults</stringProp>
              </elementProp>
              <elementProp name="propertyId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${propertyId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">propertyId</stringProp>
              </elementProp>
              <elementProp name="totalNights" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${totalNights}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">totalNights</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${apigeeEndpoint}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">${proto}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${commonPath}/v3/availability/calendar</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import org.apache.jmeter.util.JMeterUtils;
vars.put(&quot;accessToken&quot;,JMeterUtils.getProperty(&quot;propAccessToken&quot;));</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${sourceHeaderKey}</stringProp>
                <stringProp name="Header.value">${sourceValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${channelHeaderKey}</stringProp>
                <stringProp name="Header.value">${channelValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${transactionIdHeaderKey}</stringProp>
                <stringProp name="Header.value">Jmeter-trans-${__threadNum}-${transactionIdValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4 Trip Availability API" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="checkInDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${todayPlus45}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">checkInDate</stringProp>
              </elementProp>
              <elementProp name="checkOutDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${todayPlus46}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">checkOutDate</stringProp>
              </elementProp>
              <elementProp name="numAdults" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${inputNumAdults}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">numAdults</stringProp>
              </elementProp>
              <elementProp name="propertyId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${propertyId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">propertyId</stringProp>
              </elementProp>
              <elementProp name="perpetualPricing" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">perpetualPricing</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${apigeeEndpoint}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">${proto}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${commonPath}/v3/availability/trip</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import org.apache.jmeter.util.JMeterUtils;
vars.put(&quot;accessToken&quot;,JMeterUtils.getProperty(&quot;propAccessToken&quot;));</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${sourceHeaderKey}</stringProp>
                <stringProp name="Header.value">${sourceValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${channelHeaderKey}</stringProp>
                <stringProp name="Header.value">${channelValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${transactionIdHeaderKey}</stringProp>
                <stringProp name="Header.value">Jmeter-trans-${__threadNum}-${transactionIdValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch roomTypeId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">roomTypeId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">.ratePlans[0].rooms[0].roomTypeId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch inputBasePrice" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">inputBasePrice</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">.availability[0].price.itemized[0].basePrice</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch inputDiscountedSubtotal" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">inputDiscountedSubtotal</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">.availability[0].price.itemized[0].discountedPrice</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch pricingRuleId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">pricingRuleId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">.availability[0].price.itemized[0].pricingRuleId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch programIdIsRateTable" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">programIdIsRateTable</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">.availability[0].price.itemized[0].programIdIsRateTable</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch resortFee" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">resortFee</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">.availability[0].resortFee</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch Program Id" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">programId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">.ratePlans[0].programId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5 Multi Availability API" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="checkInDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${todayPlus45}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">checkInDate</stringProp>
              </elementProp>
              <elementProp name="checkOutDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${todayPlus46}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">checkOutDate</stringProp>
              </elementProp>
              <elementProp name="numAdults" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${inputNumAdults}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">numAdults</stringProp>
              </elementProp>
              <elementProp name="propertyIds" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${propertyId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">propertyIds</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${apigeeEndpoint}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">${proto}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${commonPath}/v2/availability/resorts</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import org.apache.jmeter.util.JMeterUtils;
vars.put(&quot;accessToken&quot;,JMeterUtils.getProperty(&quot;propAccessToken&quot;));</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${sourceHeaderKey}</stringProp>
                <stringProp name="Header.value">${sourceValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${channelHeaderKey}</stringProp>
                <stringProp name="Header.value">${channelValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${transactionIdHeaderKey}</stringProp>
                <stringProp name="Header.value">Jmeter-trans-${__threadNum}-${transactionIdValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6 Reservation charges API" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;stage&quot;: &quot;Checkout&quot;,&#xd;
    &quot;calcsOnly&quot;: false,&#xd;
    &quot;propertyId&quot;: &quot;${propertyId}&quot;,&#xd;
    &quot;roomTypeId&quot;: &quot;${roomTypeId}&quot;,&#xd;
    &quot;programId&quot;: &quot;${programId}&quot;,&#xd;
    &quot;customerId&quot;: &quot;846558855426&quot;,&#xd;
    &quot;itineraryId&quot;: &quot;9323708418&quot;,&#xd;
    &quot;guaranteeCode&quot;: null,&#xd;
    &quot;specialRequests&quot;: [], &#xd;
    &quot;tripDetails&quot;: {&#xd;
        &quot;numAdults&quot;: ${inputNumAdults},&#xd;
        &quot;numChildren&quot;: 0,&#xd;
	    &quot;checkInDate&quot;: &quot;${todayPlus45}&quot;,&#xd;
	    &quot;checkOutDate&quot;: &quot;${todayPlus46}&quot;,&#xd;
        &quot;numGuests&quot;: ${inputNumAdults},&#xd;
        &quot;nights&quot;: 1,&#xd;
        &quot;numRooms&quot;: 1&#xd;
    },&#xd;
    &quot;billing&quot;: null,&#xd;
    &quot;bookings&quot;: [&#xd;
        {&#xd;
            &quot;price&quot;: 0,&#xd;
            &quot;overridePrice&quot;: -1.0,&#xd;
            &quot;programId&quot;: &quot;${programId}&quot;,&#xd;
            &quot;date&quot;: &quot;${todayPlus45}&quot;&#xd;
            &#xd;
        },&#xd;
         {&#xd;
            &quot;price&quot; : 0,&#xd;
            &quot;overridePrice&quot;: -1.0,&#xd;
            &quot;programId&quot;: &quot;${programId}&quot;,&#xd;
            &quot;date&quot;: &quot;${todayPlus46}&quot;&#xd;
            &#xd;
        }&#xd;
    ],&#xd;
    &quot;profile&quot;: {&#xd;
        &quot;id&quot;: 846558855426,&#xd;
        &quot;operaId&quot;: null,&#xd;
        &quot;firstName&quot;: &quot;Uttam&quot;,&#xd;
        &quot;lastName&quot;: &quot;Ghorai&quot;,&#xd;
        &quot;phoneNumbers&quot;: null,&#xd;
        &quot;emailAddress1&quot;: null,&#xd;
        &quot;emailAddress2&quot;: null,&#xd;
        &quot;dateOfBirth&quot;: null,&#xd;
        &quot;hgpNo&quot;: null,&#xd;
        &quot;swrrNo&quot;: null,&#xd;
        &quot;addresses&quot;: [&#xd;
            {&#xd;
                &quot;preferred&quot;: false,&#xd;
                &quot;street1&quot;: &quot;100 St&quot;,&#xd;
                &quot;street2&quot;: null,&#xd;
                &quot;city&quot;: &quot;Las Vegas&quot;,&#xd;
                &quot;state&quot;: &quot;NV&quot;,&#xd;
                &quot;country&quot;: &quot;US&quot;,&#xd;
                &quot;postalCode&quot;: &quot;89102&quot;,&#xd;
                &quot;type&quot;: &quot;Home&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;title&quot;: null,&#xd;
        &quot;mlifeNo&quot;: 0&#xd;
    }&#xd;
   &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${apigeeEndpoint}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">${proto}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${commonPath}/v2/reservation/charges</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import org.apache.jmeter.util.JMeterUtils;
vars.put(&quot;accessToken&quot;,JMeterUtils.getProperty(&quot;propAccessToken&quot;));
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${sourceHeaderKey}</stringProp>
                <stringProp name="Header.value">${sourceValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${channelHeaderKey}</stringProp>
                <stringProp name="Header.value">${channelValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${transactionIdHeaderKey}</stringProp>
                <stringProp name="Header.value">Jmeter-trans-${__threadNum}-${transactionIdValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch chargesAndTaxes" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">chargesAndTaxes</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">.chargesAndTaxes</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch bookings" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">bookings</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">.bookings</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch depositDetails" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">depositDetails</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">.depositDetails</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch depositPolicy" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">depositPolicy</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">.depositPolicy</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch markets" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">markets</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">.markets</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">&quot;&quot;</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch amountDue" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">amountDue</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">.amountDue</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">&quot;&quot;</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch ratesSummary" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">ratesSummary</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">.ratesSummary</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">&quot;&quot;</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">vars.put(&quot;response&quot;, prev.getResponseDataAsString());

</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="7 Organization IATA search API" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="iataCode" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">52593693</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">iataCode</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${apigeeEndpoint}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">${proto}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${commonPath}/v2/iata/organizations</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import org.apache.jmeter.util.JMeterUtils;
vars.put(&quot;accessToken&quot;,JMeterUtils.getProperty(&quot;propAccessToken&quot;));</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${sourceHeaderKey}</stringProp>
                <stringProp name="Header.value">${sourceValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${channelHeaderKey}</stringProp>
                <stringProp name="Header.value">${channelValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${transactionIdHeaderKey}</stringProp>
                <stringProp name="Header.value">Jmeter-trans-${__threadNum}-${transactionIdValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="8 Group Search  API" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${todayPlus30}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">startDate</stringProp>
              </elementProp>
              <elementProp name="endDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${todayPlus45}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">endDate</stringProp>
              </elementProp>
              <elementProp name="id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">GRPCD-v-GR1-d-PROP-v-MV021</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">id</stringProp>
              </elementProp>
              <elementProp name="propertyId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${propertyId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">propertyId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host-v2}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">${proto}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${commonPath}/v2/groupblocks</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import org.apache.jmeter.util.JMeterUtils;
vars.put(&quot;accessToken&quot;,JMeterUtils.getProperty(&quot;propAccessToken&quot;));</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${sourceHeaderKey}</stringProp>
                <stringProp name="Header.value">${sourceValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${channelHeaderKey}</stringProp>
                <stringProp name="Header.value">${channelValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${transactionIdHeaderKey}</stringProp>
                <stringProp name="Header.value">Jmeter-trans-${__threadNum}-${transactionIdValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Booking Controller " enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>80.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6 Create itinerary API" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &#xd;
    &quot;itineraryName&quot;:&quot;rbs-perf-run&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customerId}&quot;,&#xd;
    &quot;tripParams&quot;:{&#xd;
        &quot;numAdults&quot;: ${inputNumAdults},&#xd;
        &quot;numChildren&quot;: 0,&#xd;
        &quot;arrivalDate&quot;: &quot;${todayPlus45}&quot;,&#xd;
        &quot;departureDate&quot;: &quot;${todayPlus46}&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host-v2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${proto}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/service/r/v2/itinerary</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import org.apache.jmeter.util.JMeterUtils;
vars.put(&quot;accessToken&quot;,JMeterUtils.getProperty(&quot;propAccessToken&quot;));
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-mgm-correlation-id</stringProp>
                  <stringProp name="Header.value">Jmeter-correlation-${__threadNum}-${transactionIdValue}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch itinerary" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">itineraryId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">.itinerary.itineraryId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">758565</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="9 Make reservation API" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;roomReservation&quot;: {&#xd;
		&quot;id&quot;: &quot;${reservationId}&quot;,&#xd;
		&quot;customerId&quot;: &quot;${customerId}&quot;,&#xd;
		&quot;propertyId&quot;: &quot;${propertyId}&quot;,&#xd;
		&quot;itineraryId&quot;: 758565,&#xd;
		&quot;roomTypeId&quot;: &quot;${roomTypeId}&quot;,&#xd;
		&quot;specialRequests&quot;: [],&#xd;
		&quot;profile&quot;: {&#xd;
            &quot;id&quot;: 11171332354,&#xd;
            &quot;firstName&quot;: &quot;Lets&quot;,&#xd;
            &quot;lastName&quot;: &quot;Tryagain&quot;,&#xd;
            &quot;addresses&quot;:[&#xd;
            {&#xd;
               &quot;preferred&quot;:false,&#xd;
               &quot;street1&quot;:&quot;123 Main St&quot;,&#xd;
               &quot;street2&quot;:null,&#xd;
               &quot;city&quot;:&quot;Las Vegas&quot;,&#xd;
               &quot;state&quot;:&quot;NV&quot;,&#xd;
               &quot;country&quot;:&quot;US&quot;,&#xd;
               &quot;postalCode&quot;:&quot;89118&quot;,&#xd;
               &quot;type&quot;:&quot;Home&quot;&#xd;
            }&#xd;
         ]&#xd;
        },&#xd;
&quot;billing&quot;: [{&#xd;
            &quot;payment&quot;: {&#xd;
                &quot;cardHolder&quot;: &quot;Uttam Ghorai&quot;,&#xd;
                &quot;firstName&quot;: &quot;Uttam&quot;,&#xd;
                &quot;lastName&quot;: &quot;Ghorai&quot;,&#xd;
                &quot;ccToken&quot;: &quot;4111110A001DQXFHY79D9XCZ1111&quot;,&#xd;
                &quot;encryptedccToken&quot;: &quot;5555550A0012ZTSHUFMXCCUW4444&quot;,&#xd;
                &quot;maskedNumber&quot;: &quot;XXXXXXXXXXXXXXXXXXXXXXXX4444&quot;,&#xd;
                &quot;amount&quot;: 380,&#xd;
                &quot;expiry&quot;: &quot;05/2022&quot;,&#xd;
                &quot;type&quot;: &quot;Visa&quot;&#xd;
            },&#xd;
            &quot;address&quot;: {&#xd;
                &quot;street1&quot;: &quot;5353 W Desert Inn&quot;,&#xd;
                &quot;street2&quot;: null,&#xd;
                &quot;city&quot;: &quot;Las Vegas&quot;,&#xd;
                &quot;state&quot;: &quot;NV&quot;,&#xd;
                &quot;postalCode&quot;: &quot;89146&quot;,&#xd;
                &quot;country&quot;: &quot;US&quot;&#xd;
            }&#xd;
        }&#xd;
    ],&#xd;
    &quot;tripDetails&quot;: {&#xd;
			&quot;checkInDate&quot;: &quot;${todayPlus45}&quot;,&#xd;
			&quot;checkOutDate&quot;: &quot;${todayPlus46}&quot;,&#xd;
			&quot;numAdults&quot;: ${inputNumAdults},&#xd;
			&quot;numChildren&quot;: 0,&#xd;
			&quot;numRooms&quot;: 1&#xd;
		},&#xd;
		&quot;bookings&quot;: ${bookings},&#xd;
		&quot;chargesAndTaxes&quot;: ${chargesAndTaxes},&#xd;
		&quot;depositDetails&quot;: ${depositDetails},&#xd;
		&quot;depositPolicy&quot;: ${depositPolicy},&#xd;
		&quot;ratesSummary&quot;: ${ratesSummary},&#xd;
		&quot;amountDue&quot;: ${amountDue},&#xd;
		&quot;guaranteeCode&quot;: null&#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${apigeeEndpoint}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${proto}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${commonPath}/v2/reservation</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import org.apache.jmeter.util.JMeterUtils;

vars.put(&quot;accessToken&quot;,JMeterUtils.getProperty(&quot;propAccessToken&quot;));
vars.put(&quot;reservationId&quot;, UUID.randomUUID().toString());



</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">${sourceHeaderKey}</stringProp>
                  <stringProp name="Header.value">${sourceValue}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">${channelHeaderKey}</stringProp>
                  <stringProp name="Header.value">${channelValue}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">${transactionIdHeaderKey}</stringProp>
                  <stringProp name="Header.value">Jmeter-trans-${__threadNum}-${transactionIdValue}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch confirmationNumber" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">confirmationNumber</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">.roomReservation.confirmationNumber</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch profile" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">profile</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">.roomReservation.profile</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch payments" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">payments</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">.roomReservation.payments</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch ratesSummary" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">ratesSummary</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">.ratesSummary</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">&quot;&quot;</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch depositPolicy" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">depositPolicy</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">.depositPolicy</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch markets" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">markets</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">.markets</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">&quot;&quot;</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch chargesAndTaxes" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">chargesAndTaxes</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">.chargesAndTaxes</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch depositDetails" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">depositDetails</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">.depositDetails</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch bookings" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">bookings</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">.bookings</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch amountDue" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">amountDue</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">.amountDue</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">&quot;&quot;</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch bookDate" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">bookDate</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">.roomReservation.bookDate</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="10 Find reservation API" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="confirmationNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${confirmationNumber}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">confirmationNumber</stringProp>
                </elementProp>
                <elementProp name="cacheOnly" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">cacheOnly</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${apigeeEndpoint}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${proto}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${commonPath}/v2/reservation</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import org.apache.jmeter.util.JMeterUtils;
vars.put(&quot;accessToken&quot;,JMeterUtils.getProperty(&quot;propAccessToken&quot;));</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">${sourceHeaderKey}</stringProp>
                  <stringProp name="Header.value">${sourceValue}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">${channelHeaderKey}</stringProp>
                  <stringProp name="Header.value">${channelValue}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">${transactionIdHeaderKey}</stringProp>
                  <stringProp name="Header.value">Jmeter-trans-${__threadNum}-${transactionIdValue}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="11 Make Party reservation API" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;roomReservation&quot;: {&#xd;
		&quot;id&quot;: &quot;${reservationId}&quot;,&#xd;
		&quot;customerId&quot;: &quot;${customerId}&quot;,&#xd;
		&quot;propertyId&quot;: &quot;${propertyId}&quot;,&#xd;
		&quot;itineraryId&quot;: 758565,&#xd;
		&quot;roomTypeId&quot;: &quot;${roomTypeId}&quot;,&#xd;
		&quot;specialRequests&quot;: [],&#xd;
		&quot;profile&quot;: {&#xd;
            &quot;id&quot;: 11171332354,&#xd;
            &quot;firstName&quot;: &quot;Lets&quot;,&#xd;
            &quot;lastName&quot;: &quot;Tryagain&quot;,&#xd;
            &quot;addresses&quot;:[&#xd;
            {&#xd;
               &quot;preferred&quot;:false,&#xd;
               &quot;street1&quot;:&quot;123 Main St&quot;,&#xd;
               &quot;street2&quot;:null,&#xd;
               &quot;city&quot;:&quot;Las Vegas&quot;,&#xd;
               &quot;state&quot;:&quot;NV&quot;,&#xd;
               &quot;country&quot;:&quot;US&quot;,&#xd;
               &quot;postalCode&quot;:&quot;89118&quot;,&#xd;
               &quot;type&quot;:&quot;Home&quot;&#xd;
            }&#xd;
         ]&#xd;
        },&#xd;
&quot;billing&quot;: [{&#xd;
            &quot;payment&quot;: {&#xd;
                &quot;cardHolder&quot;: &quot;Uttam Ghorai&quot;,&#xd;
                &quot;firstName&quot;: &quot;Uttam&quot;,&#xd;
                &quot;lastName&quot;: &quot;Ghorai&quot;,&#xd;
                &quot;ccToken&quot;: &quot;4111110A001DQXFHY79D9XCZ1111&quot;,&#xd;
                &quot;encryptedccToken&quot;: &quot;5555550A0012ZTSHUFMXCCUW4444&quot;,&#xd;
                &quot;maskedNumber&quot;: &quot;XXXXXXXXXXXXXXXXXXXXXXXX4444&quot;,&#xd;
                &quot;amount&quot;: 380,&#xd;
                &quot;expiry&quot;: &quot;10/2022&quot;,&#xd;
                &quot;type&quot;: &quot;Diners Club&quot;&#xd;
            },&#xd;
            &quot;address&quot;: {&#xd;
                &quot;street1&quot;: &quot;5353 W Desert Inn&quot;,&#xd;
                &quot;street2&quot;: null,&#xd;
                &quot;city&quot;: &quot;Las Vegas&quot;,&#xd;
                &quot;state&quot;: &quot;NV&quot;,&#xd;
                &quot;postalCode&quot;: &quot;89146&quot;,&#xd;
                &quot;country&quot;: &quot;US&quot;&#xd;
            }&#xd;
        }&#xd;
    ],&#xd;
    &quot;tripDetails&quot;: {&#xd;
			&quot;checkInDate&quot;: &quot;${todayPlus45}&quot;,&#xd;
			&quot;checkOutDate&quot;: &quot;${todayPlus46}&quot;,&#xd;
			&quot;numAdults&quot;: ${inputNumAdults},&#xd;
			&quot;numChildren&quot;: 2,&#xd;
			&quot;numRooms&quot;: 2&#xd;
		},&#xd;
		&quot;bookings&quot;: ${bookings},&#xd;
		&quot;chargesAndTaxes&quot;: ${chargesAndTaxes},&#xd;
		&quot;depositDetails&quot;: ${depositDetails},&#xd;
		&quot;depositPolicy&quot;: ${depositPolicy},&#xd;
		&quot;ratesSummary&quot;: ${ratesSummary},&#xd;
		&quot;amountDue&quot;: ${amountDue},&#xd;
		&quot;guaranteeCode&quot;: null&#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${apigeeEndpoint}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${proto}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${commonPath}/v2/reservation/party</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import org.apache.jmeter.util.JMeterUtils;
vars.put(&quot;accessToken&quot;,JMeterUtils.getProperty(&quot;propAccessToken&quot;));
vars.put(&quot;reservationId&quot;, UUID.randomUUID().toString());
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">${sourceHeaderKey}</stringProp>
                  <stringProp name="Header.value">${sourceValue}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">${channelHeaderKey}</stringProp>
                  <stringProp name="Header.value">${channelValue}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">${transactionIdHeaderKey}</stringProp>
                  <stringProp name="Header.value">Jmeter-trans-${__threadNum}-${transactionIdValue}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch partyConfirmationNumber" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">partyConfirmationNumber</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">.roomReservations[0].confirmationNumber</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="12 Search reservation API" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="confirmationNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${partyConfirmationNumber}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">confirmationNumber</stringProp>
                </elementProp>
                <elementProp name="propertyId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${propertyId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">propertyId</stringProp>
                </elementProp>
                <elementProp name="cacheOnly" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">cacheOnly</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${apigeeEndpoint}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${proto}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${commonPath}/v2/reservation/party/info</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import org.apache.jmeter.util.JMeterUtils;
vars.put(&quot;accessToken&quot;,JMeterUtils.getProperty(&quot;propAccessToken&quot;));</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">${sourceHeaderKey}</stringProp>
                  <stringProp name="Header.value">${sourceValue}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">${channelHeaderKey}</stringProp>
                  <stringProp name="Header.value">${channelValue}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">${transactionIdHeaderKey}</stringProp>
                  <stringProp name="Header.value">Jmeter-trans-${__threadNum}-${transactionIdValue}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="13 Share With reservation API" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;roomReservation&quot;: {&#xd;
		&quot;id&quot;: &quot;${reservationId}&quot;,&#xd;
		&quot;customerId&quot;: &quot;${customerId}&quot;,&#xd;
		&quot;propertyId&quot;: &quot;${propertyId}&quot;,&#xd;
		&quot;itineraryId&quot;: 758565,&#xd;
		&quot;roomTypeId&quot;: &quot;${roomTypeId}&quot;,&#xd;
		&quot;specialRequests&quot;: [],&#xd;
		&quot;confirmationNumber&quot;: &quot;&quot;,&#xd;
	     &quot;partyConfirmationNumber&quot;: null,&#xd;
	     &quot;otaConfirmationNumber&quot;: null,&#xd;
	     &quot;primarySharerConfirmationNumber&quot;: null,&#xd;
	     &quot;operaConfirmationNumber&quot;: &quot;&quot;,&#xd;
    		&quot;profile&quot;: {&#xd;
            &quot;id&quot;: 11171332354,&#xd;
            &quot;firstName&quot;: &quot;Lets&quot;,&#xd;
            &quot;lastName&quot;: &quot;Tryagain&quot;,&#xd;
            &quot;addresses&quot;:[&#xd;
            {&#xd;
               &quot;preferred&quot;:false,&#xd;
               &quot;street1&quot;:&quot;123 Main St&quot;,&#xd;
               &quot;street2&quot;:null,&#xd;
               &quot;city&quot;:&quot;Las Vegas&quot;,&#xd;
               &quot;state&quot;:&quot;NV&quot;,&#xd;
               &quot;country&quot;:&quot;US&quot;,&#xd;
               &quot;postalCode&quot;:&quot;89118&quot;,&#xd;
               &quot;type&quot;:&quot;Home&quot;&#xd;
            }&#xd;
         ]&#xd;
        },&#xd;
&quot;billing&quot;: [{&#xd;
            &quot;payment&quot;: {&#xd;
                &quot;cardHolder&quot;: &quot;Uttam Ghorai&quot;,&#xd;
                &quot;firstName&quot;: &quot;Uttam&quot;,&#xd;
                &quot;lastName&quot;: &quot;Ghorai&quot;,&#xd;
                &quot;ccToken&quot;: &quot;4111110A001DQXFHY79D9XCZ1111&quot;,&#xd;
                &quot;encryptedccToken&quot;: &quot;5555550A0012ZTSHUFMXCCUW4444&quot;,&#xd;
                &quot;maskedNumber&quot;: &quot;XXXXXXXXXXXXXXXXXXXXXXXX4444&quot;,&#xd;
                &quot;amount&quot;: 380,&#xd;
                &quot;expiry&quot;: &quot;10/2022&quot;,&#xd;
                &quot;type&quot;: &quot;Diners Club&quot;&#xd;
            },&#xd;
            &quot;address&quot;: {&#xd;
                &quot;street1&quot;: &quot;5353 W Desert Inn&quot;,&#xd;
                &quot;street2&quot;: null,&#xd;
                &quot;city&quot;: &quot;Las Vegas&quot;,&#xd;
                &quot;state&quot;: &quot;NV&quot;,&#xd;
                &quot;postalCode&quot;: &quot;89146&quot;,&#xd;
                &quot;country&quot;: &quot;US&quot;&#xd;
            }&#xd;
        }&#xd;
    ],&#xd;
    &quot;shareWithCustomers&quot;: [{&#xd;
            &quot;id&quot;: 848906485762,&#xd;
            &quot;mlifeNo&quot;: 80881763,&#xd;
            &quot;title&quot;: null,&#xd;
            &quot;dateOfBirth&quot;: &quot;1980-01-20&quot;,&#xd;
            &quot;operaId&quot;: null,&#xd;
            &quot;tier&quot;: null,&#xd;
            &quot;dateOfEnrollment&quot;: null,&#xd;
            &quot;firstName&quot;: &quot;Dkfirst&quot;,&#xd;
            &quot;lastName&quot;: &quot;Dklast&quot;,&#xd;
            &quot;emailAddress1&quot;: &quot;dktest9@yopmail.com&quot;,&#xd;
            &quot;emailAddress2&quot;: null,&#xd;
            &quot;hgpNo&quot;: null,&#xd;
            &quot;swrrNo&quot;: null,&#xd;
            &quot;phoneNumbers&quot;: [{&#xd;
                    &quot;type&quot;: &quot;Home&quot;,&#xd;
                    &quot;number&quot;: &quot;9734567890&quot;&#xd;
                }&#xd;
            ],&#xd;
            &quot;addresses&quot;: [{&#xd;
                    &quot;type&quot;: &quot;Home&quot;,&#xd;
                    &quot;preferred&quot;: false,&#xd;
                    &quot;street1&quot;: &quot;999 Main St&quot;,&#xd;
                    &quot;street2&quot;: null,&#xd;
                    &quot;city&quot;: &quot;New York&quot;,&#xd;
                    &quot;state&quot;: &quot;NY&quot;,&#xd;
                    &quot;country&quot;: &quot;US&quot;,&#xd;
                    &quot;postalCode&quot;: &quot;94999&quot;&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ],&#xd;
    &quot;sharedConfirmationNumbers&quot;: null,&#xd;
    &quot;tripDetails&quot;: {&#xd;
			&quot;checkInDate&quot;: &quot;${todayPlus45}&quot;,&#xd;
			&quot;checkOutDate&quot;: &quot;${todayPlus46}&quot;,&#xd;
			&quot;numAdults&quot;: ${inputNumAdults},&#xd;
			&quot;numChildren&quot;: 0,&#xd;
			&quot;numRooms&quot;: 1&#xd;
		},&#xd;
		&quot;bookings&quot;: ${bookings},&#xd;
		&quot;chargesAndTaxes&quot;: ${chargesAndTaxes},&#xd;
		&quot;depositDetails&quot;: ${depositDetails},&#xd;
		&quot;depositPolicy&quot;: ${depositPolicy},&#xd;
		&quot;ratesSummary&quot;: ${ratesSummary},&#xd;
		&quot;amountDue&quot;: ${amountDue},&#xd;
		&quot;guaranteeCode&quot;: null&#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${apigeeEndpoint}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${proto}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${commonPath}/v2/reservation</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import org.apache.jmeter.util.JMeterUtils;
vars.put(&quot;accessToken&quot;,JMeterUtils.getProperty(&quot;propAccessToken&quot;));
vars.put(&quot;reservationId&quot;, UUID.randomUUID().toString());
vars.put(&quot;propertyId&quot;,&quot;e0f70eb3-7e27-4c33-8bcd-f30bf3b1103a&quot;);
vars.put(&quot;roomTypeId&quot;,&quot;ROOMCD-v-DLVK-d-PROP-v-MV275&quot;);
vars.put(&quot;programId&quot;,&quot;RPCD-v-TSTPREVL-d-PROP-v-MV275&quot;);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">${sourceHeaderKey}</stringProp>
                  <stringProp name="Header.value">${sourceValue}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">${channelHeaderKey}</stringProp>
                  <stringProp name="Header.value">${channelValue}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">${transactionIdHeaderKey}</stringProp>
                  <stringProp name="Header.value">Jmeter-trans-${__threadNum}-${transactionIdValue}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch primarySharerConfirmationNumber" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">primarySharerConfirmationNumber</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">.roomReservations[0].primarySharerConfirmationNumber</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Modification Ratio Controller" enabled="true">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">false</boolProp>
            <intProp name="ThroughputController.maxThroughput">1</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>60.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="13 Modify reservation API" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;roomReservation&quot;: {&#xd;
        &quot;id&quot;: &quot;${reservationId}&quot;,&#xd;
        &quot;customerId&quot;: &quot;${customerId}&quot;,&#xd;
        &quot;propertyId&quot;: &quot;${propertyId}&quot;,&#xd;
        &quot;itineraryId&quot;: 758565,&#xd;
        &quot;roomTypeId&quot;: &quot;${roomTypeId}&quot;,&#xd;
        &quot;state&quot;: &quot;Booked&quot;,&#xd;
        &quot;nrgStatus&quot;: false,&#xd;
        &quot;specialRequests&quot;: [],&#xd;
        &quot;confirmationNumber&quot;: &quot;${confirmationNumber}&quot;,&#xd;
        &quot;bookDate&quot;: &quot;${bookDate}&quot;,&#xd;
        &quot;profile&quot;: {&#xd;
            &quot;id&quot;: 11171332354,&#xd;
            &quot;firstName&quot;: &quot;Lets&quot;,&#xd;
            &quot;lastName&quot;: &quot;Tryagain&quot;,&#xd;
            &quot;addresses&quot;:[&#xd;
            {&#xd;
               &quot;preferred&quot;:false,&#xd;
               &quot;street1&quot;:&quot;123 Main St&quot;,&#xd;
               &quot;street2&quot;:null,&#xd;
               &quot;city&quot;:&quot;Las Vegas&quot;,&#xd;
               &quot;state&quot;:&quot;NV&quot;,&#xd;
               &quot;country&quot;:&quot;US&quot;,&#xd;
               &quot;postalCode&quot;:&quot;89118&quot;,&#xd;
               &quot;type&quot;:&quot;Home&quot;&#xd;
            }&#xd;
         ]&#xd;
        },&#xd;
        &quot;billing&quot;: [&#xd;
            {&#xd;
                &quot;payment&quot;: {&#xd;
                     &quot;cardHolder&quot;: &quot;Uttam Ghorai&quot;,&#xd;
	                &quot;firstName&quot;: &quot;Uttam&quot;,&#xd;
	                &quot;lastName&quot;: &quot;Ghorai&quot;,&#xd;
	                &quot;ccToken&quot;: &quot;4111110A001DQXFHY79D9XCZ1111&quot;,&#xd;
	                &quot;encryptedccToken&quot;: &quot;5555550A0012ZTSHUFMXCCUW4444&quot;,&#xd;
	                &quot;maskedNumber&quot;: &quot;XXXXXXXXXXXXXXXXXXXXXXXX4444&quot;,&#xd;
	                &quot;amount&quot;: 380,&#xd;
	                &quot;expiry&quot;: &quot;10/2022&quot;,&#xd;
	                &quot;type&quot;: &quot;Visa&quot;&#xd;
                },&#xd;
                &quot;address&quot;: {&#xd;
                    &quot;street1&quot;: &quot;234 W Main St&quot;,&#xd;
                    &quot;street2&quot;: &quot;Unit 415&quot;,&#xd;
                    &quot;city&quot;: &quot;Las Vegas&quot;,&#xd;
                    &quot;state&quot;: &quot;NV&quot;,&#xd;
                    &quot;postalCode&quot;: &quot;12345&quot;,&#xd;
                    &quot;country&quot;: &quot;US&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;tripDetails&quot;: {&#xd;
            &quot;checkInDate&quot;: &quot;${todayPlus45}&quot;,&#xd;
            &quot;checkOutDate&quot;: &quot;${todayPlus46}&quot;,&#xd;
            &quot;numAdults&quot;: ${inputNumAdults},&#xd;
            &quot;numChildren&quot;: 0,&#xd;
            &quot;numRooms&quot;: 1&#xd;
        },&#xd;
        &quot;markets&quot;: [&#xd;
            {&#xd;
                &quot;date&quot;: &quot;2021-06-05&quot;,&#xd;
                &quot;marketCode&quot;: &quot;TFIT&quot;,&#xd;
                &quot;sourceCode&quot;: &quot;CC&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;date&quot;: &quot;2021-06-06&quot;,&#xd;
                &quot;marketCode&quot;: &quot;TFIT&quot;,&#xd;
                &quot;sourceCode&quot;: &quot;CC&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;bookings&quot;: ${bookings},&#xd;
        &quot;chargesAndTaxes&quot;: ${chargesAndTaxes},&#xd;
        &quot;depositDetails&quot;: ${depositDetails},&#xd;
        &quot;depositPolicy&quot;: ${depositPolicy},&#xd;
        &quot;payments&quot;: ${payments},&#xd;
        &quot;amountDue&quot;: 0,&#xd;
        &quot;guaranteeCode&quot;: &quot;CC&quot;,&#xd;
        &quot;customerRank&quot;: 0,&#xd;
        &quot;customerSegment&quot;: 0&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${apigeeEndpoint}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">${proto}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${commonPath}/v2/reservation</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.util.JMeterUtils;
vars.put(&quot;accessToken&quot;,JMeterUtils.getProperty(&quot;propAccessToken&quot;));
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">${sourceHeaderKey}</stringProp>
                    <stringProp name="Header.value">${sourceValue}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">${channelHeaderKey}</stringProp>
                    <stringProp name="Header.value">${channelValue}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">${transactionIdHeaderKey}</stringProp>
                    <stringProp name="Header.value">Jmeter-trans-${__threadNum}-${transactionIdValue}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="14 Modify Profile API" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;itineraryId&quot;: 758565,&#xd;
  &quot;propertyId&quot;: &quot;${propertyId}&quot;,&#xd;
  &quot;confirmationNumber&quot;: &quot;${confirmationNumber}&quot;,&#xd;
  &quot;userProfile&quot;: {&#xd;
    &quot;id&quot;: 0,&#xd;
    &quot;operaId&quot;: &quot;string&quot;,&#xd;
    &quot;firstName&quot;: &quot;John&quot;,&#xd;
    &quot;lastName&quot;: &quot;Doe&quot;,&#xd;
    &quot;phoneNumbers&quot;: [&#xd;
      {&#xd;
        &quot;type&quot;: &quot;Home&quot;,&#xd;
        &quot;number&quot;: &quot;9952051456&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;emailAddress1&quot;: &quot;johndoe123@nomail.com&quot;,&#xd;
    &quot;emailAddress2&quot;: &quot;johndoe456@nomail.com&quot;,&#xd;
    &quot;dateOfBirth&quot;: &quot;1995-12-31&quot;,&#xd;
    &quot;mlifeNo&quot;: 1122334,&#xd;
    &quot;hgpNo&quot;: &quot;string&quot;,&#xd;
    &quot;swrrNo&quot;: &quot;string&quot;,&#xd;
    &quot;addresses&quot;: [&#xd;
      {&#xd;
        &quot;type&quot;: &quot;Home&quot;,&#xd;
        &quot;preferred&quot;: true,&#xd;
        &quot;street1&quot;: &quot;2345 W Main St&quot;,&#xd;
        &quot;street2&quot;: &quot;Unit 415&quot;,&#xd;
        &quot;city&quot;: &quot;Las Vegas&quot;,&#xd;
        &quot;state&quot;: &quot;NV&quot;,&#xd;
        &quot;country&quot;: &quot;US&quot;,&#xd;
        &quot;postalCode&quot;: &quot;12335&quot;&#xd;
      }&#xd;
    ]&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${apigeeEndpoint}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">${proto}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${commonPath}/v2/reservation/profile</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.util.JMeterUtils;
vars.put(&quot;accessToken&quot;,JMeterUtils.getProperty(&quot;propAccessToken&quot;));</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">${sourceHeaderKey}</stringProp>
                    <stringProp name="Header.value">${sourceValue}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">${channelHeaderKey}</stringProp>
                    <stringProp name="Header.value">${channelValue}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">${transactionIdHeaderKey}</stringProp>
                    <stringProp name="Header.value">Jmeter-trans-${__threadNum}-${transactionIdValue}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Cancellation Ratio Controller" enabled="true">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">false</boolProp>
            <intProp name="ThroughputController.maxThroughput">1</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>40.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">3000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="15 Cancel reservation API" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;confirmationNumber&quot;: &quot;${confirmationNumber}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${apigeeEndpoint}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">${proto}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${commonPath}/v3/reservation/cancel</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.util.JMeterUtils;
vars.put(&quot;accessToken&quot;,JMeterUtils.getProperty(&quot;propAccessToken&quot;));</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">${sourceHeaderKey}</stringProp>
                    <stringProp name="Header.value">${sourceValue}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">${channelHeaderKey}</stringProp>
                    <stringProp name="Header.value">${channelValue}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">${transactionIdHeaderKey}</stringProp>
                    <stringProp name="Header.value">Jmeter-trans-${__threadNum}-${transactionIdValue}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="RBS V2 API-Mlife" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">100</stringProp>
        <stringProp name="ThreadGroup.ramp_time">120</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">1800</stringProp>
        <stringProp name="ThreadGroup.delay">30</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Date Utility" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Locale;


        Calendar cal = Calendar.getInstance();
        DateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;, Locale.ENGLISH);

        for (int i = 0; i &lt; 80; i++) {
            cal.add(Calendar.DAY_OF_YEAR, 1);
            System.out.println(&quot;Date &quot; + i + &quot;--&gt;&quot; + dateFormat.format(cal.getTime()));
            vars.put(&quot;todayPlus&quot;+i,dateFormat.format(cal.getTime()));
        }
</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1 Mlife Customer offers API" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="propertyId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${propertyId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">propertyId</stringProp>
              </elementProp>
              <elementProp name="customerId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${customerId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">customerId</stringProp>
              </elementProp>
              <elementProp name="mlifeNumber" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${mlifeNumber}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">mlifeNumber</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${apigeeEndpoint}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">${proto}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${commonPath}/v3/customer/offers</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import org.apache.jmeter.util.JMeterUtils;
vars.put(&quot;accessToken&quot;,JMeterUtils.getProperty(&quot;propAccessToken&quot;));</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${sourceHeaderKey}</stringProp>
                <stringProp name="Header.value">${sourceValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${channelHeaderKey}</stringProp>
                <stringProp name="Header.value">${channelValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${transactionIdHeaderKey}</stringProp>
                <stringProp name="Header.value">Jmeter-trans-${__threadNum}-${transactionIdValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2 Mlife Applicable programs API" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="propertyId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${propertyId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">propertyId</stringProp>
              </elementProp>
              <elementProp name="filterBookable" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">filterBookable</stringProp>
              </elementProp>
              <elementProp name="filterViewable" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">filterViewable</stringProp>
              </elementProp>
              <elementProp name="checkInDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${todayPlus45}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">checkInDate</stringProp>
              </elementProp>
              <elementProp name="checkOutDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${todayPlus46}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">checkOutDate</stringProp>
              </elementProp>
              <elementProp name="numAdults" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${inputNumAdults}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">numAdults</stringProp>
              </elementProp>
              <elementProp name="mlifeNumber" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${mlifeNumber}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">mlifeNumber</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${apigeeEndpoint}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">${proto}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${commonPath}/v2/programs/applicable</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import org.apache.jmeter.util.JMeterUtils;
vars.put(&quot;accessToken&quot;,JMeterUtils.getProperty(&quot;propAccessToken&quot;));</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${sourceHeaderKey}</stringProp>
                <stringProp name="Header.value">${sourceValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${channelHeaderKey}</stringProp>
                <stringProp name="Header.value">${channelValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${transactionIdHeaderKey}</stringProp>
                <stringProp name="Header.value">Jmeter-trans-${__threadNum}-${transactionIdValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="ProgramId Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">programId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">.programIds[0]</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3 Mlife Calendar Availability API" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${todayPlus10}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">startDate</stringProp>
              </elementProp>
              <elementProp name="endDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${todayPlus15}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">endDate</stringProp>
              </elementProp>
              <elementProp name="numAdults" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${inputNumAdults}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">numAdults</stringProp>
              </elementProp>
              <elementProp name="propertyId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${propertyId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">propertyId</stringProp>
              </elementProp>
              <elementProp name="mlifeNumber" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${mlifeNumber}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">mlifeNumber</stringProp>
              </elementProp>
              <elementProp name="totalNights" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${totalNights}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">totalNights</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${apigeeEndpoint}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">${proto}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${commonPath}/v3/availability/calendar</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import org.apache.jmeter.util.JMeterUtils;
vars.put(&quot;accessToken&quot;,JMeterUtils.getProperty(&quot;propAccessToken&quot;));</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${sourceHeaderKey}</stringProp>
                <stringProp name="Header.value">${sourceValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${channelHeaderKey}</stringProp>
                <stringProp name="Header.value">${channelValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${transactionIdHeaderKey}</stringProp>
                <stringProp name="Header.value">Jmeter-trans-${__threadNum}-${transactionIdValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4 Mlife Trip Availability API" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="checkInDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${todayPlus45}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">checkInDate</stringProp>
              </elementProp>
              <elementProp name="checkOutDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${todayPlus46}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">checkOutDate</stringProp>
              </elementProp>
              <elementProp name="numAdults" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${inputNumAdults}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">numAdults</stringProp>
              </elementProp>
              <elementProp name="propertyId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${propertyId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">propertyId</stringProp>
              </elementProp>
              <elementProp name="perpetualPricing" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">perpetualPricing</stringProp>
              </elementProp>
              <elementProp name="mlifeNumber" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${mlifeNumber}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">mlifeNumber</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${apigeeEndpoint}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">${proto}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${commonPath}/v3/availability/trip</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import org.apache.jmeter.util.JMeterUtils;
vars.put(&quot;accessToken&quot;,JMeterUtils.getProperty(&quot;propAccessToken&quot;));</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${sourceHeaderKey}</stringProp>
                <stringProp name="Header.value">${sourceValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${channelHeaderKey}</stringProp>
                <stringProp name="Header.value">${channelValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${transactionIdHeaderKey}</stringProp>
                <stringProp name="Header.value">Jmeter-trans-${__threadNum}-${transactionIdValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch roomTypeId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">roomTypeId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">.ratePlans[0].rooms[0].roomTypeId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch inputBasePrice" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">inputBasePrice</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">.availability[0].price.itemized[0].basePrice</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch inputDiscountedSubtotal" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">inputDiscountedSubtotal</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">.availability[0].price.itemized[0].discountedPrice</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch pricingRuleId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">pricingRuleId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">.availability[0].price.itemized[0].pricingRuleId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch programIdIsRateTable" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">programIdIsRateTable</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">.availability[0].price.itemized[0].programIdIsRateTable</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch resortFee" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">resortFee</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">.availability[0].resortFee</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch Program Id" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">programId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">.ratePlans[0].programId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5 Multi Availability API" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="checkInDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${todayPlus45}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">checkInDate</stringProp>
              </elementProp>
              <elementProp name="checkOutDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${todayPlus46}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">checkOutDate</stringProp>
              </elementProp>
              <elementProp name="numAdults" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${inputNumAdults}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">numAdults</stringProp>
              </elementProp>
              <elementProp name="propertyIds" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${propertyId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">propertyIds</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${apigeeEndpoint}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">${proto}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${commonPath}/v2/availability/resorts</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import org.apache.jmeter.util.JMeterUtils;
vars.put(&quot;accessToken&quot;,JMeterUtils.getProperty(&quot;propAccessToken&quot;));</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${sourceHeaderKey}</stringProp>
                <stringProp name="Header.value">${sourceValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${channelHeaderKey}</stringProp>
                <stringProp name="Header.value">${channelValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${transactionIdHeaderKey}</stringProp>
                <stringProp name="Header.value">Jmeter-trans-${__threadNum}-${transactionIdValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6 Mlife Reservation charges API" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;stage&quot;: &quot;Checkout&quot;,&#xd;
    &quot;calcsOnly&quot;: false,&#xd;
    &quot;propertyId&quot;: &quot;${propertyId}&quot;,&#xd;
    &quot;roomTypeId&quot;: &quot;${roomTypeId}&quot;,&#xd;
    &quot;programId&quot;: &quot;${programId}&quot;,&#xd;
    &quot;customerId&quot;: &quot;848864739331&quot;,&#xd;
    &quot;itineraryId&quot;: &quot;9323708418&quot;,&#xd;
    &quot;guaranteeCode&quot;: null,&#xd;
    &quot;specialRequests&quot;: [], &#xd;
    &quot;tripDetails&quot;: {&#xd;
        &quot;numAdults&quot;: ${inputNumAdults},&#xd;
        &quot;numChildren&quot;: 0,&#xd;
	    &quot;checkInDate&quot;: &quot;${todayPlus45}&quot;,&#xd;
	    &quot;checkOutDate&quot;: &quot;${todayPlus46}&quot;,&#xd;
        &quot;numGuests&quot;: ${inputNumAdults},&#xd;
        &quot;nights&quot;: 1,&#xd;
        &quot;numRooms&quot;: 1&#xd;
    },&#xd;
    &quot;billing&quot;: null,&#xd;
    &quot;bookings&quot;: [&#xd;
        {&#xd;
            &quot;price&quot;: 0,&#xd;
            &quot;overridePrice&quot;: -1.0,&#xd;
            &quot;programId&quot;: &quot;${programId}&quot;,&#xd;
            &quot;date&quot;: &quot;${todayPlus45}&quot;&#xd;
            &#xd;
        },&#xd;
         {&#xd;
            &quot;price&quot; : 0,&#xd;
            &quot;overridePrice&quot;: -1.0,&#xd;
            &quot;programId&quot;: &quot;${programId}&quot;,&#xd;
            &quot;date&quot;: &quot;${todayPlus46}&quot;&#xd;
            &#xd;
        }&#xd;
    ],&#xd;
    &quot;profile&quot;: {&#xd;
        &quot;id&quot;: 848864739331,&#xd;
        &quot;operaId&quot;: null,&#xd;
        &quot;firstName&quot;: &quot;Juvhhfy&quot;,&#xd;
        &quot;lastName&quot;: &quot;Juvhhfynxcdt&quot;,&#xd;
        &quot;phoneNumbers&quot;: null,&#xd;
        &quot;emailAddress1&quot;: &quot;JUVHHFYNX@mgmqa.com&quot;,&#xd;
        &quot;emailAddress2&quot;: null,&#xd;
        &quot;dateOfBirth&quot;: null,&#xd;
        &quot;hgpNo&quot;: null,&#xd;
        &quot;swrrNo&quot;: null,&#xd;
        &quot;addresses&quot;: [&#xd;
            {&#xd;
                &quot;preferred&quot;: false,&#xd;
                &quot;street1&quot;: &quot;105 Bass Plantation Drive&quot;,&#xd;
                &quot;street2&quot;: null,&#xd;
                &quot;city&quot;: &quot;Macon&quot;,&#xd;
                &quot;state&quot;: &quot;GA&quot;,&#xd;
                &quot;country&quot;: &quot;US&quot;,&#xd;
                &quot;postalCode&quot;: &quot;89106&quot;,&#xd;
                &quot;type&quot;: &quot;Home&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;title&quot;: null,&#xd;
        &quot;mlifeNo&quot;: 100041176&#xd;
    }&#xd;
   &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${apigeeEndpoint}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">${proto}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${commonPath}/v2/reservation/charges</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import org.apache.jmeter.util.JMeterUtils;
vars.put(&quot;accessToken&quot;,JMeterUtils.getProperty(&quot;propAccessToken&quot;));
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${sourceHeaderKey}</stringProp>
                <stringProp name="Header.value">${sourceValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${channelHeaderKey}</stringProp>
                <stringProp name="Header.value">${channelValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${transactionIdHeaderKey}</stringProp>
                <stringProp name="Header.value">Jmeter-trans-${__threadNum}-${transactionIdValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch chargesAndTaxes" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">chargesAndTaxes</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">.chargesAndTaxes</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch bookings" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">bookings</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">.bookings</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch depositDetails" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">depositDetails</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">.depositDetails</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch depositPolicy" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">depositPolicy</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">.depositPolicy</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch markets" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">markets</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">.markets</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">&quot;&quot;</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch amountDue" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">amountDue</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">.amountDue</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">&quot;&quot;</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch ratesSummary" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">ratesSummary</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">.ratesSummary</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">&quot;&quot;</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">vars.put(&quot;response&quot;, prev.getResponseDataAsString());

</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="7 Organization IATA search API" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="iataCode" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">52593693</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">iataCode</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${apigeeEndpoint}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">${proto}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${commonPath}/v2/iata/organizations</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import org.apache.jmeter.util.JMeterUtils;
vars.put(&quot;accessToken&quot;,JMeterUtils.getProperty(&quot;propAccessToken&quot;));</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${sourceHeaderKey}</stringProp>
                <stringProp name="Header.value">${sourceValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${channelHeaderKey}</stringProp>
                <stringProp name="Header.value">${channelValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${transactionIdHeaderKey}</stringProp>
                <stringProp name="Header.value">Jmeter-trans-${__threadNum}-${transactionIdValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="8 Group Search  API" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${todayPlus30}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">startDate</stringProp>
              </elementProp>
              <elementProp name="endDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${todayPlus45}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">endDate</stringProp>
              </elementProp>
              <elementProp name="id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">GRPCD-v-GR1-d-PROP-v-MV021</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">id</stringProp>
              </elementProp>
              <elementProp name="propertyId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${propertyId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">propertyId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host-v2}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">${proto}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${commonPath}/v2/groupblocks</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import org.apache.jmeter.util.JMeterUtils;
vars.put(&quot;accessToken&quot;,JMeterUtils.getProperty(&quot;propAccessToken&quot;));</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${sourceHeaderKey}</stringProp>
                <stringProp name="Header.value">${sourceValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${channelHeaderKey}</stringProp>
                <stringProp name="Header.value">${channelValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${transactionIdHeaderKey}</stringProp>
                <stringProp name="Header.value">Jmeter-trans-${__threadNum}-${transactionIdValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Booking Controller " enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>80.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6 Create itinerary API" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &#xd;
    &quot;itineraryName&quot;:&quot;rbs-perf-run&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customerId}&quot;,&#xd;
    &quot;tripParams&quot;:{&#xd;
        &quot;numAdults&quot;: ${inputNumAdults},&#xd;
        &quot;numChildren&quot;: 0,&#xd;
        &quot;arrivalDate&quot;: &quot;${todayPlus45}&quot;,&#xd;
        &quot;departureDate&quot;: &quot;${todayPlus46}&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host-v2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${proto}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/service/r/v2/itinerary</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import org.apache.jmeter.util.JMeterUtils;
vars.put(&quot;accessToken&quot;,JMeterUtils.getProperty(&quot;propAccessToken&quot;));
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-mgm-correlation-id</stringProp>
                  <stringProp name="Header.value">Jmeter-correlation-${__threadNum}-${transactionIdValue}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch itinerary" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">itineraryId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">.itinerary.itineraryId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">758565</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="9 Mlife Make reservation API" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;roomReservation&quot;: {&#xd;
		&quot;id&quot;: &quot;${reservationId}&quot;,&#xd;
		&quot;customerId&quot;: &quot;${customerId}&quot;,&#xd;
		&quot;propertyId&quot;: &quot;${propertyId}&quot;,&#xd;
		&quot;itineraryId&quot;: 9323708418,&#xd;
		&quot;roomTypeId&quot;: &quot;${roomTypeId}&quot;,&#xd;
		&quot;specialRequests&quot;: [],&#xd;
		&quot;mlifeNo&quot;: 100041176,&#xd;
		&quot;profile&quot;: {&#xd;
            &quot;id&quot;: 848864739331,&#xd;
            &quot;firstName&quot;: &quot;Juvhhfy&quot;,&#xd;
            &quot;lastName&quot;: &quot;Juvhhfynxcdt&quot;,&#xd;
            &quot;addresses&quot;:[&#xd;
            {&#xd;
               &quot;preferred&quot;: false,&#xd;
                &quot;street1&quot;: &quot;105 Bass Plantation Drive&quot;,&#xd;
                &quot;street2&quot;: null,&#xd;
                &quot;city&quot;: &quot;Macon&quot;,&#xd;
                &quot;state&quot;: &quot;GA&quot;,&#xd;
                &quot;country&quot;: &quot;US&quot;,&#xd;
                &quot;postalCode&quot;: &quot;89106&quot;,&#xd;
                &quot;type&quot;: &quot;Home&quot;&#xd;
            }&#xd;
         ]&#xd;
        },&#xd;
&quot;billing&quot;: [{&#xd;
            &quot;payment&quot;: {&#xd;
                &quot;cardHolder&quot;: &quot;Uttam Ghorai&quot;,&#xd;
                &quot;firstName&quot;: &quot;Uttam&quot;,&#xd;
                &quot;lastName&quot;: &quot;Ghorai&quot;,&#xd;
                &quot;ccToken&quot;: &quot;4111110A001DQXFHY79D9XCZ1111&quot;,&#xd;
                &quot;encryptedccToken&quot;: &quot;5555550A0012ZTSHUFMXCCUW4444&quot;,&#xd;
                &quot;maskedNumber&quot;: &quot;XXXXXXXXXXXXXXXXXXXXXXXX4444&quot;,&#xd;
                &quot;amount&quot;: 380,&#xd;
                &quot;expiry&quot;: &quot;05/2022&quot;,&#xd;
                &quot;type&quot;: &quot;Visa&quot;&#xd;
            },&#xd;
            &quot;address&quot;: {&#xd;
                &quot;street1&quot;: &quot;5353 W Desert Inn&quot;,&#xd;
                &quot;street2&quot;: null,&#xd;
                &quot;city&quot;: &quot;Las Vegas&quot;,&#xd;
                &quot;state&quot;: &quot;NV&quot;,&#xd;
                &quot;postalCode&quot;: &quot;89146&quot;,&#xd;
                &quot;country&quot;: &quot;US&quot;&#xd;
            }&#xd;
        }&#xd;
    ],&#xd;
    &quot;tripDetails&quot;: {&#xd;
			&quot;checkInDate&quot;: &quot;${todayPlus45}&quot;,&#xd;
			&quot;checkOutDate&quot;: &quot;${todayPlus46}&quot;,&#xd;
			&quot;numAdults&quot;: ${inputNumAdults},&#xd;
			&quot;numChildren&quot;: 0,&#xd;
			&quot;numRooms&quot;: 1&#xd;
		},&#xd;
		&quot;bookings&quot;: ${bookings},&#xd;
		&quot;chargesAndTaxes&quot;: ${chargesAndTaxes},&#xd;
		&quot;depositDetails&quot;: ${depositDetails},&#xd;
		&quot;depositPolicy&quot;: ${depositPolicy},&#xd;
		&quot;ratesSummary&quot;: ${ratesSummary},&#xd;
		&quot;amountDue&quot;: ${amountDue},&#xd;
		&quot;guaranteeCode&quot;: null&#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${apigeeEndpoint}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${proto}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${commonPath}/v2/reservation</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import org.apache.jmeter.util.JMeterUtils;

vars.put(&quot;accessToken&quot;,JMeterUtils.getProperty(&quot;propAccessToken&quot;));
vars.put(&quot;reservationId&quot;, UUID.randomUUID().toString());



</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">${sourceHeaderKey}</stringProp>
                  <stringProp name="Header.value">${sourceValue}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">${channelHeaderKey}</stringProp>
                  <stringProp name="Header.value">${channelValue}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">${transactionIdHeaderKey}</stringProp>
                  <stringProp name="Header.value">Jmeter-trans-${__threadNum}-${transactionIdValue}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch confirmationNumber" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">confirmationNumber</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">.roomReservation.confirmationNumber</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch profile" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">profile</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">.roomReservation.profile</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch payments" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">payments</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">.roomReservation.payments</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch ratesSummary" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">ratesSummary</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">.ratesSummary</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">&quot;&quot;</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch depositPolicy" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">depositPolicy</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">.depositPolicy</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch markets" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">markets</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">.markets</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">&quot;&quot;</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch chargesAndTaxes" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">chargesAndTaxes</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">.chargesAndTaxes</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch depositDetails" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">depositDetails</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">.depositDetails</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch bookings" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">bookings</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">.bookings</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch amountDue" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">amountDue</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">.amountDue</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">&quot;&quot;</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch bookDate" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">bookDate</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">.roomReservation.bookDate</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="10 Mlife Find reservation API" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="confirmationNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${confirmationNumber}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">confirmationNumber</stringProp>
                </elementProp>
                <elementProp name="cacheOnly" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">cacheOnly</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${apigeeEndpoint}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${proto}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${commonPath}/v2/reservation</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import org.apache.jmeter.util.JMeterUtils;
vars.put(&quot;accessToken&quot;,JMeterUtils.getProperty(&quot;propAccessToken&quot;));</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">${sourceHeaderKey}</stringProp>
                  <stringProp name="Header.value">${sourceValue}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">${channelHeaderKey}</stringProp>
                  <stringProp name="Header.value">${channelValue}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">${transactionIdHeaderKey}</stringProp>
                  <stringProp name="Header.value">Jmeter-trans-${__threadNum}-${transactionIdValue}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="11 Make Party reservation API" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;roomReservation&quot;: {&#xd;
		&quot;id&quot;: &quot;${reservationId}&quot;,&#xd;
		&quot;customerId&quot;: &quot;${customerId}&quot;,&#xd;
		&quot;propertyId&quot;: &quot;${propertyId}&quot;,&#xd;
		&quot;itineraryId&quot;: 758565,&#xd;
		&quot;roomTypeId&quot;: &quot;${roomTypeId}&quot;,&#xd;
		&quot;specialRequests&quot;: [],&#xd;
		&quot;profile&quot;: {&#xd;
            &quot;id&quot;: 11171332354,&#xd;
            &quot;firstName&quot;: &quot;Lets&quot;,&#xd;
            &quot;lastName&quot;: &quot;Tryagain&quot;,&#xd;
            &quot;addresses&quot;:[&#xd;
            {&#xd;
               &quot;preferred&quot;:false,&#xd;
               &quot;street1&quot;:&quot;123 Main St&quot;,&#xd;
               &quot;street2&quot;:null,&#xd;
               &quot;city&quot;:&quot;Las Vegas&quot;,&#xd;
               &quot;state&quot;:&quot;NV&quot;,&#xd;
               &quot;country&quot;:&quot;US&quot;,&#xd;
               &quot;postalCode&quot;:&quot;89118&quot;,&#xd;
               &quot;type&quot;:&quot;Home&quot;&#xd;
            }&#xd;
         ]&#xd;
        },&#xd;
&quot;billing&quot;: [{&#xd;
            &quot;payment&quot;: {&#xd;
                &quot;cardHolder&quot;: &quot;Uttam Ghorai&quot;,&#xd;
                &quot;firstName&quot;: &quot;Uttam&quot;,&#xd;
                &quot;lastName&quot;: &quot;Ghorai&quot;,&#xd;
                &quot;ccToken&quot;: &quot;4111110A001DQXFHY79D9XCZ1111&quot;,&#xd;
                &quot;encryptedccToken&quot;: &quot;5555550A0012ZTSHUFMXCCUW4444&quot;,&#xd;
                &quot;maskedNumber&quot;: &quot;XXXXXXXXXXXXXXXXXXXXXXXX4444&quot;,&#xd;
                &quot;amount&quot;: 380,&#xd;
                &quot;expiry&quot;: &quot;10/2022&quot;,&#xd;
                &quot;type&quot;: &quot;Diners Club&quot;&#xd;
            },&#xd;
            &quot;address&quot;: {&#xd;
                &quot;street1&quot;: &quot;5353 W Desert Inn&quot;,&#xd;
                &quot;street2&quot;: null,&#xd;
                &quot;city&quot;: &quot;Las Vegas&quot;,&#xd;
                &quot;state&quot;: &quot;NV&quot;,&#xd;
                &quot;postalCode&quot;: &quot;89146&quot;,&#xd;
                &quot;country&quot;: &quot;US&quot;&#xd;
            }&#xd;
        }&#xd;
    ],&#xd;
    &quot;tripDetails&quot;: {&#xd;
			&quot;checkInDate&quot;: &quot;${todayPlus45}&quot;,&#xd;
			&quot;checkOutDate&quot;: &quot;${todayPlus46}&quot;,&#xd;
			&quot;numAdults&quot;: ${inputNumAdults},&#xd;
			&quot;numChildren&quot;: 2,&#xd;
			&quot;numRooms&quot;: 2&#xd;
		},&#xd;
		&quot;bookings&quot;: ${bookings},&#xd;
		&quot;chargesAndTaxes&quot;: ${chargesAndTaxes},&#xd;
		&quot;depositDetails&quot;: ${depositDetails},&#xd;
		&quot;depositPolicy&quot;: ${depositPolicy},&#xd;
		&quot;ratesSummary&quot;: ${ratesSummary},&#xd;
		&quot;amountDue&quot;: ${amountDue},&#xd;
		&quot;guaranteeCode&quot;: null&#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${apigeeEndpoint}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${proto}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${commonPath}/v2/reservation/party</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import org.apache.jmeter.util.JMeterUtils;
vars.put(&quot;accessToken&quot;,JMeterUtils.getProperty(&quot;propAccessToken&quot;));
vars.put(&quot;reservationId&quot;, UUID.randomUUID().toString());
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">${sourceHeaderKey}</stringProp>
                  <stringProp name="Header.value">${sourceValue}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">${channelHeaderKey}</stringProp>
                  <stringProp name="Header.value">${channelValue}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">${transactionIdHeaderKey}</stringProp>
                  <stringProp name="Header.value">Jmeter-trans-${__threadNum}-${transactionIdValue}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch partyConfirmationNumber" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">partyConfirmationNumber</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">.roomReservations[0].confirmationNumber</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="12 Search reservation API" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="confirmationNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${partyConfirmationNumber}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">confirmationNumber</stringProp>
                </elementProp>
                <elementProp name="propertyId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${propertyId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">propertyId</stringProp>
                </elementProp>
                <elementProp name="cacheOnly" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">cacheOnly</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${apigeeEndpoint}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${proto}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${commonPath}/v2/reservation/party/info</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import org.apache.jmeter.util.JMeterUtils;
vars.put(&quot;accessToken&quot;,JMeterUtils.getProperty(&quot;propAccessToken&quot;));</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">${sourceHeaderKey}</stringProp>
                  <stringProp name="Header.value">${sourceValue}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">${channelHeaderKey}</stringProp>
                  <stringProp name="Header.value">${channelValue}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">${transactionIdHeaderKey}</stringProp>
                  <stringProp name="Header.value">Jmeter-trans-${__threadNum}-${transactionIdValue}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="13 Share With reservation API" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;roomReservation&quot;: {&#xd;
		&quot;id&quot;: &quot;${reservationId}&quot;,&#xd;
		&quot;customerId&quot;: &quot;${customerId}&quot;,&#xd;
		&quot;propertyId&quot;: &quot;${propertyId}&quot;,&#xd;
		&quot;itineraryId&quot;: 758565,&#xd;
		&quot;roomTypeId&quot;: &quot;${roomTypeId}&quot;,&#xd;
		&quot;specialRequests&quot;: [],&#xd;
		&quot;confirmationNumber&quot;: &quot;&quot;,&#xd;
	     &quot;partyConfirmationNumber&quot;: null,&#xd;
	     &quot;otaConfirmationNumber&quot;: null,&#xd;
	     &quot;primarySharerConfirmationNumber&quot;: null,&#xd;
	     &quot;operaConfirmationNumber&quot;: &quot;&quot;,&#xd;
    		&quot;profile&quot;: {&#xd;
            &quot;id&quot;: 11171332354,&#xd;
            &quot;firstName&quot;: &quot;Lets&quot;,&#xd;
            &quot;lastName&quot;: &quot;Tryagain&quot;,&#xd;
            &quot;addresses&quot;:[&#xd;
            {&#xd;
               &quot;preferred&quot;:false,&#xd;
               &quot;street1&quot;:&quot;123 Main St&quot;,&#xd;
               &quot;street2&quot;:null,&#xd;
               &quot;city&quot;:&quot;Las Vegas&quot;,&#xd;
               &quot;state&quot;:&quot;NV&quot;,&#xd;
               &quot;country&quot;:&quot;US&quot;,&#xd;
               &quot;postalCode&quot;:&quot;89118&quot;,&#xd;
               &quot;type&quot;:&quot;Home&quot;&#xd;
            }&#xd;
         ]&#xd;
        },&#xd;
&quot;billing&quot;: [{&#xd;
            &quot;payment&quot;: {&#xd;
                &quot;cardHolder&quot;: &quot;Uttam Ghorai&quot;,&#xd;
                &quot;firstName&quot;: &quot;Uttam&quot;,&#xd;
                &quot;lastName&quot;: &quot;Ghorai&quot;,&#xd;
                &quot;ccToken&quot;: &quot;4111110A001DQXFHY79D9XCZ1111&quot;,&#xd;
                &quot;encryptedccToken&quot;: &quot;5555550A0012ZTSHUFMXCCUW4444&quot;,&#xd;
                &quot;maskedNumber&quot;: &quot;XXXXXXXXXXXXXXXXXXXXXXXX4444&quot;,&#xd;
                &quot;amount&quot;: 380,&#xd;
                &quot;expiry&quot;: &quot;10/2022&quot;,&#xd;
                &quot;type&quot;: &quot;Diners Club&quot;&#xd;
            },&#xd;
            &quot;address&quot;: {&#xd;
                &quot;street1&quot;: &quot;5353 W Desert Inn&quot;,&#xd;
                &quot;street2&quot;: null,&#xd;
                &quot;city&quot;: &quot;Las Vegas&quot;,&#xd;
                &quot;state&quot;: &quot;NV&quot;,&#xd;
                &quot;postalCode&quot;: &quot;89146&quot;,&#xd;
                &quot;country&quot;: &quot;US&quot;&#xd;
            }&#xd;
        }&#xd;
    ],&#xd;
    &quot;shareWithCustomers&quot;: [{&#xd;
            &quot;id&quot;: 848906485762,&#xd;
            &quot;mlifeNo&quot;: 80881763,&#xd;
            &quot;title&quot;: null,&#xd;
            &quot;dateOfBirth&quot;: &quot;1980-01-20&quot;,&#xd;
            &quot;operaId&quot;: null,&#xd;
            &quot;tier&quot;: null,&#xd;
            &quot;dateOfEnrollment&quot;: null,&#xd;
            &quot;firstName&quot;: &quot;Dkfirst&quot;,&#xd;
            &quot;lastName&quot;: &quot;Dklast&quot;,&#xd;
            &quot;emailAddress1&quot;: &quot;dktest9@yopmail.com&quot;,&#xd;
            &quot;emailAddress2&quot;: null,&#xd;
            &quot;hgpNo&quot;: null,&#xd;
            &quot;swrrNo&quot;: null,&#xd;
            &quot;phoneNumbers&quot;: [{&#xd;
                    &quot;type&quot;: &quot;Home&quot;,&#xd;
                    &quot;number&quot;: &quot;9734567890&quot;&#xd;
                }&#xd;
            ],&#xd;
            &quot;addresses&quot;: [{&#xd;
                    &quot;type&quot;: &quot;Home&quot;,&#xd;
                    &quot;preferred&quot;: false,&#xd;
                    &quot;street1&quot;: &quot;999 Main St&quot;,&#xd;
                    &quot;street2&quot;: null,&#xd;
                    &quot;city&quot;: &quot;New York&quot;,&#xd;
                    &quot;state&quot;: &quot;NY&quot;,&#xd;
                    &quot;country&quot;: &quot;US&quot;,&#xd;
                    &quot;postalCode&quot;: &quot;94999&quot;&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ],&#xd;
    &quot;sharedConfirmationNumbers&quot;: null,&#xd;
    &quot;tripDetails&quot;: {&#xd;
			&quot;checkInDate&quot;: &quot;${todayPlus45}&quot;,&#xd;
			&quot;checkOutDate&quot;: &quot;${todayPlus46}&quot;,&#xd;
			&quot;numAdults&quot;: ${inputNumAdults},&#xd;
			&quot;numChildren&quot;: 0,&#xd;
			&quot;numRooms&quot;: 1&#xd;
		},&#xd;
		&quot;bookings&quot;: ${bookings},&#xd;
		&quot;chargesAndTaxes&quot;: ${chargesAndTaxes},&#xd;
		&quot;depositDetails&quot;: ${depositDetails},&#xd;
		&quot;depositPolicy&quot;: ${depositPolicy},&#xd;
		&quot;ratesSummary&quot;: ${ratesSummary},&#xd;
		&quot;amountDue&quot;: ${amountDue},&#xd;
		&quot;guaranteeCode&quot;: null&#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${apigeeEndpoint}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${proto}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${commonPath}/v2/reservation</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import org.apache.jmeter.util.JMeterUtils;
vars.put(&quot;accessToken&quot;,JMeterUtils.getProperty(&quot;propAccessToken&quot;));
vars.put(&quot;reservationId&quot;, UUID.randomUUID().toString());
vars.put(&quot;propertyId&quot;,&quot;e0f70eb3-7e27-4c33-8bcd-f30bf3b1103a&quot;);
vars.put(&quot;roomTypeId&quot;,&quot;ROOMCD-v-DLVK-d-PROP-v-MV275&quot;);
vars.put(&quot;programId&quot;,&quot;RPCD-v-TSTPREVL-d-PROP-v-MV275&quot;);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">${sourceHeaderKey}</stringProp>
                  <stringProp name="Header.value">${sourceValue}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">${channelHeaderKey}</stringProp>
                  <stringProp name="Header.value">${channelValue}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">${transactionIdHeaderKey}</stringProp>
                  <stringProp name="Header.value">Jmeter-trans-${__threadNum}-${transactionIdValue}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch primarySharerConfirmationNumber" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">primarySharerConfirmationNumber</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">.roomReservations[0].primarySharerConfirmationNumber</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Modification Ratio Controller" enabled="true">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">false</boolProp>
            <intProp name="ThroughputController.maxThroughput">1</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>60.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="13 Mlife Modify reservation API" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;roomReservation&quot;: {&#xd;
        &quot;id&quot;: &quot;${reservationId}&quot;,&#xd;
        &quot;customerId&quot;: &quot;${customerId}&quot;,&#xd;
        &quot;propertyId&quot;: &quot;${propertyId}&quot;,&#xd;
        &quot;itineraryId&quot;: 758565,&#xd;
        &quot;roomTypeId&quot;: &quot;${roomTypeId}&quot;,&#xd;
        &quot;state&quot;: &quot;Booked&quot;,&#xd;
        &quot;nrgStatus&quot;: false,&#xd;
        &quot;specialRequests&quot;: [],&#xd;
        &quot;confirmationNumber&quot;: &quot;${confirmationNumber}&quot;,&#xd;
        &quot;bookDate&quot;: &quot;${bookDate}&quot;,&#xd;
        &quot;mlifeNo&quot;: 100041176,&#xd;
        &quot;profile&quot;: {&#xd;
            &quot;id&quot;: 848864739331,&#xd;
	        &quot;operaId&quot;: null,&#xd;
	        &quot;firstName&quot;: &quot;Juvhhfy&quot;,&#xd;
	        &quot;lastName&quot;: &quot;Juvhhfynxcdt&quot;,&#xd;
	        &quot;phoneNumbers&quot;: null,&#xd;
	        &quot;emailAddress1&quot;: &quot;JUVHHFYNX@mgmqa.com&quot;,&#xd;
             &quot;addresses&quot;:[&#xd;
             {&#xd;
                &quot;preferred&quot;: false,&#xd;
                &quot;street1&quot;: &quot;105 Bass Plantation Drive&quot;,&#xd;
                &quot;street2&quot;: null,&#xd;
                &quot;city&quot;: &quot;Macon&quot;,&#xd;
                &quot;state&quot;: &quot;GA&quot;,&#xd;
                &quot;country&quot;: &quot;US&quot;,&#xd;
                &quot;postalCode&quot;: &quot;89106&quot;,&#xd;
                &quot;type&quot;: &quot;Home&quot;&#xd;
             }&#xd;
         ]&#xd;
        },&#xd;
        &quot;billing&quot;: [&#xd;
            {&#xd;
                &quot;payment&quot;: {&#xd;
                     &quot;cardHolder&quot;: &quot;Uttam Ghorai&quot;,&#xd;
	                &quot;firstName&quot;: &quot;Uttam&quot;,&#xd;
	                &quot;lastName&quot;: &quot;Ghorai&quot;,&#xd;
	                &quot;ccToken&quot;: &quot;4111110A001DQXFHY79D9XCZ1111&quot;,&#xd;
	                &quot;encryptedccToken&quot;: &quot;5555550A0012ZTSHUFMXCCUW4444&quot;,&#xd;
	                &quot;maskedNumber&quot;: &quot;XXXXXXXXXXXXXXXXXXXXXXXX4444&quot;,&#xd;
	                &quot;amount&quot;: 380,&#xd;
	                &quot;expiry&quot;: &quot;10/2022&quot;,&#xd;
	                &quot;type&quot;: &quot;Visa&quot;&#xd;
                },&#xd;
                &quot;address&quot;: {&#xd;
                    &quot;street1&quot;: &quot;234 W Main St&quot;,&#xd;
                    &quot;street2&quot;: &quot;Unit 415&quot;,&#xd;
                    &quot;city&quot;: &quot;Las Vegas&quot;,&#xd;
                    &quot;state&quot;: &quot;NV&quot;,&#xd;
                    &quot;postalCode&quot;: &quot;12345&quot;,&#xd;
                    &quot;country&quot;: &quot;US&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;tripDetails&quot;: {&#xd;
            &quot;checkInDate&quot;: &quot;${todayPlus45}&quot;,&#xd;
            &quot;checkOutDate&quot;: &quot;${todayPlus46}&quot;,&#xd;
            &quot;numAdults&quot;: ${inputNumAdults},&#xd;
            &quot;numChildren&quot;: 0,&#xd;
            &quot;numRooms&quot;: 1&#xd;
        },&#xd;
        &quot;markets&quot;: [&#xd;
            {&#xd;
                &quot;date&quot;: &quot;2021-06-05&quot;,&#xd;
                &quot;marketCode&quot;: &quot;TFIT&quot;,&#xd;
                &quot;sourceCode&quot;: &quot;CC&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;date&quot;: &quot;2021-06-06&quot;,&#xd;
                &quot;marketCode&quot;: &quot;TFIT&quot;,&#xd;
                &quot;sourceCode&quot;: &quot;CC&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;bookings&quot;: ${bookings},&#xd;
        &quot;chargesAndTaxes&quot;: ${chargesAndTaxes},&#xd;
        &quot;depositDetails&quot;: ${depositDetails},&#xd;
        &quot;depositPolicy&quot;: ${depositPolicy},&#xd;
        &quot;payments&quot;: ${payments},&#xd;
        &quot;amountDue&quot;: 0,&#xd;
        &quot;guaranteeCode&quot;: &quot;CC&quot;,&#xd;
        &quot;customerRank&quot;: 0,&#xd;
        &quot;customerSegment&quot;: 0&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${apigeeEndpoint}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">${proto}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${commonPath}/v2/reservation</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.util.JMeterUtils;
vars.put(&quot;accessToken&quot;,JMeterUtils.getProperty(&quot;propAccessToken&quot;));
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">${sourceHeaderKey}</stringProp>
                    <stringProp name="Header.value">${sourceValue}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">${channelHeaderKey}</stringProp>
                    <stringProp name="Header.value">${channelValue}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">${transactionIdHeaderKey}</stringProp>
                    <stringProp name="Header.value">Jmeter-trans-${__threadNum}-${transactionIdValue}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="14 Modify Profile API" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;itineraryId&quot;: 758565,&#xd;
  &quot;propertyId&quot;: &quot;${propertyId}&quot;,&#xd;
  &quot;confirmationNumber&quot;: &quot;${confirmationNumber}&quot;,&#xd;
  &quot;userProfile&quot;: {&#xd;
    &quot;id&quot;: 0,&#xd;
    &quot;operaId&quot;: &quot;string&quot;,&#xd;
    &quot;firstName&quot;: &quot;John&quot;,&#xd;
    &quot;lastName&quot;: &quot;Doe&quot;,&#xd;
    &quot;phoneNumbers&quot;: [&#xd;
      {&#xd;
        &quot;type&quot;: &quot;Home&quot;,&#xd;
        &quot;number&quot;: &quot;9952051456&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;emailAddress1&quot;: &quot;johndoe123@nomail.com&quot;,&#xd;
    &quot;emailAddress2&quot;: &quot;johndoe456@nomail.com&quot;,&#xd;
    &quot;dateOfBirth&quot;: &quot;1995-12-31&quot;,&#xd;
    &quot;mlifeNo&quot;: 1122334,&#xd;
    &quot;hgpNo&quot;: &quot;string&quot;,&#xd;
    &quot;swrrNo&quot;: &quot;string&quot;,&#xd;
    &quot;addresses&quot;: [&#xd;
      {&#xd;
        &quot;type&quot;: &quot;Home&quot;,&#xd;
        &quot;preferred&quot;: true,&#xd;
        &quot;street1&quot;: &quot;2345 W Main St&quot;,&#xd;
        &quot;street2&quot;: &quot;Unit 415&quot;,&#xd;
        &quot;city&quot;: &quot;Las Vegas&quot;,&#xd;
        &quot;state&quot;: &quot;NV&quot;,&#xd;
        &quot;country&quot;: &quot;US&quot;,&#xd;
        &quot;postalCode&quot;: &quot;12335&quot;&#xd;
      }&#xd;
    ]&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${apigeeEndpoint}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">${proto}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${commonPath}/v2/reservation/profile</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.util.JMeterUtils;
vars.put(&quot;accessToken&quot;,JMeterUtils.getProperty(&quot;propAccessToken&quot;));</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">${sourceHeaderKey}</stringProp>
                    <stringProp name="Header.value">${sourceValue}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">${channelHeaderKey}</stringProp>
                    <stringProp name="Header.value">${channelValue}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">${transactionIdHeaderKey}</stringProp>
                    <stringProp name="Header.value">Jmeter-trans-${__threadNum}-${transactionIdValue}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Cancellation Ratio Controller" enabled="true">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">false</boolProp>
            <intProp name="ThroughputController.maxThroughput">1</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>40.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">3000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="15 Mlife Cancel reservation API" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;confirmationNumber&quot;: &quot;${confirmationNumber}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${apigeeEndpoint}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">${proto}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${commonPath}/v3/reservation/cancel</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.jmeter.util.JMeterUtils;
vars.put(&quot;accessToken&quot;,JMeterUtils.getProperty(&quot;propAccessToken&quot;));</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">${sourceHeaderKey}</stringProp>
                    <stringProp name="Header.value">${sourceValue}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">${channelHeaderKey}</stringProp>
                    <stringProp name="Header.value">${channelValue}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">${transactionIdHeaderKey}</stringProp>
                    <stringProp name="Header.value">Jmeter-trans-${__threadNum}-${transactionIdValue}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
        <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="influxdbMetricsSender" elementType="Argument">
              <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
              <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="influxdbUrl" elementType="Argument">
              <stringProp name="Argument.name">influxdbUrl</stringProp>
              <stringProp name="Argument.value">http://jmeter-influxdb:8086/write?db=jmeter</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="application" elementType="Argument">
              <stringProp name="Argument.name">application</stringProp>
              <stringProp name="Argument.value">room-booking-services-v2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="measurement" elementType="Argument">
              <stringProp name="Argument.name">measurement</stringProp>
              <stringProp name="Argument.value">jmeter</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="summaryOnly" elementType="Argument">
              <stringProp name="Argument.name">summaryOnly</stringProp>
              <stringProp name="Argument.value">true</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="samplersRegex" elementType="Argument">
              <stringProp name="Argument.name">samplersRegex</stringProp>
              <stringProp name="Argument.value">.*</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="percentiles" elementType="Argument">
              <stringProp name="Argument.name">percentiles</stringProp>
              <stringProp name="Argument.value">90;95;99</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="testTitle" elementType="Argument">
              <stringProp name="Argument.name">testTitle</stringProp>
              <stringProp name="Argument.value">Test name</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventTags" elementType="Argument">
              <stringProp name="Argument.name">eventTags</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </elementProp>
        <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
      </BackendListener>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
