openapi: 3.0.0
info:
  version: 1.0.0
  title: Room Booking Services
  description: 
    Services for room booking flow
    <h2>General Instructions</h2>
    <h3>User Login Status</h3>
    <ul>
      <li>
        <b>Logged-in</b> - User is considered logged-in (Non-transient) when there's mlifeNumber or customerId passed to /token endpoint. Services manages state using x-state-token (Header or Cookie for few channels). All APIs will use CustomerId and MlifeNumber retrieved from session for its processing.
      </li>
    </ul>
    <ul>
      <li>
        <b>Non-logged-in</b> - If there's no mlifeNumber or customerId supplied to /token endpoint,all requests will be processed as transient/unauthenticated user.
      </li>
    </ul>
    
    <h3>State Management (x-state-token)</h3>
     <ul>
      <li>All booking services listed below will manage state to support progressive checkout process. Client should invoke Token API first, fetch x-state-token response header and pass it as request header for all subsequent APIs. Individual APIs will validate for valid state token and returns an error in case of invalid/expired session. x-state-token token will be valid for an hour (idle timeout).
        </li>
      <li>
        <i>For web channel alone (i.e., channel header is 'webclient'), /token endpoint returns x-state-token as cookie instead of header since browsers doesn't offer secure storage of x-state-token between requests. This can be extended to other channels on discussion.</i>
      </li>
    </ul>
    
    <h3>Join While Booking Opted in (enableJwb)</h3>
     <ul>
      <li>Following booking services listed below will read JWB opt-in state of the user to support join while booking during booking. Client should invoke these APIs either with enableJwb header or cookie when the user opted-in for join while booking.
        </li>
      <li>
        <i>GET /booking/v1/resorts/room-price</i><br>
        <i>GET /booking/v1/room/calendar/price</i><br>
        <i>GET /booking/v1/room/availability</i><br>
        <i>GET /booking/v1/room/rate-plans</i><br>
        <i>GET /booking/v1/offers/room</i><br>
        <i>GET /booking/v1/room/offer/validate</i><br>
        <i>POST /booking/v1/cart/room</i><br>
      </li>
    </ul>

    <h3>Program/Offer Flow</h3>
    <ul>
      <li>
        Program prices can be requested by supplying either of programId or promoCode.
      </li>
      <li>Promo code is alias for programId, so both cannot have value at the same time. If both programId and promoCode is not empty, promoCode takes precedence and programId will be ignored.</li>
      <li>Response error code for program related errors:- <br>
        <i>_offer_not_available</i> - Offer has expired or not active anymore<br>
        <i>_offer_not_eligible</i> - User is not eligible for the offer
      </li>
    </ul>
    
    <h3>About Rate Plans & Offers</h3> Documentation to clarify concepts around rate plans and offers - <a href="https://mgmdigitalventures.atlassian.net/wiki/spaces/KB/pages/210075865/About+Rate+Plans+Offers">https://mgmdigitalventures.atlassian.net/wiki/spaces/KB/pages/210075865/About+Rate+Plans+Offers</a>
x-amazon-apigateway-request-validators:
          all:
             validateRequestBody: true
             validateRequestParameters: true
          params-only:
             validateRequestBody: false
             validateRequestParameters: false
servers:
  - url: 'https://dev-api.mgmresorts.com'
    description: Dev (test)
  - url: 'https://uat-api.mgmresorts.com'
    description: QA/UAT (test)
  - url: 'https://qa4-api.mgmresorts.com'
    description: QA4 (test)
  - url: 'https://preprod-api.mgmresorts.com'
    description: Preprod (test)
  - url: 'https://api.mgmresorts.com'
    description: Production   
paths:
  /booking/v1/token:
    post:
      summary: Authenticate and get session/state token using client credentials
      description: This API is the ideal starting point for server-side clients for invoking booking APIs for each transaction. This endpoint validates the client id and secret passed and returns state/session (x-state-token) token. Client credentials (client_id and client_secret) will be provided to channels consuming these APIs. This API ensures only known clients are able to create a session and use booking APIs. State token should be unique for every booking transaction and it must invoke this API before starting booking session.
      x-amazon-apigateway-request-validator: params-only
      tags:
        - Token
      deprecated: true
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/accept-encoding'
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TokenRequest"
        required: true
      responses:
        "204":
          description: 204 response
          headers:
            x-state-token:
              schema:
                 type: string
              description: Session ID/State token to make use of information in session for transactions.
            x-state-token-expires:
              schema:
                 type: string
              description: Time at which state will expire
            X-XSS-Protection:
              schema:
                 type: string
            X-Content-Type-Options:
              schema:
                 type: string
            Content-Security-Policy:
              schema:
                 type: string
            Strict-Transport-Security:
              schema:
                 type: string        
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"

        "400":
          description: 400 response. Possible error codes are _no_client_secret,
            _no_client_id, _invalid_client_credentials
          headers:
            X-XSS-Protection:
              schema:
                 type: string
            X-Content-Type-Options:
              schema:
                 type: string
            Content-Security-Policy:
              schema:
                 type: string
            Strict-Transport-Security:
              schema:
                 type: string        
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: 500 response
          headers:
            X-XSS-Protection:
              schema:
                 type: string
            X-Content-Type-Options:
              schema:
                 type: string
            Content-Security-Policy:
              schema:
                 type: string
            Strict-Transport-Security:
              schema:
                 type: string        
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/token
        responses:
          "4\\d{2}":
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
          default:
            statusCode: "204"
            responseParameters:
              method.response.header.x-state-token: integration.response.header.x-state-token
              method.response.header.X-XSS-Protection: integration.response.header.X-XSS-Protection
              method.response.header.X-Content-Type-Options: integration.response.header.X-Content-Type-Options
              method.response.header.Content-Security-Policy: integration.response.header.Content-Security-Policy
              method.response.header.Strict-Transport-Security: integration.response.header.Strict-Transport-Security
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
          "5\\d{2}":
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
        requestParameters:
          integration.request.header.x-api-key: method.request.header.x-api-key
          integration.request.header.Origin: method.request.header.Origin
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: POST
        type: http
    options:
      summary: CORS support
      description: Enable CORS by returning correct headers
      tags:
        - CORS
      parameters:
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/Access-Control-Request-Headers'
        - $ref: '#/components/parameters/Access-Control-Request-Method'
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
        500:
          description: "500 response"
        403:
          description: "403 response"
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/token
        responses:
          4\d{2}:
            statusCode: "403"
          5\d{2}:
            statusCode: "500"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        requestParameters:
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.Access-Control-Request-Headers: method.request.header.Access-Control-Request-Headers
          integration.request.header.Access-Control-Request-Method: method.request.header.Access-Control-Request-Method
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: OPTIONS
        type: http     
  /booking/v1/authorize:
    post:
      summary: Authenticate and get session/state token using client credentials. Ideal for service-side clients consuming booking APIs.
      description: Alias for /booking/v1/token (Once existing clients migrate from /v1/token to this endpoint, /v1/token will be removed).This API is the ideal starting point for server-side clients for invoking booking APIs for each transaction. This endpoint validates the client id and secret passed and returns state/session (x-state-token) token. Client credentials (client_id and client_secret) will be provided to channels consuming these APIs. This API ensures only known clients are able to create a session and use booking APIs. State token should be unique for every booking transaction and it must invoke this API before starting booking session.
      x-amazon-apigateway-request-validator: params-only
      tags:
        - Token
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/accept-encoding'
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TokenRequest"
        required: true
      responses:
        "204":
          description: 204 response
          headers:
            x-state-token:
              schema:
                 type: string
              description: Session ID/State token to make use of information in session for transactions.
            x-state-token-expires:
              schema:
                 type: string
              description: Time at which state will expire
            X-XSS-Protection:
              schema:
                 type: string
            X-Content-Type-Options:
              schema:
                 type: string
            Content-Security-Policy:
              schema:
                 type: string
            Strict-Transport-Security:
              schema:
                 type: string     
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"

        "400":
          description: 400 response. Possible error codes are _no_client_secret,
            _no_client_id, _invalid_client_credentials
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/token
        responses:
          "4\\d{2}":
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
          default:
            statusCode: "204"
            responseParameters:
              method.response.header.x-state-token: integration.response.header.x-state-token
              method.response.header.X-XSS-Protection: integration.response.header.X-XSS-Protection
              method.response.header.X-Content-Type-Options: integration.response.header.X-Content-Type-Options
              method.response.header.Content-Security-Policy: integration.response.header.Content-Security-Policy
              method.response.header.Strict-Transport-Security: integration.response.header.Strict-Transport-Security
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
          "5\\d{2}":
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
        requestParameters:
          integration.request.header.x-api-key: method.request.header.x-api-key
          integration.request.header.Origin: method.request.header.Origin
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: POST
        type: http
    options:
      summary: CORS support
      description: Enable CORS by returning correct headers
      tags:
        - CORS
      parameters:
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/Access-Control-Request-Headers'
        - $ref: '#/components/parameters/Access-Control-Request-Method'
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string"
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
        500:
          description: "500 response"
        403:
          description: "403 response"
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/authorize
        responses:
          4\d{2}:
            statusCode: "403"
          5\d{2}:
            statusCode: "500"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        requestParameters:
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.Access-Control-Request-Headers: method.request.header.Access-Control-Request-Headers
          integration.request.header.Access-Control-Request-Method: method.request.header.Access-Control-Request-Method
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: OPTIONS
        type: http

  /booking/v2/token:
    post:
      summary: Authenticate and get session/state token using user's authorization information. 
      description: This API is the ideal starting point for JS-based clients for invoking booking APIs for each transaction. This endpoint validates the osid or access-token passed and returns state/session (x-state-token) token. This API ensures only known clients are able to create a session and use booking APIs. Mlife number from osid or access-token will be used when passed. if neither of osid or access-token is passes, the user is considered non-logged-in. State token should be unique for every booking transaction and its must to invoke this API before starting booking session. If there's an existing x-state-token already, API doesn't return new x-state-token since same session will be used.
      x-amazon-apigateway-request-validator: params-only
      tags:
        - Token V2
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/ADRUM'
        - $ref: '#/components/parameters/accept-encoding'
        - $ref: '#/components/parameters/osid'
        - $ref: '#/components/parameters/access-token'
        - $ref: '#/components/parameters/channel'
        - $ref: '#/components/parameters/Cookie'
      responses:
        "204":
          description: 204 response
          headers:
            x-state-token:
              schema:
                 type: string
              description: Session ID/State token to make use of information in session for transactions.
            x-state-token-expires:
              schema:
                 type: string
              description: Time at which state will expire
            Set-Cookie:
              schema: 
                type: string
                example: x-state-token=abcde12345; Path=/; HttpOnly
            set-cookie:
              schema: 
                type: string
            X-XSS-Protection:
              schema:
                 type: string
            X-Content-Type-Options:
              schema:
                 type: string
            Content-Security-Policy:
              schema:
                 type: string
            Strict-Transport-Security:
              schema:
                 type: string
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"    
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
                 
        "400":
          description: >- 
            400 response. Possible error codes are _invalid_access_token, _aurora_exception, _invalid_user_session.
            <ul>
              <li>_invalid_access_token - Okta access token supplied is invalid</li>
              <li>_aurora_exception - Failed to fetch user info from GSE</li>
              <li>_invalid_user_session - Okta session id supplied is invalid</li>
            </ul>
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"  
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v2/token
        responses:
          "4\\d{2}":
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
          default:
            statusCode: "204"
            responseParameters:
              method.response.header.x-state-token: integration.response.header.x-state-token
              method.response.header.x-state-token-expires: integration.response.header.x-state-token-expires
              method.response.header.set-cookie: integration.response.header.Set-Cookie
              method.response.header.Set-Cookie: integration.response.header.expires-cookie
              method.response.header.X-XSS-Protection: integration.response.header.X-XSS-Protection
              method.response.header.X-Content-Type-Options: integration.response.header.X-Content-Type-Options
              method.response.header.Content-Security-Policy: integration.response.header.Content-Security-Policy
              method.response.header.Strict-Transport-Security: integration.response.header.Strict-Transport-Security
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
          "5\\d{2}":
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
        requestParameters:
          integration.request.header.x-api-key: method.request.header.x-api-key
          integration.request.header.osid: method.request.header.osid
          integration.request.header.access-token: method.request.header.access-token
          integration.request.header.Cookie: method.request.header.Cookie
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.channel: method.request.header.channel
          integration.request.header.ADRUM: method.request.header.ADRUM
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: POST
        type: http
    put:
      summary: Update current session/state with updated user's login status. 
      description: This API should be used to update the existing session/state with current login status of the user i.e., API should be invoked on user login or logout. The API will return a new x-state-token since user status has changed but existing information in the cart will be carried forward.
      x-amazon-apigateway-request-validator: params-only
      tags:
        - Token V2
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/accept-encoding'
        - $ref: '#/components/parameters/ADRUM'
        - $ref: '#/components/parameters/x-state-token'
        - $ref: '#/components/parameters/osid'
        - $ref: '#/components/parameters/access-token'
        - $ref: '#/components/parameters/channel'
        - $ref: '#/components/parameters/Cookie'
      responses:
        "204":
          description: 204 response
          headers:
            x-state-token:
              schema:
                 type: string
              description: Session ID/State token to make use of information in session for transactions.
            Set-Cookie:
              schema: 
                type: string
                example: x-state-token=abcde12345; Path=/; HttpOnly
            set-cookie:
              schema: 
                type: string
            x-state-token-expires:
              schema:
                 type: string
              description: Time at which state will expire
            X-XSS-Protection:
              schema:
                 type: string
            X-Content-Type-Options:
              schema:
                 type: string
            Content-Security-Policy:
              schema:
                 type: string
            Strict-Transport-Security:
              schema:
                 type: string
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"       
            Access-Control-Allow-Headers:
              schema:
                type: "string"  
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
        "400":
          description: >-
            400 response. Possible error codes are _invalid_access_token, _aurora_exception, _invalid_state_token, _invalid_user_session
            <ul>
              <li>_invalid_access_token - Okta access token supplied is invalid</li>
              <li>_aurora_exception - Failed to fetch user info from GSE</li>
              <li>_invalid_user_session - Okta session id supplied is invalid</li>
              <li>_invalid_state_token - State token is empty</li>
            </ul>
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"    
            Access-Control-Allow-Header:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"  
            Access-Control-Allow-Header:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v2/token
        responses:
          "4\\d{2}":
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
          default:
            statusCode: "204"
            responseParameters:
              method.response.header.x-state-token: integration.response.header.x-state-token
              method.response.header.x-state-token-expires: integration.response.header.x-state-token-expires
              method.response.header.set-cookie: integration.response.header.Set-Cookie
              method.response.header.Set-Cookie: integration.response.header.expires-cookie
              method.response.header.X-XSS-Protection: integration.response.header.X-XSS-Protection
              method.response.header.X-Content-Type-Options: integration.response.header.X-Content-Type-Options
              method.response.header.Content-Security-Policy: integration.response.header.Content-Security-Policy
              method.response.header.Strict-Transport-Security: integration.response.header.Strict-Transport-Security
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
          "5\\d{2}":
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
        requestParameters:
          integration.request.header.x-api-key: method.request.header.x-api-key
          integration.request.header.x-state-token: method.request.header.x-state-token
          integration.request.header.Cookie: method.request.header.Cookie
          integration.request.header.osid: method.request.header.osid
          integration.request.header.access-token: method.request.header.access-token
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.channel: method.request.header.channel
          integration.request.header.ADRUM: method.request.header.ADRUM
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: PUT
        type: http
    options:
      summary: CORS support
      description: Enable CORS by returning correct headers
      tags:
        - CORS
      parameters:
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/Access-Control-Request-Headers'
        - $ref: '#/components/parameters/Access-Control-Request-Method'
        - $ref: '#/components/parameters/ADRUM'
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string"
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
        500:
          description: "500 response"
        403:
          description: "403 response"
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v2/token
        responses:
          4\d{2}:
            statusCode: "403"
          5\d{2}:
            statusCode: "500"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        requestParameters:
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.Access-Control-Request-Headers: method.request.header.Access-Control-Request-Headers
          integration.request.header.Access-Control-Request-Method: method.request.header.Access-Control-Request-Method
          integration.request.header.ADRUM: method.request.header.ADRUM
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: OPTIONS
        type: http

  /booking/v3/token:
    post:
      summary: Authenticate and get session/state token using user's authorization information. 
      description: This API is the ideal starting point for JS-based clients for invoking booking APIs for each transaction. This endpoint validates the osid or access-token passed and returns state/session (x-state-token) token. This API ensures only known clients are able to create a session and use booking APIs. Mlife number from osid or access-token will be used when passed. if neither of osid or access-token is passes, the user is considered non-logged-in. State token should be unique for every booking transaction and its must to invoke this API before starting booking session. If there's an existing x-state-token already, it will be invalidated and new x-state-token will be returned.
      x-amazon-apigateway-request-validator: params-only
      tags:
        - Token V3
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/ADRUM'
        - $ref: '#/components/parameters/accept-encoding'
        - $ref: '#/components/parameters/osid'
        - $ref: '#/components/parameters/access-token'
        - $ref: '#/components/parameters/channel'
        - $ref: '#/components/parameters/Cookie'
        - $ref: '#/components/parameters/session-age'
      responses:
        "204":
          description: 204 response
          headers:
            x-state-token:
              schema:
                 type: string
              description: Session ID/State token to make use of information in session for transactions.
            x-state-token-expires:
              schema:
                 type: string
              description: Time at which state will expire
            Set-Cookie:
              schema: 
                type: string
                example: x-state-token=abcde12345; Path=/; HttpOnly
            set-cookie:
              schema: 
                type: string
            X-XSS-Protection:
              schema:
                 type: string
            X-Content-Type-Options:
              schema:
                 type: string
            Content-Security-Policy:
              schema:
                 type: string
            Strict-Transport-Security:
              schema:
                 type: string
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"    
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
                 
        "400":
          description: >- 
            400 response. Possible error codes are _invalid_access_token, _aurora_exception, _invalid_user_session.
            <ul>
              <li>_invalid_access_token - Okta access token supplied is invalid</li>
              <li>_aurora_exception - Failed to fetch user info from GSE</li>
              <li>_invalid_user_session - Okta session id supplied is invalid</li>
            </ul>
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"  
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v3/token
        responses:
          "4\\d{2}":
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
          default:
            statusCode: "204"
            responseParameters:
              method.response.header.x-state-token: integration.response.header.x-state-token
              method.response.header.x-state-token-expires: integration.response.header.x-state-token-expires
              method.response.header.set-cookie: integration.response.header.Set-Cookie
              method.response.header.Set-Cookie: integration.response.header.expires-cookie
              method.response.header.X-XSS-Protection: integration.response.header.X-XSS-Protection
              method.response.header.X-Content-Type-Options: integration.response.header.X-Content-Type-Options
              method.response.header.Content-Security-Policy: integration.response.header.Content-Security-Policy
              method.response.header.Strict-Transport-Security: integration.response.header.Strict-Transport-Security
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
          "5\\d{2}":
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
        requestParameters:
          integration.request.header.x-api-key: method.request.header.x-api-key
          integration.request.header.osid: method.request.header.osid
          integration.request.header.access-token: method.request.header.access-token
          integration.request.header.Cookie: method.request.header.Cookie
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.channel: method.request.header.channel
          integration.request.header.ADRUM: method.request.header.ADRUM
          integration.request.header.session-age: method.request.header.session-age
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: POST
        type: http
    put:
      summary: Update current session/state with updated user's login status. 
      description: This API should be used to update the existing session/state with current login status of the user i.e., API should be invoked on user login or logout. The API will return a new x-state-token since user status has changed but existing information in the cart will be carried forward. Clients can choose to always call POST /booking/v2/token if information in cart is not required anymore.
      x-amazon-apigateway-request-validator: params-only
      tags:
        - Token V3
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/accept-encoding'
        - $ref: '#/components/parameters/ADRUM'
        - $ref: '#/components/parameters/x-state-token'
        - $ref: '#/components/parameters/osid'
        - $ref: '#/components/parameters/access-token'
        - $ref: '#/components/parameters/channel'
        - $ref: '#/components/parameters/Cookie'
        - $ref: '#/components/parameters/session-age'
      responses:
        "204":
          description: 204 response
          headers:
            x-state-token:
              schema:
                 type: string
              description: Session ID/State token to make use of information in session for transactions.
            Set-Cookie:
              schema: 
                type: string
                example: x-state-token=abcde12345; Path=/; HttpOnly
            set-cookie:
              schema: 
                type: string
            x-state-token-expires:
              schema:
                 type: string
              description: Time at which state will expire
            X-XSS-Protection:
              schema:
                 type: string
            X-Content-Type-Options:
              schema:
                 type: string
            Content-Security-Policy:
              schema:
                 type: string
            Strict-Transport-Security:
              schema:
                 type: string
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"       
            Access-Control-Allow-Headers:
              schema:
                type: "string"  
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
        "400":
          description: >-
            400 response. Possible error codes are _invalid_access_token, _aurora_exception, _invalid_state_token, _invalid_user_session
            <ul>
              <li>_invalid_access_token - Okta access token supplied is invalid</li>
              <li>_aurora_exception - Failed to fetch user info from GSE</li>
              <li>_invalid_user_session - Okta session id supplied is invalid</li>
              <li>_invalid_state_token - State token is empty</li>
            </ul>
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"    
            Access-Control-Allow-Header:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"  
            Access-Control-Allow-Header:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v3/token
        responses:
          "4\\d{2}":
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
          default:
            statusCode: "204"
            responseParameters:
              method.response.header.x-state-token: integration.response.header.x-state-token
              method.response.header.x-state-token-expires: integration.response.header.x-state-token-expires
              method.response.header.set-cookie: integration.response.header.Set-Cookie
              method.response.header.Set-Cookie: integration.response.header.expires-cookie
              method.response.header.X-XSS-Protection: integration.response.header.X-XSS-Protection
              method.response.header.X-Content-Type-Options: integration.response.header.X-Content-Type-Options
              method.response.header.Content-Security-Policy: integration.response.header.Content-Security-Policy
              method.response.header.Strict-Transport-Security: integration.response.header.Strict-Transport-Security
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
          "5\\d{2}":
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
        requestParameters:
          integration.request.header.x-api-key: method.request.header.x-api-key
          integration.request.header.x-state-token: method.request.header.x-state-token
          integration.request.header.Cookie: method.request.header.Cookie
          integration.request.header.osid: method.request.header.osid
          integration.request.header.access-token: method.request.header.access-token
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.channel: method.request.header.channel
          integration.request.header.ADRUM: method.request.header.ADRUM
          integration.request.header.session-age: method.request.header.session-age
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: PUT
        type: http
    options:
      summary: CORS support
      description: Enable CORS by returning correct headers
      tags:
        - CORS
      parameters:
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/Access-Control-Request-Headers'
        - $ref: '#/components/parameters/Access-Control-Request-Method'
        - $ref: '#/components/parameters/ADRUM'
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string"
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
        500:
          description: "500 response"
        403:
          description: "403 response"
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v3/token
        responses:
          4\d{2}:
            statusCode: "403"
          5\d{2}:
            statusCode: "500"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        requestParameters:
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.Access-Control-Request-Headers: method.request.header.Access-Control-Request-Headers
          integration.request.header.Access-Control-Request-Method: method.request.header.Access-Control-Request-Method
          integration.request.header.ADRUM: method.request.header.ADRUM
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: OPTIONS
        type: http

  /booking/v1/offers/room:
    get:
      summary: Returns list of room programs for transient and logged-in users
      description: >-
        Returns a list of public room programs for transient users and returns a list of public and targetted room programs for logged-in users. User is considered transient if there's no x-state-token header with a valid value
        
        Offers returned can be of two types:
          1) PROGRAM - Program specific to a property 
          2) SEGMENT - Multi-property offer
        <p>
          Offers of type "SEGMENT" will only be returned when no property specific filters are applied i.e., propertyId parameter is empty.
        </p>
      tags:
        - Offers
      x-amazon-apigateway-request-validator: params-only
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/accept-encoding'
        - $ref: '#/components/parameters/ADRUM'
        - $ref: '#/components/parameters/x-state-token'
        - $ref: '#/components/parameters/Cookie'
        - $ref: '#/components/parameters/channel'
        - $ref: '#/components/parameters/source'
        - $ref: '#/components/parameters/enableJwb'
        - name: propertyIds
          in: query
          required: false
          schema:
            type: string
          description: "Property GUIDs to filter offers for a specific property or a set of properties."
      responses:
        "200":
          description: 200 response
          headers:
            Access-Control-Allow-Methods:
              schema:
                type: "string"                 
            x-state-token-expires:
              schema:
                 type: string
              description: Time at which state will expire
            Set-Cookie:
              schema: 
                type: string
                example: x-state-token=abcde12345; Path=/; HttpOnly
            X-XSS-Protection:
              schema:
                 type: string
            Access-Control-Allow-Origin:
              schema:
                 type: string
            X-Content-Type-Options:
              schema:
                 type: string
            Content-Security-Policy:
              schema:
                 type: string
            Strict-Transport-Security:
              schema:
                 type: string
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoomOffersResponse"
        "400":
          description: 400 response. Possible error codes are _invalid_request,
            _offer_not_available, _offer_not_eligible
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"        
            Access-Control-Allow-Header:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"     
            Access-Control-Allow-Header:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/offers/room
        responses:
          "4\\d{2}":
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.X-XSS-Protection: integration.response.header.X-XSS-Protection
              method.response.header.Set-Cookie: integration.response.header.expires-cookie
              method.response.header.x-state-token-expires: integration.response.header.x-state-token-expires
              method.response.header.X-Content-Type-Options: integration.response.header.X-Content-Type-Options
              method.response.header.Content-Security-Policy: integration.response.header.Content-Security-Policy
              method.response.header.Strict-Transport-Security: integration.response.header.Strict-Transport-Security
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
          "5\\d{2}":
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

        requestParameters:
          integration.request.header.accept-encoding: method.request.header.accept-encoding
          integration.request.header.x-api-key: method.request.header.x-api-key
          integration.request.header.x-state-token: method.request.header.x-state-token
          integration.request.header.Cookie: method.request.header.Cookie
          integration.request.header.channel: method.request.header.channel
          integration.request.querystring.propertyIds: method.request.querystring.propertyIds
          integration.request.header.source: method.request.header.source
          integration.request.header.enableJwb: method.request.header.enableJwb
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.ADRUM: method.request.header.ADRUM
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: GET
        type: http
    options:
      summary: CORS support
      description: Enable CORS by returning correct headers
      tags:
        - CORS
      parameters:
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/Access-Control-Request-Headers'
        - $ref: '#/components/parameters/Access-Control-Request-Method'
        - $ref: '#/components/parameters/ADRUM'
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string"
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
        500:
          description: "500 response"
        403:
          description: "403 response"
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/offers/room
        responses:
          4\d{2}:
            statusCode: "403"
          5\d{2}:
            statusCode: "500"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        requestParameters:
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.Access-Control-Request-Headers: method.request.header.Access-Control-Request-Headers
          integration.request.header.Access-Control-Request-Method: method.request.header.Access-Control-Request-Method
          integration.request.header.ADRUM: method.request.header.ADRUM
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: OPTIONS
        type: http

  /booking/v1/offers/room/default-perpetual:
    get:
      summary: List of default perpetual offers available for a logged-in user across various properties.
      description: >-
        Returns a list of default perpetual room offers for a logged-in user for every available property. Customer ID or Mlife Number will be retrieved from session. There will be only one default perpetual room offer per property.
      tags:
        - Offers
      x-amazon-apigateway-request-validator: params-only
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/accept-encoding'
        - $ref: '#/components/parameters/x-state-token'
        - $ref: '#/components/parameters/Cookie'
        - $ref: '#/components/parameters/channel'
        - $ref: '#/components/parameters/source'
        - $ref: '#/components/parameters/ADRUM'
        - name: propertyIds
          in: query
          required: false
          schema:
            type: string
          description: "Property GUIDs to filter offers for a specific property or a set of properties."
      responses:
        "200":
          description: 200 response
          headers:
            x-state-token-expires:
              schema:
                 type: string
              description: Time at which state will expire
            Set-Cookie:
              schema: 
                type: string
                example: x-state-token=abcde12345; Path=/; HttpOnly
            X-XSS-Protection:
              schema:
                 type: string
            X-Content-Type-Options:
              schema:
                 type: string
            Content-Security-Policy:
              schema:
                 type: string
            Strict-Transport-Security:
              schema:
                 type: string
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PerpetualOffersReponse"
        "400":
          description: 400 response. Possible error codes are _invalid_request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/offers/room/default-perpetual
        responses:
          "4\\d{2}":
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Header
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.X-XSS-Protection: integration.response.header.X-XSS-Protection
              method.response.header.Set-Cookie: integration.response.header.expires-cookie
              method.response.header.x-state-token-expires: integration.response.header.x-state-token-expires
              method.response.header.X-Content-Type-Options: integration.response.header.X-Content-Type-Options
              method.response.header.Content-Security-Policy: integration.response.header.Content-Security-Policy
              method.response.header.Strict-Transport-Security: integration.response.header.Strict-Transport-Security
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Header
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
          "5\\d{2}":
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Header
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
        requestParameters:
          integration.request.header.accept-encoding: method.request.header.accept-encoding
          integration.request.header.x-api-key: method.request.header.x-api-key
          integration.request.header.x-state-token: method.request.header.x-state-token
          integration.request.header.Cookie: method.request.header.Cookie
          integration.request.header.channel: method.request.header.channel
          integration.request.querystring.propertyIds: method.request.querystring.propertyIds
          integration.request.header.source: method.request.header.source
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.ADRUM: method.request.header.ADRUM
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: GET
        type: http
    options:
      summary: CORS support
      description: Enable CORS by returning correct headers
      tags:
        - CORS
      parameters:
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/Access-Control-Request-Headers'
        - $ref: '#/components/parameters/Access-Control-Request-Method'
        - $ref: '#/components/parameters/ADRUM'
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string"
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
        500:
          description: "500 response"
        403:
          description: "403 response"
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/offers/room/default-perpetual
        responses:
          4\d{2}:
            statusCode: "403"
          5\d{2}:
            statusCode: "500"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        requestParameters:
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.Access-Control-Request-Headers: method.request.header.Access-Control-Request-Headers
          integration.request.header.Access-Control-Request-Method: method.request.header.Access-Control-Request-Method
          integration.request.header.ADRUM: method.request.header.ADRUM
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: OPTIONS
        type: http

  "/booking/v1/offers/room/segment/{programId}":
    get:
      summary: Find segment information based on a program.
      description: >-
        Returns the segmentId and programs associated to the segment for the supplied programId. Returns an error if programId is invalid or is not associated to any segment.
      tags:
        - Offers
      x-amazon-apigateway-request-validator: params-only
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/accept-encoding'
        - $ref: '#/components/parameters/ADRUM'
        - $ref: '#/components/parameters/x-state-token'
        - $ref: '#/components/parameters/Cookie'
        - $ref: '#/components/parameters/channel'
        - $ref: '#/components/parameters/source'
        - name: programId
          in: path
          required: true
          schema:
            type: string
          description: Program Id which could be part of a segment
      responses:
        "200":
          description: 200 response
          headers:
            x-state-token-expires:
              schema:
                 type: string
              description: Time at which state will expire
            Set-Cookie:
              schema: 
                type: string
                example: x-state-token=abcde12345; Path=/; HttpOnly
            X-XSS-Protection:
              schema:
                 type: string
            X-Content-Type-Options:
              schema:
                 type: string
            Content-Security-Policy:
              schema:
                 type: string
            Strict-Transport-Security:
              schema:
                 type: string
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoomProgramSegmentResponse"
        "400":
          description: 400 response. Possible error codes are _no_segment_id_found,
            _invalid_program_id
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/offers/room/segment/{programId}
        responses:
          "4\\d{2}":
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.X-XSS-Protection: integration.response.header.X-XSS-Protection
              method.response.header.Set-Cookie: integration.response.header.expires-cookie
              method.response.header.x-state-token-expires: integration.response.header.x-state-token-expires
              method.response.header.X-Content-Type-Options: integration.response.header.X-Content-Type-Options
              method.response.header.Content-Security-Policy: integration.response.header.Content-Security-Policy
              method.response.header.Strict-Transport-Security: integration.response.header.Strict-Transport-Security
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
          "5\\d{2}":
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
        requestParameters:
          integration.request.path.programId: method.request.path.programId
          integration.request.header.x-api-key: method.request.header.x-api-key
          integration.request.header.x-state-token: method.request.header.x-state-token
          integration.request.header.Cookie: method.request.header.Cookie
          integration.request.header.source: method.request.header.source
          integration.request.header.channel: method.request.header.channel
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.ADRUM: method.request.header.ADRUM
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: GET
        type: http
    options:
      summary: CORS support
      description: Enable CORS by returning correct headers
      tags:
        - CORS
      parameters:
        - name: programId
          in: path
          required: true
          schema:
            type: string
          description: Program Id which could be part of a segment
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/Access-Control-Request-Headers'
        - $ref: '#/components/parameters/Access-Control-Request-Method'
        - $ref: '#/components/parameters/ADRUM'
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string"
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
        500:
          description: "500 response"
        403:
          description: "403 response"
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/offers/room/segment/{programId}
        responses:
          4\d{2}:
            statusCode: "403"
          5\d{2}:
            statusCode: "500"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        requestParameters:
          integration.request.path.programId: method.request.path.programId
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.Access-Control-Request-Headers: method.request.header.Access-Control-Request-Headers
          integration.request.header.Access-Control-Request-Method: method.request.header.Access-Control-Request-Method
          integration.request.header.ADRUM: method.request.header.ADRUM
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: OPTIONS
        type: http

  /booking/v1/resorts/room-price:
    get:
      summary: Resorts pricing and availability.
      description: >-
        Returns lowest price available for each of the resorts for the trip parameters supplied i.e., checkInDate, checkOutDate and numGuests. Response also includes sold-out resorts. API supports perpetual offer prices based on pertualPricing boolean parameter. API supports filtering of properties based on propertyIds parameter. 
        
        <ul>
          <li>If a programId is supplied - Response includes prices for all properties to which programId is associated. If the programId supplied is a segmentId, all properties included in the segment is returned. If the programId supplied is specific to property, response will only include that specific property. perpetualPricing flag will be ignored in this case.</li>
          <li>If perpetualPricing=true - API will find the default perpetual program for each property and returns the price of lowest room available for the perpetual program. Best available prices will be returned for properties without default perpetual program</li>
          <li>Best available prices are returned when no programId is supplied and perpetualPricing=false.</li>
        <ul>
      tags:
        - Resorts Pricing & Availability
      x-amazon-apigateway-request-validator: params-only
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/accept-encoding'
        - $ref: '#/components/parameters/ADRUM'
        - $ref: '#/components/parameters/x-state-token'
        - $ref: '#/components/parameters/Cookie'
        - $ref: '#/components/parameters/channel'
        - $ref: '#/components/parameters/source'
        - $ref: '#/components/parameters/enableJwb'
        - name: checkInDate
          in: query
          required: true
          schema:
            type: string
          description: "Check-In Date for the trip. Format - MM/DD/YYYY"
        - name: checkOutDate
          in: query
          required: true
          schema:
            type: string
          description: "Check-Out Date for the trip. Format - MM/DD/YYYY"
        - name: numGuests
          in: query
          required: true
          schema:
            type: string
          description: "Number of guests"
        - name: programId
          in: query
          required: false
          schema:
            type: string
          description: "Room program GUID or Segment GUID"
        - name: perpetualPricing
          in: query
          required: false
          schema:
            type: boolean
          description: If this flag is true, API will find the default perpetual program for each property and returns the price of lowest room available for the perpetual program. Best available prices will be returned for properties without default perpetual program. If this flag is true for non-logged-in user, it will result in an error.
        - name: propertyIds
          in: query
          required: false
          schema:
            type: string
          description: "Property GUIDs to filter result to a specific property or a set of properties."
      responses:
        "200":
          description: 200 response
          headers:
            x-state-token-expires:
              schema:
                 type: string
              description: Time at which state will expire
            Set-Cookie:
              schema: 
                type: string
                example: x-state-token=abcde12345; Path=/; HttpOnly
            X-XSS-Protection:
              schema:
                 type: string
            X-Content-Type-Options:
              schema:
                 type: string
            Content-Security-Policy:
              schema:
                 type: string
            Strict-Transport-Security:
              schema:
                 type: string
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoomPricesResponse"
        "400":
          description: 400 response. Possible error codes are _invalid_request,
            _offer_not_available, _offer_not_eligible, _invalid_customer (perpetualPricing=true for non-logged-in user)
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"   
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/resorts/room-price
        responses:
          "4\\d{2}":
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

          default:
            statusCode: "200"
            responseParameters:
              method.response.header.X-XSS-Protection: integration.response.header.X-XSS-Protection
              method.response.header.Set-Cookie: integration.response.header.expires-cookie
              method.response.header.x-state-token-expires: integration.response.header.x-state-token-expires
              method.response.header.X-Content-Type-Options: integration.response.header.X-Content-Type-Options
              method.response.header.Content-Security-Policy: integration.response.header.Content-Security-Policy
              method.response.header.Strict-Transport-Security: integration.response.header.Strict-Transport-Security
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

          "5\\d{2}":
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

        requestParameters:
          integration.request.header.accept-encoding: method.request.header.accept-encoding
          integration.request.header.x-api-key: method.request.header.x-api-key
          integration.request.header.x-state-token: method.request.header.x-state-token
          integration.request.header.Cookie: method.request.header.Cookie
          integration.request.header.channel: method.request.header.channel
          integration.request.querystring.checkOutDate: method.request.querystring.checkOutDate
          integration.request.querystring.propertyIds: method.request.querystring.propertyIds
          integration.request.querystring.checkInDate: method.request.querystring.checkInDate
          integration.request.header.source: method.request.header.source
          integration.request.querystring.programId: method.request.querystring.programId
          integration.request.querystring.perpetualPricing: method.request.querystring.perpetualPricing
          integration.request.querystring.numGuests: method.request.querystring.numGuests
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.enableJwb: method.request.header.enableJwb
          integration.request.header.ADRUM: method.request.header.ADRUM
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: GET
        type: http
    options:
      summary: CORS support
      description: Enable CORS by returning correct headers
      tags:
        - CORS
      parameters:
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/Access-Control-Request-Headers'
        - $ref: '#/components/parameters/Access-Control-Request-Method'
        - $ref: '#/components/parameters/ADRUM'
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string"
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
        500:
          description: "500 response"
        403:
          description: "403 response"
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/resorts/room-price
        responses:
          4\d{2}:
            statusCode: "403"
          5\d{2}:
            statusCode: "500"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        requestParameters:
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.Access-Control-Request-Headers: method.request.header.Access-Control-Request-Headers
          integration.request.header.Access-Control-Request-Method: method.request.header.Access-Control-Request-Method
          integration.request.header.ADRUM: method.request.header.ADRUM
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: OPTIONS
        type: http

  /booking/v1/room/offer/validate:
    get:
      summary: Validate a room program (Program Id or Promo Code)
      description: >-
        Validate a room program ID or promo code to confirm if the program Id/promoCode is available and eligible to be used for the user. Eligibility check is done to avoid program misuse. Response contains two different flags - valid, eligible. It's broken into 2 flags for channels to message users accordingly. User should be allowed to use the program when both the flags from response (valid and eligible) are true. 
        
        <ul>
          <li>Both programId and promoCode cannot be empty. Request will be considered invalid in this case.</li>
        <ul>
      tags:
        - Room Pricing & Availability
      x-amazon-apigateway-request-validator: params-only
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/accept-encoding'
        - $ref: '#/components/parameters/ADRUM'
        - $ref: '#/components/parameters/x-state-token'
        - $ref: '#/components/parameters/Cookie'
        - $ref: '#/components/parameters/channel'
        - $ref: '#/components/parameters/source'
        - $ref: '#/components/parameters/enableJwb'
        - name: propertyId
          in: query
          required: false
          description: Property ID is mandatory for validating promoCode (GSE Limitation).
          schema:
            type: string
        - $ref: '#/components/parameters/promoCode'
        - $ref: '#/components/parameters/programId'
      responses:
        "200":
          description: 200 response
          headers:
            x-state-token-expires:
              schema:
                 type: string
              description: Time at which state will expire
            Set-Cookie:
              schema: 
                type: string
                example: x-state-token=abcde12345; Path=/; HttpOnly
            X-XSS-Protection:
              schema:
                 type: string
            X-Content-Type-Options:
              schema:
                 type: string
            Content-Security-Policy:
              schema:
                 type: string
            Strict-Transport-Security:
              schema:
                 type: string
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"        
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OfferValidateResponse"
        "400":
          description: 400 response. Possible error codes are _invalid_request, _invalid_program (programId and promoCode not passed), _invalid_promocode (propertyId not supplied with promoCode)
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/room/offer/validate
        responses:
          "4\\d{2}":
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

          default:
            statusCode: "200"
            responseParameters:
              method.response.header.X-XSS-Protection: integration.response.header.X-XSS-Protection
              method.response.header.Set-Cookie: integration.response.header.expires-cookie
              method.response.header.x-state-token-expires: integration.response.header.x-state-token-expires
              method.response.header.X-Content-Type-Options: integration.response.header.X-Content-Type-Options
              method.response.header.Content-Security-Policy: integration.response.header.Content-Security-Policy
              method.response.header.Strict-Transport-Security: integration.response.header.Strict-Transport-Security
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
          "5\\d{2}":
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

        requestParameters:
          integration.request.header.accept-encoding: method.request.header.accept-encoding
          integration.request.header.x-api-key: method.request.header.x-api-key
          integration.request.header.x-state-token: method.request.header.x-state-token
          integration.request.header.Cookie: method.request.header.Cookie
          integration.request.header.channel: method.request.header.channel
          integration.request.querystring.propertyId: method.request.querystring.propertyId
          integration.request.header.source: method.request.header.source
          integration.request.querystring.programId: method.request.querystring.programId
          integration.request.querystring.promoCode: method.request.querystring.promoCode
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.enableJwb: method.request.header.enableJwb
          integration.request.header.ADRUM: method.request.header.ADRUM
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: GET
        type: http
    options:
      summary: CORS support
      description: Enable CORS by returning correct headers
      tags:
        - CORS
      parameters:
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/Access-Control-Request-Headers'
        - $ref: '#/components/parameters/Access-Control-Request-Method'
        - $ref: '#/components/parameters/ADRUM'
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string"
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
        500:
          description: "500 response"
        403:
          description: "403 response"
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/room/offer/validate
        responses:
          4\d{2}:
            statusCode: "403"
          5\d{2}:
            statusCode: "500"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        requestParameters:
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.Access-Control-Request-Headers: method.request.header.Access-Control-Request-Headers
          integration.request.header.Access-Control-Request-Method: method.request.header.Access-Control-Request-Method
          integration.request.header.ADRUM: method.request.header.ADRUM
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: OPTIONS
        type: http    
    
  /booking/v1/room/calendar/price:
    get:
      summary: Room pricing and availability for each day in a calendar period.
      description: >-
        Returns lowest room rate for each day for a calendar period for a specific property. 
        <ul>
        <li>Offer prices are overlayed on top of best available prices when program Id is passed i.e., Best available prices are returned for days when program price is not available. Clients can control this behaviour using excludeNonOffer flag. When excludeNonOffer is true, days for which program price is not available is marked sold-out.</li>
        <li>When program prices are not requested, only application status codes in response are: AVAILABLE, SOLD-OUT, NO-ARRIVAL</li>
        <li>When program prices are requested, application status codes in response are: OFFER, AVAILABLE, SOLD-OUT, NO-ARRIVAL.  ‘OFFER’ indicates the dates on which requested program is available. Programs can have partial availability. So, days on which program is not available, status will not be “OFFER’</li>
        <li>Member attributes (memberPrice, memberProgramId) are only applicable for transient users</li>
        <ul>
      tags:
        - Room Pricing & Availability
      x-amazon-apigateway-request-validator: params-only
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/accept-encoding'
        - $ref: '#/components/parameters/ADRUM'
        - $ref: '#/components/parameters/x-state-token'
        - $ref: '#/components/parameters/Cookie'
        - $ref: '#/components/parameters/source'
        - $ref: '#/components/parameters/channel'
        - $ref: '#/components/parameters/enableJwb'
        - $ref: '#/components/parameters/promoCode'
        - $ref: '#/components/parameters/programId'
        - name: propertyId
          in: query
          required: true
          schema:
            type: string
          description: Property GUID
        - name: startDate
          in: query
          required: true
          schema:
            type: string
          description: Start date for the calendar period. Format - MM/DD/YYYY
        - name: endDate
          in: query
          required: true
          schema:
            type: string
          description: End date for the calendar period. Format - MM/DD/YYYY
        - name: numGuests
          in: query
          required: true
          schema:
            type: string
          description: Number of guests
        - name: excludeNonOffer
          in: query
          required: false
          schema:
            type: boolean
          description: Applicable only when programId or promoCode is passed. Flag set to true will not return prices for the days which are not available for the requested program
      responses:
        "200":
          description: 200 response
          headers:
            x-state-token-expires:
              schema:
                 type: string
              description: Time at which state will expire
            Set-Cookie:
              schema: 
                type: string
                example: x-state-token=abcde12345; Path=/; HttpOnly
            X-XSS-Protection:
              schema:
                 type: string
            X-Content-Type-Options:
              schema:
                 type: string
            Content-Security-Policy:
              schema:
                 type: string
            Strict-Transport-Security:
              schema:
                 type: string
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"    
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CalendarPriceResponse"
        "400":
          description: 400 response. Possible error codes are _invalid_request,
            _offer_not_available, _offer_not_eligible
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"   
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/room/calendar/price
        responses:
          "4\\d{2}":
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

          default:
            statusCode: "200"
            responseParameters:
              method.response.header.X-XSS-Protection: integration.response.header.X-XSS-Protection
              method.response.header.Set-Cookie: integration.response.header.expires-cookie
              method.response.header.x-state-token-expires: integration.response.header.x-state-token-expires
              method.response.header.X-Content-Type-Options: integration.response.header.X-Content-Type-Options
              method.response.header.Content-Security-Policy: integration.response.header.Content-Security-Policy
              method.response.header.Strict-Transport-Security: integration.response.header.Strict-Transport-Security
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

          "5\\d{2}":
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
            
        requestParameters:
          integration.request.header.accept-encoding: method.request.header.accept-encoding
          integration.request.header.x-api-key: method.request.header.x-api-key
          integration.request.header.x-state-token: method.request.header.x-state-token
          integration.request.header.Cookie: method.request.header.Cookie
          integration.request.header.channel: method.request.header.channel
          integration.request.querystring.endDate: method.request.querystring.endDate
          integration.request.querystring.startDate: method.request.querystring.startDate
          integration.request.querystring.propertyId: method.request.querystring.propertyId
          integration.request.header.source: method.request.header.source
          integration.request.querystring.programId: method.request.querystring.programId
          integration.request.querystring.excludeNonOffer: method.request.querystring.excludeNonOffer
          integration.request.querystring.promoCode: method.request.querystring.promoCode
          integration.request.querystring.numGuests: method.request.querystring.numGuests
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.enableJwb: method.request.header.enableJwb
          integration.request.header.ADRUM: method.request.header.ADRUM
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: GET
        type: http
    options:
      summary: CORS support
      description: Enable CORS by returning correct headers
      tags:
        - CORS
      parameters:
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/Access-Control-Request-Headers'
        - $ref: '#/components/parameters/Access-Control-Request-Method'
        - $ref: '#/components/parameters/ADRUM'
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string"
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
        500:
          description: "500 response"
        403:
          description: "403 response"
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/room/calendar/price
        responses:
          4\d{2}:
            statusCode: "403"
          5\d{2}:
            statusCode: "500"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        requestParameters:
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.Access-Control-Request-Headers: method.request.header.Access-Control-Request-Headers
          integration.request.header.Access-Control-Request-Method: method.request.header.Access-Control-Request-Method
          integration.request.header.ADRUM: method.request.header.ADRUM
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: OPTIONS
        type: http

  /booking/v1/room/availability:
    get:
      summary: Room pricing and availability by room types for selected trip.
      description: >-
        Returns pricing and availability by room types for a selected property, trip dates, and/or offer. Includes days-wise breakdown of the prices.
        <ul>
        <li>Member attributes (memberPrice object) are only applicable for transient users</li>
        <ul>
      tags:
        - Room Pricing & Availability
      x-amazon-apigateway-request-validator: params-only
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/accept-encoding'
        - $ref: '#/components/parameters/ADRUM'
        - $ref: '#/components/parameters/x-state-token'
        - $ref: '#/components/parameters/Cookie'
        - $ref: '#/components/parameters/source'
        - $ref: '#/components/parameters/channel'
        - $ref: '#/components/parameters/enableJwb'
        - $ref: '#/components/parameters/programId'
        - $ref: '#/components/parameters/promoCode'
        - name: propertyId
          in: query
          required: true
          schema:
            type: string
          description: Property GUID
        - name: checkInDate
          in: query
          required: true
          schema:
            type: string
          description: Check-In Date for the trip. Format - MM/DD/YYYY
        - name: checkOutDate
          in: query
          required: true
          schema:
            type: string
          description: Check-Out Date for the trip. Format - MM/DD/YYYY
        - name: numGuests
          in: query
          required: false
          schema:
            type: string
          description: Number of guests
      responses:
        "200":
          description: 200 response
          headers:
            x-state-token-expires:
              schema:
                 type: string
              description: Time at which state will expire
            Set-Cookie:
              schema: 
                type: string
                example: x-state-token=abcde12345; Path=/; HttpOnly
            X-XSS-Protection:
              schema:
                 type: string
            X-Content-Type-Options:
              schema:
                 type: string
            Content-Security-Policy:
              schema:
                 type: string
            Strict-Transport-Security:
              schema:
                 type: string
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"                 
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoomAvailabilityResponse"
        "400":
          description: 400 response. Possible error codes are _invalid_request,
            _offer_not_available, _offer_not_eligible
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"    
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"   
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/room/availability
        responses:
          "4\\d{2}":
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
            
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.X-XSS-Protection: integration.response.header.X-XSS-Protection
              method.response.header.Set-Cookie: integration.response.header.expires-cookie
              method.response.header.x-state-token-expires: integration.response.header.x-state-token-expires
              method.response.header.X-Content-Type-Options: integration.response.header.X-Content-Type-Options
              method.response.header.Content-Security-Policy: integration.response.header.Content-Security-Policy
              method.response.header.Strict-Transport-Security: integration.response.header.Strict-Transport-Security
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

          "5\\d{2}":
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

            
        requestParameters:
          integration.request.header.accept-encoding: method.request.header.accept-encoding
          integration.request.header.x-api-key: method.request.header.x-api-key
          integration.request.header.x-state-token: method.request.header.x-state-token
          integration.request.header.Cookie: method.request.header.Cookie
          integration.request.header.channel: method.request.header.channel
          integration.request.querystring.checkOutDate: method.request.querystring.checkOutDate
          integration.request.querystring.checkInDate: method.request.querystring.checkInDate
          integration.request.querystring.propertyId: method.request.querystring.propertyId
          integration.request.header.source: method.request.header.source
          integration.request.querystring.programId: method.request.querystring.programId
          integration.request.querystring.promoCode: method.request.querystring.promoCode
          integration.request.querystring.numGuests: method.request.querystring.numGuests
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.enableJwb: method.request.header.enableJwb
          integration.request.header.ADRUM: method.request.header.ADRUM
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: GET
        type: http
    options:
      summary: CORS support
      description: Enable CORS by returning correct headers
      tags:
        - CORS
      parameters:
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/Access-Control-Request-Headers'
        - $ref: '#/components/parameters/Access-Control-Request-Method'
        - $ref: '#/components/parameters/ADRUM'
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string"
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
        500:
          description: "500 response"
        403:
          description: "403 response"
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/room/availability
        responses:
          4\d{2}:
            statusCode: "403"
          5\d{2}:
            statusCode: "500"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        requestParameters:
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.Access-Control-Request-Headers: method.request.header.Access-Control-Request-Headers
          integration.request.header.Access-Control-Request-Method: method.request.header.Access-Control-Request-Method
          integration.request.header.ADRUM: method.request.header.ADRUM
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: OPTIONS
        type: http

  /booking/v1/room/rate-plans:
    get:
      summary: Returns exposed rates from the multi-rate queue set with pricing and availability for selected trip.
      description: >-
        Returns exposed rates from the multi-rate queue set for the selected trip and includes pricing and availability by room types for each of the rate plans. Each room entry will include days-wise breakdown of the prices. When a program is supplied, response will include pricing and availability for the program along with available rate plans.
      tags:
        - Room Pricing & Availability
      x-amazon-apigateway-request-validator: params-only
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/accept-encoding'
        - $ref: '#/components/parameters/ADRUM'
        - $ref: '#/components/parameters/x-state-token'
        - $ref: '#/components/parameters/Cookie'
        - $ref: '#/components/parameters/source'
        - $ref: '#/components/parameters/channel'
        - $ref: '#/components/parameters/enableJwb'
        - $ref: '#/components/parameters/programId'
        - $ref: '#/components/parameters/promoCode'
        - name: propertyId
          in: query
          required: true
          schema:
            type: string
          description: Property GUID
        - name: checkInDate
          in: query
          required: true
          schema:
            type: string
          description: Check-In date for the trip. Format - MM/DD/YYYY
        - name: checkOutDate
          in: query
          required: true
          schema:
            type: string
          description: Check-Out date for the trip. Format - MM/DD/YYYY
        - name: numGuests
          in: query
          required: false
          schema:
            type: string
          description: Number of guests
      responses:
        "200":
          description: 200 response
          headers:
            x-state-token-expires:
              schema:
                 type: string
              description: Time at which state will expire
            Set-Cookie:
              schema: 
                type: string
                example: x-state-token=abcde12345; Path=/; HttpOnly
            X-XSS-Protection:
              schema:
                 type: string
            X-Content-Type-Options:
              schema:
                 type: string
            Content-Security-Policy:
              schema:
                 type: string
            Strict-Transport-Security:
              schema:
                 type: string
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"     
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoomRatePlansResponse"
        "400":
          description: 400 response. Possible error codes are _invalid_request,
            _offer_not_available, _offer_not_eligible
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"   
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"  
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/room/rate-plans
        responses:
          "4\\d{2}":
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

          default:
            statusCode: "200"
            responseParameters:
              method.response.header.X-XSS-Protection: integration.response.header.X-XSS-Protection
              method.response.header.Set-Cookie: integration.response.header.expires-cookie
              method.response.header.x-state-token-expires: integration.response.header.x-state-token-expires
              method.response.header.X-Content-Type-Options: integration.response.header.X-Content-Type-Options
              method.response.header.Content-Security-Policy: integration.response.header.Content-Security-Policy
              method.response.header.Strict-Transport-Security: integration.response.header.Strict-Transport-Security
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

          "5\\d{2}":
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

        requestParameters:
          integration.request.header.accept-encoding: method.request.header.accept-encoding
          integration.request.header.x-api-key: method.request.header.x-api-key
          integration.request.header.x-state-token: method.request.header.x-state-token
          integration.request.header.Cookie: method.request.header.Cookie
          integration.request.header.channel: method.request.header.channel
          integration.request.querystring.checkOutDate: method.request.querystring.checkOutDate
          integration.request.querystring.checkInDate: method.request.querystring.checkInDate
          integration.request.querystring.propertyId: method.request.querystring.propertyId
          integration.request.header.source: method.request.header.source
          integration.request.querystring.programId: method.request.querystring.programId
          integration.request.querystring.promoCode: method.request.querystring.promoCode
          integration.request.querystring.numGuests: method.request.querystring.numGuests
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.enableJwb: method.request.header.enableJwb
          integration.request.header.ADRUM: method.request.header.ADRUM
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: GET
        type: http
    options:
      summary: CORS support
      description: Enable CORS by returning correct headers
      tags:
        - CORS
      parameters:
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/Access-Control-Request-Headers'
        - $ref: '#/components/parameters/Access-Control-Request-Method'
        - $ref: '#/components/parameters/ADRUM'
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string"
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
        500:
          description: "500 response"
        403:
          description: "403 response"
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/room/rate-plans
        responses:
          4\d{2}:
            statusCode: "403"
          5\d{2}:
            statusCode: "500"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        requestParameters:
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.Access-Control-Request-Headers: method.request.header.Access-Control-Request-Headers
          integration.request.header.Access-Control-Request-Method: method.request.header.Access-Control-Request-Method
          integration.request.header.ADRUM: method.request.header.ADRUM
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: OPTIONS
        type: http

  /booking/v1/cart/room:
    get:
      summary: Returns all room items in the cart. 
      description: >-
        Returns all room items in the cart which includes calculated room charges, taxes, resort fees for all selected rooms, trip dates and/or offer. Includes day-wise breakdown of prices and deposit required for reservation. Prices for trip dates will be re-calculated before charges/taxes are derived. 
        Response from this API can be used to present user with summary of breakdown and charges for review before confirming the booking.
      tags:
        - Cart
      x-amazon-apigateway-request-validator: params-only
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/accept-encoding'
        - $ref: '#/components/parameters/ADRUM'
        - $ref: '#/components/parameters/x-state-token'
        - $ref: '#/components/parameters/Cookie'
        - $ref: '#/components/parameters/source'
        - $ref: '#/components/parameters/channel'
      responses:
        "200":
          description: 200 response
          headers:
            x-state-token-expires:
              schema:
                 type: string
              description: Time at which state will expire
            Set-Cookie:
              schema: 
                type: string
                example: x-state-token=abcde12345; Path=/; HttpOnly
            X-XSS-Protection:
              schema:
                 type: string
            X-Content-Type-Options:
              schema:
                 type: string
            Content-Security-Policy:
              schema:
                 type: string
            Strict-Transport-Security:
              schema:
                 type: string
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"     
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
        "400":
          description: 400 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"  
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/cart/room
        responses:
          "4\\d{2}":
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

          default:
            statusCode: "200"
            responseParameters:
              method.response.header.X-XSS-Protection: integration.response.header.X-XSS-Protection
              method.response.header.Set-Cookie: integration.response.header.expires-cookie
              method.response.header.x-state-token-expires: integration.response.header.x-state-token-expires
              method.response.header.X-Content-Type-Options: integration.response.header.X-Content-Type-Options
              method.response.header.Content-Security-Policy: integration.response.header.Content-Security-Policy
              method.response.header.Strict-Transport-Security: integration.response.header.Strict-Transport-Security
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

          "5\\d{2}":
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

        requestParameters:
          integration.request.header.accept-encoding: method.request.header.accept-encoding
          integration.request.header.x-api-key: method.request.header.x-api-key
          integration.request.header.x-state-token: method.request.header.x-state-token
          integration.request.header.Cookie: method.request.header.Cookie
          integration.request.header.channel: method.request.header.channel
          integration.request.header.source: method.request.header.source
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.ADRUM: method.request.header.ADRUM
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: GET
        type: http
    post:
      summary: Creates a room cart item. 
      description: >-
        Creates a room cart item and returns calculated room charges, taxes, resort fees for a selected room, trip dates and/or offer. Includes day-wise breakdown of prices and deposit required for reservation. Prices for trip dates will be re-calculated before charges/taxes are derived. 
        Response from this API can be used to present user with summary of breakdown and charges for review before confirming the booking.
      tags:
        - Cart
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/accept-encoding'
        - $ref: '#/components/parameters/ADRUM'
        - $ref: '#/components/parameters/x-state-token'
        - $ref: '#/components/parameters/Cookie'
        - $ref: '#/components/parameters/source'
        - $ref: '#/components/parameters/channel'
        - $ref: '#/components/parameters/enableJwb'
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoomCartItemRequest"
        required: true
      responses:
        "200":
          description: 200 response
          headers:
            x-state-token-expires:
              schema:
                 type: string
              description: Time at which state will expire
            Set-Cookie:
              schema: 
                type: string
                example: x-state-token=abcde12345; Path=/; HttpOnly
            X-XSS-Protection:
              schema:
                 type: string
            X-Content-Type-Options:
              schema:
                 type: string
            Content-Security-Policy:
              schema:
                 type: string
            Strict-Transport-Security:
              schema:
                 type: string
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"     
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoomCartItem"
        "400":
          description: 400 response. Possible error codes are _invalid_request,
            _offer_not_available, _room_not_available, _offer_not_eligible
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"    
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"   
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/cart/room
        responses:
          "4\\d{2}":
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

          default:
            statusCode: "200"
            responseParameters:
              method.response.header.X-XSS-Protection: integration.response.header.X-XSS-Protection
              method.response.header.Set-Cookie: integration.response.header.expires-cookie
              method.response.header.x-state-token-expires: integration.response.header.x-state-token-expires
              method.response.header.X-Content-Type-Options: integration.response.header.X-Content-Type-Options
              method.response.header.Content-Security-Policy: integration.response.header.Content-Security-Policy
              method.response.header.Strict-Transport-Security: integration.response.header.Strict-Transport-Security
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

          "5\\d{2}":
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

        requestParameters:
          integration.request.header.accept-encoding: method.request.header.accept-encoding
          integration.request.header.x-api-key: method.request.header.x-api-key
          integration.request.header.x-state-token: method.request.header.x-state-token
          integration.request.header.Cookie: method.request.header.Cookie
          integration.request.header.source: method.request.header.source
          integration.request.header.channel: method.request.header.channel
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.enableJwb: method.request.header.enableJwb
          integration.request.header.ADRUM: method.request.header.ADRUM
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: POST
        type: http
    options:
      summary: CORS support
      description: Enable CORS by returning correct headers
      tags:
        - CORS
      parameters:
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/Access-Control-Request-Headers'
        - $ref: '#/components/parameters/Access-Control-Request-Method'
        - $ref: '#/components/parameters/ADRUM'
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string"
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
        500:
          description: "500 response"
        403:
          description: "403 response"
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/cart/room
        responses:
          4\d{2}:
            statusCode: "403"
          5\d{2}:
            statusCode: "500"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        requestParameters:
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.Access-Control-Request-Headers: method.request.header.Access-Control-Request-Headers
          integration.request.header.Access-Control-Request-Method: method.request.header.Access-Control-Request-Method
          integration.request.header.ADRUM: method.request.header.ADRUM
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: OPTIONS
        type: http

  "/booking/v1/cart/room/{itemId}":
    put:
      summary: Updates room requests for a specific item in cart. Add room requests and get updated calculated room charges and taxes for a selected room, components, trip dates and/or offer.
      description: >-
        Updates room requests for a specific item in cart and get updated calculated room charges and taxes for a selected room, components, trip dates and/or offer.
        This API should be called after POST version of /v1/cart/room on user selection or removal of room requests. <br>
        Returns updated room charges, taxes, resort fees for a selected room, components, trip dates and/or offer. Includes day-wise breakdown of prices and deposit required for reservation.
      tags:
        - Cart
      operationId: updateCartItem
      x-amazon-apigateway-request-validator: params-only
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/accept-encoding'
        - $ref: '#/components/parameters/ADRUM'
        - $ref: '#/components/parameters/x-state-token'
        - $ref: '#/components/parameters/Cookie'
        - $ref: '#/components/parameters/source'
        - $ref: '#/components/parameters/channel'
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoomCartItemUpdateRequest"
        required: true
      responses:
        "200":
          description: 200 response
          headers:            
            x-state-token-expires:
              schema:
                 type: string
              description: Time at which state will expire
            Set-Cookie:
              schema: 
                type: string
                example: x-state-token=abcde12345; Path=/; HttpOnly
            X-XSS-Protection:
              schema:
                 type: string
            X-Content-Type-Options:
              schema:
                 type: string
            Content-Security-Policy:
              schema:
                 type: string
            Strict-Transport-Security:
              schema:
                 type: string
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"                 
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoomCartItem"
        "400":
          description: 400 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"   
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"  
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/cart/room/{itemId}
        responses:
          "4\\d{2}":
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

          default:
            statusCode: "200"
            responseParameters:
              method.response.header.X-XSS-Protection: integration.response.header.X-XSS-Protection
              method.response.header.Set-Cookie: integration.response.header.expires-cookie
              method.response.header.x-state-token-expires: integration.response.header.x-state-token-expires
              method.response.header.X-Content-Type-Options: integration.response.header.X-Content-Type-Options
              method.response.header.Content-Security-Policy: integration.response.header.Content-Security-Policy
              method.response.header.Strict-Transport-Security: integration.response.header.Strict-Transport-Security
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

          "5\\d{2}":
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

        requestParameters:
          integration.request.path.itemId: method.request.path.itemId
          integration.request.header.accept-encoding: method.request.header.accept-encoding
          integration.request.header.x-api-key: method.request.header.x-api-key
          integration.request.header.source: method.request.header.source
          integration.request.header.x-state-token: method.request.header.x-state-token
          integration.request.header.Cookie: method.request.header.Cookie
          integration.request.header.channel: method.request.header.channel
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.ADRUM: method.request.header.ADRUM
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: PUT
        type: http
    delete:
      summary: Deletes selected room item from the cart
      description: >-
        Deletes the selected room item from the cart
      tags:
        - Cart
      operationId: deleteCartItem
      x-amazon-apigateway-request-validator: params-only
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/accept-encoding'
        - $ref: '#/components/parameters/ADRUM'
        - $ref: '#/components/parameters/x-state-token'
        - $ref: '#/components/parameters/Cookie'
        - $ref: '#/components/parameters/source'
        - $ref: '#/components/parameters/channel'
      responses:
        "204":
          description: 204 response
          headers:
            x-state-token-expires:
              schema:
                 type: string
              description: Time at which state will expire
            Set-Cookie:
              schema: 
                type: string
                example: x-state-token=abcde12345; Path=/; HttpOnly
            X-XSS-Protection:
              schema:
                 type: string
            X-Content-Type-Options:
              schema:
                 type: string
            Content-Security-Policy:
              schema:
                 type: string
            Strict-Transport-Security:
              schema:
                 type: string
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"      
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"

        "400":
          description: 400 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"  
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"   
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/cart/room/{itemId}
        responses:
          "4\\d{2}":
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

          default:
            statusCode: "204"
            responseParameters:
              method.response.header.X-XSS-Protection: integration.response.header.X-XSS-Protection
              method.response.header.Set-Cookie: integration.response.header.expires-cookie
              method.response.header.x-state-token-expires: integration.response.header.x-state-token-expires
              method.response.header.X-Content-Type-Options: integration.response.header.X-Content-Type-Options
              method.response.header.Content-Security-Policy: integration.response.header.Content-Security-Policy
              method.response.header.Strict-Transport-Security: integration.response.header.Strict-Transport-Security
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

          "5\\d{2}":
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

        requestParameters:
          integration.request.path.itemId: method.request.path.itemId
          integration.request.header.accept-encoding: method.request.header.accept-encoding
          integration.request.header.x-api-key: method.request.header.x-api-key
          integration.request.header.source: method.request.header.source
          integration.request.header.x-state-token: method.request.header.x-state-token
          integration.request.header.Cookie: method.request.header.Cookie
          integration.request.header.channel: method.request.header.channel
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.ADRUM: method.request.header.ADRUM
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: DELETE
        type: http
    options:
      summary: CORS support
      description: Enable CORS by returning correct headers
      tags:
        - CORS
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/Access-Control-Request-Headers'
        - $ref: '#/components/parameters/Access-Control-Request-Method'
        - $ref: '#/components/parameters/ADRUM'
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string"
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
        500:
          description: "500 response"
        403:
          description: "403 response"
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/cart/room/{itemId}
        responses:
          4\d{2}:
            statusCode: "403"
          5\d{2}:
            statusCode: "500"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        requestParameters:
          integration.request.path.itemId: method.request.path.itemId
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.Access-Control-Request-Headers: method.request.header.Access-Control-Request-Headers
          integration.request.header.Access-Control-Request-Method: method.request.header.Access-Control-Request-Method
          integration.request.header.ADRUM: method.request.header.ADRUM
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: OPTIONS
        type: http

  /booking/v1/reserve/room:
    post:
      summary: Books all room items in the cart
      description: >-
        Completes booking for all room items in the cart. Service to be called on cart checkout to confirm the booking. Accepts users profile and billing information to process the reservation. Returns booking error or confirmation number. Service internally integrates with Accertify for anti-fraud protection.
        All room items in the cart are processed in-parallel and api returns summary of booked and failed reservations. Failed items will be left in the cart.
        <p>Important error scenarios which consuming channels should handle specifically:
          <ul>
            <li>_payment_failed - Reservation failed due to payment failures such as address verification failure. User should be asked to verify card and billing details</li>
            <li>_transaction_not_authorized - Anti-fraud check failed. User should be informed that transaction has been declined</li>
            <li>_system_error - Errors due to system issues. User should be presented with some generic system error message</li>
            <li>_antifraud_error - Error when anti-fraud service is unable to process the transaction. User can be presented with same system error message. Different error code is used for quick debugging</li>
            <li>EAuroraException - Error from GSE for some system issues. User can be presented with same system error message. Different error code is used for quick debugging</li>
            <li>_account_already_exists - Reservation failed due to account creation failed as the online profile already existing for this email id</li>
          </ul>
        </p>
      tags:
        - Reservation
      x-amazon-apigateway-request-validator: params-only
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/accept-encoding'
        - $ref: '#/components/parameters/ADRUM'
        - $ref: '#/components/parameters/x-state-token'
        - $ref: '#/components/parameters/Cookie'
        - $ref: '#/components/parameters/source'
        - $ref: '#/components/parameters/channel'
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoomReserveRequest"
        required: true
      responses:
        "200":
          description: 200 response. 'failed' object in the response will be populated if there's any error thrown from ecommerce system on not able to complete the booking. Scenarios include - Rejected by anti-fraud, payment failures, any ecommerce system errors in processing the transactions. 
            <ul>
            <li>_payment_failed - Reservation failed due to payment failures such as address verification failure. User should be asked to verify card and billing details</li>
            <li>_transaction_not_authorized - Anti-fraud check failed. User should be informed that transaction has been declined</li>
            <li>_system_error - Errors due to system issues. User should be presented with some generic system error message</li>
            <li>_antifraud_error - Error when anti-fraud service is unable to process the transaction. User can be presented with same system error message. Different error code is used for quick debugging</li>
            <li>EAuroraException - Error from GSE for some system issues. User can be presented with same system error message. Different error code is used for quick debugging</li></ul>
          headers:
            x-state-token-expires:
              schema:
                 type: string
              description: Time at which state will expire
            Set-Cookie:
              schema: 
                type: string
                example: x-state-token=abcde12345; Path=/; HttpOnly
            X-XSS-Protection:
              schema:
                 type: string
            X-Content-Type-Options:
              schema:
                 type: string
            Content-Security-Policy:
              schema:
                 type: string
            Strict-Transport-Security:
              schema:
                 type: string
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"    
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConsolidatedRoomReservationResponse"
        "400":
          description: 400 response. 400 returned if any of the validations in room booking service fails. Scenarios include - mandatory params not passed, credit card failing luhn checks, token expired or invalid etc.. Basically, anything that is out of order before calling upstream services for booking confirmation.
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"      
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Checkout400ErrorResponse"
        "500":
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"  
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/reserve/room
        responses:
          "4\\d{2}":
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

          default:
            statusCode: "200"
            responseParameters:
              method.response.header.X-XSS-Protection: integration.response.header.X-XSS-Protection
              method.response.header.Set-Cookie: integration.response.header.expires-cookie
              method.response.header.x-state-token-expires: integration.response.header.x-state-token-expires
              method.response.header.X-Content-Type-Options: integration.response.header.X-Content-Type-Options
              method.response.header.Content-Security-Policy: integration.response.header.Content-Security-Policy
              method.response.header.Strict-Transport-Security: integration.response.header.Strict-Transport-Security
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

          "5\\d{2}":
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

        requestParameters:
          integration.request.header.accept-encoding: method.request.header.accept-encoding
          integration.request.header.x-api-key: method.request.header.x-api-key
          integration.request.header.source: method.request.header.source
          integration.request.header.x-state-token: method.request.header.x-state-token
          integration.request.header.Cookie: method.request.header.Cookie
          integration.request.header.channel: method.request.header.channel
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.ADRUM: method.request.header.ADRUM
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: POST
        type: http
    get:
      summary: Get reservation by confirmation number and name
      description: >-
        Lookup service to find reservation by confirmation number, first name and last name. 
      tags:
        - Find Reservation
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/accept-encoding'
        - $ref: '#/components/parameters/x-state-token'
        - $ref: '#/components/parameters/ADRUM'
        - $ref: '#/components/parameters/Cookie'
        - $ref: '#/components/parameters/source'
        - $ref: '#/components/parameters/channel'
        - name: skipMyVegasConfirm
          in: header
          required: false
          schema:
            type: string
          description: Internal - Header to purely control some aspects for automated testing. Not to be used.
        - name: confirmationNumber
          in: query
          required: true
          schema:
            type: string
          description: Room reservation confirmation number
        - name: firstName
          in: query
          required: true
          schema:
            type: string
          description: First name on the reservation
        - name: lastName
          in: query
          required: true
          schema:
            type: string
          description: Last name on the reservation
      responses:
        "200":
          description: 200 response
          headers:
            x-state-token-expires:
              schema:
                 type: string
              description: Time at which state will expire
            Set-Cookie:
              schema: 
                type: string
                example: x-state-token=abcde12345; Path=/; HttpOnly
            X-XSS-Protection:
              schema:
                 type: string
            X-Content-Type-Options:
              schema:
                 type: string
            Content-Security-Policy:
              schema:
                 type: string
            Strict-Transport-Security:
              schema:
                 type: string
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string" 
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoomReservation"
        "400":
          description: 400 response. Possible error codes are _invalid_request,
            _transaction_not_authorized etc.
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"  
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"     
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/reserve/room
        responses:
          "4\\d{2}":
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

          default:
            statusCode: "200"
            responseParameters:
              method.response.header.X-XSS-Protection: integration.response.header.X-XSS-Protection
              method.response.header.Set-Cookie: integration.response.header.expires-cookie
              method.response.header.x-state-token-expires: integration.response.header.x-state-token-expires
              method.response.header.X-Content-Type-Options: integration.response.header.X-Content-Type-Options
              method.response.header.Content-Security-Policy: integration.response.header.Content-Security-Policy
              method.response.header.Strict-Transport-Security: integration.response.header.Strict-Transport-Security
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

          "5\\d{2}":
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

        requestParameters:
          integration.request.querystring.lastName: method.request.querystring.lastName
          integration.request.header.accept-encoding: method.request.header.accept-encoding
          integration.request.header.x-api-key: method.request.header.x-api-key
          integration.request.header.x-state-token: method.request.header.x-state-token
          integration.request.header.Cookie: method.request.header.Cookie
          integration.request.querystring.confirmationNumber: method.request.querystring.confirmationNumber
          integration.request.querystring.firstName: method.request.querystring.firstName
          integration.request.header.source: method.request.header.source
          integration.request.header.skipMyVegasConfirm: method.request.header.skipMyVegasConfirm
          integration.request.header.channel: method.request.header.channel
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.ADRUM: method.request.header.ADRUM
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: GET
        type: http
    put:
      summary: Confirm modification of existing room reservation
      description: >-
        Confirms changes to existing room reservation which was previewed via POST /v1/reserve/room/pre-modify e.g., updates to check-in/check-out dates
      tags:
        - Modify Reservation
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/accept-encoding'
        - $ref: '#/components/parameters/ADRUM'
        - $ref: '#/components/parameters/x-state-token'
        - $ref: '#/components/parameters/Cookie'
        - $ref: '#/components/parameters/source'
        - $ref: '#/components/parameters/channel'
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoomReserveUpdateRequest"
        required: true
      responses:
        "200":
          description: 200 response
          headers:
            x-state-token-expires:
              schema:
                 type: string
              description: Time at which state will expire
            Set-Cookie:
              schema: 
                type: string
                example: x-state-token=abcde12345; Path=/; HttpOnly
            X-XSS-Protection:
              schema:
                 type: string
            X-Content-Type-Options:
              schema:
                 type: string
            Content-Security-Policy:
              schema:
                 type: string
            Strict-Transport-Security:
              schema:
                 type: string
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"       
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoomReservation"
        "400":
          description: 400 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"  
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/reserve/room
        responses:
          "4\\d{2}":
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

          default:
            statusCode: "200"
            responseParameters:
              method.response.header.X-XSS-Protection: integration.response.header.X-XSS-Protection
              method.response.header.Set-Cookie: integration.response.header.expires-cookie
              method.response.header.x-state-token-expires: integration.response.header.x-state-token-expires
              method.response.header.X-Content-Type-Options: integration.response.header.X-Content-Type-Options
              method.response.header.Content-Security-Policy: integration.response.header.Content-Security-Policy
              method.response.header.Strict-Transport-Security: integration.response.header.Strict-Transport-Security
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
          "5\\d{2}":
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

        requestParameters:
          integration.request.header.accept-encoding: method.request.header.accept-encoding
          integration.request.header.x-api-key: method.request.header.x-api-key
          integration.request.header.source: method.request.header.source
          integration.request.header.x-state-token: method.request.header.x-state-token
          integration.request.header.Cookie: method.request.header.Cookie
          integration.request.header.channel: method.request.header.channel
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.ADRUM: method.request.header.ADRUM
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: PUT
        type: http
    options:
      summary: CORS support
      description: Enable CORS by returning correct headers
      tags:
        - CORS
      parameters:
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/Access-Control-Request-Headers'
        - $ref: '#/components/parameters/Access-Control-Request-Method'
        - $ref: '#/components/parameters/ADRUM'
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string"
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
        500:
          description: "500 response"
        403:
          description: "403 response"
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/reserve/room
        responses:
          4\d{2}:
            statusCode: "403"
          5\d{2}:
            statusCode: "500"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        requestParameters:
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.Access-Control-Request-Headers: method.request.header.Access-Control-Request-Headers
          integration.request.header.Access-Control-Request-Method: method.request.header.Access-Control-Request-Method
          integration.request.header.ADRUM: method.request.header.ADRUM
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: OPTIONS
        type: http

  /booking/v1/reserve/room/cancel:
    post:
      summary: Cancels existing room reservation
      description: >-
        Cancel existing room reservation
      tags:
        - Cancel Reservation
      x-amazon-apigateway-request-validator: params-only
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/accept-encoding'
        - $ref: '#/components/parameters/ADRUM'
        - $ref: '#/components/parameters/x-state-token'
        - $ref: '#/components/parameters/Cookie'
        - $ref: '#/components/parameters/source'
        - $ref: '#/components/parameters/channel'
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelRequest"
        required: true
      responses:
        "200":
          description: 200 response
          headers:
            x-state-token-expires:
              schema:
                 type: string
              description: Time at which state will expire
            Set-Cookie:
              schema: 
                type: string
                example: x-state-token=abcde12345; Path=/; HttpOnly
            X-XSS-Protection:
              schema:
                 type: string
            X-Content-Type-Options:
              schema:
                 type: string
            Content-Security-Policy:
              schema:
                 type: string
            Strict-Transport-Security:
              schema:
                 type: string
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"        
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoomReservation"
        "400":
          description: 400 response. Possible error codes are _invalid_request,
            _reservation_not_found
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"     
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/reserve/room/cancel
        responses:
          "4\\d{2}":
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
            
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.X-XSS-Protection: integration.response.header.X-XSS-Protection
              method.response.header.Set-Cookie: integration.response.header.expires-cookie
              method.response.header.x-state-token-expires: integration.response.header.x-state-token-expires
              method.response.header.X-Content-Type-Options: integration.response.header.X-Content-Type-Options
              method.response.header.Content-Security-Policy: integration.response.header.Content-Security-Policy
              method.response.header.Strict-Transport-Security: integration.response.header.Strict-Transport-Security
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
          "5\\d{2}":
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

        requestParameters:
          integration.request.header.accept-encoding: method.request.header.accept-encoding
          integration.request.header.x-api-key: method.request.header.x-api-key
          integration.request.header.x-state-token: method.request.header.x-state-token
          integration.request.header.Cookie: method.request.header.Cookie
          integration.request.header.source: method.request.header.source
          integration.request.header.channel: method.request.header.channel
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.ADRUM: method.request.header.ADRUM
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: POST
        type: http
    options:
      summary: CORS support
      description: Enable CORS by returning correct headers
      tags:
        - CORS
      parameters:
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/Access-Control-Request-Headers'
        - $ref: '#/components/parameters/Access-Control-Request-Method'
        - $ref: '#/components/parameters/ADRUM'
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string"
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
        500:
          description: "500 response"
        403:
          description: "403 response"
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/reserve/room/cancel
        responses:
          4\d{2}:
            statusCode: "403"
          5\d{2}:
            statusCode: "500"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        requestParameters:
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.Access-Control-Request-Headers: method.request.header.Access-Control-Request-Headers
          integration.request.header.Access-Control-Request-Method: method.request.header.Access-Control-Request-Method
          integration.request.header.ADRUM: method.request.header.ADRUM
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: OPTIONS
        type: http

  /booking/v1/reserve/room/cancel/validate:
    get:
      summary: Validate if the room reservation is eligible for cancellation
      description: >-
        Validate if the room reservation is eligible for cancellation. If not eligible, returns error code for reason. If eligible, return forfeit amount and refund amount.
      tags:
        - Cancel Reservation
      x-amazon-apigateway-request-validator: params-only
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/accept-encoding'
        - $ref: '#/components/parameters/ADRUM'
        - $ref: '#/components/parameters/x-state-token'
        - $ref: '#/components/parameters/Cookie'
        - $ref: '#/components/parameters/source'
        - $ref: '#/components/parameters/channel'
        - name: confirmationNumber
          in: query
          required: true
          schema:
            type: string
          description: Room reservation confirmation number
        - name: firstName
          in: query
          required: true
          schema:
            type: string
          description: First name on the reservation
        - name: lastName
          in: query
          required: true
          schema:
            type: string
          description: Last name on the reservation
      responses:
        "200":
          description: 200 response
          headers:
            x-state-token-expires:
              schema:
                 type: string
              description: Time at which state will expire
            Set-Cookie:
              schema: 
                type: string
                example: x-state-token=abcde12345; Path=/; HttpOnly
            X-XSS-Protection:
              schema:
                 type: string
            X-Content-Type-Options:
              schema:
                 type: string
            Content-Security-Policy:
              schema:
                 type: string
            Strict-Transport-Security:
              schema:
                 type: string
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"    
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CancelValidateResponse"
        "400":
          description: 400 response. Possible error codes are _invalid_request,
            _reservation_not_found
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"    
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"  
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/reserve/room/cancel/validate
        responses:
          "4\\d{2}":
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

          default:
            statusCode: "200"
            responseParameters:
              method.response.header.X-XSS-Protection: integration.response.header.X-XSS-Protection
              method.response.header.Set-Cookie: integration.response.header.expires-cookie
              method.response.header.x-state-token-expires: integration.response.header.x-state-token-expires
              method.response.header.X-Content-Type-Options: integration.response.header.X-Content-Type-Options
              method.response.header.Content-Security-Policy: integration.response.header.Content-Security-Policy
              method.response.header.Strict-Transport-Security: integration.response.header.Strict-Transport-Security
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
          "5\\d{2}":
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3


        requestParameters:
          integration.request.querystring.lastName: method.request.querystring.lastName
          integration.request.header.accept-encoding: method.request.header.accept-encoding
          integration.request.header.x-api-key: method.request.header.x-api-key
          integration.request.header.x-state-token: method.request.header.x-state-token
          integration.request.header.Cookie: method.request.header.Cookie
          integration.request.querystring.confirmationNumber: method.request.querystring.confirmationNumber
          integration.request.querystring.firstName: method.request.querystring.firstName
          integration.request.header.source: method.request.header.source
          integration.request.header.channel: method.request.header.channel
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.ADRUM: method.request.header.ADRUM
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: GET
        type: http
    options:
      summary: CORS support
      description: Enable CORS by returning correct headers
      tags:
        - CORS
      parameters:
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/Access-Control-Request-Headers'
        - $ref: '#/components/parameters/Access-Control-Request-Method'
        - $ref: '#/components/parameters/ADRUM'
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string"
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
        500:
          description: "500 response"
        403:
          description: "403 response"
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/reserve/room/cancel/validate
        responses:
          4\d{2}:
            statusCode: "403"
          5\d{2}:
            statusCode: "500"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        requestParameters:
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.Access-Control-Request-Headers: method.request.header.Access-Control-Request-Headers
          integration.request.header.Access-Control-Request-Method: method.request.header.Access-Control-Request-Method
          integration.request.header.ADRUM: method.request.header.ADRUM
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: OPTIONS
        type: http

  /booking/v1/reserve/room/pre-modify:
    post:
      summary: Update attributes on the room reservation to find updated room charges and taxes. 
      description: >-
        Update attributes on the room reservation to find updated room charges and taxes. Used to show users updated charges/totals before confirming on the modification. Currently modification is restricted to trip dates and room requests.
      tags:
        - Modify Reservation
      x-amazon-apigateway-request-validator: params-only
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/accept-encoding'
        - $ref: '#/components/parameters/ADRUM'
        - $ref: '#/components/parameters/x-state-token'
        - $ref: '#/components/parameters/Cookie'
        - $ref: '#/components/parameters/source'
        - $ref: '#/components/parameters/channel'
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PremodifyPostRequest"
        required: true
      responses:
        "200":
          description: 200 response
          headers:
            x-state-token-expires:
              schema:
                 type: string
              description: Time at which state will expire
            Set-Cookie:
              schema: 
                type: string
                example: x-state-token=abcde12345; Path=/; HttpOnly
            X-XSS-Protection:
              schema:
                 type: string
            X-Content-Type-Options:
              schema:
                 type: string
            Content-Security-Policy:
              schema:
                 type: string
            Strict-Transport-Security:
              schema:
                 type: string
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"          
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoomReservation"
        "400":
          description: 400 response. Possible error codes are _invalid_request,
            _dates_not_available
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"  
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string" 
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/reserve/room/pre-modify
        responses:
          "4\\d{2}":
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

          default:
            statusCode: "200"
            responseParameters:
              method.response.header.X-XSS-Protection: integration.response.header.X-XSS-Protection
              method.response.header.Set-Cookie: integration.response.header.expires-cookie
              method.response.header.x-state-token-expires: integration.response.header.x-state-token-expires
              method.response.header.X-Content-Type-Options: integration.response.header.X-Content-Type-Options
              method.response.header.Content-Security-Policy: integration.response.header.Content-Security-Policy
              method.response.header.Strict-Transport-Security: integration.response.header.Strict-Transport-Security
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

          "5\\d{2}":
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

        requestParameters:
          integration.request.header.accept-encoding: method.request.header.accept-encoding
          integration.request.header.x-api-key: method.request.header.x-api-key
          integration.request.header.source: method.request.header.source
          integration.request.header.x-state-token: method.request.header.x-state-token
          integration.request.header.Cookie: method.request.header.Cookie
          integration.request.header.channel: method.request.header.channel
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.ADRUM: method.request.header.ADRUM
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: POST
        type: http
    options:
      summary: CORS support
      description: Enable CORS by returning correct headers
      tags:
        - CORS
      parameters:
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/Access-Control-Request-Headers'
        - $ref: '#/components/parameters/Access-Control-Request-Method'
        - $ref: '#/components/parameters/ADRUM'
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string"
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
        500:
          description: "500 response"
        403:
          description: "403 response"
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/reserve/room/pre-modify
        responses:
          4\d{2}:
            statusCode: "403"
          5\d{2}:
            statusCode: "500"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        requestParameters:
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.Access-Control-Request-Headers: method.request.header.Access-Control-Request-Headers
          integration.request.header.Access-Control-Request-Method: method.request.header.Access-Control-Request-Method
          integration.request.header.ADRUM: method.request.header.ADRUM
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: OPTIONS
        type: http

  "/booking/v1/iata/{iataCode}":
    get:
      summary: Validates the iata code
      description: Validates the iata code. If valid, then returns the 204 No Content response. If invalid, then throws 404 response 
      operationId: validateCode      
      x-amazon-apigateway-request-validator: params-only
      tags:
        - IATA
      parameters:
        - $ref: '#/components/parameters/source'
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/accept-encoding'
        - $ref: '#/components/parameters/ADRUM'
        - $ref: '#/components/parameters/x-state-token'
        - $ref: '#/components/parameters/Cookie'
        - $ref: '#/components/parameters/channel'
        - name: iataCode
          in: path
          required: true
          schema:
            type: string
          description: Iata Code
      responses:
        "204":
          description: 204 response
          headers:
            x-state-token-expires:
              schema:
                 type: string
              description: Time at which state will expire
            Set-Cookie:
              schema: 
                type: string
                example: x-state-token=abcde12345; Path=/; HttpOnly
            X-XSS-Protection:
              schema:
                 type: string
            X-Content-Type-Options:
              schema:
                 type: string
            Content-Security-Policy:
              schema:
                 type: string
            Strict-Transport-Security:
              schema:
                 type: string
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"     
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
                 
        "400":
          description: 400 response if the iata code is invalid
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string" 
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"     
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/iata/{iataCode}
        responses:
          "4\\d{2}":
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

          default:
            statusCode: "204"
            responseParameters:
              method.response.header.X-XSS-Protection: integration.response.header.X-XSS-Protection
              method.response.header.Set-Cookie: integration.response.header.expires-cookie
              method.response.header.x-state-token-expires: integration.response.header.x-state-token-expires
              method.response.header.X-Content-Type-Options: integration.response.header.X-Content-Type-Options
              method.response.header.Content-Security-Policy: integration.response.header.Content-Security-Policy
              method.response.header.Strict-Transport-Security: integration.response.header.Strict-Transport-Security
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

          "5\\d{2}":
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

        requestParameters:
          integration.request.path.iataCode: method.request.path.iataCode
          integration.request.header.x-api-key: method.request.header.x-api-key
          integration.request.header.x-state-token: method.request.header.x-state-token
          integration.request.header.Cookie: method.request.header.Cookie
          integration.request.header.source: method.request.header.source
          integration.request.header.channel: method.request.header.channel
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.ADRUM: method.request.header.ADRUM
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: GET
        type: http
    options:
      summary: CORS support
      description: Enable CORS by returning correct headers
      tags:
        - CORS
      parameters:
        - name: iataCode
          in: path
          required: true
          schema:
            type: string
          description: Iata Code
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/Access-Control-Request-Headers'
        - $ref: '#/components/parameters/Access-Control-Request-Method'
        - $ref: '#/components/parameters/ADRUM'
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string"
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
        500:
          description: "500 response"
        403:
          description: "403 response"
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/iata/{iataCode}
        responses:
          4\d{2}:
            statusCode: "403"
          5\d{2}:
            statusCode: "500"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        requestParameters:
          integration.request.path.iataCode: method.request.path.iataCode
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.Access-Control-Request-Headers: method.request.header.Access-Control-Request-Headers
          integration.request.header.Access-Control-Request-Method: method.request.header.Access-Control-Request-Method
          integration.request.header.ADRUM: method.request.header.ADRUM
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: OPTIONS
        type: http

  "/booking/v1/myvegas/{redemptionCode}/validate":
    get:
      summary: Validate myvegas redemption code and return associated details
      description: >- 
        <p>Validates myvegas redemption code and returns details of the associated program, id redemption code is valid. The service will validate to ensure user is eligible to redeem the supplied redemption code based on the customerId or MlifeNumber in the session.
        
          Error code descriptions:
          <ul>
            <li>_myvegas_system_error - Invalid code or code is associated to some violations in myvegas</li>
            <li>_myvegas_unknown_redemption_code - Unrecognized redemption code</li>
            <li>_myvegas_redemption_type - Redemption code is for a product which is not a room or show</li>
            <li>_myvegas_redemption_code_redeemed - Code is already redeemed</li>
            <li>_myvegas_invalid_redemption_date - Reservation is in past or within unallowed dates. This scenario shouldn't happen in a regular flow since invalid dates will not be selectable by users.</li>
            <li>_myvegas_code_expired - Code is expired</li>
            <li>_myvegas_code_cancelled - Code is cancelled</li>
            <li>_myvegas_code_in_refund - Code is in refund</li>
            <li>_myvegas_code_refunded - Code is refunded already</li>
            <li>_myvegas_code_gifted - Code is gifted</li>
            <li>_myvegas_code_email_conf_pending - Email confirmation pending</li>
            <li>_myvegas_code_hold - Code is on hold</li>
            <li>_myvegas_code_gifted_hold - Code is gifted and on hold</li>
            <li>_myvegas_code_unclaim - Code is unclaimed</li>
            <li>_offer_not_eligible - Profile mismatch between logged-in user and user details provided during creation of redemption code i.e., mismatch in either of firstName, lastName, mlife or email</li>
          </ul>
        </p>
      operationId: validateMyvegasRedemptionCode
      x-amazon-apigateway-request-validator: params-only
      tags:
        - MyVegas
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/accept-encoding'
        - $ref: '#/components/parameters/ADRUM'
        - $ref: '#/components/parameters/x-state-token'
        - $ref: '#/components/parameters/Cookie'
        - $ref: '#/components/parameters/source'
        - $ref: '#/components/parameters/channel'
        - name: redemptionCode
          in: path
          required: true
          schema:
            type: string
          description: MyVegas Redemption Code
      responses:
        "200":
          description: 200 response
          headers:
            x-state-token-expires:
              schema:
                 type: string
              description: Time at which state will expire
            Set-Cookie:
              schema: 
                type: string
                example: x-state-token=abcde12345; Path=/; HttpOnly
            X-XSS-Protection:
              schema:
                 type: string
            X-Content-Type-Options:
              schema:
                 type: string
            Content-Security-Policy:
              schema:
                 type: string
            Strict-Transport-Security:
              schema:
                 type: string
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"       
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MyVegasValidateResponse"
        "400":
          description: 400 response. Possible error codes are _myvegas_system_error,
            _myvegas_unknown_redemption_code, _myvegas_redemption_type,
            _myvegas_redemption_code_redeemed, _myvegas_invalid_redemption_date,
            _myvegas_code_expired, _offer_not_eligible (User profile doesn't match with redemption profile)
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"  
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"  
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/myvegas/{redemptionCode}/validate
        responses:
          "4\\d{2}":
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

          default:
            statusCode: "200"
            responseParameters:
              method.response.header.X-XSS-Protection: integration.response.header.X-XSS-Protection
              method.response.header.Set-Cookie: integration.response.header.expires-cookie
              method.response.header.x-state-token-expires: integration.response.header.x-state-token-expires
              method.response.header.X-Content-Type-Options: integration.response.header.X-Content-Type-Options
              method.response.header.Content-Security-Policy: integration.response.header.Content-Security-Policy
              method.response.header.Strict-Transport-Security: integration.response.header.Strict-Transport-Security
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

          "5\\d{2}":
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

        requestParameters:
          integration.request.path.redemptionCode: method.request.path.redemptionCode
          integration.request.header.x-api-key: method.request.header.x-api-key
          integration.request.header.x-state-token: method.request.header.x-state-token
          integration.request.header.Cookie: method.request.header.Cookie
          integration.request.header.source: method.request.header.source
          integration.request.header.channel: method.request.header.channel
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.ADRUM: method.request.header.ADRUM
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: GET
        type: http
    options:
      summary: CORS support
      description: Enable CORS by returning correct headers
      tags:
        - CORS
      parameters:
        - name: redemptionCode
          in: path
          required: true
          schema:
            type: string
          description: MyVegas Redemption Code      
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/Access-Control-Request-Headers'
        - $ref: '#/components/parameters/Access-Control-Request-Method'
        - $ref: '#/components/parameters/ADRUM'
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string"
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
        500:
          description: "500 response"
        403:
          description: "403 response"

      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/myvegas/{redemptionCode}/validate
        responses:
          4\d{2}:
            statusCode: "403"
          5\d{2}:
            statusCode: "500"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        requestParameters:
          integration.request.path.redemptionCode: method.request.path.redemptionCode
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.Access-Control-Request-Headers: method.request.header.Access-Control-Request-Headers
          integration.request.header.Access-Control-Request-Method: method.request.header.Access-Control-Request-Method
          integration.request.header.ADRUM: method.request.header.ADRUM
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: OPTIONS
        type: http
  
  "/booking/v1/myvegas/{redemptionCode}/confirm":
    post:
      summary: Confirms the redemption code as redeemed
      description: Confirms the redemption code as redeemed with myvegas systems. API to be called after successful completion of booking using a redemption code. Reservation API will invoke this internally if redemption code was attached to the reservation.
      operationId: confirmMyvegasRedemptionCode
      x-amazon-apigateway-request-validator: params-only
      tags:
        - MyVegas
      parameters:
        - $ref: '#/components/parameters/source'
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/accept-encoding'
        - $ref: '#/components/parameters/ADRUM'
        - $ref: '#/components/parameters/x-state-token'
        - $ref: '#/components/parameters/Cookie'
        - $ref: '#/components/parameters/channel'
        - name: redemptionCode
          in: path
          required: true
          schema:
            type: string
          description: MyVegas Redemption Code
        - name: skipMyVegasConfirm
          in: header
          required: false
          schema:
            type: string
          description: Internal. Parameter used internally to control specific checks during automated tests. Do not use this param
      responses:
        "204":
          description: 204 response
          headers:
            x-state-token-expires:
              schema:
                 type: string
              description: Time at which state will expire
            Set-Cookie:
              schema: 
                type: string
                example: x-state-token=abcde12345; Path=/; HttpOnly
            X-XSS-Protection:
              schema:
                 type: string
            X-Content-Type-Options:
              schema:
                 type: string
            Content-Security-Policy:
              schema:
                 type: string
            Strict-Transport-Security:
              schema:
                 type: string
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
        "400":
          description: 400 response. Possible error codes are _myvegas_system_error,
            _myvegas_unknown_redemption_code, _myvegas_redemption_type,
            _myvegas_redemption_code_redeemed, _myvegas_invalid_redemption_date,
            _myvegas_code_expired
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string" 
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/myvegas/{redemptionCode}/confirm
        responses:
          "4\\d{2}":
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

          default:
            statusCode: "204"
            responseParameters:
              method.response.header.X-XSS-Protection: integration.response.header.X-XSS-Protection
              method.response.header.Set-Cookie: integration.response.header.expires-cookie
              method.response.header.x-state-token-expires: integration.response.header.x-state-token-expires
              method.response.header.X-Content-Type-Options: integration.response.header.X-Content-Type-Options
              method.response.header.Content-Security-Policy: integration.response.header.Content-Security-Policy
              method.response.header.Strict-Transport-Security: integration.response.header.Strict-Transport-Security
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

          "5\\d{2}":
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3

        requestParameters:
          integration.request.path.redemptionCode: method.request.path.redemptionCode
          integration.request.header.x-api-key: method.request.header.x-api-key
          integration.request.header.x-state-token: method.request.header.x-state-token
          integration.request.header.Cookie: method.request.header.Cookie
          integration.request.header.channel: method.request.header.channel
          integration.request.header.source: method.request.header.source
          integration.request.header.skipMyVegasConfirm: method.request.header.skipMyVegasConfirm
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.ADRUM: method.request.header.ADRUM
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: POST
        type: http
    options:
      summary: CORS support
      description: Enable CORS by returning correct headers
      tags:
        - CORS
      parameters:
        - name: redemptionCode
          in: path
          required: true
          schema:
            type: string
          description: MyVegas Redemption Code
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/Access-Control-Request-Headers'
        - $ref: '#/components/parameters/Access-Control-Request-Method'
        - $ref: '#/components/parameters/ADRUM'
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string"
            Access-Control-Allow-Credentials:
              schema:
                type: "string"
            Access-Control-Expose-Headers:
              schema:
                type: "string"
            ADRUM_0:
              schema:
                type: "string"
            ADRUM_1:
              schema:
                type: "string"
            ADRUM_2:
              schema:
                type: "string"
            ADRUM_3:
              schema:
                type: "string"
        500:
          description: "500 response"
        403:
          description: "403 response"

      x-amazon-apigateway-integration:
        uri: https://${stageVariables.envHostName}/v1/myvegas/{redemptionCode}/confirm
        responses:
          4\d{2}:
            statusCode: "403"
          5\d{2}:
            statusCode: "500"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Access-Control-Allow-Methods: integration.response.header.Access-Control-Allow-Methods
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Max-Age: integration.response.header.Access-Control-Max-Age
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Access-Control-Expose-Headers: "'ADRUM_0,ADRUM_1,ADRUM_2,ADRUM_3'"
              method.response.header.ADRUM_0: integration.response.header.ADRUM_0
              method.response.header.ADRUM_1: integration.response.header.ADRUM_1
              method.response.header.ADRUM_2: integration.response.header.ADRUM_2
              method.response.header.ADRUM_3: integration.response.header.ADRUM_3
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        requestParameters:
          integration.request.path.redemptionCode: method.request.path.redemptionCode
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.Access-Control-Request-Headers: method.request.header.Access-Control-Request-Headers
          integration.request.header.Access-Control-Request-Method: method.request.header.Access-Control-Request-Method
          integration.request.header.ADRUM: method.request.header.ADRUM
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: OPTIONS
        type: http

components: 
  securitySchemes:
    api_key:
      type: apiKey
      name: x-api-key
      in: header 
  schemas:
    RoomAvailabilityResponse:
      type: array
      items:
        type: object
        properties:
          roomTypeId:
            type: string
            description: Room Type GUID
            example: ef346262-ebe9-4150-88a5-e5088dfe5b7d
          resortFee:
            type: number
            format: double
            example: 36.40
            description: Usually, resort fee amount is called-out as guidance upfront
          price:
            type: object
            properties:
              baseAveragePrice:
                type: number
                format: double
                example: 220.00
                description: Average of all base prices across all nights in the trip
              discountedAveragePrice:
                type: number
                format: double
                example: 200.00
                description: Average of all discounted prices across all nights in the trip
              baseSubtotal:
                type: number
                format: double
                example: 440.00
                description: Total of all base prices across all nights in the trip
              discountedSubtotal:
                type: number
                format: double
                example: 400.00
                description: Average of all discounted prices across all nights in the trip
              isComp:
                type: boolean
                description: This attribute will be true if the stay is complimentary. It's
                  same as discountedSubtotal being zero.
              itemized:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                      example: 12/05/2018
                    isComp:
                      type: boolean
                      description: This attribute will be true if the night in the stay is
                        complimentary. It's same as discountedPrice being zero.
                    basePrice:
                      type: number
                      format: double
                      example: 110.00
                    discountedPrice:
                      type: number
                      format: double
                      example: 100.00
                    programId:
                      type: string
                      example: ef346262-ebe9-4150-88a5-e5088dfe5b7d
                      description: Program GUID used for calculate price
          memberPrice:
            type: object
            description: Member price is used to inform transient guests about price if
              user sign-ups to mlife. Object will only be returned when user is
              not logged-in, no program/promoCode applied and member discounted
              subtotal is lesser than price.
            properties:
              baseAveragePrice:
                type: number
                format: double
                example: 220.00
              discountedAveragePrice:
                type: number
                format: double
                example: 200.00   
              baseSubtotal:
                type: number
                format: double
                example: 440.00
              discountedSubtotal:
                type: number
                format: double
                example: 400.00
              isComp:
                type: boolean
              breakdown:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                      example: 12/05/2018
                    isComp:
                      type: boolean
                    basePrice:
                      type: number
                      format: double
                      example: 110.00
                    discountedPrice:
                      type: number
                      format: double
                      example: 100.00
                    programId:
                      type: string
                      example: ef346262-ebe9-4150-88a5-e5088dfe5b7d
                      description: Program GUID used for calculate price
    RoomRatePlansResponse:
      type: array
      items:
        type: object
        properties:
          programId:
            type: string
            description: Program GUID
          rooms:
            type: array
            items:
              type: object
              properties:
                roomTypeId:
                  type: string
                  description: Room Type GUID
                  example: ef346262-ebe9-4150-88a5-e5088dfe5b7d
                resortFee:
                  type: number
                  format: double
                  example: 36.40
                  description: Usually, resort fee amount is called-out as guidance upfront
                price:
                  type: object
                  properties:
                    baseAveragePrice:
                      type: number
                      format: double
                      example: 220.00
                      description: Average of all base prices across all nights in the trip
                    discountedAveragePrice:
                      type: number
                      format: double
                      example: 200.00
                      description: Average of all discounted prices across all nights in
                        the trip
                    baseSubtotal:
                      type: number
                      format: double
                      example: 440.00
                      description: Total of all base prices across all nights in the trip
                    discountedSubtotal:
                      type: number
                      format: double
                      example: 400.00
                      description: Average of all discounted prices across all nights in
                        the trip
                    isComp:
                      type: boolean
                      description: This attribute will be true if the stay is
                        complimentary. It's same as discountedSubtotal being
                        zero.
                    itemized:
                      type: array
                      items:
                        type: object
                        properties:
                          date:
                            type: string
                            example: 12/05/2018
                          isComp:
                            type: boolean
                            description: This attribute will be true if the night in the
                              stay is complimentary. It's same as
                              discountedPrice being zero.
                          basePrice:
                            type: number
                            format: double
                            example: 110.00
                          discountedPrice:
                            type: number
                            format: double
                            example: 100.00
                          programId:
                            type: string
                            example: ef346262-ebe9-4150-88a5-e5088dfe5b7d
                            description: Program GUID used for calculate price
    OfferValidateResponse:
      type: object
      properties:
        valid:
          type: boolean
          description: true - Program is available and active in the system
        eligible:
          type: boolean
          description: true - User is eligible to use this offer.
        expired:
          type: boolean
          description: true - Program is expired.
        myvegas:
          type: boolean
          description: true - Program is a myvegas program.
        segment:
          type: boolean
          description: true - There is a segment associated to the programId or Promo Code
            passed in the request
        programId:
          type: string
          description: ProgramId based on the promoCode passed
        propertyId:
          type: string
          description: PropertyId associated with the Program
        patronProgram:
          type: boolean
          description: true - Program is a patron program.
    RoomRequestItem:
       type: object
       properties:
         id:
           type: string
           example: a197e21b-ef75-45aa-b9d3-3480f557c77a
         nightlyCharge:
           type: boolean
           description: some requests are nightly charge and some are for whole trip
         selected:
           type: boolean
           example: false
           description: Flag is updated based on user selection
         price:
           type: number
           format: double
           example: 50.00
         description:
           type: string
           example: Dog Friendly
           description: Description sourced from Mystique
         shortDescription:
           type: string
           description: Short description sourced from Mystique
         longDescription:
           type: string
           description: Learn more description sourced from Mystique
    MyVegasValidateResponse:
      type: object
      properties:
        status:
          type: string
          description: Status of the redemption
        programId:
          type: string
          example: b0d3b843-6571-4215-b219-a417fcc4337d
          description: Program Id associated with the redemption code
        propertyId:
          type: string
          example: 66964e2b-2550-4476-84c3-1a4c0c5c067f
          description: Property Id associated with the redemption code
        rewardType:
          type: string
          example: Room
          enum:
            - Room
            - Show
          description: Reward Type associated with the redemption code
    RoomProgramSegmentResponse:
      type: object
      properties:
        segmentId:
          type: string
          description: Segment Id associated with the program
        programIds:
          type: array
          items:
            type: string
          description: All program Ids associated with this segment
    RoomCartItem:
      type: object
      properties:
        itemId:
          type: string
          example: 987610abc20942328bb451f7b9b13a75-1544213747540
          description: Unique ID for cart item in current session
        propertyId:
          type: string
          example: 44e610ab-c209-4232-8bb4-51f7b9b13a75
          description: Property GUID to which room belongs
        roomTypeId:
          type: string
          example: ef346262-ebe9-4150-88a5-e5088dfe5b7d
          description: Room Type GUID
        programId:
          type: string
          example: ef346262-ebe9-4150-88a5-e5088dfe5b7d
          description: Program GUID if program is applied by a user
        freeCancellationEndDate:
          type: string
          example: 2019-11-01T07:00:00+0000
          description: The date after which, if cancelled, the deposit will be forfeit
        tripDetails:
          type: object
          properties:
            checkInDate:
              type: string
              example: 12/10/2018
            checkOutDate:
              type: string
              example: 12/14/2018
            numGuests:
              type: number
              example: 2
            nights:
              type: number
              example: 4
        roomRequests:
          type: array
          items:
            $ref: "#/components/schemas/RoomRequestItem"
        rates:
          type: object
          properties:
            itemized:
              type: array
              items:
                type: object
                properties:
                  date:
                    type: string
                    example: 12/05/2018
                  isComp:
                    type: boolean
                  basePrice:
                    type: number
                    format: double
                    example: 110.00
                  discountedPrice:
                    type: number
                    format: double
                    example: 100.00
                  programId:
                    type: string
                    example: ef346262-ebe9-4150-88a5-e5088dfe5b7d
                    description: Program GUID used for calculate price
            roomSubtotal:
              type: number
              format: double
              example: 518.00
              description: Total of nightly base prices before discount
            programDiscount:
              type: number
              format: double
              example: 100.00
              description: Amount of discount provided by the program. This could be zero when there's no discount and it could be negative if program raises prices as part of value-add.
            discountedRoomSubtotal:
              type: number
              format: double
              example: 418.00
              description: Value = roomSubtotal - programDiscount
            roomRequestsTotal:
              type: number
              format: double
              example: 0.00
              description: Total price for all room requests selected by the user
            adjustedRoomSubtotal:
              type: number
              format: double
              example: 418.00
              description: Value = roomSubtotal - programDiscount + roomRequestsTotal
            resortFee:
              type: number
              format: double
              example: 60.44
              description: Resort fee without tax amount for the trip selected
            resortFeePerNight:
              type: number
              format: double
              example: 60.44
              description: Average resort fee per night without tax amount
            resortFeeAndTax:
              type: number
              format: double
              example: 88.44
              description: Resort fee and tax amount for the trip selected
            roomChargeTax:
              type: number
              format: double
              example: 55.93
              description: Amount of tax on room charges
            occupancyFee:
              type: number
              format: double
              example: 3.00
              description: Occupancy fee. Applicable only for borgata
            tourismFee:
              type: number
              format: double
              example: 3.00
              description: Tourism fee. Applicable only for borgata
            tourismFeeAndTax:
              type: number
              format: double
              example: 3.00
              description: Tourism fee with tax included. Applicable only for borgata
            casinoSurcharge:
              type: number
              format: double
              example: 3.00
              description: State casino occupancy fee. Applicable only for borgata
            casinoSurchargeAndTax:
              type: number
              format: double
              example: 3.00
              description: State casino occupancy fee with tax included. Applicable only for borgata
            reservationTotal:
              type: number
              format: double
              example: 562.36
              description: Overall total for the reservation
            depositDue:
              type: number
              format: double
              example: 236.96
              description: Deposit amount to be paid to book the reservation
            balanceUponCheckIn:
              type: number
              format: double
              example: 325.40
              description: Balance amount to be paid during check-in
    PremodifyPostRequest:
      type: object
      required:
        - confirmationNumber
        - firstName
        - lastName
      properties:
        confirmationNumber:
          type: string
          example: M01232341
          description: confirmation number for reservation to be edited
        firstName:
          type: string
          example: John
          description: First name on the reservation
        lastName:
          type: string
          example: Smith
          description: Last name on the reservation
        tripDetails:
          type: object
          properties:
            checkInDate:
              type: string
              example: 12/15/2018
              description: Existing or updated check-in date
            checkOutDate:
              type: string
              example: 12/18/2018
              description: Existing or updated check-out date
        roomRequests:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: a197e21b-ef75-45aa-b9d3-3480f557c77a
              selected:
                type: boolean
    RoomReserveRequest:
      type: object
      required:
        - billing
        - profile
      properties:
        inAuthTransactionId:
          type: string
          example: 987610abc20942328bb451f7b9b13a7
          description: Transaction ID generated and passed to InAuth as part of device
            metrics capture
        fullPayment:
           type: boolean
           example: false
           description: indicator if full payment should be charged on the card
        iata:
           type: string
           example: 1234
           description: iata code
        profile:
          type: object
          properties:
            firstName:
              type: string
              example: John
              description: Should be <32 chars and match *^[ A-Za-z0-9.\-\/+=_ !$\\*?@#,']*$*
            lastName:
              type: string
              example: Doe
              description: Should be <32 chars and match *^[ A-Za-z0-9.\-\/+=_ !$\\*?@#,']*$*
            phone:
              type: string
              example: 7071239870
              description: Should match *[0-9]+* regex and should be <=15
            email:
              type: string
              example: johndoe@nomail.com
              description: Should be <=100 chars and match regex ^((([\\w]|[!#$'\\*\\+\\-/\\?_\\\\]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([\\w]|[!#\\$'\\*\\+\\-\\/=\\?\\_\\\\]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([\\w]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([\\w]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([\\w]|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([\\w]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([\\w]|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?$
            password:
              type: string
              example: P@$$w0rd
              description: Should match *^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z]).{8,20}$*
            dateOfBirth:
              type: string
              example: 12/31/1995
              description: Should match *M/d/yyyy*
            securityQuestionId:
              type: string
              example: 3
              description: Should be between 1 to 5
            securityAnswer:
              type: string
              example: audi
              description: Should be >=3 and <=100 chars and match *^[ A-Za-z0-9.\\-\\/+=_ !$\\*?@#,']*$*
            canadian-user:
              type: string
              example: on
              description: Should be <i>on</i> when the user opted-in.
          required:
            - firstName
            - lastName
            - phone
            - email
        billing:
          type: object
          properties:
            payment:
              type: object
              properties:
                cardHolder:
                  type: string
                  example: John doe
                  description: Should be <=70 and match *^[ A-Za-z0-9.\-\/+=_ !$\\*?@#,']*$*
                cardNumber:
                  type: string
                  description: Should pass luhn algorithm for card number OR it should be 28 char payment token
                cvv:
                  type: number
                  example: 123
                  description: Should match regex ^[0-9]{3,4}$
                type:
                  type: string
                  enum:
                     - Visa
                     - Mastercard
                     - Discover
                     - American Express
                     - Diners Club
                     - JCB
                     - Union Pay
                  example: Mastercard, visa
                expiry:
                  type: string
                  format: MM/YYYY
                  example: 10/2022
              required:
                - cardHolder
                - cardNumber
                - cvv
                - type
                - expiry
            address:
              type: object
              properties:
                street1:
                  type: string
                  example: 234 W Main St
                  description: Should be <=60 chars
                street2:
                  type: string
                  example: Unit 415
                  description: Should be <=60 chars
                city:
                  type: string
                  example: Las Vegas
                  description: Should be <=32 chars and match *^[ A-Za-z0-9.\-\/+=_ !$\\*?@#,']*$* regex
                state:
                  type: string
                  example: NV
                  description: State code for US/Canada and free form for other countries.
                    Mandatory for US/Canada. 2 chars for US. Should be <=16 chars for other countries.
                postalCode:
                  type: string
                  example: "12345"
                  description: US -> ^\d{5}(-\d{4})?$, Canada ->
                    ^[ABCEGHJKLMNPRSTVXY]{1}\d{1}[A-Z]{1} *\d{1}[A-Z]{1}\d{1}$,
                    Other countries -> optional for other countries or should follow ^[a-zA-Z0-9]{4,9}$
                country:
                  type: string
                  example: US
                  description: Country code
              required:
                - city
                - country
                - street1
          required:
            - address
            - payment
    CancelRequest:
      type: object
      required:
        - confirmationNumber
        - firstName
        - lastName
      properties:
        confirmationNumber:
          type: string
          description: Confirmation number of the reservation.
        firstName:
          type: string
          description: First name used when booking.
        lastName:
          type: string
          description: Last name used when booking.
    TokenRequest:
      type: object
      properties:
        client_id:
          type: string
          description: Client ID generated from Okta registration
        client_secret:
          type: string
          description: Client secret generated from Okta registration
        mlifeNumber:
          type: string
          description: Customer mlife number if the user is logged-in
        customerId:
          type: string
          description: Customer identifier from GSE. This can be used instead of mlife number if clients have access to this information.
        transient:
          type: boolean
          description: This flag should be set to true if the user is not logged-in and there's no mlifeNumber or customerId
      required:
        - client_id
        - client_secret
    RoomCartItemUpdateRequest:
      type: object
      required:
        - roomRequests
      properties:
        specialRequests:
          type: string
          description: any special requests by the customer for the room
        roomRequests:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: a197e21b-ef75-45aa-b9d3-3480f557c77a
              selected:
                type: boolean
                description: True if selected by the user. False for unselected room
                  requests
            required:
              - id
              - selected
    RoomPricesResponse:
      type: array
      items:
        type: object
        properties:
          isComp:
            type: boolean
            description: This attribute will be true if the night is complimentary. It's
              same as discountedAveragePrice being zero.
          status:
            type: string
            enum:
              - AVAILABLE
              - SOLDOUT
          propertyId:
            type: string
            example: 66964e2b-2550-4476-84c3-1a4c0c5c067f
          perpetualProgramId:
            type: string
            description: This attribute will return the default perpetual program Id for the property, if perpetual pricing (perpetualPricing=true) is requested and property has default perpetual program configured. Value will be empty when best available pricing is used.
          price:
            type: object
            properties:
              baseAveragePrice:
                type: number
                format: double
                example: 220.40
                description: Price before offer savings
              discountedAveragePrice:
                type: number
                format: double
                example: 180.40
                description: Price after applying savings from the program. This can be
                  same as baseAveragePrice when there's no discount
          resortFee:
            type: number
            format: double
            example: 36.40
            description: Usually, resort fee amount is called-out as guidance upfront
    RoomOffersResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            example: b0d3b843-6571-4215-b219-a417fcc4337d
          type:
            type: string
            description: Program of type "SEGMENT" will only be returned when there's no
              property filtering.
            enum:
              - PROGRAM
              - SEGMENT
          startDate:
            type: string
            example: 12/10/2019
            description: Travel start date of the offer i.e., first date from which offer
              will be available
          endDate:
            type: string
            example: 12/10/2019
            description: Travel etart date of the offer i.e., last date beyond which offer
              will not be available
          bookByDate:
            type: string
            example: 12/10/2019
            description: Date by which offer should be booked
    PerpetualOffersReponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            example: b0d3b843-6571-4215-b219-a417fcc4337d
          propertyId:
            type: string
            example: 66964e2b-2550-4476-84c3-1a4c0c5c067f
    ErrorResponse:
      type: object
      properties:
        type:
          type: string
          enum:
            - error
            - warn
            - info
        code:
          type: string
        msg:
          type: string
    CancelValidateResponse:
      type: object
      properties:
        isCancelable:
          type: boolean
        isForfeit:
          type: boolean
          description: Deposit amount will be forfeited if the reservation is in forfeit
            window
        reservationTotal:
          type: number
          format: double
          example: 536.40
        depositAmount:
          type: number
          format: double
          example: 272.40
          description: Deposit amount paid during booking
        forfeitAmount:
          type: number
          format: double
          example: 136.20
          description: Amount to be forfeit when cancelled
        refundAmount:
          type: number
          format: double
          example: 136.20
          description: Amount to be refunded when cancelled
    ConsolidatedRoomReservationResponse:
      type: object
      properties:
        booked:
          type: array
          items:
            $ref: "#/components/schemas/RoomReservation"
          description: List of Booked rooms
        failed:
          type: array
          description: List of Failed rooms
          items:
            $ref: "#/components/schemas/FailedRoomReservation"
        messages:
          type: array
          description: Array of messages for some warnings which user might need to be informed. Currently, only scenario when this will be populated is when email sending failed but reservation was successful. This is defined as array, so that it's flexible to add more messages in the future
          items:
            type: object
            properties:
              type:
                type: string
                description: Type of message - info, warn or error
                enum:
                  - info
                  - warn
                  - error
              code:
                type: string
                description: "Error code. Possible values: _email_failed (Error code when reservation was successful but unable to send emails due to some system error)"
              msg:
                type: string
                description: description of error scenario
    FailedRoomReservation:
      type: object
      properties:
        itemId:
          type: string
          description: Unique ID for reservation in current session
        failure:
          type: object
          properties:
            type:
              type: string
            code:
              type: string
            reason:
              type: string
    RoomReservation:
      type: object
      properties:
        itemId:
          type: string
          example: 987610abc20942328bb451f7b9b13a75
          description: Unique ID for reservation in current session. Value will be same as what was returned in cart APIs.
        propertyId:
          type: string
          example: 44e610ab-c209-4232-8bb4-51f7b9b13a75
          description: Property GUID to which room belongs
        roomTypeId:
          type: string
          example: ef346262-ebe9-4150-88a5-e5088dfe5b7d
          description: Room Type GUID
        programId:
          type: string
          example: ef346262-ebe9-4150-88a5-e5088dfe5b7d
          description: Program GUID if program is applied by a user
        confirmationNumber:
          type: string
          example: M01232341
          description: Room confirmation number of the booked reservation
        bookDate:
          type: number
          example: 1544288296871
          description: Milliseconds since Epoch. Datetime of booking
        freeCancellationEndDate:
          type: string
          example: 2019-11-01T07:00:00+0000
          description: The date after which, if cancelled, the deposit will be forfeit
        state:
          type: string
          enum:
            - Saved
            - Booked
            - Cancelled
        tripDetails:
          type: object
          properties:
            checkInDate:
              type: string
              example: 12/10/2018
            checkOutDate:
              type: string
              example: 12/14/2018
            numGuests:
              type: number
              example: 2
            nights:
              type: number
              example: 2
        roomRequests:
          type: array
          items:
            $ref: "#/components/schemas/RoomRequestItem"
        rates:
          type: object
          properties:
            itemized:
              type: array
              items:
                type: object
                properties:
                  date:
                    type: string
                    example: 12/05/2018
                  isComp:
                    type: boolean
                  basePrice:
                    type: number
                    format: double
                    example: 110.00
                  discountedPrice:
                    type: number
                    format: double
                    example: 100.00
                  programId:
                    type: string
                    example: ef346262-ebe9-4150-88a5-e5088dfe5b7d
                    description: Program GUID used for calculate price
            roomSubtotal:
              type: number
              format: double
              example: 518.00
              description: Total of nightly base prices before discount
            programDiscount:
              type: number
              format: double
              example: 100.00
              description: Amount of discount provided by the program. This could be zero.
            discountedRoomSubtotal:
              type: number
              format: double
              example: 418.00
              description: Value = roomSubtotal - programDiscount
            roomRequestsTotal:
              type: number
              format: double
              example: 0.00
              description: Total price for all room requests selected by the user
            adjustedRoomSubtotal:
              type: number
              format: double
              example: 418.00
              description: Value = roomSubtotal - programDiscount + roomRequestsTotal
            resortFee:
              type: number
              format: double
              example: 60.44
              description: Resort fee without tax amount for the trip selected
            resortFeePerNight:
              type: number
              format: double
              example: 60.44
              description: Average resort fee per night without tax amount
            resortFeeAndTax:
              type: number
              format: double
              example: 88.44
              description: Resort fee and tax amount for the trip selected
            roomChargeTax:
              type: number
              format: double
              example: 55.93
              description: Amount of tax on room charges
            occupancyFee:
              type: number
              format: double
              example: 3.00
              description: Occupancy fee. Applicable only for borgata
            tourismFee:
              type: number
              format: double
              example: 3.00
              description: Tourism fee. Applicable only for borgata
            tourismFeeAndTax:
              type: number
              format: double
              example: 3.00
              description: Tourism fee with tax included. Applicable only for borgata
            casinoSurcharge:
              type: number
              format: double
              example: 3.00
              description: State casino occupancy fee. Applicable only for borgata
            casinoSurchargeAndTax:
              type: number
              format: double
              example: 3.00
              description: State casino occupancy fee with tax included. Applicable only for borgata
            reservationTotal:
              type: number
              format: double
              example: 562.36
              description: Overall total for the reservation
            depositDue:
              type: number
              format: double
              example: 236.96
              description: Deposit amount to be paid to book the reservation
            balanceUponCheckIn:
              type: number
              format: double
              example: 325.40
              description: Balance amount to be paid during check-in
        payment:
          type: object
          properties:
            chargeAmount:
              type: number
              format: double
              example: 125.50
              description: Amount charged to the customer
            cardType:
              type: string
              example: MC
              description: 2 character card type
            cardMaskedNumber:
              type: string
              example: XXXXXXXXXXXX4444
              description: Masked credit card number with last 4 digits visible
    RoomCartItemRequest:
      type: object
      required:
        - checkInDate
        - checkOutDate
        - numGuests
        - propertyId
        - roomTypeId
      properties:
        checkInDate:
          type: string
          example: 05/02/2019
          description: Check-In Date for the trip.
        checkOutDate:
          type: string
          example: 05/04/2019
          description: Check-Out Date for the trip.
        numGuests:
          type: integer
          example: 2
          description: Number of guests.
        propertyId:
          type: string
          example: 66964e2b-2550-4476-84c3-1a4c0c5c067f
          description: Property GUID to which the room belongs.
        roomTypeId:
          type: string
          example: cdcd4cf9-e569-461b-b8e2-d900b529e90f
          description: GUID for the room selected by the user.
        programId:
          type: string
          example: 38109b61-ac9f-4d2a-a84b-8adef7206d0d
          description: Program GUID if a program is applied.
        promoCode:
          type: string
          example: CASINO
          description: Promo code applied by the user.
    RoomReserveUpdateRequest:
      type: object
      required:
        - reservationId
      properties:
        reservationId:
          type: string
          description: Reservation ID returned by POST /reserve/room/pre-modify
    CalendarPriceResponse:
      type: array
      items:
        type: object
        properties:
          isComp:
            type: boolean
            description: This attribute will be true if the stay for the day is
              complimentary. It's same as memberPrice being zero.
          status:
            type: string
            description: Status=OFFER is only applicable when program prices are requested.
            enum:
              - AVAILABLE
              - SOLD-OUT
              - NO-ARRIVAL
              - OFFER
          date:
            type: string
            example: "12/05/2018"
          programId:
            type: string
            example: ef346262-ebe9-4150-88a5-e5088dfe5b7d
            description: Program ID used for provide lowest price for the day
          memberProgramId:
            type: string
            example: ef346262-ebe9-4150-88a5-e5088dfe5b7d
            description: Program ID used for provide lowest member price for the day. Used
              to inform transient guests about price if user sign-ups to mlife.
              Attribute will only be returned when user is not logged-in and
              memberPrice is lesser than price.
          price:
            type: number
            format: double
            example: 220.40
          memberPrice:
            type: number
            format: double
            example: 180.40
            description: Used to inform transient guests about price if user sign-ups to
              mlife. Attribute will only be returned when user is not logged-in,
              no program/promoCode applied and memberPrice is lesser than price.
    Cart:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/RoomCartItem"
        summary:
          type: object
          properties:
            reservationTotal:
              type: number
              format: double
              description: Overall total for the reservation
            depositDue:
              type: number
              format: double
              description: Deposit amount to be paid to book the reservation
            balanceUponCheckIn:
              type: number
              format: double
              description: Balance amount to be paid during check-in
    Checkout400ErrorResponse:
      type: object
      properties:
        type:
          type: string
          enum:
            - ERROR
            - WARN
            - INFO
        code:
          type: string
          enum:
            - _invalid_channel_header
            - _no_token_in_header
            - _invalid_source_header
            - _token_expired
            - _invalid_profile
            - _invalid_email
            - _invalid_name
            - _invalid_phone
            - _invalid_password
            - _invalid_dob
            - _invalid_securityAnswer
            - _invalid_billing
            - _invalid_payment
            - _invalid_cardNumber
            - _invalid_cardHolder
            - _invalid_cardType
            - _invalid_cvv
            - _invalid_expiry
            - _invalid_address
            - _invalid_street
            - _invalid_city
            - _invalid_country
            - _invalid_state
            - _invalid_postalCode
            - _account_already_exists
            - _multiple_accounts_found
            - _signup_failed
          description: >
            Error codes:
             * `_invalid_channel_header` - If the `channel` header is empty or not in expected values
             * `_no_token_in_header` - If the `x-state-token` header or cookie is absent
             * `_invalid_source_header` - If the `source` header is missing
             * `_token_expired` - If the state token is invalid or expired
             * `_invalid_profile` - If the profile object in the request payload is missing or if any of the email, firstName, lastName and phone is missing for non-logged-in guest or if any of the email, firstName, lastName, phone, password, dateOfBirth, securityQuestionId and securityAnswer is missing for jwb opted-in guest
             * `_invalid_email` - If the length of `email` is >100 or email format is invalid
             * `_invalid_name` - If either of the firstName or lastName is >32 or not matching *^[ A-Za-z0-9.\-\/+=_ !$\\*?@#,']*$* regex
             * `_invalid_phone` - If it fails *[0-9]+* regex or >10 digits for US/Canada or >15 for other countries
             * `_invalid_password` - If password is not matching *^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z]).{8,20}$* regex
             * `_invalid_dob` - If dateOfBirth is not in the format of MM/dd/YYYY or age is <21
             * `_invalid_securityAnswer` - If securityAnswer length is not between 3 and 100 (both boundries including) or not match *^[ A-Za-z0-9.\\-\\/+=_ !$\\*?@#,']*$* regex
             * `_invalid_billing` - If the billing object in the request payload is missing
             * `_invalid_payment` - If the payment object in the request payload is missing
             * `_invalid_cardNumber` - If the `cardNumber` is empty or non-numeric or doesn't pass luhn check
             * `_invalid_cardHolder` - If the `cardHolder` is empty or >70 chars or not matching *^[ A-Za-z0-9.\-\/+=_ !$\\*?@#,']*$* regex
             * `_invalid_cardType` - If the `cardType` is empty
             * `_invalid_cvv` - If the `cvv` is empty or non-numeric
             * `_invalid_expiry` - If the `expiry` is empty
             * `_invalid_address` - If the address object in the request payload is missing
             * `_invalid_street` - If the `street1` is empty or if `street1` or `street2` is greater than 60 chars
             * `_invalid_city` - If the `city` is empty or > 32 chars or not matching *^[ A-Za-z0-9.\-\/+=_ !$\\*?@#,']*$* regex
             * `_invalid_country` - If the `country` is empty
             * `_invalid_state` - If the `state` is (empty or >2 chars) for US OR (empty or >16 chars) for Canada
             * `_invalid_postalCode` - If the `postalCode` is empty for US/Canada OR not matching *^[a-zA-Z0-9]{4,9}$* regex for non-US/Canada OR not matching *^\\d{5}(-\\d{4})?$* regex for US OR not matching  *^[ABCEGHJKLMNPRSTVXY]{1}\\d{1}[A-Z]{1} *\\d{1}[A-Z]{1}\\d{1}$* regex for Canada
             * `_account_already_exists` - If online profile already exists for this email id
             * `_multiple_accounts_found` - If account creation failed due to multiple valid patron profiles
             * `_signup_failed` - If account creation failed
        msg:
          type: string                
  parameters:
    Origin:
      in: header
      name: Origin
      schema:
        type: string
      description: "Origin header for CORS support"
      required: false
    Access-Control-Request-Headers:
      in: header
      name: Access-Control-Request-Headers
      schema:
        type: string
      description: "Access-Control-Request-Headers header for CORS support"
      required: false
    Access-Control-Request-Method:
      in: header
      name: Access-Control-Request-Method
      schema:
        type: string
      description: "Access-Control-Request-Method header for CORS support"
      required: false
    ADRUM:
      in: header
      name: ADRUM
      schema:
        type: string
      description: "App Dynamics Header for Correlation. Automatically set by App D via client-side integration. Not applicable for server-side clients"
      required: false
    x-api-key:
      in: header
      name: x-api-key
      schema:
        type: string
      description: "Access Key from API Gateway"
      required: true
    x-state-token:
      in: header
      name: x-state-token
      schema:
        type: string
      description: "Token to maintain state as mentioned in intro section."
      required: false
    osid:
      in: header
      name: osid
      schema:
        type: string
      description: "Okta Session id"
      required: false
    access-token:
      in: header
      name: access-token
      schema:
        type: string
      description: "Okta Access Token"
      required: false
    channel:
      in: header
      name: channel
      schema:
        type: string
        enum: [web,services,mobile,webclient]
      description: "Channel from where the request has originated. Channel webclient uses cookies for x-state-token."
      required: true
    Cookie:
      in: header
      name: Cookie
      schema:
        type: string
      description: "Pass x-state-token cookie as x-state-token=, if channel supports cookies. x-state-token in cookie becomes mandatory when header is not used. Pass enableJwb cookie as enableJwb=, if the user opted-in for join while booking and it is mandatory when the header is not used."
      required: false
    source:
      in: header
      name: source
      required: true
      schema:
        type: string
        enum: [app, mgmri, cabanas, 66964e2b-2550-4476-84c3-1a4c0c5c067f, 44e610ab-c209-4232-8bb4-51f7b9b13a75, e0f70eb3-7e27-4c33-8bcd-f30bf3b1103a, 1f3ed672-3f8f-44d8-9215-81da3c845d83, 6c5cff3f-f01a-4f9b-87ab-8395ae8108db, 8bf670c2-3e89-412b-9372-6c87a215e442, dc00e77f-d6bb-4dd7-a8ea-dc33ee9675ad, 607c07e7-3e31-4e4c-a4e1-f55dca66fea2, f8d6a944-7816-412f-a39a-9a63aad26833, 2159252c-60d3-47db-bbae-b1db6bb15072, e2704b04-d515-45b0-8afd-4fa1424ff0a8, 0990fdce-7fc8-41b1-b8b6-9a25dce3db55, 4a65a92a-962b-433e-841c-37e18dc5d68d, 13b178b0-8beb-43d5-af25-1738b7267e63, bee81f88-286d-43dd-91b5-3917d9d62a68, 40b61feb-750a-45df-ae68-e23e6272b16b]
      description: "Source invoking the API. GSE uses concept of channel to different various channels/sources for reporting/diagnosis. Service will identify channel to use based on source value."
    accept-encoding:
        name: "accept-encoding"
        in: "header"
        required: false
        schema:
          type: "string"
    mlifeNumber:
      name: mlifeNumber
      in: query
      required: false
      schema:
        type: string
      description: "Mlife number for logged-in member (If user is logged-in)."
    customerId:
      name: customerId
      in: query
      required: false
      schema:
        type: string
      description: "Aurora Customer ID for logged-in user. Customer ID takes precedence when both customerId and mlifeNumber is passed."
    propertyId:
      name: propertyId
      in: query
      required: false
      schema:
        type: string
      description: "Property GUID"
    promoCode:
      name: promoCode
      in: query
      required: false
      schema:
        type: string
      description: "Room Promo Code"
    programId:
      name: programId
      in: query
      required: false
      schema:
        type: string
      description: "Room Program GUID"  
    enableJwb:
      in: header
      name: enableJwb
      schema:
        type: string
      description: "enableJwb header to be set as true, if a transient website visitor opted into JWB"
      required: false
    session-age:
      in: header
      name: session-age
      schema:
        type: number
      description: Session inactive timeout interval in seconds. Application by default uses 1h timeout value; this attribute can be used to reduce the timeout for scenarios like automation testing
      required: false
